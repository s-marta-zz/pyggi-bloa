2020-12-31 04:06:26,602	[INFO]	Path to the temporal program variants: ./.pyggi/tmp_variants/QuixBugs/1609383986
2020-12-31 04:06:26,603	[INFO]	========== EXPERIMENT FOR ['java_programs/PASCAL.java.xml']  ==========
2020-12-31 04:06:26,603	[INFO]	modification points:
 ['./decl_stmt[1]', './decl_stmt[2]', './expr_stmt[1]', './expr_stmt[2]', './for[1]', './for[1]/operator_comp[1]', './for[1]/decl_stmt[1]', './for[1]/for[1]', './for[1]/for[1]/operator_comp[1]', './for[1]/for[1]/decl_stmt[1]', './for[1]/for[1]/if[1]', './for[1]/for[1]/if[1]/operator_comp[1]', './for[1]/for[1]/if[1]/expr_stmt[1]', './for[1]/for[1]/expr_stmt[1]', './for[1]/for[1]/if[2]', './for[1]/for[1]/if[2]/operator_comp[1]', './for[1]/for[1]/if[2]/expr_stmt[1]', './for[1]/for[1]/expr_stmt[2]', './for[1]/for[1]/expr_stmt[3]', './for[1]/expr_stmt[1]', './return[1]']
2020-12-31 04:06:26,603	[INFO]	number of statements and comparisons: 17, 4
2020-12-31 04:06:26,603	[INFO]	========== EPOCH 1 ==========
2020-12-31 04:06:26,603	[INFO]	==== WARMUP ====
2020-12-31 04:06:30,156	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 04:06:30,157	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 04:06:33,600	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 04:06:33,600	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 04:06:37,036	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 04:06:37,036	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 04:06:40,594	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-31 04:06:40,595	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 04:06:40,595	[INFO]	==== START ====
2020-12-31 04:06:41,630	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:06:45,106	[INFO]	2	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:06:45,107	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,35 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     upleft = 0;
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 04:06:46,117	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:06:46,119	[INFO]	4	SUCCESS	+4.0	
2020-12-31 04:06:46,119	[DEBUG]	
2020-12-31 04:06:49,566	[INFO]	5	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:06:49,567	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,37 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 04:06:49,567	[INFO]	6	SUCCESS	+4.0	
2020-12-31 04:06:49,567	[DEBUG]	
2020-12-31 04:06:50,612	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:06:51,628	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 04:06:55,077	[INFO]	9	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:06:55,078	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  } else {
                      upleft = 0;
                  }
+                 init.add(1);
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 04:06:56,097	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:06:59,590	[INFO]	11	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 04:06:59,592	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 20,31 ****
--- 20,33 ----
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
+                 rows.add(init);
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
+                 init.add(1);
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 04:06:59,593	[INFO]	12	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:06:59,594	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  } else {
                      upleft = 0;
                  }
+                 init.add(1);
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 04:06:59,595	[INFO]	13	SUCCESS	+4.0	
2020-12-31 04:06:59,596	[DEBUG]	
2020-12-31 04:07:03,067	[INFO]	14	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:07:03,068	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,39 ----
                  }
                  row.add(upleft+upright);
              }
+             int upleft, upright;
              rows.add(row);
          }
  

2020-12-31 04:07:03,068	[INFO]	15	SUCCESS	+4.0	
2020-12-31 04:07:03,069	[DEBUG]	
2020-12-31 04:07:04,085	[INFO]	16	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:07:05,134	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:07:06,150	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 04:07:07,178	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:07:08,223	[INFO]	20	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:07:09,267	[INFO]	21	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:07:10,282	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:07:11,325	[INFO]	23	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:07:14,811	[INFO]	24	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '=='})
2020-12-31 04:07:14,812	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,32 ****
                  } else {
                      upleft = 0;
                  }
!                 if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
--- 26,32 ----
                  } else {
                      upleft = 0;
                  }
!                 if (c == r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 04:07:15,848	[INFO]	25	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '=='}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:07:15,849	[INFO]	26	SUCCESS	+4.0	
2020-12-31 04:07:15,849	[DEBUG]	
2020-12-31 04:07:16,874	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:07:17,900	[INFO]	28	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 04:07:18,922	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:07:19,962	[INFO]	30	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:07:20,991	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:07:22,023	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:07:23,086	[INFO]	33	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 04:07:24,118	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:07:25,190	[INFO]	35	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:07:26,231	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:07:27,248	[INFO]	37	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 04:07:28,268	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 04:07:31,758	[INFO]	39	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:07:31,759	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,32 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 04:07:31,760	[INFO]	40	SUCCESS	+4.0	
2020-12-31 04:07:31,760	[DEBUG]	
2020-12-31 04:07:35,188	[INFO]	41	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 04:07:35,189	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     rows.add(row);
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 04:07:35,191	[INFO]	42	SUCCESS	+4.0	
2020-12-31 04:07:35,191	[DEBUG]	
2020-12-31 04:07:36,200	[INFO]	43	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:07:37,230	[INFO]	44	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:07:38,252	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 04:07:39,265	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:07:40,315	[INFO]	47	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:07:40,316	[INFO]	48	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:07:40,317	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,35 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     upleft = 0;
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 04:07:40,318	[INFO]	49	SUCCESS	+4.0	
2020-12-31 04:07:40,318	[DEBUG]	
2020-12-31 04:07:41,191	[INFO]	50	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:07:42,218	[INFO]	51	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 04:07:43,239	[INFO]	52	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:07:44,249	[INFO]	53	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 04:07:45,286	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:07:46,326	[INFO]	55	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:07:47,345	[INFO]	56	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:07:48,378	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:07:49,385	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:07:50,398	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 04:07:51,447	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 04:07:52,588	[INFO]	61	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 04:07:53,655	[INFO]	62	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 04:07:54,542	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 04:07:58,127	[INFO]	64	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:07:58,128	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             rows.add(row);
              rows.add(row);
          }
  

2020-12-31 04:07:58,129	[INFO]	65	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:07:58,129	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             rows.add(row);
              rows.add(row);
          }
  

2020-12-31 04:07:59,102	[INFO]	66	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:07:59,103	[INFO]	67	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:07:59,104	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             rows.add(row);
              rows.add(row);
          }
  

2020-12-31 04:07:59,104	[INFO]	68	SUCCESS	+4.0	
2020-12-31 04:07:59,105	[DEBUG]	
2020-12-31 04:08:00,124	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:08:01,131	[INFO]	70	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:08:02,181	[INFO]	71	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:08:05,627	[INFO]	72	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 04:08:05,628	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,35 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     rows.add(row);
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 04:08:05,629	[INFO]	73	SUCCESS	+4.0	
2020-12-31 04:08:05,629	[DEBUG]	
2020-12-31 04:08:05,630	[INFO]	74	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:08:06,665	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:08:07,700	[INFO]	76	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:08:08,729	[INFO]	77	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:08:12,200	[INFO]	78	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 04:08:13,214	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 04:08:16,750	[INFO]	80	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:08:16,751	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,32 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 04:08:17,750	[INFO]	81	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:08:17,752	[INFO]	82	SUCCESS	+4.0	
2020-12-31 04:08:17,753	[DEBUG]	
2020-12-31 04:08:18,822	[INFO]	83	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:08:19,858	[INFO]	84	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:08:23,373	[INFO]	85	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 04:08:24,230	[INFO]	86	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:08:25,273	[INFO]	87	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:08:26,302	[INFO]	88	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:08:27,328	[INFO]	89	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:08:28,365	[INFO]	90	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:08:31,923	[INFO]	91	SUCCESS	*3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:08:31,924	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:08:32,959	[INFO]	92	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:08:33,972	[INFO]	93	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:08:35,002	[INFO]	94	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:08:36,058	[INFO]	95	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 04:08:36,060	[INFO]	96	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:08:36,060	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:08:36,061	[INFO]	97	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:08:36,062	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:08:37,101	[INFO]	98	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:08:37,102	[INFO]	99	SUCCESS	 4.0	
2020-12-31 04:08:40,662	[INFO]	100	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:08:44,330	[INFO]	101	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:08:44,331	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,48 ----
                  } else {
                      upleft = 0;
                  }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 04:08:44,332	[INFO]	102	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:08:44,333	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:08:44,333	[INFO]	103	SUCCESS	 4.0	
2020-12-31 04:08:45,364	[INFO]	104	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 04:08:46,424	[INFO]	105	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:08:49,972	[INFO]	106	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 04:08:51,002	[INFO]	107	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:08:52,028	[INFO]	108	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:08:52,896	[INFO]	109	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:08:56,375	[INFO]	110	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 04:08:59,861	[INFO]	111	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:08:59,862	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,32 ****
--- 27,47 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     upright = 0;
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 04:09:00,895	[INFO]	112	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:09:01,733	[INFO]	113	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:09:02,551	[INFO]	114	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:09:03,576	[INFO]	115	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:09:04,615	[INFO]	116	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:09:08,090	[INFO]	117	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:09:08,092	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,49 ----
                  } else {
                      upleft = 0;
                  }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                 if (c < r) {
+                     upright = 0;
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 04:09:11,583	[INFO]	118	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:09:11,584	[INFO]	119	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:09:11,585	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,48 ----
                  } else {
                      upleft = 0;
                  }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 04:09:15,087	[INFO]	120	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:09:16,110	[INFO]	121	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:09:17,168	[INFO]	122	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:09:18,181	[INFO]	123	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:09:21,706	[INFO]	124	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:09:21,708	[INFO]	125	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:09:21,710	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,48 ----
                  } else {
                      upleft = 0;
                  }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 04:09:21,712	[INFO]	126	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:09:21,713	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:09:21,715	[INFO]	127	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:09:25,268	[INFO]	128	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:09:25,270	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,42 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     upleft = 0;
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 04:09:28,739	[INFO]	129	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:09:28,740	[INFO]	130	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:09:28,741	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:09:28,743	[INFO]	131	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:09:32,227	[INFO]	132	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:09:35,729	[INFO]	133	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:09:36,768	[INFO]	134	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:09:37,791	[INFO]	135	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 04:09:38,867	[INFO]	136	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:09:38,869	[INFO]	137	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:09:38,869	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:09:39,905	[INFO]	138	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:09:43,447	[INFO]	139	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:09:44,461	[INFO]	140	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:09:45,320	[INFO]	141	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 04:09:48,831	[INFO]	142	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:09:48,833	[INFO]	143	SUCCESS	 4.0	
2020-12-31 04:09:49,864	[INFO]	144	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:09:50,922	[INFO]	145	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:09:54,394	[INFO]	146	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:09:54,396	[INFO]	147	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 04:09:54,397	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:09:54,398	[INFO]	148	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:09:54,399	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:09:54,400	[INFO]	149	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:09:54,400	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:09:57,902	[INFO]	150	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:09:57,903	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,44 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     upright = 0;
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 04:09:57,905	[INFO]	151	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:09:57,906	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,44 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     upright = 0;
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 04:09:58,930	[INFO]	152	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 04:10:02,435	[INFO]	153	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '<='})
2020-12-31 04:10:02,436	[INFO]	154	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:10:02,437	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:10:02,437	[INFO]	155	SUCCESS	 4.0	
2020-12-31 04:10:03,507	[INFO]	156	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:10:07,003	[INFO]	157	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:10:08,050	[INFO]	158	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:10:11,557	[INFO]	159	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '!='})
2020-12-31 04:10:11,558	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,45 ----
                  } else {
                      upleft = 0;
                  }
+                 if (c != r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 04:10:15,038	[INFO]	160	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '!='})
2020-12-31 04:10:15,040	[INFO]	161	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '!='}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<'})
2020-12-31 04:10:15,041	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:10:18,547	[INFO]	162	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '!='}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:10:18,548	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,49 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     upleft = 0;
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 04:10:18,549	[INFO]	163	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:10:18,550	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,49 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     upleft = 0;
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 04:10:18,551	[INFO]	164	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:10:18,552	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,49 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     upleft = 0;
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 04:10:18,552	[INFO]	165	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:10:18,553	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:10:18,553	[INFO]	166	SUCCESS	 4.0	
2020-12-31 04:10:19,625	[INFO]	167	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:10:19,627	[INFO]	168	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:10:19,628	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:10:23,152	[INFO]	169	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 04:10:24,187	[INFO]	170	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:10:25,279	[INFO]	171	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:10:26,110	[INFO]	172	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:10:26,111	[INFO]	173	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:10:26,112	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:10:26,112	[INFO]	174	SUCCESS	 4.0	
2020-12-31 04:10:27,140	[INFO]	175	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:10:28,229	[INFO]	176	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:10:31,838	[INFO]	177	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:10:32,862	[INFO]	178	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:10:36,806	[INFO]	179	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 04:10:36,807	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,41 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upright = rows.get(r-1).get(c);
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {

2020-12-31 04:10:36,808	[INFO]	180	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:10:36,809	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:10:36,809	[INFO]	181	SUCCESS	 4.0	
2020-12-31 04:10:40,971	[INFO]	182	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:10:42,049	[INFO]	183	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 04:10:43,106	[INFO]	184	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:10:44,190	[INFO]	185	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 04:10:47,683	[INFO]	186	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '=='})
2020-12-31 04:10:48,776	[INFO]	187	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 04:10:52,207	[INFO]	188	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 04:10:53,258	[INFO]	189	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:10:53,262	[INFO]	190	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 04:10:54,297	[INFO]	191	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:10:55,344	[INFO]	192	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:10:56,371	[INFO]	193	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:10:59,815	[INFO]	194	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:11:00,846	[INFO]	195	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:11:01,898	[INFO]	196	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:11:02,941	[INFO]	197	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:11:04,032	[INFO]	198	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:11:05,044	[INFO]	199	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:11:08,555	[INFO]	200	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 04:11:09,614	[INFO]	201	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:11:10,698	[INFO]	202	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:11:11,739	[INFO]	203	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:11:12,796	[INFO]	204	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:11:13,832	[INFO]	205	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:11:13,834	[INFO]	206	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:11:13,835	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:11:14,863	[INFO]	207	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:11:14,864	[INFO]	208	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:11:14,865	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:11:15,892	[INFO]	209	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:11:16,920	[INFO]	210	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:11:18,002	[INFO]	211	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:11:21,509	[INFO]	212	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:11:21,511	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,46 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 04:11:25,102	[INFO]	213	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:11:25,103	[INFO]	214	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:11:25,104	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:11:25,104	[INFO]	215	SUCCESS	 4.0	
2020-12-31 04:11:26,123	[INFO]	216	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:11:27,137	[INFO]	217	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:11:28,155	[INFO]	218	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 04:11:29,224	[INFO]	219	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:11:30,284	[INFO]	220	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:11:30,286	[INFO]	221	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 04:11:30,287	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:11:30,288	[INFO]	222	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:11:30,288	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:11:31,335	[INFO]	223	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:11:31,336	[INFO]	224	SUCCESS	 4.0	
2020-12-31 04:11:32,181	[INFO]	225	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:11:33,214	[INFO]	226	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:11:33,216	[INFO]	227	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:11:33,217	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:11:36,752	[INFO]	228	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 04:11:36,753	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 23,28 ****
--- 23,43 ----
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }

2020-12-31 04:11:36,755	[INFO]	229	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 04:11:36,755	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 23,28 ****
--- 23,43 ----
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }

2020-12-31 04:11:36,756	[INFO]	230	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:11:36,756	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:11:37,751	[INFO]	231	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:11:38,794	[INFO]	232	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 04:11:38,795	[INFO]	233	SUCCESS	 4.0	
2020-12-31 04:11:39,840	[INFO]	234	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:11:40,868	[INFO]	235	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:11:41,955	[INFO]	236	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:11:43,016	[INFO]	237	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:11:44,061	[INFO]	238	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:11:45,071	[INFO]	239	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:11:45,073	[INFO]	240	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:11:45,073	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:11:46,118	[INFO]	241	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:11:49,581	[INFO]	242	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:11:49,582	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 30,35 ****
--- 30,50 ----
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
                  }
                  row.add(upleft+upright);
              }

2020-12-31 04:11:50,619	[INFO]	243	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:11:50,622	[INFO]	244	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:11:50,622	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 30,35 ****
--- 30,50 ----
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
                  }
                  row.add(upleft+upright);
              }

2020-12-31 04:11:51,474	[INFO]	245	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:11:51,475	[INFO]	246	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:11:51,476	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:11:52,488	[INFO]	247	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:11:52,489	[INFO]	248	SUCCESS	 4.0	
2020-12-31 04:11:56,010	[INFO]	249	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 04:11:56,012	[INFO]	250	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:11:56,013	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:11:57,050	[INFO]	251	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:11:57,052	[INFO]	252	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:11:58,060	[INFO]	253	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:11:59,110	[INFO]	254	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:12:00,198	[INFO]	255	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:12:00,201	[INFO]	256	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:12:00,202	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:12:00,203	[INFO]	257	SUCCESS	 4.0	
2020-12-31 04:12:00,204	[INFO]	258	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:12:03,742	[INFO]	259	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '=='})
2020-12-31 04:12:04,807	[INFO]	260	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:12:08,342	[INFO]	261	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 04:12:08,344	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,36 ****
--- 31,53 ----
                  } else {
                      upright = 0;
                  }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:12:09,363	[INFO]	262	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:12:10,375	[INFO]	263	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:12:10,376	[INFO]	264	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:12:10,377	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:12:11,450	[INFO]	265	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:12:12,499	[INFO]	266	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:12:13,517	[INFO]	267	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:12:14,584	[INFO]	268	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:12:15,592	[INFO]	269	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:12:16,653	[INFO]	270	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:12:16,656	[INFO]	271	SUCCESS	 4.0	
2020-12-31 04:12:17,653	[INFO]	272	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:12:21,199	[INFO]	273	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:12:21,200	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,42 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     init.add(1);
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 04:12:24,786	[INFO]	274	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:12:24,787	[INFO]	275	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:12:24,788	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:12:24,789	[INFO]	276	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:12:24,790	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:12:25,820	[INFO]	277	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:12:25,822	[INFO]	278	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:12:25,823	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:12:25,823	[INFO]	279	SUCCESS	 4.0	
2020-12-31 04:12:29,349	[INFO]	280	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:12:30,400	[INFO]	281	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:12:31,468	[INFO]	282	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:12:32,505	[INFO]	283	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:12:33,544	[INFO]	284	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:12:34,569	[INFO]	285	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 04:12:38,063	[INFO]	286	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 04:12:38,064	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,41 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upright = rows.get(r-1).get(c);
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {

2020-12-31 04:12:39,129	[INFO]	287	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:12:42,693	[INFO]	288	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 04:12:43,682	[INFO]	289	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 04:12:44,717	[INFO]	290	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 04:12:44,719	[INFO]	291	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:12:44,720	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:12:45,528	[INFO]	292	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:12:46,585	[INFO]	293	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:12:47,643	[INFO]	294	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:12:48,697	[INFO]	295	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 04:12:48,699	[INFO]	296	SUCCESS	 4.0	
2020-12-31 04:12:48,701	[INFO]	297	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 04:12:48,702	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:12:49,740	[INFO]	298	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 16)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:12:49,744	[INFO]	299	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:12:49,745	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:12:50,836	[INFO]	300	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:12:50,837	[INFO]	301	SUCCESS	 4.0	
2020-12-31 04:12:54,369	[INFO]	302	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:12:55,391	[INFO]	303	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:12:56,426	[INFO]	304	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:12:57,462	[INFO]	305	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:12:58,316	[INFO]	306	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:12:59,358	[INFO]	307	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:13:02,848	[INFO]	308	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:13:06,323	[INFO]	309	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 04:13:06,324	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,49 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     rows.add(init);
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 04:13:09,765	[INFO]	310	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 04:13:09,767	[INFO]	311	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:13:09,767	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:13:10,809	[INFO]	312	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:13:11,873	[INFO]	313	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:13:11,874	[INFO]	314	SUCCESS	 4.0	
2020-12-31 04:13:12,898	[INFO]	315	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 04:13:13,940	[INFO]	316	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:13:13,941	[INFO]	317	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 04:13:13,942	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:13:13,943	[INFO]	318	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:13:13,943	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:13:13,944	[INFO]	319	SUCCESS	 4.0	
2020-12-31 04:13:14,989	[INFO]	320	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:13:18,518	[INFO]	321	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:13:18,519	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,48 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     return rows;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 04:13:21,989	[INFO]	322	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:13:21,991	[INFO]	323	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:13:21,991	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:13:23,035	[INFO]	324	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 04:13:23,036	[INFO]	325	SUCCESS	 4.0	
2020-12-31 04:13:24,084	[INFO]	326	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:13:27,616	[INFO]	327	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:13:27,617	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,40 ****
--- 33,56 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
+ 
+         int upleft, upright;
  
          return rows;
      }

2020-12-31 04:13:31,050	[INFO]	328	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:13:31,052	[INFO]	329	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:13:31,052	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,40 ****
--- 33,56 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
+ 
+         int upleft, upright;
  
          return rows;
      }

2020-12-31 04:13:32,085	[INFO]	330	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:13:35,589	[INFO]	331	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '<='})
2020-12-31 04:13:36,625	[INFO]	332	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:13:36,627	[INFO]	333	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:13:36,627	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:13:37,723	[INFO]	334	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 04:13:37,725	[INFO]	335	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:13:37,726	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:13:37,727	[INFO]	336	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:13:37,727	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:13:38,787	[INFO]	337	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:13:42,367	[INFO]	338	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:13:42,368	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,46 ----
                  } else {
                      upleft = 0;
                  }
+                 upright = 0;
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 04:13:43,421	[INFO]	339	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:13:43,423	[INFO]	340	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:13:43,423	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:13:46,932	[INFO]	341	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:13:47,950	[INFO]	342	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:13:47,952	[INFO]	343	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:13:47,952	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:13:47,953	[INFO]	344	SUCCESS	 4.0	
2020-12-31 04:13:49,003	[INFO]	345	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:13:50,010	[INFO]	346	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:13:53,526	[INFO]	347	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:13:57,039	[INFO]	348	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:14:00,545	[INFO]	349	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 04:14:00,547	[INFO]	350	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:14:00,548	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:14:01,597	[INFO]	351	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:14:02,644	[INFO]	352	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:14:02,646	[INFO]	353	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:14:02,646	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:14:02,647	[INFO]	354	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:14:02,648	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:14:02,648	[INFO]	355	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:14:02,649	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:14:02,650	[INFO]	356	SUCCESS	 4.0	
2020-12-31 04:14:03,720	[INFO]	357	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 04:14:04,577	[INFO]	358	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:14:05,617	[INFO]	359	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:14:05,619	[INFO]	360	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 04:14:09,138	[INFO]	361	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:14:09,139	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,49 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     upleft = 0;
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 04:14:10,188	[INFO]	362	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 04:14:10,191	[INFO]	363	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:14:10,192	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:14:11,216	[INFO]	364	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 04:14:11,218	[INFO]	365	SUCCESS	 4.0	
2020-12-31 04:14:12,258	[INFO]	366	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:14:12,260	[INFO]	367	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:14:12,261	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:14:12,262	[INFO]	368	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:14:12,262	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:14:13,273	[INFO]	369	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:14:13,275	[INFO]	370	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:14:13,275	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:14:13,276	[INFO]	371	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:14:16,761	[INFO]	372	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '>'})
2020-12-31 04:14:16,763	[INFO]	373	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:14:16,763	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:14:17,825	[INFO]	374	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:14:18,834	[INFO]	375	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:14:18,836	[INFO]	376	SUCCESS	 4.0	
2020-12-31 04:14:22,360	[INFO]	377	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 04:14:22,363	[INFO]	378	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:14:22,363	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:14:22,364	[INFO]	379	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:14:22,365	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:14:23,428	[INFO]	380	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:14:23,429	[INFO]	381	SUCCESS	 4.0	
2020-12-31 04:14:24,488	[INFO]	382	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 04:14:27,979	[INFO]	383	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 04:14:27,980	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,49 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     rows.add(row);
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 04:14:31,546	[INFO]	384	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:14:31,547	[INFO]	385	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:14:31,548	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:14:31,548	[INFO]	386	SUCCESS	 4.0	
2020-12-31 04:14:32,587	[INFO]	387	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:14:33,603	[INFO]	388	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:14:34,657	[INFO]	389	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:14:35,495	[INFO]	390	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 04:14:36,552	[INFO]	391	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:14:40,134	[INFO]	392	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 04:14:40,136	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 23,28 ****
--- 23,43 ----
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }

2020-12-31 04:14:43,727	[INFO]	393	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 04:14:43,729	[INFO]	394	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:14:43,729	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:14:44,800	[INFO]	395	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 04:14:44,803	[INFO]	396	SUCCESS	 4.0	
2020-12-31 04:14:45,846	[INFO]	397	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:14:46,887	[INFO]	398	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:14:47,923	[INFO]	399	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:14:48,987	[INFO]	400	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:14:48,989	[INFO]	401	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:14:48,989	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:14:50,042	[INFO]	402	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:14:51,066	[INFO]	403	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:14:52,116	[INFO]	404	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 04:14:53,164	[INFO]	405	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:14:53,166	[INFO]	406	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:14:53,167	[INFO]	407	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:14:53,167	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:14:53,168	[INFO]	408	SUCCESS	 4.0	
2020-12-31 04:14:54,194	[INFO]	409	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:14:55,225	[INFO]	410	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 04:14:55,227	[INFO]	411	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:14:55,228	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:14:55,228	[INFO]	412	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:14:58,796	[INFO]	413	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:14:59,783	[INFO]	414	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:15:00,833	[INFO]	415	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:15:04,373	[INFO]	416	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:15:07,890	[INFO]	417	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 04:15:11,427	[INFO]	418	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:15:11,430	[INFO]	419	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:15:11,431	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:15:14,934	[INFO]	420	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 04:15:14,935	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,43 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {

2020-12-31 04:15:18,444	[INFO]	421	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 04:15:19,543	[INFO]	422	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 04:15:19,545	[INFO]	423	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:15:19,546	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:15:19,546	[INFO]	424	SUCCESS	 4.0	
2020-12-31 04:15:20,628	[INFO]	425	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:15:21,663	[INFO]	426	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:15:22,725	[INFO]	427	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:15:23,746	[INFO]	428	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 04:15:24,808	[INFO]	429	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:15:25,869	[INFO]	430	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:15:26,926	[INFO]	431	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:15:30,422	[INFO]	432	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 04:15:31,454	[INFO]	433	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:15:32,498	[INFO]	434	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 04:15:33,553	[INFO]	435	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:15:34,608	[INFO]	436	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:15:38,461	[INFO]	437	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 04:15:39,493	[INFO]	438	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:15:40,558	[INFO]	439	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:15:44,101	[INFO]	440	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:15:44,102	[INFO]	441	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:15:44,103	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:15:44,104	[INFO]	442	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:15:44,104	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:15:45,170	[INFO]	443	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:15:46,249	[INFO]	444	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:15:46,251	[INFO]	445	SUCCESS	 4.0	
2020-12-31 04:15:47,284	[INFO]	446	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:15:48,338	[INFO]	447	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 04:15:49,388	[INFO]	448	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:15:50,253	[INFO]	449	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:15:51,285	[INFO]	450	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:15:51,286	[INFO]	451	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:15:51,287	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:15:51,288	[INFO]	452	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:15:51,288	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:15:51,289	[INFO]	453	SUCCESS	 4.0	
2020-12-31 04:15:54,790	[INFO]	454	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 04:15:58,315	[INFO]	455	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 04:15:59,344	[INFO]	456	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:16:00,384	[INFO]	457	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:16:03,917	[INFO]	458	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '!='})
2020-12-31 04:16:03,918	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 17,24 ****
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
--- 17,38 ----
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r!=n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:16:04,961	[INFO]	459	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '!='}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:16:04,963	[INFO]	460	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:16:04,964	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:16:04,965	[INFO]	461	SUCCESS	 4.0	
2020-12-31 04:16:05,996	[INFO]	462	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 04:16:07,037	[INFO]	463	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:16:08,067	[INFO]	464	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:16:09,112	[INFO]	465	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:16:10,144	[INFO]	466	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:16:11,186	[INFO]	467	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 04:16:12,217	[INFO]	468	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:16:13,056	[INFO]	469	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:16:14,100	[INFO]	470	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:16:15,114	[INFO]	471	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 04:16:15,115	[INFO]	472	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 04:16:15,116	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:16:15,117	[INFO]	473	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:16:15,117	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:16:15,118	[INFO]	474	SUCCESS	 4.0	
2020-12-31 04:16:18,577	[INFO]	475	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:16:18,578	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,41 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upleft = 0;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {

2020-12-31 04:16:18,579	[INFO]	476	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:16:18,579	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:16:19,589	[INFO]	477	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:16:23,108	[INFO]	478	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 04:16:23,109	[INFO]	479	SUCCESS	 4.0	
2020-12-31 04:16:24,137	[INFO]	480	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:16:27,642	[INFO]	481	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:16:27,643	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,49 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     init.add(1);
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 04:16:28,681	[INFO]	482	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:16:32,139	[INFO]	483	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:16:33,204	[INFO]	484	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:16:36,740	[INFO]	485	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:16:40,178	[INFO]	486	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 04:16:40,182	[INFO]	487	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:16:40,183	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:16:40,185	[INFO]	488	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:16:40,186	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:16:40,188	[INFO]	489	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:16:40,188	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:16:40,189	[INFO]	490	SUCCESS	 4.0	
2020-12-31 04:16:41,276	[INFO]	491	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:16:42,103	[INFO]	492	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 04:16:43,123	[INFO]	493	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:16:46,617	[INFO]	494	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:16:46,618	[INFO]	495	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 04:16:46,619	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:16:47,486	[INFO]	496	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 04:16:47,487	[INFO]	497	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:16:47,488	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:16:47,489	[INFO]	498	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:16:47,489	[INFO]	499	SUCCESS	 4.0	
2020-12-31 04:16:47,491	[INFO]	500	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:16:47,491	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:16:47,491	[INFO]	==== END ====
2020-12-31 04:16:47,491	[INFO]	Reason: step budget
2020-12-31 04:16:47,492	[INFO]	
2020-12-31 04:16:47,492	[INFO]	========== EPOCH 2 ==========
2020-12-31 04:16:47,493	[INFO]	==== WARMUP ====
2020-12-31 04:16:50,981	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 04:16:50,981	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 04:16:54,511	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 04:16:54,512	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 04:16:58,026	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 04:16:58,027	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 04:17:01,518	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-31 04:17:01,519	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 04:17:01,519	[INFO]	==== START ====
2020-12-31 04:17:02,383	[INFO]	1	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:17:03,385	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:17:04,430	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 04:17:05,456	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:17:06,484	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 04:17:07,551	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:17:11,067	[INFO]	7	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 04:17:11,068	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,35 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     rows.add(row);
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 04:17:11,937	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:17:11,938	[INFO]	9	SUCCESS	+4.0	
2020-12-31 04:17:11,939	[DEBUG]	
2020-12-31 04:17:12,962	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:17:14,028	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:17:17,620	[INFO]	12	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:17:17,621	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     upleft = 0;
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 04:17:18,457	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:17:19,501	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:17:19,502	[INFO]	15	SUCCESS	+4.0	
2020-12-31 04:17:19,503	[DEBUG]	
2020-12-31 04:17:20,574	[INFO]	16	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 04:17:24,096	[INFO]	17	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 04:17:24,097	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 rows.add(row);
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {

2020-12-31 04:17:25,139	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:17:25,141	[INFO]	19	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:17:25,142	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 rows.add(row);
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {

2020-12-31 04:17:28,658	[INFO]	20	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 04:17:28,660	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 rows.add(row);
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
***************
*** 29,34 ****
--- 30,36 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     rows.add(row);
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 04:17:28,663	[INFO]	21	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 04:17:28,664	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 rows.add(row);
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
***************
*** 29,34 ****
--- 30,36 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     rows.add(row);
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 04:17:28,665	[INFO]	22	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 04:17:28,666	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,35 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     rows.add(row);
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 04:17:29,698	[INFO]	23	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:17:29,700	[INFO]	24	SUCCESS	+4.0	
2020-12-31 04:17:29,700	[DEBUG]	
2020-12-31 04:17:33,228	[INFO]	25	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:17:33,230	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upright = 0;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {

2020-12-31 04:17:34,274	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:17:37,786	[INFO]	27	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:17:37,787	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upright = 0;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 32,40 ----
                  } else {
                      upright = 0;
                  }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 }
              }
              rows.add(row);
          }

2020-12-31 04:17:37,788	[INFO]	28	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:17:37,789	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upright = 0;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {

2020-12-31 04:17:37,789	[INFO]	29	SUCCESS	+4.0	
2020-12-31 04:17:37,790	[DEBUG]	
2020-12-31 04:17:41,296	[INFO]	30	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:17:41,297	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 18,23 ****
--- 18,24 ----
          rows.add(init);
  
          for (int r=1; r<n; r++) {
+             init.add(1);
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;

2020-12-31 04:17:42,307	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 04:17:42,308	[INFO]	32	SUCCESS	+4.0	
2020-12-31 04:17:42,309	[DEBUG]	
2020-12-31 04:17:43,339	[INFO]	33	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 04:17:44,374	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:17:45,389	[INFO]	35	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:17:48,897	[INFO]	36	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:17:48,898	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             rows.add(init);
              rows.add(row);
          }
  

2020-12-31 04:17:48,899	[INFO]	37	SUCCESS	+4.0	
2020-12-31 04:17:48,900	[DEBUG]	
2020-12-31 04:17:49,925	[INFO]	38	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:17:50,953	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:17:54,438	[INFO]	40	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<='})
2020-12-31 04:17:54,439	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,32 ****
                  } else {
                      upleft = 0;
                  }
!                 if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
--- 26,32 ----
                  } else {
                      upleft = 0;
                  }
!                 if (c <= r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 04:17:54,440	[INFO]	41	SUCCESS	+4.0	
2020-12-31 04:17:54,440	[DEBUG]	
2020-12-31 04:17:57,901	[INFO]	42	SUCCESS	 5.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '>='})
2020-12-31 04:17:58,910	[INFO]	43	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:17:59,953	[INFO]	44	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:18:03,411	[INFO]	45	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:18:03,412	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
!                 upleft = rows.get(r-1).get(c-1);
              }
              rows.add(row);
          }

2020-12-31 04:18:03,413	[INFO]	46	SUCCESS	+4.0	
2020-12-31 04:18:03,413	[DEBUG]	
2020-12-31 04:18:04,437	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:18:05,455	[INFO]	48	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 04:18:06,486	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:18:07,540	[INFO]	50	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:18:08,558	[INFO]	51	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:18:09,596	[INFO]	52	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 04:18:09,597	[INFO]	53	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:18:09,598	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     upleft = 0;
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 04:18:10,627	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 04:18:10,628	[INFO]	55	SUCCESS	+4.0	
2020-12-31 04:18:10,629	[DEBUG]	
2020-12-31 04:18:11,654	[INFO]	56	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:18:15,098	[INFO]	57	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 04:18:15,099	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,30 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 04:18:15,099	[INFO]	58	SUCCESS	+4.0	
2020-12-31 04:18:15,100	[DEBUG]	
2020-12-31 04:18:16,104	[INFO]	59	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:18:19,590	[INFO]	60	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<='})
2020-12-31 04:18:19,591	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,32 ****
                  } else {
                      upleft = 0;
                  }
!                 if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
--- 26,32 ----
                  } else {
                      upleft = 0;
                  }
!                 if (c <= r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 04:18:20,624	[INFO]	61	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<='}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:18:21,680	[INFO]	62	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 04:18:22,521	[INFO]	63	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<='}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:18:22,522	[INFO]	64	SUCCESS	+4.0	
2020-12-31 04:18:22,522	[DEBUG]	
2020-12-31 04:18:23,396	[INFO]	65	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:18:26,964	[INFO]	66	SUCCESS	 5.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '<='})
2020-12-31 04:18:27,994	[INFO]	67	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:18:29,026	[INFO]	68	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 04:18:30,046	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:18:31,078	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 04:18:34,509	[INFO]	71	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 04:18:34,510	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
+                 rows.add(init);
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);

2020-12-31 04:18:37,996	[INFO]	72	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '=='})
2020-12-31 04:18:37,997	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,25 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
--- 19,26 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c==r; c++) {
!                 rows.add(init);
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);

2020-12-31 04:18:41,602	[INFO]	73	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '=='}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:18:41,603	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,25 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
--- 19,26 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c==r; c++) {
!                 rows.add(init);
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
***************
*** 33,39 ****
                  }
                  row.add(upleft+upright);
              }
!             rows.add(row);
          }
  
          return rows;
--- 34,40 ----
                  }
                  row.add(upleft+upright);
              }
!             rows.add(init);
          }
  
          return rows;

2020-12-31 04:18:45,059	[INFO]	74	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '=='}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:18:45,060	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,25 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c==r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
***************
*** 33,39 ****
                  }
                  row.add(upleft+upright);
              }
!             rows.add(row);
          }
  
          return rows;
--- 33,39 ----
                  }
                  row.add(upleft+upright);
              }
!             rows.add(init);
          }
  
          return rows;

2020-12-31 04:18:48,595	[INFO]	75	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '=='}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '<='})
2020-12-31 04:18:48,596	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,25 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<=r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
***************
*** 33,39 ****
                  }
                  row.add(upleft+upright);
              }
!             rows.add(row);
          }
  
          return rows;
--- 33,39 ----
                  }
                  row.add(upleft+upright);
              }
!             rows.add(init);
          }
  
          return rows;

2020-12-31 04:18:49,706	[INFO]	76	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '=='}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:18:49,709	[INFO]	77	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '=='}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:18:49,709	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,25 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<=r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
***************
*** 33,39 ****
                  }
                  row.add(upleft+upright);
              }
!             rows.add(row);
          }
  
          return rows;
--- 33,39 ----
                  }
                  row.add(upleft+upright);
              }
!             rows.add(init);
          }
  
          return rows;

2020-12-31 04:18:50,939	[INFO]	78	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '=='}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:18:50,940	[INFO]	79	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '=='}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '<='})
2020-12-31 04:18:50,941	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,25 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<=r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
***************
*** 33,39 ****
                  }
                  row.add(upleft+upright);
              }
!             rows.add(row);
          }
  
          return rows;
--- 33,39 ----
                  }
                  row.add(upleft+upright);
              }
!             rows.add(init);
          }
  
          return rows;

2020-12-31 04:18:52,087	[INFO]	80	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '=='}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:18:55,724	[INFO]	81	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '<='})
2020-12-31 04:18:55,725	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,25 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<=r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);

2020-12-31 04:18:55,726	[INFO]	==== END ====
2020-12-31 04:18:55,726	[INFO]	Reason: target fitness reached
2020-12-31 04:18:55,727	[INFO]	
2020-12-31 04:18:55,727	[INFO]	========== EPOCH 3 ==========
2020-12-31 04:18:55,728	[INFO]	==== WARMUP ====
2020-12-31 04:18:59,164	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 04:18:59,164	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 04:19:02,690	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 04:19:02,691	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 04:19:06,133	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 04:19:06,134	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 04:19:09,620	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-31 04:19:09,620	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 04:19:09,620	[INFO]	==== START ====
2020-12-31 04:19:10,659	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:19:14,127	[INFO]	2	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:19:14,128	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
!                 upright = 0;
              }
              rows.add(row);
          }

2020-12-31 04:19:15,144	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 04:19:16,182	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:19:19,715	[INFO]	5	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:19:19,716	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,37 ****
                  } else {
                      upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 26,38 ----
                  } else {
                      upleft = 0;
                  }
+                 upleft = 0;
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
!                 upright = 0;
              }
              rows.add(row);
          }

2020-12-31 04:19:20,731	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:19:24,225	[INFO]	7	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:19:24,226	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  } else {
                      upleft = 0;
                  }
+                 upleft = 0;
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 04:19:24,227	[INFO]	8	SUCCESS	+4.0	
2020-12-31 04:19:24,227	[DEBUG]	
2020-12-31 04:19:25,281	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:19:28,808	[INFO]	10	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 04:19:28,809	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(row);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:19:28,811	[INFO]	11	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:19:28,811	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(row);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:19:29,826	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:19:29,828	[INFO]	13	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 04:19:29,828	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(row);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:19:30,857	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:19:30,858	[INFO]	15	SUCCESS	+4.0	
2020-12-31 04:19:30,859	[DEBUG]	
2020-12-31 04:19:31,891	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:19:32,932	[INFO]	17	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:19:33,963	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:19:35,007	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:19:38,525	[INFO]	20	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:19:38,526	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,35 ****
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
!                     upright = 0;
                  }
                  row.add(upleft+upright);
              }
--- 29,35 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
!                     return rows;
                  }
                  row.add(upleft+upright);
              }

2020-12-31 04:19:39,355	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:19:40,343	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 04:19:40,344	[INFO]	23	SUCCESS	+4.0	
2020-12-31 04:19:40,345	[DEBUG]	
2020-12-31 04:19:41,425	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:19:41,427	[INFO]	25	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 04:19:41,428	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(row);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:19:41,428	[INFO]	26	SUCCESS	+4.0	
2020-12-31 04:19:41,428	[DEBUG]	
2020-12-31 04:19:41,429	[INFO]	27	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:19:41,429	[DEBUG]	
2020-12-31 04:19:41,430	[INFO]	28	SUCCESS	+4.0	
2020-12-31 04:19:41,430	[DEBUG]	
2020-12-31 04:19:44,907	[INFO]	29	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:19:44,908	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,32 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 04:19:48,430	[INFO]	30	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:19:48,431	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,32 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                      upleft = 0;
                  }
                  if (c < r) {
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 34,40 ----
                  } else {
                      upright = 0;
                  }
!                 
              }
              rows.add(row);
          }

2020-12-31 04:19:49,465	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:19:49,466	[INFO]	32	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:19:49,467	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,32 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 04:19:49,468	[INFO]	33	SUCCESS	+4.0	
2020-12-31 04:19:49,468	[DEBUG]	
2020-12-31 04:19:50,498	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:19:51,509	[INFO]	35	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:19:55,021	[INFO]	36	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 04:19:55,022	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     rows.add(row);
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 04:19:58,554	[INFO]	37	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 04:19:58,555	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,32 ****
--- 26,34 ----
                  } else {
                      upleft = 0;
                  }
+                 upleft = rows.get(r-1).get(c-1);
                  if (c < r) {
+                     rows.add(row);
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 04:19:59,587	[INFO]	38	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 04:20:00,672	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:20:01,777	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:20:02,818	[INFO]	41	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:20:06,336	[INFO]	42	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:20:06,337	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,32 ****
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
--- 22,34 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
!                     init.add(1);
                  } else {
                      upleft = 0;
                  }
+                 upleft = rows.get(r-1).get(c-1);
                  if (c < r) {
+                     rows.add(row);
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 04:20:07,412	[INFO]	43	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:20:10,963	[INFO]	44	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:20:10,964	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,31 ****
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
--- 22,32 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
!                     init.add(1);
                  } else {
                      upleft = 0;
                  }
+                 upleft = rows.get(r-1).get(c-1);
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 04:20:10,965	[INFO]	45	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:20:10,966	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,31 ****
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
--- 22,32 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
!                     init.add(1);
                  } else {
                      upleft = 0;
                  }
+                 upleft = rows.get(r-1).get(c-1);
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 04:20:11,979	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:20:13,031	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:20:13,033	[INFO]	48	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:20:13,033	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,31 ****
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
--- 22,32 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
!                     init.add(1);
                  } else {
                      upleft = 0;
                  }
+                 upleft = rows.get(r-1).get(c-1);
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 04:20:14,091	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:20:15,100	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:20:18,629	[INFO]	51	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:20:18,631	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,31 ****
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
--- 22,33 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
!                     init.add(1);
                  } else {
+                     init.add(1);
                      upleft = 0;
                  }
+                 upleft = rows.get(r-1).get(c-1);
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 04:20:19,649	[INFO]	52	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:20:19,651	[INFO]	53	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:20:19,652	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,31 ****
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
--- 22,33 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
!                     init.add(1);
                  } else {
+                     init.add(1);
                      upleft = 0;
                  }
+                 upleft = rows.get(r-1).get(c-1);
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 04:20:23,149	[INFO]	54	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:20:23,152	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,31 ****
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
--- 22,33 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
!                     init.add(1);
                  } else {
+                     init.add(1);
                      upleft = 0;
                  }
+                 upleft = rows.get(r-1).get(c-1);
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
***************
*** 33,38 ****
--- 35,41 ----
                  }
                  row.add(upleft+upright);
              }
+             init.add(1);
              rows.add(row);
          }
  

2020-12-31 04:20:23,155	[INFO]	55	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:20:23,156	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,31 ****
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
--- 22,33 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
!                     init.add(1);
                  } else {
+                     init.add(1);
                      upleft = 0;
                  }
+                 upleft = rows.get(r-1).get(c-1);
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 04:20:26,654	[INFO]	56	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '!='})
2020-12-31 04:20:26,655	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 17,31 ****
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
--- 17,33 ----
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r!=n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
!                     init.add(1);
                  } else {
+                     init.add(1);
                      upleft = 0;
                  }
+                 upleft = rows.get(r-1).get(c-1);
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 04:20:30,140	[INFO]	57	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '!='}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '!='})
2020-12-31 04:20:30,142	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 17,31 ****
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
--- 17,33 ----
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r!=n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c != 0) {
!                     init.add(1);
                  } else {
+                     init.add(1);
                      upleft = 0;
                  }
+                 upleft = rows.get(r-1).get(c-1);
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 04:20:31,179	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '!='}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 04:20:34,640	[INFO]	59	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '!='})
2020-12-31 04:20:34,641	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,31 ****
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
--- 21,33 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c != 0) {
!                     init.add(1);
                  } else {
+                     init.add(1);
                      upleft = 0;
                  }
+                 upleft = rows.get(r-1).get(c-1);
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 04:20:35,974	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '!='})
2020-12-31 04:20:35,976	[INFO]	61	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:20:35,977	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,31 ****
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
--- 22,33 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
!                     init.add(1);
                  } else {
+                     init.add(1);
                      upleft = 0;
                  }
+                 upleft = rows.get(r-1).get(c-1);
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 04:20:37,161	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:20:38,562	[INFO]	63	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:20:42,676	[INFO]	64	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:20:42,677	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,31 ****
--- 24,33 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     init.add(1);
                      upleft = 0;
                  }
+                 upleft = rows.get(r-1).get(c-1);
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 04:20:47,035	[INFO]	65	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:20:47,036	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,30 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     init.add(1);
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 04:20:48,442	[INFO]	66	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:20:49,907	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:20:49,908	[INFO]	68	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:20:49,909	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,30 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     init.add(1);
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 04:20:53,564	[INFO]	69	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 04:20:53,565	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,31 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     init.add(1);
+                     upright = rows.get(r-1).get(c);
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 04:20:54,595	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:20:54,597	[INFO]	71	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:20:54,597	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,30 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     init.add(1);
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 04:20:54,598	[INFO]	72	SUCCESS	+4.0	
2020-12-31 04:20:54,598	[DEBUG]	
2020-12-31 04:20:58,108	[INFO]	73	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '=='})
2020-12-31 04:20:58,109	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,32 ****
                  } else {
                      upleft = 0;
                  }
!                 if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
--- 26,32 ----
                  } else {
                      upleft = 0;
                  }
!                 if (c == r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 04:20:58,110	[INFO]	74	SUCCESS	+4.0	
2020-12-31 04:20:58,110	[DEBUG]	
2020-12-31 04:20:59,129	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:21:00,159	[INFO]	76	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 04:21:01,179	[INFO]	77	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:21:02,192	[INFO]	78	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:21:03,243	[INFO]	79	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:21:04,239	[INFO]	80	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:21:05,284	[INFO]	81	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:21:08,738	[INFO]	82	SUCCESS	+4.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:21:08,739	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
!                 
              }
              rows.add(row);
          }

2020-12-31 04:21:08,740	[INFO]	83	SUCCESS	+4.0	
2020-12-31 04:21:08,740	[DEBUG]	
2020-12-31 04:21:09,689	[INFO]	84	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 04:21:10,547	[INFO]	85	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 04:21:14,016	[INFO]	86	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:21:14,017	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,35 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     init.add(1);
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 04:21:14,018	[INFO]	87	SUCCESS	+4.0	
2020-12-31 04:21:14,018	[DEBUG]	
2020-12-31 04:21:14,877	[INFO]	88	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:21:15,896	[INFO]	89	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:21:16,915	[INFO]	90	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:21:20,457	[INFO]	91	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:21:20,458	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,36 ****
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
+                 upleft = 0;
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:21:21,475	[INFO]	92	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:21:21,476	[INFO]	93	SUCCESS	+4.0	
2020-12-31 04:21:21,477	[DEBUG]	
2020-12-31 04:21:22,538	[INFO]	94	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:21:26,158	[INFO]	95	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:21:26,158	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
!                 upright = 0;
              }
              rows.add(row);
          }

2020-12-31 04:21:27,162	[INFO]	96	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:21:27,164	[INFO]	97	SUCCESS	+4.0	
2020-12-31 04:21:27,165	[DEBUG]	
2020-12-31 04:21:28,217	[INFO]	98	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:21:31,690	[INFO]	99	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:21:31,691	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,34 ----
                  } else {
                      upleft = 0;
                  }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 04:21:31,692	[INFO]	100	SUCCESS	+4.0	
2020-12-31 04:21:31,692	[DEBUG]	
2020-12-31 04:21:32,679	[INFO]	101	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:21:33,697	[INFO]	102	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 04:21:34,714	[INFO]	103	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:21:35,758	[INFO]	104	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 04:21:39,226	[INFO]	105	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:21:39,227	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,35 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     init.add(1);
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 04:21:40,276	[INFO]	106	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:21:41,339	[INFO]	107	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:21:41,340	[INFO]	108	SUCCESS	+4.0	
2020-12-31 04:21:41,340	[DEBUG]	
2020-12-31 04:21:44,778	[INFO]	109	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 04:21:45,816	[INFO]	110	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:21:46,831	[INFO]	111	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 04:21:47,671	[INFO]	112	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:21:51,098	[INFO]	113	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 04:21:51,960	[INFO]	114	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:21:52,963	[INFO]	115	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:21:56,438	[INFO]	116	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 04:21:56,439	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,35 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     rows.add(row);
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 04:21:56,440	[INFO]	117	SUCCESS	+4.0	
2020-12-31 04:21:56,440	[DEBUG]	
2020-12-31 04:21:57,508	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:21:58,538	[INFO]	119	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:22:02,050	[INFO]	120	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:22:02,051	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,33 ****
                      upleft = 0;
                  }
                  if (c < r) {
!                     upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
--- 27,33 ----
                      upleft = 0;
                  }
                  if (c < r) {
!                     return rows;
                  } else {
                      upright = 0;
                  }

2020-12-31 04:22:02,052	[INFO]	121	SUCCESS	+4.0	
2020-12-31 04:22:02,053	[DEBUG]	
2020-12-31 04:22:05,514	[INFO]	122	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 04:22:05,515	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
+                 rows.add(init);
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);

2020-12-31 04:22:05,516	[INFO]	123	SUCCESS	+4.0	
2020-12-31 04:22:05,516	[DEBUG]	
2020-12-31 04:22:06,534	[INFO]	124	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:22:10,050	[INFO]	125	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:22:10,051	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,39 ****
                  }
                  row.add(upleft+upright);
              }
!             rows.add(row);
          }
  
          return rows;
--- 33,39 ----
                  }
                  row.add(upleft+upright);
              }
!             return rows;
          }
  
          return rows;

2020-12-31 04:22:10,052	[INFO]	126	SUCCESS	+4.0	
2020-12-31 04:22:10,052	[DEBUG]	
2020-12-31 04:22:11,076	[INFO]	127	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:22:11,077	[INFO]	128	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:22:11,077	[DEBUG]	
2020-12-31 04:22:11,078	[INFO]	129	SUCCESS	+4.0	
2020-12-31 04:22:11,078	[DEBUG]	
2020-12-31 04:22:14,568	[INFO]	130	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '>='})
2020-12-31 04:22:14,569	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,32 ****
                  } else {
                      upleft = 0;
                  }
!                 if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
--- 26,32 ----
                  } else {
                      upleft = 0;
                  }
!                 if (c >= r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 04:22:15,589	[INFO]	131	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '>='}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:22:15,591	[INFO]	132	SUCCESS	+4.0	
2020-12-31 04:22:15,591	[DEBUG]	
2020-12-31 04:22:16,616	[INFO]	133	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:22:17,670	[INFO]	134	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:22:18,725	[INFO]	135	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:22:22,212	[INFO]	136	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:22:22,213	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,39 ****
                  }
                  row.add(upleft+upright);
              }
!             rows.add(row);
          }
  
          return rows;
--- 33,39 ----
                  }
                  row.add(upleft+upright);
              }
!             init.add(1);
          }
  
          return rows;

2020-12-31 04:22:23,209	[INFO]	137	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:22:23,210	[INFO]	138	SUCCESS	+4.0	
2020-12-31 04:22:23,210	[DEBUG]	
2020-12-31 04:22:26,696	[INFO]	139	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:22:27,530	[INFO]	140	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:22:28,596	[INFO]	141	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 04:22:29,643	[INFO]	142	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:22:30,672	[INFO]	143	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 04:22:31,687	[INFO]	144	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:22:35,129	[INFO]	145	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '>='})
2020-12-31 04:22:35,130	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,27 ****
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c >= 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 04:22:35,130	[INFO]	146	SUCCESS	+4.0	
2020-12-31 04:22:35,131	[DEBUG]	
2020-12-31 04:22:36,138	[INFO]	147	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:22:36,139	[INFO]	148	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:22:37,335	[INFO]	149	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:22:38,416	[INFO]	150	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:22:41,986	[INFO]	151	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:22:41,987	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upright = 0;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {

2020-12-31 04:22:43,026	[INFO]	152	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:22:46,491	[INFO]	153	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:22:46,492	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upright = 0;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
***************
*** 31,36 ****
--- 32,38 ----
                  } else {
                      upright = 0;
                  }
+                 init.add(1);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:22:47,526	[INFO]	154	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:22:48,549	[INFO]	155	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:22:52,079	[INFO]	156	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:22:52,080	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,36 ****
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
+                 init.add(1);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:22:52,081	[INFO]	157	SUCCESS	+4.0	
2020-12-31 04:22:52,082	[DEBUG]	
2020-12-31 04:22:53,111	[INFO]	158	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 04:22:54,110	[INFO]	159	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:22:57,587	[INFO]	160	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:22:57,588	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,36 ****
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
+                 upright = 0;
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:22:57,589	[INFO]	161	SUCCESS	+4.0	
2020-12-31 04:22:57,589	[DEBUG]	
2020-12-31 04:22:58,608	[INFO]	162	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:22:59,450	[INFO]	163	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:23:00,484	[INFO]	164	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:23:01,529	[INFO]	165	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:23:04,971	[INFO]	166	SUCCESS	+4.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:23:04,972	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             
              rows.add(row);
          }
  

2020-12-31 04:23:04,973	[INFO]	167	SUCCESS	+4.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:23:04,974	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             
              rows.add(row);
          }
  

2020-12-31 04:23:08,514	[INFO]	168	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:23:08,515	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,30 ****
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
--- 24,30 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     return rows;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);

2020-12-31 04:23:08,515	[INFO]	169	SUCCESS	+4.0	
2020-12-31 04:23:08,516	[DEBUG]	
2020-12-31 04:23:09,372	[INFO]	170	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:23:10,413	[INFO]	171	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:23:11,399	[INFO]	172	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:23:12,389	[INFO]	173	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:23:15,923	[INFO]	174	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 04:23:15,924	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,30 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 04:23:19,434	[INFO]	175	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:23:20,470	[INFO]	176	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:23:20,471	[INFO]	177	SUCCESS	+4.0	
2020-12-31 04:23:20,471	[DEBUG]	
2020-12-31 04:23:20,472	[INFO]	178	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:23:20,473	[DEBUG]	
2020-12-31 04:23:20,473	[INFO]	179	SUCCESS	+4.0	
2020-12-31 04:23:20,473	[DEBUG]	
2020-12-31 04:23:23,989	[INFO]	180	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '!='})
2020-12-31 04:23:23,989	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 17,23 ****
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
--- 17,23 ----
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r!=n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;

2020-12-31 04:23:23,990	[INFO]	181	SUCCESS	+4.0	
2020-12-31 04:23:23,990	[DEBUG]	
2020-12-31 04:23:25,028	[INFO]	182	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:23:28,579	[INFO]	183	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 04:23:28,580	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  } else {
                      upleft = 0;
                  }
+                 rows.add(init);
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 04:23:28,582	[INFO]	184	SUCCESS	+4.0	
2020-12-31 04:23:28,582	[DEBUG]	
2020-12-31 04:23:29,586	[INFO]	185	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:23:30,636	[INFO]	186	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 04:23:34,108	[INFO]	187	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '<'})
2020-12-31 04:23:34,108	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,27 ****
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c < 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 04:23:37,580	[INFO]	188	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:23:37,582	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,27 ****
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c < 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
***************
*** 29,34 ****
--- 29,35 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     upleft = 0;
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 04:23:41,111	[INFO]	189	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:23:41,112	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,35 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     upleft = 0;
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 04:23:41,113	[INFO]	190	SUCCESS	+4.0	
2020-12-31 04:23:41,113	[DEBUG]	
2020-12-31 04:23:42,150	[INFO]	191	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:23:43,183	[INFO]	192	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 04:23:46,683	[INFO]	193	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:23:46,684	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 init.add(1);
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {

2020-12-31 04:23:50,199	[INFO]	194	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:23:50,200	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,30 ****
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
--- 21,31 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 init.add(1);
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     return rows;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);

2020-12-31 04:23:51,202	[INFO]	195	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:23:54,750	[INFO]	196	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:23:54,752	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,37 ****
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 21,38 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 init.add(1);
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     return rows;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
!                 init.add(1);
              }
              rows.add(row);
          }

2020-12-31 04:23:55,811	[INFO]	197	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:23:56,657	[INFO]	198	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:23:56,660	[INFO]	199	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:23:56,661	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,30 ****
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
--- 21,31 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 init.add(1);
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     return rows;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);

2020-12-31 04:23:57,720	[INFO]	200	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:24:01,296	[INFO]	201	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:24:01,297	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,30 ****
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
--- 24,30 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     return rows;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);

2020-12-31 04:24:02,313	[INFO]	202	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 04:24:02,315	[INFO]	203	SUCCESS	+4.0	
2020-12-31 04:24:02,315	[DEBUG]	
2020-12-31 04:24:02,316	[INFO]	204	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:24:03,337	[INFO]	205	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:24:04,389	[INFO]	206	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 04:24:05,223	[INFO]	207	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:24:06,231	[INFO]	208	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:24:09,648	[INFO]	209	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 04:24:09,650	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upright = rows.get(r-1).get(c);
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {

2020-12-31 04:24:09,651	[INFO]	210	SUCCESS	+4.0	
2020-12-31 04:24:09,652	[DEBUG]	
2020-12-31 04:24:10,494	[INFO]	211	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:24:11,525	[INFO]	212	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:24:12,557	[INFO]	213	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 04:24:13,565	[INFO]	214	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:24:14,601	[INFO]	215	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 04:24:15,615	[INFO]	216	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 04:24:16,658	[INFO]	217	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:24:17,688	[INFO]	218	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:24:18,708	[INFO]	219	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:24:19,764	[INFO]	220	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:24:23,286	[INFO]	221	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:24:23,287	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,36 ****
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
+                 init.add(1);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:24:23,288	[INFO]	222	SUCCESS	+4.0	
2020-12-31 04:24:23,288	[DEBUG]	
2020-12-31 04:24:24,305	[INFO]	223	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:24:25,350	[INFO]	224	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:24:26,396	[INFO]	225	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:24:27,402	[INFO]	226	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:24:28,418	[INFO]	227	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:24:29,431	[INFO]	228	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:24:30,450	[INFO]	229	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:24:31,465	[INFO]	230	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:24:32,529	[INFO]	231	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:24:33,568	[INFO]	232	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 04:24:34,595	[INFO]	233	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:24:35,646	[INFO]	234	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:24:36,671	[INFO]	235	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:24:40,129	[INFO]	236	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:24:40,130	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  } else {
                      upleft = 0;
                  }
+                 upleft = 0;
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 04:24:40,130	[INFO]	237	SUCCESS	+4.0	
2020-12-31 04:24:40,131	[DEBUG]	
2020-12-31 04:24:41,223	[INFO]	238	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:24:42,262	[INFO]	239	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:24:43,093	[INFO]	240	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 04:24:46,599	[INFO]	241	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '!='})
2020-12-31 04:24:46,600	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 17,23 ****
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
--- 17,23 ----
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r!=n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;

2020-12-31 04:24:50,055	[INFO]	242	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '!='}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:24:50,056	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 17,23 ****
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
--- 17,23 ----
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r!=n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
***************
*** 33,39 ****
                  }
                  row.add(upleft+upright);
              }
!             rows.add(row);
          }
  
          return rows;
--- 33,39 ----
                  }
                  row.add(upleft+upright);
              }
!             init.add(1);
          }
  
          return rows;

2020-12-31 04:24:50,057	[INFO]	243	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '!='}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '<'})
2020-12-31 04:24:50,058	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 17,23 ****
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
--- 17,23 ----
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r!=n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
***************
*** 33,39 ****
                  }
                  row.add(upleft+upright);
              }
!             rows.add(row);
          }
  
          return rows;
--- 33,39 ----
                  }
                  row.add(upleft+upright);
              }
!             init.add(1);
          }
  
          return rows;

2020-12-31 04:24:51,084	[INFO]	244	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '!='}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '<'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 04:24:54,534	[INFO]	245	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '<'})
2020-12-31 04:24:54,534	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,39 ****
                  }
                  row.add(upleft+upright);
              }
!             rows.add(row);
          }
  
          return rows;
--- 33,39 ----
                  }
                  row.add(upleft+upright);
              }
!             init.add(1);
          }
  
          return rows;

2020-12-31 04:24:57,999	[INFO]	246	SUCCESS	 5.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '<'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:24:58,001	[INFO]	247	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:24:58,001	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,39 ****
                  }
                  row.add(upleft+upright);
              }
!             rows.add(row);
          }
  
          return rows;
--- 33,39 ----
                  }
                  row.add(upleft+upright);
              }
!             init.add(1);
          }
  
          return rows;

2020-12-31 04:24:59,042	[INFO]	248	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:25:02,535	[INFO]	249	SUCCESS	 5.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:25:06,006	[INFO]	250	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 04:25:06,007	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,39 ****
                  } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);
              }
!             rows.add(row);
          }
  
          return rows;
--- 31,42 ----
                  } else {
                      upright = 0;
                  }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                  row.add(upleft+upright);
              }
!             init.add(1);
          }
  
          return rows;

2020-12-31 04:25:07,051	[INFO]	251	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:25:10,557	[INFO]	252	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 04:25:10,558	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,36 ****
--- 31,39 ----
                  } else {
                      upright = 0;
                  }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:25:14,127	[INFO]	253	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 04:25:14,129	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,35 ****
--- 26,39 ----
                  } else {
                      upleft = 0;
                  }
+                 upleft = rows.get(r-1).get(c-1);
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
                  }
                  row.add(upleft+upright);
              }

2020-12-31 04:25:14,130	[INFO]	254	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 04:25:14,130	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,36 ****
--- 31,39 ----
                  } else {
                      upright = 0;
                  }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:25:14,131	[INFO]	255	SUCCESS	+4.0	
2020-12-31 04:25:14,132	[DEBUG]	
2020-12-31 04:25:15,252	[INFO]	256	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 04:25:18,668	[INFO]	257	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:25:18,669	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             rows.add(row);
              rows.add(row);
          }
  

2020-12-31 04:25:19,640	[INFO]	258	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 04:25:19,641	[INFO]	259	SUCCESS	+4.0	
2020-12-31 04:25:19,643	[DEBUG]	
2020-12-31 04:25:20,716	[INFO]	260	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:25:21,729	[INFO]	261	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:25:22,872	[INFO]	262	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 04:25:23,901	[INFO]	263	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:25:24,983	[INFO]	264	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:25:26,027	[INFO]	265	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 04:25:27,063	[INFO]	266	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:25:28,070	[INFO]	267	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 04:25:29,100	[INFO]	268	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:25:30,153	[INFO]	269	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:25:31,180	[INFO]	270	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:25:32,235	[INFO]	271	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:25:33,261	[INFO]	272	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 04:25:36,902	[INFO]	273	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:25:36,903	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upright = 0;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {

2020-12-31 04:25:36,905	[INFO]	274	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:25:36,905	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upright = 0;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {

2020-12-31 04:25:37,933	[INFO]	275	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:25:37,935	[INFO]	276	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:25:37,936	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upright = 0;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {

2020-12-31 04:25:38,796	[INFO]	277	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:25:38,797	[INFO]	278	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:25:38,798	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upright = 0;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {

2020-12-31 04:25:38,799	[INFO]	279	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:25:38,799	[DEBUG]	
2020-12-31 04:25:39,780	[INFO]	280	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:25:39,782	[INFO]	281	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:25:39,783	[DEBUG]	
2020-12-31 04:25:39,784	[INFO]	282	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:25:39,785	[DEBUG]	
2020-12-31 04:25:39,786	[INFO]	283	SUCCESS	+4.0	
2020-12-31 04:25:39,786	[DEBUG]	
2020-12-31 04:25:40,813	[INFO]	284	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 04:25:41,868	[INFO]	285	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:25:45,355	[INFO]	286	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:25:46,380	[INFO]	287	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:25:47,402	[INFO]	288	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:25:48,403	[INFO]	289	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:25:49,421	[INFO]	290	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 04:25:52,936	[INFO]	291	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '!='})
2020-12-31 04:25:52,937	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 17,23 ****
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
--- 17,23 ----
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r!=n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;

2020-12-31 04:25:53,970	[INFO]	292	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:25:53,971	[INFO]	293	SUCCESS	+4.0	
2020-12-31 04:25:53,971	[DEBUG]	
2020-12-31 04:25:54,982	[INFO]	294	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:25:54,984	[INFO]	295	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 04:25:58,463	[INFO]	296	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '<'})
2020-12-31 04:25:58,464	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,27 ****
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c < 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 04:25:59,469	[INFO]	297	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:25:59,471	[INFO]	298	SUCCESS	+4.0	
2020-12-31 04:25:59,471	[DEBUG]	
2020-12-31 04:26:00,508	[INFO]	299	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:26:01,537	[INFO]	300	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:26:05,015	[INFO]	301	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:26:05,016	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,36 ****
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
+                 upright = 0;
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:26:06,051	[INFO]	302	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:26:06,052	[INFO]	303	SUCCESS	+4.0	
2020-12-31 04:26:06,052	[DEBUG]	
2020-12-31 04:26:07,060	[INFO]	304	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:26:08,090	[INFO]	305	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:26:11,612	[INFO]	306	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:26:12,651	[INFO]	307	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:26:13,665	[INFO]	308	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 04:26:14,662	[INFO]	309	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 04:26:15,701	[INFO]	310	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:26:15,703	[INFO]	311	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '!='})
2020-12-31 04:26:15,703	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 17,23 ****
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
--- 17,23 ----
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r!=n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;

2020-12-31 04:26:15,704	[INFO]	312	SUCCESS	+4.0	
2020-12-31 04:26:15,704	[DEBUG]	
2020-12-31 04:26:16,742	[INFO]	313	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 04:26:17,779	[INFO]	314	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:26:18,821	[INFO]	315	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:26:19,861	[INFO]	316	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:26:23,400	[INFO]	317	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 04:26:23,401	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 34,39 ****
--- 34,40 ----
                  row.add(upleft+upright);
              }
              rows.add(row);
+             rows.add(row);
          }
  
          return rows;

2020-12-31 04:26:24,460	[INFO]	318	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:26:24,462	[INFO]	319	SUCCESS	+4.0	
2020-12-31 04:26:24,462	[DEBUG]	
2020-12-31 04:26:25,485	[INFO]	320	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:26:29,039	[INFO]	321	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:26:29,040	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,30 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     init.add(1);
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 04:26:29,906	[INFO]	322	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:26:29,907	[INFO]	323	SUCCESS	+4.0	
2020-12-31 04:26:29,907	[DEBUG]	
2020-12-31 04:26:30,919	[INFO]	324	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:26:34,400	[INFO]	325	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:26:34,401	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  } else {
                      upleft = 0;
                  }
+                 init.add(1);
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 04:26:37,882	[INFO]	326	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 04:26:37,883	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 18,23 ****
--- 18,24 ----
          rows.add(init);
  
          for (int r=1; r<n; r++) {
+             rows.add(init);
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
***************
*** 26,31 ****
--- 27,33 ----
                  } else {
                      upleft = 0;
                  }
+                 init.add(1);
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 04:26:37,885	[INFO]	327	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:26:37,886	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 18,23 ****
--- 18,24 ----
          rows.add(init);
  
          for (int r=1; r<n; r++) {
+             rows.add(init);
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
***************
*** 26,31 ****
--- 27,33 ----
                  } else {
                      upleft = 0;
                  }
+                 init.add(1);
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 04:26:38,921	[INFO]	328	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:26:39,957	[INFO]	329	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:26:43,507	[INFO]	330	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:26:43,508	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 18,23 ****
--- 18,24 ----
          rows.add(init);
  
          for (int r=1; r<n; r++) {
+             rows.add(init);
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
***************
*** 26,31 ****
--- 27,33 ----
                  } else {
                      upleft = 0;
                  }
+                 init.add(1);
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
***************
*** 33,38 ****
--- 35,41 ----
                  }
                  row.add(upleft+upright);
              }
+             int upleft, upright;
              rows.add(row);
          }
  

2020-12-31 04:26:44,531	[INFO]	331	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:26:45,560	[INFO]	332	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 04:26:45,563	[INFO]	333	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:26:45,564	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 18,23 ****
--- 18,24 ----
          rows.add(init);
  
          for (int r=1; r<n; r++) {
+             rows.add(init);
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
***************
*** 26,31 ****
--- 27,33 ----
                  } else {
                      upleft = 0;
                  }
+                 init.add(1);
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
***************
*** 33,38 ****
--- 35,41 ----
                  }
                  row.add(upleft+upright);
              }
+             int upleft, upright;
              rows.add(row);
          }
  

2020-12-31 04:26:46,611	[INFO]	334	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 04:26:50,104	[INFO]	335	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:26:50,106	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 18,23 ****
--- 18,24 ----
          rows.add(init);
  
          for (int r=1; r<n; r++) {
+             rows.add(init);
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
***************
*** 33,38 ****
--- 34,40 ----
                  }
                  row.add(upleft+upright);
              }
+             int upleft, upright;
              rows.add(row);
          }
  

2020-12-31 04:26:53,606	[INFO]	336	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:26:53,607	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 18,23 ****
--- 18,24 ----
          rows.add(init);
  
          for (int r=1; r<n; r++) {
+             rows.add(init);
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
***************
*** 31,38 ****
--- 32,41 ----
                  } else {
                      upright = 0;
                  }
+                 upright = 0;
                  row.add(upleft+upright);
              }
+             int upleft, upright;
              rows.add(row);
          }
  

2020-12-31 04:26:53,608	[INFO]	337	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:26:53,609	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 18,23 ****
--- 18,24 ----
          rows.add(init);
  
          for (int r=1; r<n; r++) {
+             rows.add(init);
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
***************
*** 33,38 ****
--- 34,40 ----
                  }
                  row.add(upleft+upright);
              }
+             int upleft, upright;
              rows.add(row);
          }
  

2020-12-31 04:26:57,075	[INFO]	338	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 04:26:57,076	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 18,23 ****
--- 18,24 ----
          rows.add(init);
  
          for (int r=1; r<n; r++) {
+             rows.add(init);
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;

2020-12-31 04:26:57,077	[INFO]	339	SUCCESS	+4.0	
2020-12-31 04:26:57,077	[DEBUG]	
2020-12-31 04:26:57,935	[INFO]	340	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:26:57,937	[INFO]	341	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<'})
2020-12-31 04:26:57,937	[DEBUG]	
2020-12-31 04:26:57,937	[INFO]	342	SUCCESS	+4.0	
2020-12-31 04:26:57,938	[DEBUG]	
2020-12-31 04:27:01,413	[INFO]	343	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:27:01,414	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
!                 upright = 0;
              }
              rows.add(row);
          }

2020-12-31 04:27:02,477	[INFO]	344	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:27:02,478	[INFO]	345	SUCCESS	+4.0	
2020-12-31 04:27:02,479	[DEBUG]	
2020-12-31 04:27:05,940	[INFO]	346	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:27:05,941	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,39 ****
                  }
                  row.add(upleft+upright);
              }
!             rows.add(row);
          }
  
          return rows;
--- 33,39 ----
                  }
                  row.add(upleft+upright);
              }
!             init.add(1);
          }
  
          return rows;

2020-12-31 04:27:05,942	[INFO]	347	SUCCESS	+4.0	
2020-12-31 04:27:05,942	[DEBUG]	
2020-12-31 04:27:06,959	[INFO]	348	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:27:10,469	[INFO]	349	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 04:27:10,470	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,36 ****
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
+                 upleft = rows.get(r-1).get(c-1);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:27:11,528	[INFO]	350	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:27:12,573	[INFO]	351	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:27:13,607	[INFO]	352	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:27:14,484	[INFO]	353	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:27:14,485	[INFO]	354	SUCCESS	+4.0	
2020-12-31 04:27:14,486	[DEBUG]	
2020-12-31 04:27:15,494	[INFO]	355	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:27:16,512	[INFO]	356	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:27:17,545	[INFO]	357	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:27:21,079	[INFO]	358	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:27:21,080	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
+                 }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }

2020-12-31 04:27:21,080	[INFO]	359	SUCCESS	+4.0	
2020-12-31 04:27:21,081	[DEBUG]	
2020-12-31 04:27:22,110	[INFO]	360	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:27:23,123	[INFO]	361	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:27:24,131	[INFO]	362	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:27:25,181	[INFO]	363	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:27:26,216	[INFO]	364	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:27:27,271	[INFO]	365	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:27:30,726	[INFO]	366	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:27:30,727	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  } else {
                      upleft = 0;
                  }
+                 upright = 0;
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 04:27:31,792	[INFO]	367	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:27:31,793	[INFO]	368	SUCCESS	+4.0	
2020-12-31 04:27:31,794	[DEBUG]	
2020-12-31 04:27:32,786	[INFO]	369	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:27:33,816	[INFO]	370	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 04:27:34,835	[INFO]	371	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:27:35,853	[INFO]	372	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:27:36,879	[INFO]	373	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:27:37,926	[INFO]	374	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:27:41,497	[INFO]	375	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:27:42,387	[INFO]	376	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:27:45,922	[INFO]	377	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '=='})
2020-12-31 04:27:45,923	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,25 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c==r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);

2020-12-31 04:27:46,946	[INFO]	378	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '=='}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:27:46,947	[INFO]	379	SUCCESS	+4.0	
2020-12-31 04:27:46,947	[DEBUG]	
2020-12-31 04:27:47,971	[INFO]	380	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:27:48,991	[INFO]	381	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:27:48,992	[INFO]	382	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:27:48,993	[DEBUG]	
2020-12-31 04:27:48,993	[INFO]	383	SUCCESS	+4.0	
2020-12-31 04:27:48,994	[DEBUG]	
2020-12-31 04:27:52,502	[INFO]	384	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:27:52,503	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 25,30 ****
--- 25,31 ----
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
+                     upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);

2020-12-31 04:27:52,504	[INFO]	385	SUCCESS	+4.0	
2020-12-31 04:27:52,504	[DEBUG]	
2020-12-31 04:27:53,534	[INFO]	386	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 04:27:56,998	[INFO]	387	SUCCESS	+4.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:27:56,998	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 17,40 ****
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r<n; r++) {
!             ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
!             rows.add(row);
!         }
  
          return rows;
      }
--- 17,23 ----
          init.add(1);
          rows.add(init);
  
!         
  
          return rows;
      }

2020-12-31 04:28:00,453	[INFO]	388	SUCCESS	 5.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:28:00,455	[INFO]	389	SUCCESS	+4.0	
2020-12-31 04:28:00,455	[DEBUG]	
2020-12-31 04:28:01,472	[INFO]	390	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:28:02,493	[INFO]	391	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:28:03,530	[INFO]	392	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:28:04,580	[INFO]	393	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:28:08,069	[INFO]	394	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:28:08,070	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,39 ****
                  }
                  row.add(upleft+upright);
              }
!             rows.add(row);
          }
  
          return rows;
--- 33,39 ----
                  }
                  row.add(upleft+upright);
              }
!             return rows;
          }
  
          return rows;

2020-12-31 04:28:08,070	[INFO]	395	SUCCESS	+4.0	
2020-12-31 04:28:08,071	[DEBUG]	
2020-12-31 04:28:09,103	[INFO]	396	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:28:12,545	[INFO]	397	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 04:28:13,588	[INFO]	398	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:28:14,590	[INFO]	399	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 04:28:15,617	[INFO]	400	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:28:16,654	[INFO]	401	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:28:17,692	[INFO]	402	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:28:17,696	[INFO]	403	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:28:18,728	[INFO]	404	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 04:28:22,231	[INFO]	405	SUCCESS	+4.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:28:22,233	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,39 ****
                  }
                  row.add(upleft+upright);
              }
!             rows.add(row);
          }
  
          return rows;
--- 33,39 ----
                  }
                  row.add(upleft+upright);
              }
!             
          }
  
          return rows;

2020-12-31 04:28:23,241	[INFO]	406	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 04:28:24,248	[INFO]	407	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:28:24,249	[INFO]	408	SUCCESS	+4.0	
2020-12-31 04:28:24,249	[DEBUG]	
2020-12-31 04:28:27,830	[INFO]	409	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:28:27,831	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     upright = 0;
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 04:28:27,832	[INFO]	410	SUCCESS	+4.0	
2020-12-31 04:28:27,832	[DEBUG]	
2020-12-31 04:28:28,853	[INFO]	411	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 04:28:29,909	[INFO]	412	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:28:33,418	[INFO]	413	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '!='})
2020-12-31 04:28:33,419	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 17,23 ****
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
--- 17,23 ----
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r!=n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;

2020-12-31 04:28:33,420	[INFO]	414	SUCCESS	+4.0	
2020-12-31 04:28:33,420	[DEBUG]	
2020-12-31 04:28:36,947	[INFO]	415	SUCCESS	 5.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:28:37,946	[INFO]	416	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:28:38,998	[INFO]	417	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:28:40,060	[INFO]	418	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:28:41,083	[INFO]	419	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:28:42,364	[INFO]	420	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:28:43,462	[INFO]	421	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:28:44,364	[INFO]	422	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:28:45,412	[INFO]	423	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:28:46,477	[INFO]	424	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:28:47,492	[INFO]	425	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:28:51,002	[INFO]	426	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:28:51,003	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  } else {
                      upleft = 0;
                  }
+                 upright = 0;
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 04:28:51,003	[INFO]	427	SUCCESS	+4.0	
2020-12-31 04:28:51,004	[DEBUG]	
2020-12-31 04:28:54,473	[INFO]	428	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:28:54,474	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,39 ----
                  }
                  row.add(upleft+upright);
              }
+             init.add(1);
              rows.add(row);
          }
  

2020-12-31 04:28:54,474	[INFO]	429	SUCCESS	+4.0	
2020-12-31 04:28:54,475	[DEBUG]	
2020-12-31 04:28:57,968	[INFO]	430	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 04:28:57,969	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,36 ****
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
+                 upleft = rows.get(r-1).get(c-1);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:28:57,970	[INFO]	431	SUCCESS	+4.0	
2020-12-31 04:28:57,970	[DEBUG]	
2020-12-31 04:28:59,002	[INFO]	432	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:29:00,035	[INFO]	433	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:29:01,127	[INFO]	434	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:29:02,172	[INFO]	435	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:29:02,174	[INFO]	436	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:29:05,618	[INFO]	437	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 04:29:05,619	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     upright = rows.get(r-1).get(c);
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 04:29:06,637	[INFO]	438	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:29:06,639	[INFO]	439	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:29:06,639	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     upright = rows.get(r-1).get(c);
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 04:29:10,064	[INFO]	440	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:29:10,066	[INFO]	441	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 04:29:10,066	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     upright = rows.get(r-1).get(c);
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 04:29:10,067	[INFO]	442	SUCCESS	+4.0	
2020-12-31 04:29:10,067	[DEBUG]	
2020-12-31 04:29:13,595	[INFO]	443	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:29:13,596	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     init.add(1);
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 04:29:13,596	[INFO]	444	SUCCESS	+4.0	
2020-12-31 04:29:13,597	[DEBUG]	
2020-12-31 04:29:14,426	[INFO]	445	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:29:15,450	[INFO]	446	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:29:16,495	[INFO]	447	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:29:17,547	[INFO]	448	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:29:18,551	[INFO]	449	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:29:18,552	[INFO]	450	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '<'})
2020-12-31 04:29:18,553	[DEBUG]	
2020-12-31 04:29:18,553	[INFO]	451	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '<'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:29:18,554	[DEBUG]	
2020-12-31 04:29:18,554	[INFO]	452	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '<'})
2020-12-31 04:29:18,555	[DEBUG]	
2020-12-31 04:29:19,598	[INFO]	453	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 04:29:20,637	[INFO]	454	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:29:20,638	[INFO]	455	SUCCESS	+4.0	
2020-12-31 04:29:20,639	[DEBUG]	
2020-12-31 04:29:24,088	[INFO]	456	SUCCESS	 5.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:29:25,172	[INFO]	457	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:29:26,188	[INFO]	458	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 04:29:29,663	[INFO]	459	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:29:29,664	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,30 ****
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
--- 24,30 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     upleft = rows.get(r-1).get(c-1);
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);

2020-12-31 04:29:30,683	[INFO]	460	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:29:30,684	[INFO]	461	SUCCESS	+4.0	
2020-12-31 04:29:30,685	[DEBUG]	
2020-12-31 04:29:30,686	[INFO]	462	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:29:30,686	[DEBUG]	
2020-12-31 04:29:30,686	[INFO]	463	SUCCESS	+4.0	
2020-12-31 04:29:30,687	[DEBUG]	
2020-12-31 04:29:34,177	[INFO]	464	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:29:34,178	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
!                 rows.add(init);
              }
              rows.add(row);
          }

2020-12-31 04:29:34,179	[INFO]	465	SUCCESS	+4.0	
2020-12-31 04:29:34,179	[DEBUG]	
2020-12-31 04:29:35,206	[INFO]	466	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:29:36,216	[INFO]	467	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:29:39,725	[INFO]	468	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:29:39,726	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
!                 rows.add(row);
              }
              rows.add(row);
          }

2020-12-31 04:29:39,727	[INFO]	469	SUCCESS	+4.0	
2020-12-31 04:29:39,727	[DEBUG]	
2020-12-31 04:29:40,736	[INFO]	470	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:29:40,738	[INFO]	471	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:29:40,738	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
!                 rows.add(init);
              }
              rows.add(row);
          }

2020-12-31 04:29:40,739	[INFO]	472	SUCCESS	+4.0	
2020-12-31 04:29:40,739	[DEBUG]	
2020-12-31 04:29:44,269	[INFO]	473	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 04:29:44,270	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,35 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     rows.add(row);
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 04:29:47,710	[INFO]	474	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:29:47,711	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,39 ****
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);
              }
!             rows.add(row);
          }
  
          return rows;
--- 29,40 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     rows.add(row);
                      upright = 0;
                  }
                  row.add(upleft+upright);
              }
!             rows.add(init);
          }
  
          return rows;

2020-12-31 04:29:51,251	[INFO]	475	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:29:51,252	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,39 ****
                  }
                  row.add(upleft+upright);
              }
!             rows.add(row);
          }
  
          return rows;
--- 33,39 ----
                  }
                  row.add(upleft+upright);
              }
!             rows.add(init);
          }
  
          return rows;

2020-12-31 04:29:51,253	[INFO]	476	SUCCESS	+4.0	
2020-12-31 04:29:51,253	[DEBUG]	
2020-12-31 04:29:52,310	[INFO]	477	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:29:55,799	[INFO]	478	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:29:55,800	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,35 ****
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
!                     upright = 0;
                  }
                  row.add(upleft+upright);
              }
--- 29,35 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
!                     return rows;
                  }
                  row.add(upleft+upright);
              }

2020-12-31 04:29:55,801	[INFO]	479	SUCCESS	+4.0	
2020-12-31 04:29:55,801	[DEBUG]	
2020-12-31 04:29:56,816	[INFO]	480	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:29:56,818	[INFO]	481	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:29:56,818	[DEBUG]	
2020-12-31 04:30:00,357	[INFO]	482	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:30:00,358	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
+                 init.add(1);
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);

2020-12-31 04:30:00,359	[INFO]	483	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:30:00,359	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
+                 init.add(1);
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);

2020-12-31 04:30:01,363	[INFO]	484	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:30:01,364	[INFO]	485	SUCCESS	+4.0	
2020-12-31 04:30:01,365	[DEBUG]	
2020-12-31 04:30:02,413	[INFO]	486	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:30:03,457	[INFO]	487	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 04:30:04,541	[INFO]	488	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:30:05,614	[INFO]	489	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:30:05,617	[INFO]	490	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:30:05,618	[DEBUG]	
2020-12-31 04:30:05,619	[INFO]	491	SUCCESS	+4.0	
2020-12-31 04:30:05,619	[DEBUG]	
2020-12-31 04:30:06,613	[INFO]	492	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:30:07,686	[INFO]	493	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:30:08,712	[INFO]	494	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:30:09,723	[INFO]	495	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:30:10,755	[INFO]	496	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 04:30:11,790	[INFO]	497	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 04:30:12,792	[INFO]	498	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:30:13,808	[INFO]	499	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:30:17,355	[INFO]	500	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:30:17,356	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,36 ****
--- 31,39 ----
                  } else {
                      upright = 0;
                  }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:30:17,356	[INFO]	==== END ====
2020-12-31 04:30:17,356	[INFO]	Reason: step budget
2020-12-31 04:30:17,357	[INFO]	
2020-12-31 04:30:17,357	[INFO]	========== EPOCH 4 ==========
2020-12-31 04:30:17,357	[INFO]	==== WARMUP ====
2020-12-31 04:30:20,909	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 04:30:20,910	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 04:30:24,455	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 04:30:24,456	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 04:30:27,955	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 04:30:27,955	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 04:30:31,463	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-31 04:30:31,464	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 04:30:31,464	[INFO]	==== START ====
2020-12-31 04:30:35,041	[INFO]	1	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:30:35,043	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     init.add(1);
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 04:30:36,436	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:30:37,855	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:30:39,379	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:30:40,473	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 04:30:41,436	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:30:41,438	[INFO]	7	SUCCESS	+4.0	
2020-12-31 04:30:41,438	[DEBUG]	
2020-12-31 04:30:44,968	[INFO]	8	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 04:30:44,969	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  } else {
                      upleft = 0;
                  }
+                 upleft = rows.get(r-1).get(c-1);
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 04:30:44,970	[INFO]	9	SUCCESS	+4.0	
2020-12-31 04:30:44,970	[DEBUG]	
2020-12-31 04:30:48,473	[INFO]	10	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 04:30:48,475	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upright = rows.get(r-1).get(c);
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {

2020-12-31 04:30:49,518	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 04:30:49,520	[INFO]	12	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:30:49,521	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upright = rows.get(r-1).get(c);
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {

2020-12-31 04:30:50,552	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:30:54,118	[INFO]	14	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:30:54,119	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     upright = 0;
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 04:30:54,120	[INFO]	15	SUCCESS	+4.0	
2020-12-31 04:30:54,120	[DEBUG]	
2020-12-31 04:30:57,600	[INFO]	16	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:30:57,601	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,36 ****
--- 31,39 ----
                  } else {
                      upright = 0;
                  }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:30:58,618	[INFO]	17	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:30:58,620	[INFO]	18	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:30:58,621	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,36 ****
--- 31,39 ----
                  } else {
                      upright = 0;
                  }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:31:02,065	[INFO]	19	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:31:02,066	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
!                 init.add(1);
              }
              rows.add(row);
          }

2020-12-31 04:31:03,096	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 04:31:03,098	[INFO]	21	SUCCESS	+4.0	
2020-12-31 04:31:03,098	[DEBUG]	
2020-12-31 04:31:04,112	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:31:05,134	[INFO]	23	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:31:08,670	[INFO]	24	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 04:31:08,671	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     rows.add(row);
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 04:31:09,714	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:31:09,715	[INFO]	26	SUCCESS	+4.0	
2020-12-31 04:31:09,716	[DEBUG]	
2020-12-31 04:31:10,747	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:31:11,791	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:31:12,790	[INFO]	29	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:31:13,791	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 04:31:14,822	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:31:15,871	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:31:16,891	[INFO]	33	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:31:20,462	[INFO]	34	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:31:20,463	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 36,41 ****
--- 36,60 ----
              rows.add(row);
          }
  
+         for (int r=1; r<n; r++) {
+             ArrayList<Integer> row = new ArrayList<Integer>();
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             rows.add(row);
+         }
+ 
          return rows;
      }
  }

2020-12-31 04:31:20,464	[INFO]	35	SUCCESS	+4.0	
2020-12-31 04:31:20,464	[DEBUG]	
2020-12-31 04:31:23,968	[INFO]	36	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 04:31:23,969	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,36 ****
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
+                 upleft = rows.get(r-1).get(c-1);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:31:23,970	[INFO]	37	SUCCESS	+4.0	
2020-12-31 04:31:23,970	[DEBUG]	
2020-12-31 04:31:27,492	[INFO]	38	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:31:27,493	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     init.add(1);
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 04:31:28,518	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:31:28,519	[INFO]	40	SUCCESS	+4.0	
2020-12-31 04:31:28,520	[DEBUG]	
2020-12-31 04:31:29,547	[INFO]	41	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:31:33,020	[INFO]	42	SUCCESS	+4.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:31:33,021	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             
              rows.add(row);
          }
  

2020-12-31 04:31:33,022	[INFO]	43	SUCCESS	+4.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:31:33,023	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             
              rows.add(row);
          }
  

2020-12-31 04:31:33,024	[INFO]	44	SUCCESS	+4.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:31:33,024	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             
              rows.add(row);
          }
  

2020-12-31 04:31:36,523	[INFO]	45	SUCCESS	+4.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:31:36,524	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
***************
*** 33,39 ****
                  }
                  row.add(upleft+upright);
              }
-             rows.add(row);
          }
  
          return rows;
--- 34,39 ----

2020-12-31 04:31:37,383	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:31:37,385	[INFO]	47	SUCCESS	+4.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:31:37,385	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
***************
*** 33,39 ****
                  }
                  row.add(upleft+upright);
              }
-             rows.add(row);
          }
  
          return rows;
--- 34,39 ----

2020-12-31 04:31:38,395	[INFO]	48	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 04:31:39,418	[INFO]	49	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 04:31:39,419	[INFO]	50	SUCCESS	+4.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '!='})
2020-12-31 04:31:39,420	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
***************
*** 33,39 ****
                  }
                  row.add(upleft+upright);
              }
-             rows.add(row);
          }
  
          return rows;
--- 34,39 ----

2020-12-31 04:31:39,421	[INFO]	51	SUCCESS	+4.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '!='})
2020-12-31 04:31:39,422	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
***************
*** 33,39 ****
                  }
                  row.add(upleft+upright);
              }
-             rows.add(row);
          }
  
          return rows;
--- 34,39 ----

2020-12-31 04:31:43,033	[INFO]	52	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '!='})
2020-12-31 04:31:43,034	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,45 ----
                  } else {
                      upleft = 0;
                  }
+                 if (c != r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
***************
*** 33,39 ****
                  }
                  row.add(upleft+upright);
              }
-             rows.add(row);
          }
  
          return rows;
--- 47,52 ----

2020-12-31 04:31:46,530	[INFO]	53	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '!='})
2020-12-31 04:31:46,531	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,32 ****
                  } else {
                      upleft = 0;
                  }
!                 if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
--- 26,32 ----
                  } else {
                      upleft = 0;
                  }
!                 if (c != r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 04:31:46,532	[INFO]	54	SUCCESS	+4.0	
2020-12-31 04:31:46,532	[DEBUG]	
2020-12-31 04:31:47,389	[INFO]	55	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:31:50,907	[INFO]	56	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:31:50,908	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  } else {
                      upleft = 0;
                  }
+                 upright = 0;
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 04:31:54,426	[INFO]	57	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:31:54,427	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,31 ****
--- 22,33 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     upleft = 0;
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
+                 upright = 0;
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 04:31:57,951	[INFO]	58	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:31:57,952	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     upleft = 0;
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 04:31:57,953	[INFO]	59	SUCCESS	+4.0	
2020-12-31 04:31:57,953	[DEBUG]	
2020-12-31 04:31:58,973	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 04:32:00,012	[INFO]	61	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:32:01,135	[INFO]	62	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:32:02,189	[INFO]	63	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:32:05,648	[INFO]	64	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:32:05,649	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             init.add(1);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:32:06,666	[INFO]	65	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:32:06,669	[INFO]	66	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:32:06,670	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             init.add(1);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:32:06,672	[INFO]	67	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:32:06,673	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             init.add(1);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:32:06,675	[INFO]	68	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:32:06,675	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             init.add(1);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:32:07,718	[INFO]	69	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:32:08,750	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:32:09,553	[INFO]	71	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:32:09,555	[INFO]	72	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '<'})
2020-12-31 04:32:09,555	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             init.add(1);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:32:10,421	[INFO]	73	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '<'})
2020-12-31 04:32:10,423	[INFO]	74	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '<'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:32:10,423	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             init.add(1);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:32:10,424	[INFO]	75	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:32:10,425	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             init.add(1);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:32:10,426	[INFO]	76	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:32:10,427	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             init.add(1);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:32:10,428	[INFO]	77	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:32:10,429	[INFO]	78	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:32:10,430	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             init.add(1);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:32:10,431	[INFO]	79	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:32:10,432	[INFO]	80	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:32:10,433	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             init.add(1);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:32:11,279	[INFO]	81	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:32:11,282	[INFO]	82	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 04:32:11,282	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             init.add(1);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:32:12,304	[INFO]	83	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:32:12,306	[INFO]	84	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:32:12,307	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             init.add(1);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:32:12,308	[INFO]	85	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:32:12,309	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             init.add(1);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:32:12,310	[INFO]	86	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:32:12,311	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             init.add(1);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:32:12,312	[INFO]	87	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:32:12,313	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             init.add(1);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:32:12,314	[INFO]	88	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 04:32:12,315	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             init.add(1);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:32:13,339	[INFO]	89	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 04:32:13,341	[INFO]	90	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:32:13,342	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             init.add(1);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:32:13,343	[INFO]	91	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:32:13,344	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             init.add(1);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:32:13,345	[INFO]	92	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:32:13,346	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             init.add(1);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:32:13,347	[INFO]	93	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:32:13,348	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             init.add(1);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:32:13,350	[INFO]	94	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:32:13,351	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             init.add(1);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:32:13,353	[INFO]	95	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:32:13,354	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             init.add(1);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:32:13,356	[INFO]	96	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:32:13,357	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             init.add(1);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:32:13,358	[INFO]	97	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:32:13,359	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             init.add(1);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:32:13,361	[INFO]	98	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:32:13,361	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             init.add(1);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:32:13,363	[INFO]	99	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:32:13,364	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             init.add(1);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:32:14,374	[INFO]	100	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:32:15,394	[INFO]	101	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:32:15,396	[INFO]	102	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:32:15,397	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             init.add(1);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:32:15,398	[INFO]	103	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:32:15,398	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             init.add(1);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:32:15,399	[INFO]	104	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:32:15,400	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             init.add(1);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:32:15,401	[INFO]	105	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:32:15,401	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             init.add(1);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:32:15,402	[INFO]	106	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 04:32:15,403	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             init.add(1);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:32:15,404	[INFO]	107	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 04:32:15,405	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             init.add(1);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:32:16,280	[INFO]	108	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 04:32:16,283	[INFO]	109	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:32:16,285	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             init.add(1);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:32:16,286	[INFO]	110	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 04:32:16,287	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             init.add(1);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:32:16,289	[INFO]	111	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:32:16,290	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             init.add(1);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:32:16,293	[INFO]	112	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:32:16,296	[INFO]	113	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:32:16,297	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             init.add(1);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:32:16,299	[INFO]	114	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:32:16,301	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             init.add(1);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:32:17,324	[INFO]	115	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:32:20,809	[INFO]	116	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:32:21,815	[INFO]	117	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:32:21,817	[INFO]	118	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:32:21,818	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             init.add(1);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:32:21,819	[INFO]	119	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:32:21,820	[INFO]	120	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 04:32:21,821	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             init.add(1);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:32:21,822	[INFO]	121	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 04:32:21,822	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             init.add(1);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:32:21,823	[INFO]	122	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:32:21,824	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             init.add(1);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:32:21,825	[INFO]	123	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:32:21,826	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             init.add(1);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:32:21,827	[INFO]	124	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:32:21,828	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             init.add(1);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:32:21,829	[INFO]	125	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:32:21,830	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             init.add(1);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:32:22,858	[INFO]	126	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:32:22,860	[INFO]	127	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:32:22,860	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             init.add(1);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:32:22,862	[INFO]	128	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 04:32:22,863	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             init.add(1);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:32:22,864	[INFO]	129	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 04:32:22,864	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             init.add(1);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:32:22,865	[INFO]	130	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 04:32:22,866	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             init.add(1);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:32:26,417	[INFO]	131	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 04:32:26,419	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     upleft = rows.get(r-1).get(c-1);
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 04:32:27,462	[INFO]	132	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:32:28,457	[INFO]	133	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:32:28,458	[INFO]	134	SUCCESS	+4.0	
2020-12-31 04:32:28,458	[DEBUG]	
2020-12-31 04:32:29,484	[INFO]	135	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:32:30,574	[INFO]	136	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:32:31,606	[INFO]	137	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 04:32:32,643	[INFO]	138	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:32:36,124	[INFO]	139	SUCCESS	+4.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:32:36,125	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
!                 
              }
              rows.add(row);
          }

2020-12-31 04:32:37,163	[INFO]	140	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 04:32:37,165	[INFO]	141	SUCCESS	+4.0	
2020-12-31 04:32:37,165	[DEBUG]	
2020-12-31 04:32:38,209	[INFO]	142	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 04:32:39,213	[INFO]	143	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:32:40,252	[INFO]	144	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:32:41,329	[INFO]	145	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:32:42,367	[INFO]	146	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:32:43,398	[INFO]	147	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:32:44,434	[INFO]	148	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:32:45,460	[INFO]	149	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 04:32:46,529	[INFO]	150	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:32:50,072	[INFO]	151	SUCCESS	 5.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '=='})
2020-12-31 04:32:51,115	[INFO]	152	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 04:32:52,121	[INFO]	153	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:32:55,600	[INFO]	154	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 04:32:55,601	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     rows.add(row);
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 04:32:55,602	[INFO]	155	SUCCESS	+4.0	
2020-12-31 04:32:55,602	[DEBUG]	
2020-12-31 04:32:56,615	[INFO]	156	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:32:56,616	[INFO]	157	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:32:56,617	[DEBUG]	
2020-12-31 04:32:56,617	[INFO]	158	SUCCESS	+4.0	
2020-12-31 04:32:56,617	[DEBUG]	
2020-12-31 04:33:00,114	[INFO]	159	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 04:33:00,115	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(row);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:33:00,116	[INFO]	160	SUCCESS	+4.0	
2020-12-31 04:33:00,116	[DEBUG]	
2020-12-31 04:33:03,630	[INFO]	161	SUCCESS	*3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:33:03,631	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:33:04,619	[INFO]	162	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 04:33:04,620	[INFO]	163	SUCCESS	 4.0	
2020-12-31 04:33:05,635	[INFO]	164	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:33:06,666	[INFO]	165	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:33:07,719	[INFO]	166	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:33:11,218	[INFO]	167	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:33:11,220	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,39 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 upleft = 0;
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:33:11,222	[INFO]	168	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:33:11,223	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:33:11,225	[INFO]	169	SUCCESS	 4.0	
2020-12-31 04:33:12,286	[INFO]	170	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:33:12,289	[INFO]	171	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:33:13,320	[INFO]	172	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:33:14,362	[INFO]	173	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:33:17,890	[INFO]	174	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:33:17,892	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upright = 0;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
***************
*** 32,37 ****
--- 33,39 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:33:18,914	[INFO]	175	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:33:22,460	[INFO]	176	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:33:22,462	[INFO]	177	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:33:22,462	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:33:23,479	[INFO]	178	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 04:33:27,048	[INFO]	179	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:33:27,049	[INFO]	180	SUCCESS	 4.0	
2020-12-31 04:33:28,072	[INFO]	181	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 04:33:29,117	[INFO]	182	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:33:29,118	[INFO]	183	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:33:29,119	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:33:32,598	[INFO]	184	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:33:33,593	[INFO]	185	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:33:33,595	[INFO]	186	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:33:34,623	[INFO]	187	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:33:35,647	[INFO]	188	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:33:35,648	[INFO]	189	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:33:35,649	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:33:36,664	[INFO]	190	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 04:33:36,667	[INFO]	191	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:33:36,668	[INFO]	192	SUCCESS	 4.0	
2020-12-31 04:33:37,698	[INFO]	193	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:33:38,783	[INFO]	194	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:33:42,315	[INFO]	195	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:33:43,343	[INFO]	196	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 04:33:44,378	[INFO]	197	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 04:33:45,409	[INFO]	198	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:33:46,293	[INFO]	199	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:33:49,724	[INFO]	200	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:33:49,725	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 30,36 ****
--- 30,38 ----
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
+                     upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:33:50,741	[INFO]	201	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 04:33:54,416	[INFO]	202	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:33:54,417	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,36 ****
--- 26,41 ----
                  } else {
                      upleft = 0;
                  }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
+                     upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:33:55,439	[INFO]	203	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:33:56,479	[INFO]	204	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:34:00,007	[INFO]	205	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:34:00,008	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,36 ****
--- 26,40 ----
                  } else {
                      upleft = 0;
                  }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:34:03,526	[INFO]	206	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:34:04,397	[INFO]	207	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:34:05,447	[INFO]	208	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 04:34:05,449	[INFO]	209	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:34:05,450	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:34:06,491	[INFO]	210	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:34:06,492	[INFO]	211	SUCCESS	 4.0	
2020-12-31 04:34:07,545	[INFO]	212	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:34:08,604	[INFO]	213	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:34:09,627	[INFO]	214	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:34:10,664	[INFO]	215	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:34:11,728	[INFO]	216	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:34:12,739	[INFO]	217	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:34:13,757	[INFO]	218	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:34:14,801	[INFO]	219	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:34:18,315	[INFO]	220	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 04:34:21,811	[INFO]	221	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '!='})
2020-12-31 04:34:21,812	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,25 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c!=r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:34:22,842	[INFO]	222	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '!='}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:34:23,875	[INFO]	223	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:34:23,876	[INFO]	224	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:34:23,877	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:34:23,877	[INFO]	225	SUCCESS	 4.0	
2020-12-31 04:34:24,927	[INFO]	226	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:34:24,928	[INFO]	227	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 04:34:24,929	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:34:24,929	[INFO]	228	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 04:34:26,015	[INFO]	229	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:34:27,053	[INFO]	230	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:34:27,939	[INFO]	231	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:34:28,959	[INFO]	232	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 04:34:32,441	[INFO]	233	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:34:32,442	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,36 ****
--- 27,40 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:34:33,497	[INFO]	234	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:34:33,500	[INFO]	235	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 04:34:33,502	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:34:33,504	[INFO]	236	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 04:34:36,970	[INFO]	237	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:34:38,001	[INFO]	238	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:34:41,537	[INFO]	239	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:34:42,391	[INFO]	240	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:34:43,424	[INFO]	241	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 04:34:44,480	[INFO]	242	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:34:44,482	[INFO]	243	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:34:44,483	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:34:48,022	[INFO]	244	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<='})
2020-12-31 04:34:48,023	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,36 ****
                  } else {
                      upleft = 0;
                  }
!                 if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);
              }
              rows.add(row);
--- 26,37 ----
                  } else {
                      upleft = 0;
                  }
!                 if (c <= r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:34:49,049	[INFO]	245	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 04:34:50,074	[INFO]	246	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:34:50,954	[INFO]	247	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<='}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:34:54,399	[INFO]	248	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<='})
2020-12-31 04:34:54,401	[INFO]	249	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:34:54,401	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:34:54,402	[INFO]	250	SUCCESS	 4.0	
2020-12-31 04:34:55,426	[INFO]	251	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:34:56,486	[INFO]	252	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:34:57,532	[INFO]	253	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:34:58,575	[INFO]	254	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 04:34:58,577	[INFO]	255	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:34:59,613	[INFO]	256	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:35:00,645	[INFO]	257	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:35:01,711	[INFO]	258	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:35:02,726	[INFO]	259	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:35:03,746	[INFO]	260	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:35:04,757	[INFO]	261	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:35:05,806	[INFO]	262	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:35:06,822	[INFO]	263	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 04:35:07,859	[INFO]	264	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:35:08,912	[INFO]	265	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:35:08,914	[INFO]	266	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:35:08,915	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:35:08,915	[INFO]	267	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:35:08,916	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:35:09,927	[INFO]	268	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:35:09,928	[INFO]	269	SUCCESS	 4.0	
2020-12-31 04:35:13,424	[INFO]	270	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:35:14,442	[INFO]	271	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:35:17,954	[INFO]	272	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:35:18,941	[INFO]	273	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:35:20,005	[INFO]	274	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 04:35:21,053	[INFO]	275	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:35:24,595	[INFO]	276	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 04:35:25,611	[INFO]	277	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:35:26,649	[INFO]	278	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:35:30,120	[INFO]	279	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 04:35:30,121	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,36 ****
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
!                     upright = 0;
                  }
                  row.add(upleft+upright);
              }
              rows.add(row);
--- 29,37 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
!                     upright = rows.get(r-1).get(c);
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:35:31,137	[INFO]	280	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:35:31,139	[INFO]	281	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:35:31,139	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:35:32,197	[INFO]	282	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:35:32,198	[INFO]	283	SUCCESS	 4.0	
2020-12-31 04:35:33,222	[INFO]	284	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:35:36,887	[INFO]	285	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:35:36,889	[INFO]	286	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:35:37,892	[INFO]	287	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:35:38,941	[INFO]	288	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:35:42,488	[INFO]	289	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 04:35:42,489	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,41 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:35:42,490	[INFO]	290	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:35:42,490	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:35:43,541	[INFO]	291	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:35:47,121	[INFO]	292	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:35:47,123	[INFO]	293	SUCCESS	 4.0	
2020-12-31 04:35:50,596	[INFO]	294	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:35:50,598	[INFO]	295	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '>'})
2020-12-31 04:35:50,598	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:35:50,599	[INFO]	296	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '>'})
2020-12-31 04:35:54,113	[INFO]	297	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '>'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:35:54,115	[INFO]	298	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:35:54,116	[INFO]	299	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:35:54,117	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:35:54,117	[INFO]	300	SUCCESS	 4.0	
2020-12-31 04:35:55,157	[INFO]	301	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:35:56,196	[INFO]	302	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:35:57,201	[INFO]	303	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:35:58,228	[INFO]	304	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:35:59,257	[INFO]	305	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:36:00,313	[INFO]	306	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:36:00,315	[INFO]	307	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:36:00,317	[INFO]	308	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:36:00,317	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:36:01,337	[INFO]	309	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:36:01,338	[INFO]	310	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:36:01,339	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:36:01,339	[INFO]	311	SUCCESS	 4.0	
2020-12-31 04:36:01,340	[INFO]	312	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:36:02,388	[INFO]	313	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:36:03,409	[INFO]	314	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:36:04,443	[INFO]	315	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:36:05,467	[INFO]	316	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 04:36:06,533	[INFO]	317	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:36:07,585	[INFO]	318	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 04:36:07,586	[INFO]	319	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:36:07,587	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:36:07,588	[INFO]	320	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:36:07,588	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:36:08,587	[INFO]	321	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:36:08,588	[INFO]	322	SUCCESS	 4.0	
2020-12-31 04:36:12,055	[INFO]	323	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:36:15,518	[INFO]	324	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:36:15,519	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,41 ****
--- 32,44 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }
  
+         int upleft, upright;
+ 
          return rows;
      }
  }

2020-12-31 04:36:16,562	[INFO]	325	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:36:16,563	[INFO]	326	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:36:16,564	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:36:16,564	[INFO]	327	SUCCESS	 4.0	
2020-12-31 04:36:17,606	[INFO]	328	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:36:18,620	[INFO]	329	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:36:22,111	[INFO]	330	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:36:22,113	[INFO]	331	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:36:22,113	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:36:23,143	[INFO]	332	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:36:23,147	[INFO]	333	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:36:24,175	[INFO]	334	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:36:25,244	[INFO]	335	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:36:25,246	[INFO]	336	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:36:25,247	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:36:26,281	[INFO]	337	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 04:36:27,327	[INFO]	338	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 04:36:28,395	[INFO]	339	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:36:28,396	[INFO]	340	SUCCESS	 4.0	
2020-12-31 04:36:29,427	[INFO]	341	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 04:36:30,491	[INFO]	342	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:36:31,546	[INFO]	343	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:36:32,556	[INFO]	344	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 04:36:36,033	[INFO]	345	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:36:36,034	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,36 ****
--- 27,38 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     upright = 0;
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:36:39,510	[INFO]	346	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:36:40,548	[INFO]	347	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:36:41,611	[INFO]	348	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:36:41,613	[INFO]	349	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:36:41,613	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:36:41,614	[INFO]	350	SUCCESS	 4.0	
2020-12-31 04:36:45,090	[INFO]	351	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:36:45,092	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,41 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:36:48,579	[INFO]	352	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:36:49,593	[INFO]	353	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:36:49,595	[INFO]	354	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:36:49,595	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:36:50,660	[INFO]	355	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 04:36:50,661	[INFO]	356	SUCCESS	 4.0	
2020-12-31 04:36:51,716	[INFO]	357	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:36:52,740	[INFO]	358	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 04:36:56,169	[INFO]	359	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '>='})
2020-12-31 04:36:59,604	[INFO]	360	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:37:03,066	[INFO]	361	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 04:37:03,067	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upright = rows.get(r-1).get(c);
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
***************
*** 32,37 ****
--- 33,39 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:37:03,069	[INFO]	362	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:37:03,069	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upright = rows.get(r-1).get(c);
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
***************
*** 32,37 ****
--- 33,39 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:37:03,070	[INFO]	363	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 04:37:03,071	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upright = rows.get(r-1).get(c);
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
***************
*** 32,37 ****
--- 33,39 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:37:03,072	[INFO]	364	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:37:03,072	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:37:04,100	[INFO]	365	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:37:04,101	[INFO]	366	SUCCESS	 4.0	
2020-12-31 04:37:05,119	[INFO]	367	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:37:08,647	[INFO]	368	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 04:37:08,650	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 28,36 ****
--- 28,38 ----
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
+                     upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:37:09,720	[INFO]	369	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:37:09,724	[INFO]	370	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:37:09,724	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:37:13,191	[INFO]	371	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 04:37:14,169	[INFO]	372	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:37:15,230	[INFO]	373	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:37:15,232	[INFO]	374	SUCCESS	 4.0	
2020-12-31 04:37:16,223	[INFO]	375	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:37:17,257	[INFO]	376	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 04:37:18,267	[INFO]	377	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:37:19,323	[INFO]	378	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:37:20,361	[INFO]	379	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:37:21,185	[INFO]	380	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:37:22,199	[INFO]	381	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:37:23,261	[INFO]	382	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:37:24,283	[INFO]	383	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:37:25,350	[INFO]	384	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:37:26,359	[INFO]	385	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:37:27,378	[INFO]	386	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:37:28,418	[INFO]	387	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:37:29,444	[INFO]	388	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:37:32,953	[INFO]	389	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '=='})
2020-12-31 04:37:33,985	[INFO]	390	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:37:37,509	[INFO]	391	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 04:37:38,514	[INFO]	392	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:37:42,040	[INFO]	393	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:37:43,075	[INFO]	394	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:37:43,077	[INFO]	395	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:37:43,078	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:37:43,078	[INFO]	396	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:37:43,079	[INFO]	397	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:37:43,080	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:37:46,568	[INFO]	398	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 04:37:46,569	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,29 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
***************
*** 32,37 ****
--- 35,41 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:37:50,007	[INFO]	399	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 04:37:53,477	[INFO]	400	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 04:37:54,505	[INFO]	401	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 04:37:55,515	[INFO]	402	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:37:55,517	[INFO]	403	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:37:55,517	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:37:55,518	[INFO]	404	SUCCESS	 4.0	
2020-12-31 04:37:59,065	[INFO]	405	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:37:59,066	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,39 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 upleft = 0;
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:37:59,068	[INFO]	406	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:37:59,068	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:37:59,069	[INFO]	407	SUCCESS	 4.0	
2020-12-31 04:38:00,112	[INFO]	408	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:38:01,162	[INFO]	409	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:38:02,213	[INFO]	410	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 04:38:05,748	[INFO]	411	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 04:38:09,317	[INFO]	412	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:38:10,335	[INFO]	413	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 04:38:10,338	[INFO]	414	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:38:10,338	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:38:11,351	[INFO]	415	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 04:38:11,353	[INFO]	416	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:38:11,353	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:38:11,354	[INFO]	417	SUCCESS	 4.0	
2020-12-31 04:38:14,879	[INFO]	418	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 04:38:15,893	[INFO]	419	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:38:16,903	[INFO]	420	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:38:17,920	[INFO]	421	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:38:18,980	[INFO]	422	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:38:19,829	[INFO]	423	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:38:20,880	[INFO]	424	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:38:21,910	[INFO]	425	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 04:38:22,942	[INFO]	426	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:38:23,968	[INFO]	427	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 04:38:27,502	[INFO]	428	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 04:38:28,541	[INFO]	429	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:38:32,046	[INFO]	430	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 04:38:33,093	[INFO]	431	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:38:34,108	[INFO]	432	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:38:35,138	[INFO]	433	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:38:36,193	[INFO]	434	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:38:37,201	[INFO]	435	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:38:38,226	[INFO]	436	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:38:41,798	[INFO]	437	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:38:45,441	[INFO]	438	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:38:45,442	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,41 ****
--- 32,44 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }
  
+         ArrayList<Integer> row = new ArrayList<Integer>();
+ 
          return rows;
      }
  }

2020-12-31 04:38:48,936	[INFO]	439	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:38:49,805	[INFO]	440	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:38:49,807	[INFO]	441	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:38:49,807	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:38:49,808	[INFO]	442	SUCCESS	 4.0	
2020-12-31 04:38:50,830	[INFO]	443	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:38:51,877	[INFO]	444	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:38:52,894	[INFO]	445	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:38:53,939	[INFO]	446	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:38:54,990	[INFO]	447	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 04:38:56,017	[INFO]	448	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 04:38:57,097	[INFO]	449	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:39:00,599	[INFO]	450	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:39:01,627	[INFO]	451	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:39:05,132	[INFO]	452	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:39:06,138	[INFO]	453	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:39:07,178	[INFO]	454	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:39:08,209	[INFO]	455	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:39:09,264	[INFO]	456	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:39:10,285	[INFO]	457	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:39:10,287	[INFO]	458	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:39:10,287	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:39:11,323	[INFO]	459	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:39:12,406	[INFO]	460	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 04:39:12,408	[INFO]	461	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:39:13,439	[INFO]	462	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:39:14,470	[INFO]	463	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 04:39:14,473	[INFO]	464	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:39:14,474	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:39:15,656	[INFO]	465	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:39:15,657	[INFO]	466	SUCCESS	 4.0	
2020-12-31 04:39:16,755	[INFO]	467	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:39:18,069	[INFO]	468	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 04:39:19,237	[INFO]	469	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:39:20,628	[INFO]	470	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:39:22,060	[INFO]	471	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:39:26,955	[INFO]	472	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:39:30,970	[INFO]	473	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 04:39:30,971	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 28,36 ****
--- 28,38 ----
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
+                     upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:39:32,070	[INFO]	474	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:39:36,447	[INFO]	475	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 04:39:37,607	[INFO]	476	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:39:39,034	[INFO]	477	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:39:39,036	[INFO]	478	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:39:39,037	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:39:39,037	[INFO]	479	SUCCESS	 4.0	
2020-12-31 04:39:40,175	[INFO]	480	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:39:41,737	[INFO]	481	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:39:41,743	[INFO]	482	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<'})
2020-12-31 04:39:41,744	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:39:43,106	[INFO]	483	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:39:43,107	[INFO]	484	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<'})
2020-12-31 04:39:43,109	[INFO]	485	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:39:43,110	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:39:43,111	[INFO]	486	SUCCESS	 4.0	
2020-12-31 04:39:44,530	[INFO]	487	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:39:45,652	[INFO]	488	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:39:45,655	[INFO]	489	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<'})
2020-12-31 04:39:45,656	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:39:46,961	[INFO]	490	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:39:48,382	[INFO]	491	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:39:48,384	[INFO]	492	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<'})
2020-12-31 04:39:48,385	[INFO]	493	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:39:48,385	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:39:48,386	[INFO]	494	SUCCESS	 4.0	
2020-12-31 04:39:49,815	[INFO]	495	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:39:51,123	[INFO]	496	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:39:52,511	[INFO]	497	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:39:53,959	[INFO]	498	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:39:55,036	[INFO]	499	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:39:56,406	[INFO]	500	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:39:56,406	[INFO]	==== END ====
2020-12-31 04:39:56,406	[INFO]	Reason: step budget
2020-12-31 04:39:56,408	[INFO]	
2020-12-31 04:39:56,408	[INFO]	========== EPOCH 5 ==========
2020-12-31 04:39:56,408	[INFO]	==== WARMUP ====
2020-12-31 04:40:00,947	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 04:40:00,947	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 04:40:05,576	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 04:40:05,576	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 04:40:09,079	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 04:40:09,079	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 04:40:12,540	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-31 04:40:12,540	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 04:40:12,540	[INFO]	==== START ====
2020-12-31 04:40:13,585	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:40:14,634	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:40:18,029	[INFO]	3	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 04:40:18,030	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,32 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 04:40:22,203	[INFO]	4	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 04:40:22,204	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,32 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                      upleft = 0;
                  }
                  if (c < r) {
***************
*** 31,36 ****
--- 34,40 ----
                  } else {
                      upright = 0;
                  }
+                 upleft = rows.get(r-1).get(c-1);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:40:25,530	[INFO]	5	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:40:25,531	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             rows.add(init);
              rows.add(row);
          }
  

2020-12-31 04:40:25,533	[INFO]	6	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:40:25,533	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             rows.add(init);
              rows.add(row);
          }
  

2020-12-31 04:40:26,542	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:40:26,543	[INFO]	8	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 04:40:26,544	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,32 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 04:40:30,087	[INFO]	9	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:40:30,089	[INFO]	10	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:40:30,090	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,32 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 04:40:30,090	[INFO]	11	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:40:30,091	[DEBUG]	
2020-12-31 04:40:30,091	[INFO]	12	SUCCESS	+4.0	
2020-12-31 04:40:30,092	[DEBUG]	
2020-12-31 04:40:31,132	[INFO]	13	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:40:34,632	[INFO]	14	SUCCESS	 5.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '<='})
2020-12-31 04:40:39,432	[INFO]	15	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '=='})
2020-12-31 04:40:39,433	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,25 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c==r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);

2020-12-31 04:40:43,537	[INFO]	16	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '=='}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:40:43,539	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,25 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c==r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
!                 return rows;
              }
              rows.add(row);
          }

2020-12-31 04:40:47,987	[INFO]	17	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:40:47,988	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
!                 return rows;
              }
              rows.add(row);
          }

2020-12-31 04:40:51,544	[INFO]	18	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 04:40:51,545	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 rows.add(row);
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 32,38 ----
                  } else {
                      upright = 0;
                  }
!                 return rows;
              }
              rows.add(row);
          }

2020-12-31 04:40:51,546	[INFO]	19	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:40:51,546	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
!                 return rows;
              }
              rows.add(row);
          }

2020-12-31 04:40:52,561	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 04:40:56,109	[INFO]	21	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '<='})
2020-12-31 04:40:56,110	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,27 ****
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c <= 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
!                 return rows;
              }
              rows.add(row);
          }

2020-12-31 04:40:59,587	[INFO]	22	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '<='})
2020-12-31 04:40:59,588	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,27 ****
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c <= 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 04:40:59,590	[INFO]	23	SUCCESS	+4.0	
2020-12-31 04:40:59,590	[DEBUG]	
2020-12-31 04:41:00,642	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 04:41:00,644	[INFO]	25	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:41:00,644	[DEBUG]	
2020-12-31 04:41:01,686	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:41:01,687	[INFO]	27	SUCCESS	+4.0	
2020-12-31 04:41:01,687	[DEBUG]	
2020-12-31 04:41:02,718	[INFO]	28	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:41:06,227	[INFO]	29	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '>='})
2020-12-31 04:41:06,228	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,25 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c>=r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);

2020-12-31 04:41:06,229	[INFO]	30	SUCCESS	+4.0	
2020-12-31 04:41:06,229	[DEBUG]	
2020-12-31 04:41:07,220	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:41:10,665	[INFO]	32	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:41:10,668	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,39 ----
                  }
                  row.add(upleft+upright);
              }
+             init.add(1);
              rows.add(row);
          }
  

2020-12-31 04:41:14,169	[INFO]	33	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:41:14,170	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,38 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
  
--- 31,41 ----
                  } else {
                      upright = 0;
                  }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 }
              }
+             init.add(1);
              rows.add(row);
          }
  

2020-12-31 04:41:15,146	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:41:15,147	[INFO]	35	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:41:15,148	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,38 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
  
--- 31,41 ----
                  } else {
                      upright = 0;
                  }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 }
              }
+             init.add(1);
              rows.add(row);
          }
  

2020-12-31 04:41:16,193	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:41:17,218	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:41:18,382	[INFO]	38	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:41:22,992	[INFO]	39	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:41:22,993	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,39 ----
                  } else {
                      upright = 0;
                  }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 }
              }
              rows.add(row);
          }

2020-12-31 04:41:24,381	[INFO]	40	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:41:28,972	[INFO]	41	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:41:28,974	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,28 ****
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
--- 21,28 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
                  } else {
                      upleft = 0;
                  }
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,39 ----
                  } else {
                      upright = 0;
                  }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 }
              }
              rows.add(row);
          }

2020-12-31 04:41:28,976	[INFO]	42	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:41:28,977	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,28 ****
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
--- 21,28 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
                  } else {
                      upleft = 0;
                  }
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,39 ----
                  } else {
                      upright = 0;
                  }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 }
              }
              rows.add(row);
          }

2020-12-31 04:41:30,315	[INFO]	43	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:41:33,853	[INFO]	44	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '=='})
2020-12-31 04:41:33,854	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,28 ****
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
--- 21,28 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c == r) {
!                     upright = rows.get(r-1).get(c);
                  } else {
                      upleft = 0;
                  }
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,39 ----
                  } else {
                      upright = 0;
                  }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 }
              }
              rows.add(row);
          }

2020-12-31 04:41:34,877	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '=='})
2020-12-31 04:41:35,923	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:41:39,357	[INFO]	47	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '=='})
2020-12-31 04:41:39,358	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,27 ****
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c == 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,39 ----
                  } else {
                      upright = 0;
                  }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 }
              }
              rows.add(row);
          }

2020-12-31 04:41:42,904	[INFO]	48	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '=='})
2020-12-31 04:41:42,906	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,27 ****
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c == 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 04:41:43,924	[INFO]	49	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 04:41:44,948	[INFO]	50	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '=='}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:41:45,985	[INFO]	51	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '=='}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:41:45,986	[INFO]	52	SUCCESS	+4.0	
2020-12-31 04:41:45,987	[DEBUG]	
2020-12-31 04:41:49,475	[INFO]	53	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:41:49,476	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,39 ----
                  }
                  row.add(upleft+upright);
              }
+             int upleft, upright;
              rows.add(row);
          }
  

2020-12-31 04:41:50,485	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:41:50,486	[INFO]	55	SUCCESS	+4.0	
2020-12-31 04:41:50,486	[DEBUG]	
2020-12-31 04:41:51,511	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:41:55,015	[INFO]	57	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:41:55,016	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 15,20 ****
--- 15,38 ----
          ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();
          ArrayList<Integer> init = new ArrayList<Integer>();
          init.add(1);
+         for (int r=1; r<n; r++) {
+             ArrayList<Integer> row = new ArrayList<Integer>();
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             rows.add(row);
+         }
          rows.add(init);
  
          for (int r=1; r<n; r++) {

2020-12-31 04:41:55,017	[INFO]	58	SUCCESS	+4.0	
2020-12-31 04:41:55,017	[DEBUG]	
2020-12-31 04:41:56,029	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:41:57,063	[INFO]	60	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:41:58,097	[INFO]	61	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:41:59,117	[INFO]	62	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:42:02,635	[INFO]	63	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:42:02,636	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 36,41 ****
--- 36,43 ----
              rows.add(row);
          }
  
+         int upleft, upright;
+ 
          return rows;
      }
  }

2020-12-31 04:42:02,637	[INFO]	64	SUCCESS	+4.0	
2020-12-31 04:42:02,638	[DEBUG]	
2020-12-31 04:42:03,651	[INFO]	65	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:42:07,075	[INFO]	66	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:42:07,076	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
!                 upleft = rows.get(r-1).get(c-1);
              }
              rows.add(row);
          }

2020-12-31 04:42:07,076	[INFO]	67	SUCCESS	+4.0	
2020-12-31 04:42:07,077	[DEBUG]	
2020-12-31 04:42:08,101	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:42:09,134	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:42:10,183	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:42:13,649	[INFO]	71	SUCCESS	 5.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:42:13,654	[INFO]	72	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '<'})
2020-12-31 04:42:13,655	[DEBUG]	
2020-12-31 04:42:14,655	[INFO]	73	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 04:42:18,096	[INFO]	74	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '<'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:42:18,097	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,33 ****
                      upleft = 0;
                  }
                  if (c < r) {
!                     upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
--- 27,33 ----
                      upleft = 0;
                  }
                  if (c < r) {
!                     return rows;
                  } else {
                      upright = 0;
                  }

2020-12-31 04:42:19,113	[INFO]	75	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '<'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:42:19,115	[INFO]	76	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '<'})
2020-12-31 04:42:19,115	[DEBUG]	
2020-12-31 04:42:19,116	[INFO]	77	SUCCESS	+4.0	
2020-12-31 04:42:19,116	[DEBUG]	
2020-12-31 04:42:22,611	[INFO]	78	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '<='})
2020-12-31 04:42:22,612	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,25 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<=r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);

2020-12-31 04:42:22,613	[INFO]	==== END ====
2020-12-31 04:42:22,613	[INFO]	Reason: target fitness reached
2020-12-31 04:42:22,614	[INFO]	
2020-12-31 04:42:22,614	[INFO]	========== EPOCH 6 ==========
2020-12-31 04:42:22,614	[INFO]	==== WARMUP ====
2020-12-31 04:42:26,130	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 04:42:26,130	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 04:42:29,571	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 04:42:29,571	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 04:42:33,051	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 04:42:33,052	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 04:42:36,559	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-31 04:42:36,559	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 04:42:36,559	[INFO]	==== START ====
2020-12-31 04:42:37,564	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:42:38,595	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:42:39,640	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:42:43,154	[INFO]	4	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '>'})
2020-12-31 04:42:43,155	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 17,23 ****
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
--- 17,23 ----
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r>n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;

2020-12-31 04:42:44,170	[INFO]	5	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '>'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:42:44,171	[INFO]	6	SUCCESS	+4.0	
2020-12-31 04:42:44,172	[DEBUG]	
2020-12-31 04:42:45,189	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:42:46,226	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:42:47,222	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:42:48,227	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:42:51,993	[INFO]	11	SUCCESS	 5.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:42:53,010	[INFO]	12	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 04:42:54,070	[INFO]	13	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:42:57,535	[INFO]	14	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:42:57,536	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             init.add(1);
              rows.add(row);
          }
  

2020-12-31 04:42:57,537	[INFO]	15	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:42:57,537	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             init.add(1);
              rows.add(row);
          }
  

2020-12-31 04:42:57,538	[INFO]	16	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:42:57,539	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             init.add(1);
              rows.add(row);
          }
  

2020-12-31 04:42:57,540	[INFO]	17	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:42:57,540	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             init.add(1);
              rows.add(row);
          }
  

2020-12-31 04:42:57,541	[INFO]	18	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:42:57,542	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             init.add(1);
              rows.add(row);
          }
  

2020-12-31 04:42:57,542	[INFO]	19	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:42:57,543	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             init.add(1);
              rows.add(row);
          }
  

2020-12-31 04:42:58,554	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 04:42:59,540	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:42:59,541	[INFO]	22	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:42:59,541	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             init.add(1);
              rows.add(row);
          }
  

2020-12-31 04:43:03,025	[INFO]	23	SUCCESS	 5.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:43:03,026	[INFO]	24	SUCCESS	+4.0	
2020-12-31 04:43:03,026	[DEBUG]	
2020-12-31 04:43:04,041	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:43:05,078	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:43:06,124	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:43:06,126	[INFO]	28	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:43:06,126	[DEBUG]	
2020-12-31 04:43:07,159	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:43:07,160	[INFO]	30	SUCCESS	+4.0	
2020-12-31 04:43:07,160	[DEBUG]	
2020-12-31 04:43:10,642	[INFO]	31	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:43:10,643	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 15,20 ****
--- 15,38 ----
          ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();
          ArrayList<Integer> init = new ArrayList<Integer>();
          init.add(1);
+         for (int r=1; r<n; r++) {
+             ArrayList<Integer> row = new ArrayList<Integer>();
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             rows.add(row);
+         }
          rows.add(init);
  
          for (int r=1; r<n; r++) {

2020-12-31 04:43:11,677	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:43:11,678	[INFO]	33	SUCCESS	+4.0	
2020-12-31 04:43:11,678	[DEBUG]	
2020-12-31 04:43:12,704	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:43:13,791	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:43:14,795	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:43:15,837	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:43:16,861	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:43:17,860	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 04:43:21,412	[INFO]	40	SUCCESS	 5.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '=='})
2020-12-31 04:43:22,393	[INFO]	41	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:43:23,426	[INFO]	42	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:43:26,979	[INFO]	43	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 04:43:26,980	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(init);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:43:26,981	[INFO]	44	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:43:26,981	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(init);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:43:28,000	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:43:28,001	[INFO]	46	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:43:28,002	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(init);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:43:29,027	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:43:29,029	[INFO]	48	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 04:43:29,030	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(init);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:43:30,077	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 04:43:30,078	[INFO]	50	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:43:30,079	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(init);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:43:31,151	[INFO]	51	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:43:31,153	[INFO]	52	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 04:43:31,154	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(init);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:43:31,157	[INFO]	53	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 04:43:31,158	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(init);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:43:31,160	[INFO]	54	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:43:31,161	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(init);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:43:31,163	[INFO]	55	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:43:31,163	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(init);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:43:31,164	[INFO]	56	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:43:31,165	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(init);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:43:31,166	[INFO]	57	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 04:43:31,167	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(init);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:43:31,168	[INFO]	58	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:43:31,169	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(init);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:43:32,163	[INFO]	59	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:43:33,004	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:43:33,007	[INFO]	61	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:43:33,007	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(init);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:43:33,864	[INFO]	62	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:43:33,865	[INFO]	63	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:43:33,866	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(init);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:43:33,867	[INFO]	64	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:43:33,868	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(init);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:43:34,847	[INFO]	65	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:43:34,848	[INFO]	66	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:43:34,849	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(init);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:43:34,850	[INFO]	67	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:43:34,851	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(init);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:43:35,885	[INFO]	68	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:43:35,886	[INFO]	69	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:43:35,887	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(init);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:43:35,888	[INFO]	70	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 04:43:35,889	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(init);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:43:35,890	[INFO]	71	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:43:35,891	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(init);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:43:35,892	[INFO]	72	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:43:35,893	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(init);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:43:35,894	[INFO]	73	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:43:35,895	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(init);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:43:36,899	[INFO]	74	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:43:36,901	[INFO]	75	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:43:36,902	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(init);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:43:36,903	[INFO]	76	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:43:36,904	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(init);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:43:36,905	[INFO]	77	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:43:36,906	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(init);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:43:37,741	[INFO]	78	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:43:37,743	[INFO]	79	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:43:37,744	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(init);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:43:37,745	[INFO]	80	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:43:38,795	[INFO]	81	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 04:43:38,798	[INFO]	82	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:43:38,799	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(init);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:43:38,801	[INFO]	83	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:43:38,802	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(init);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:43:38,804	[INFO]	84	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 04:43:38,804	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(init);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:43:38,806	[INFO]	85	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:43:38,807	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(init);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:43:39,828	[INFO]	86	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 04:43:39,830	[INFO]	87	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 04:43:39,830	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(init);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 04:43:39,831	[INFO]	88	SUCCESS	+4.0	
2020-12-31 04:43:39,831	[DEBUG]	
2020-12-31 04:43:40,855	[INFO]	89	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 04:43:41,933	[INFO]	90	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:43:42,964	[INFO]	91	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:43:46,465	[INFO]	92	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:43:46,466	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,35 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     upleft = 0;
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 04:43:46,467	[INFO]	93	SUCCESS	+4.0	
2020-12-31 04:43:46,468	[DEBUG]	
2020-12-31 04:43:47,463	[INFO]	94	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:43:48,488	[INFO]	95	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:43:51,971	[INFO]	96	SUCCESS	 5.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:43:53,033	[INFO]	97	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 04:43:54,092	[INFO]	98	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:43:57,653	[INFO]	99	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '!='})
2020-12-31 04:43:57,654	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,27 ****
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c != 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 04:43:58,669	[INFO]	100	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '!='}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:43:59,694	[INFO]	101	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:43:59,695	[INFO]	102	SUCCESS	+4.0	
2020-12-31 04:43:59,695	[DEBUG]	
2020-12-31 04:44:03,175	[INFO]	103	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 04:44:03,177	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upright = rows.get(r-1).get(c);
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {

2020-12-31 04:44:04,176	[INFO]	104	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:44:04,178	[INFO]	105	SUCCESS	+4.0	
2020-12-31 04:44:04,178	[DEBUG]	
2020-12-31 04:44:05,210	[INFO]	106	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:44:08,673	[INFO]	107	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '=='})
2020-12-31 04:44:08,675	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,27 ****
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c == 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 04:44:08,676	[INFO]	108	SUCCESS	+4.0	
2020-12-31 04:44:08,676	[DEBUG]	
2020-12-31 04:44:12,120	[INFO]	109	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 04:44:12,121	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 28,33 ****
--- 28,34 ----
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
+                     upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }

2020-12-31 04:44:12,121	[INFO]	110	SUCCESS	+4.0	
2020-12-31 04:44:12,122	[DEBUG]	
2020-12-31 04:44:13,127	[INFO]	111	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:44:14,151	[INFO]	112	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 04:44:15,176	[INFO]	113	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:44:18,684	[INFO]	114	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 04:44:18,685	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 rows.add(init);
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {

2020-12-31 04:44:18,685	[INFO]	115	SUCCESS	+4.0	
2020-12-31 04:44:18,686	[DEBUG]	
2020-12-31 04:44:19,572	[INFO]	116	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:44:23,063	[INFO]	117	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:44:23,064	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
+                 }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }

2020-12-31 04:44:23,065	[INFO]	118	SUCCESS	+4.0	
2020-12-31 04:44:23,065	[DEBUG]	
2020-12-31 04:44:24,084	[INFO]	119	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:44:25,126	[INFO]	120	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:44:26,178	[INFO]	121	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:44:27,253	[INFO]	122	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:44:28,312	[INFO]	123	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:44:29,350	[INFO]	124	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:44:30,397	[INFO]	125	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:44:33,899	[INFO]	126	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:44:33,900	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,30 ****
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
--- 24,30 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     return rows;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);

2020-12-31 04:44:37,395	[INFO]	127	SUCCESS	 5.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:44:37,396	[INFO]	128	SUCCESS	+4.0	
2020-12-31 04:44:37,396	[DEBUG]	
2020-12-31 04:44:38,428	[INFO]	129	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:44:41,950	[INFO]	130	SUCCESS	*3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:44:41,951	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:44:41,952	[INFO]	131	SUCCESS	 4.0	
2020-12-31 04:44:45,508	[INFO]	132	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:44:45,510	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,55 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:44:46,551	[INFO]	133	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:44:47,608	[INFO]	134	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:44:47,610	[INFO]	135	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:44:47,610	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:44:48,448	[INFO]	136	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:44:48,449	[INFO]	137	SUCCESS	 4.0	
2020-12-31 04:44:51,931	[INFO]	138	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:44:52,956	[INFO]	139	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 04:44:54,006	[INFO]	140	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 04:44:55,050	[INFO]	141	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:44:56,107	[INFO]	142	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:44:57,140	[INFO]	143	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:44:58,171	[INFO]	144	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:44:59,207	[INFO]	145	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 04:45:02,720	[INFO]	146	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:45:03,729	[INFO]	147	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:45:04,771	[INFO]	148	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 04:45:05,768	[INFO]	149	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:45:06,801	[INFO]	150	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:45:07,625	[INFO]	151	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:45:08,698	[INFO]	152	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:45:09,763	[INFO]	153	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:45:10,824	[INFO]	154	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:45:11,860	[INFO]	155	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:45:12,911	[INFO]	156	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:45:13,986	[INFO]	157	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:45:14,838	[INFO]	158	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:45:15,864	[INFO]	159	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:45:19,349	[INFO]	160	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 04:45:20,375	[INFO]	161	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:45:21,463	[INFO]	162	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:45:22,510	[INFO]	163	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 04:45:22,513	[INFO]	164	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:45:23,546	[INFO]	165	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:45:24,608	[INFO]	166	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:45:25,641	[INFO]	167	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:45:26,683	[INFO]	168	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:45:27,714	[INFO]	169	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:45:28,739	[INFO]	170	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:45:29,779	[INFO]	171	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 04:45:30,818	[INFO]	172	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:45:31,842	[INFO]	173	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:45:32,890	[INFO]	174	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:45:33,725	[INFO]	175	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:45:37,404	[INFO]	176	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 04:45:37,406	[INFO]	177	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:45:38,440	[INFO]	178	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:45:39,506	[INFO]	179	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:45:40,563	[INFO]	180	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:45:41,648	[INFO]	181	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 04:45:45,096	[INFO]	182	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 04:45:45,097	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,53 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 upright = rows.get(r-1).get(c);
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:45:46,125	[INFO]	183	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:45:47,160	[INFO]	184	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:45:48,202	[INFO]	185	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:45:49,214	[INFO]	186	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:45:49,217	[INFO]	187	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:45:49,217	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,53 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 upright = rows.get(r-1).get(c);
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:45:52,751	[INFO]	188	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:45:52,753	[INFO]	189	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:45:52,754	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,53 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 upright = rows.get(r-1).get(c);
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:45:52,755	[INFO]	190	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:45:52,756	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,53 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 upright = rows.get(r-1).get(c);
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:45:52,757	[INFO]	191	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:45:52,758	[INFO]	192	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 04:45:52,758	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,53 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 upright = rows.get(r-1).get(c);
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:45:52,759	[INFO]	193	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 04:45:56,215	[INFO]	194	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:45:59,677	[INFO]	195	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:45:59,680	[INFO]	196	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:45:59,680	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:46:00,718	[INFO]	197	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:46:00,721	[INFO]	198	SUCCESS	 4.0	
2020-12-31 04:46:01,761	[INFO]	199	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 04:46:05,193	[INFO]	200	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:46:05,194	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,55 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:46:05,195	[INFO]	201	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:46:05,195	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:46:05,196	[INFO]	202	SUCCESS	 4.0	
2020-12-31 04:46:06,203	[INFO]	203	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:46:06,205	[INFO]	204	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:46:06,205	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:46:06,206	[INFO]	205	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:46:07,260	[INFO]	206	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:46:10,814	[INFO]	207	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 04:46:11,868	[INFO]	208	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:46:12,914	[INFO]	209	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:46:13,927	[INFO]	210	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:46:14,800	[INFO]	211	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:46:15,857	[INFO]	212	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 04:46:16,890	[INFO]	213	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:46:17,934	[INFO]	214	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:46:17,935	[INFO]	215	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:46:17,936	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:46:21,435	[INFO]	216	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:46:21,436	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,53 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 upleft = 0;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:46:25,015	[INFO]	217	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:46:26,051	[INFO]	218	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:46:27,076	[INFO]	219	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 04:46:28,094	[INFO]	220	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:46:29,120	[INFO]	221	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:46:32,637	[INFO]	222	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 04:46:32,641	[INFO]	223	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '>'})
2020-12-31 04:46:32,642	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,53 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 upleft = 0;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:46:32,643	[INFO]	224	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '>'})
2020-12-31 04:46:32,644	[INFO]	225	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:46:32,645	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,53 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 upleft = 0;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:46:36,136	[INFO]	226	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:46:36,137	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,54 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 upleft = 0;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upright = 0;
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:46:37,171	[INFO]	227	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:46:37,175	[INFO]	228	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:46:37,177	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,54 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 upleft = 0;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upright = 0;
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:46:40,664	[INFO]	229	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:46:40,666	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,55 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 upleft = 0;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upright = 0;
+                     upright = 0;
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:46:40,669	[INFO]	230	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:46:40,671	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,55 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 upleft = 0;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upright = 0;
+                     upright = 0;
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:46:40,672	[INFO]	231	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:46:40,673	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,54 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 upleft = 0;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upright = 0;
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:46:40,675	[INFO]	232	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:46:40,676	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,53 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 upleft = 0;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:46:40,677	[INFO]	233	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:46:40,679	[INFO]	234	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:46:40,680	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:46:41,703	[INFO]	235	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:46:41,704	[INFO]	236	SUCCESS	 4.0	
2020-12-31 04:46:45,178	[INFO]	237	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 04:46:45,179	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = rows.get(r-1).get(c);
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:46:46,038	[INFO]	238	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:46:49,538	[INFO]	239	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 04:46:50,574	[INFO]	240	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:46:51,606	[INFO]	241	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 04:46:51,608	[INFO]	242	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:46:51,608	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:46:51,609	[INFO]	243	SUCCESS	 4.0	
2020-12-31 04:46:52,636	[INFO]	244	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:46:56,201	[INFO]	245	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '<='})
2020-12-31 04:46:56,203	[INFO]	246	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 04:46:57,020	[INFO]	247	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:46:57,873	[INFO]	248	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:47:01,359	[INFO]	249	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:47:01,361	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,53 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 upright = 0;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:47:04,892	[INFO]	250	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:47:04,894	[INFO]	251	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:47:04,894	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:47:04,895	[INFO]	252	SUCCESS	 4.0	
2020-12-31 04:47:05,923	[INFO]	253	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 04:47:06,959	[INFO]	254	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:47:08,035	[INFO]	255	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:47:09,086	[INFO]	256	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:47:09,936	[INFO]	257	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 04:47:10,821	[INFO]	258	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:47:11,861	[INFO]	259	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:47:12,877	[INFO]	260	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:47:16,385	[INFO]	261	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:47:16,386	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,53 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = 0;
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:47:16,388	[INFO]	262	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:47:16,388	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:47:16,389	[INFO]	263	SUCCESS	 4.0	
2020-12-31 04:47:17,429	[INFO]	264	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 04:47:18,451	[INFO]	265	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:47:19,482	[INFO]	266	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:47:20,513	[INFO]	267	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:47:21,558	[INFO]	268	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:47:22,602	[INFO]	269	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:47:23,647	[INFO]	270	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:47:24,723	[INFO]	271	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:47:25,551	[INFO]	272	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:47:26,590	[INFO]	273	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:47:30,045	[INFO]	274	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 04:47:31,078	[INFO]	275	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:47:32,111	[INFO]	276	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:47:33,150	[INFO]	277	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:47:34,181	[INFO]	278	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:47:35,227	[INFO]	279	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:47:36,280	[INFO]	280	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:47:37,313	[INFO]	281	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 04:47:38,369	[INFO]	282	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:47:38,371	[INFO]	283	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:47:39,390	[INFO]	284	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:47:42,924	[INFO]	285	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 04:47:43,951	[INFO]	286	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:47:47,494	[INFO]	287	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:47:47,495	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,53 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = 0;
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:47:48,538	[INFO]	288	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:47:52,055	[INFO]	289	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:47:53,081	[INFO]	290	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:47:56,586	[INFO]	291	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '=='})
2020-12-31 04:47:56,590	[INFO]	292	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:47:56,591	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:47:56,593	[INFO]	293	SUCCESS	 4.0	
2020-12-31 04:47:56,597	[INFO]	294	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:47:56,599	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:47:56,601	[INFO]	295	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:47:56,603	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:47:56,605	[INFO]	296	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:47:56,606	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:47:57,582	[INFO]	297	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:47:58,634	[INFO]	298	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:47:58,635	[INFO]	299	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:47:59,669	[INFO]	300	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:47:59,671	[INFO]	301	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:47:59,672	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:48:03,241	[INFO]	302	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:48:03,246	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     return rows;
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:48:04,277	[INFO]	303	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:48:05,353	[INFO]	304	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:48:08,889	[INFO]	305	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:48:09,909	[INFO]	306	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:48:09,911	[INFO]	307	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:48:09,911	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:48:10,909	[INFO]	308	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:48:11,918	[INFO]	309	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:48:15,433	[INFO]	310	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:48:15,434	[INFO]	311	SUCCESS	 4.0	
2020-12-31 04:48:16,288	[INFO]	312	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:48:17,324	[INFO]	313	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 04:48:20,822	[INFO]	314	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:48:24,381	[INFO]	315	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:48:25,442	[INFO]	316	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:48:26,473	[INFO]	317	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:48:26,475	[INFO]	318	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:48:26,476	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:48:30,032	[INFO]	319	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<='})
2020-12-31 04:48:30,033	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c <= r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:48:30,034	[INFO]	320	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<='})
2020-12-31 04:48:30,035	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c <= r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:48:33,532	[INFO]	321	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 04:48:33,533	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,55 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
+                 if (c <= r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:48:37,003	[INFO]	322	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 04:48:37,994	[INFO]	323	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:48:41,589	[INFO]	324	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:48:41,591	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,58 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                 if (c <= r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:48:42,678	[INFO]	325	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:48:43,775	[INFO]	326	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:48:47,343	[INFO]	327	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:48:48,398	[INFO]	328	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:48:49,434	[INFO]	329	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:48:52,974	[INFO]	330	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:48:52,975	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,58 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:48:56,482	[INFO]	331	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:48:56,483	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,55 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:48:56,484	[INFO]	332	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:48:56,485	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:48:56,486	[INFO]	333	SUCCESS	 4.0	
2020-12-31 04:49:00,000	[INFO]	334	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:49:00,867	[INFO]	335	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:49:01,938	[INFO]	336	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:49:05,466	[INFO]	337	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:49:05,467	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,55 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:49:06,483	[INFO]	338	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:49:06,485	[INFO]	339	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:49:06,485	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:49:06,486	[INFO]	340	SUCCESS	 4.0	
2020-12-31 04:49:07,562	[INFO]	341	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:49:08,628	[INFO]	342	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 04:49:09,655	[INFO]	343	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:49:10,683	[INFO]	344	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:49:11,744	[INFO]	345	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:49:15,177	[INFO]	346	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 04:49:16,181	[INFO]	347	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 04:49:17,202	[INFO]	348	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:49:18,238	[INFO]	349	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:49:19,332	[INFO]	350	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:49:22,896	[INFO]	351	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:49:22,897	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,55 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:49:23,931	[INFO]	352	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:49:24,982	[INFO]	353	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:49:26,049	[INFO]	354	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:49:26,051	[INFO]	355	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:49:26,051	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:49:26,052	[INFO]	356	SUCCESS	 4.0	
2020-12-31 04:49:27,118	[INFO]	357	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:49:30,584	[INFO]	358	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:49:34,082	[INFO]	359	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:49:35,117	[INFO]	360	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:49:35,119	[INFO]	361	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 04:49:35,119	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:49:36,135	[INFO]	362	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:49:36,137	[INFO]	363	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:49:36,137	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:49:36,138	[INFO]	364	SUCCESS	 4.0	
2020-12-31 04:49:37,218	[INFO]	365	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:49:38,272	[INFO]	366	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:49:39,292	[INFO]	367	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:49:42,882	[INFO]	368	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:49:42,883	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,53 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 upright = 0;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:49:46,401	[INFO]	369	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:49:47,208	[INFO]	370	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 04:49:48,218	[INFO]	371	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:49:48,221	[INFO]	372	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:49:49,298	[INFO]	373	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:49:49,300	[INFO]	374	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:49:49,301	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:49:49,301	[INFO]	375	SUCCESS	 4.0	
2020-12-31 04:49:52,776	[INFO]	376	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:49:53,827	[INFO]	377	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:49:54,635	[INFO]	378	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:49:58,155	[INFO]	379	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 04:50:01,670	[INFO]	380	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 04:50:01,672	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,55 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:50:01,675	[INFO]	381	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:50:01,676	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:50:02,682	[INFO]	382	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 04:50:06,205	[INFO]	383	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:50:06,207	[INFO]	384	SUCCESS	 4.0	
2020-12-31 04:50:07,176	[INFO]	385	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:50:08,224	[INFO]	386	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:50:09,275	[INFO]	387	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:50:12,819	[INFO]	388	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:50:12,820	[INFO]	389	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:50:12,821	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:50:13,634	[INFO]	390	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:50:14,648	[INFO]	391	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:50:14,649	[INFO]	392	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:50:15,702	[INFO]	393	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:50:15,705	[INFO]	394	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:50:15,706	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:50:15,707	[INFO]	395	SUCCESS	 4.0	
2020-12-31 04:50:16,727	[INFO]	396	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:50:17,758	[INFO]	397	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:50:18,817	[INFO]	398	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:50:18,819	[INFO]	399	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 04:50:18,820	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,55 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:50:18,821	[INFO]	400	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:50:18,822	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:50:19,655	[INFO]	401	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:50:19,656	[INFO]	402	SUCCESS	 4.0	
2020-12-31 04:50:23,103	[INFO]	403	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:50:24,122	[INFO]	404	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:50:25,227	[INFO]	405	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:50:26,298	[INFO]	406	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 04:50:27,317	[INFO]	407	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 04:50:28,377	[INFO]	408	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:50:29,436	[INFO]	409	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:50:30,469	[INFO]	410	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:50:31,504	[INFO]	411	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:50:35,154	[INFO]	412	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:50:35,157	[INFO]	413	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:50:35,159	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:50:35,160	[INFO]	414	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:50:36,557	[INFO]	415	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 04:50:38,009	[INFO]	416	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:50:38,011	[INFO]	417	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:50:38,011	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:50:38,012	[INFO]	418	SUCCESS	 4.0	
2020-12-31 04:50:39,302	[INFO]	419	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:50:40,376	[INFO]	420	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:50:41,463	[INFO]	421	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:50:42,514	[INFO]	422	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:50:43,581	[INFO]	423	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:50:44,454	[INFO]	424	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:50:47,962	[INFO]	425	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:50:49,055	[INFO]	426	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:50:50,091	[INFO]	427	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:50:50,093	[INFO]	428	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:50:51,152	[INFO]	429	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:50:52,122	[INFO]	430	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:50:53,162	[INFO]	431	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:50:54,241	[INFO]	432	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:50:57,730	[INFO]	433	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:50:58,739	[INFO]	434	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:50:58,741	[INFO]	435	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:50:59,807	[INFO]	436	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:51:00,846	[INFO]	437	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 04:51:01,878	[INFO]	438	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 04:51:02,930	[INFO]	439	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:51:06,483	[INFO]	440	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 04:51:07,533	[INFO]	441	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 04:51:08,599	[INFO]	442	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:51:09,633	[INFO]	443	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 04:51:10,668	[INFO]	444	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 04:51:11,698	[INFO]	445	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:51:15,111	[INFO]	446	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:51:15,112	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,53 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upleft = 0;
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:51:16,160	[INFO]	447	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:51:19,713	[INFO]	448	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:51:19,715	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,54 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upleft = 0;
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upleft = 0;
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:51:23,172	[INFO]	449	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 04:51:23,174	[INFO]	450	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:51:23,175	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,53 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upleft = 0;
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:51:26,792	[INFO]	451	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:51:26,793	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,40 ****
--- 33,57 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upleft = 0;
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
+ 
+         int upleft, upright;
  
          return rows;
      }

2020-12-31 04:51:30,227	[INFO]	452	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:51:33,829	[INFO]	453	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:51:33,830	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,40 ****
--- 33,56 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
+ 
+         int upleft, upright;
  
          return rows;
      }

2020-12-31 04:51:34,858	[INFO]	454	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:51:35,899	[INFO]	455	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:51:36,978	[INFO]	456	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:51:40,497	[INFO]	457	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:51:44,051	[INFO]	458	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:51:47,575	[INFO]	459	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '>'})
2020-12-31 04:51:48,606	[INFO]	460	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:51:52,112	[INFO]	461	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:51:55,674	[INFO]	462	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:51:55,675	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:51:55,677	[INFO]	463	SUCCESS	 4.0	
2020-12-31 04:51:56,712	[INFO]	464	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:51:57,715	[INFO]	465	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:51:58,767	[INFO]	466	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:51:58,770	[INFO]	467	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:52:02,388	[INFO]	468	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 04:52:05,910	[INFO]	469	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 04:52:06,895	[INFO]	470	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:52:07,950	[INFO]	471	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:52:09,005	[INFO]	472	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:52:10,065	[INFO]	473	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:52:25,807	[INFO]	474	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '>='})
2020-12-31 04:52:27,171	[INFO]	475	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:52:30,617	[INFO]	476	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:52:31,674	[INFO]	477	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 04:52:32,694	[INFO]	478	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:52:33,764	[INFO]	479	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:52:34,808	[INFO]	480	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:52:35,901	[INFO]	481	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:52:36,951	[INFO]	482	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 04:52:38,003	[INFO]	483	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:52:39,092	[INFO]	484	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:52:40,170	[INFO]	485	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:52:41,250	[INFO]	486	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:52:42,312	[INFO]	487	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:52:43,341	[INFO]	488	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:52:44,386	[INFO]	489	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 04:52:45,443	[INFO]	490	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:52:46,497	[INFO]	491	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:52:47,357	[INFO]	492	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:52:48,187	[INFO]	493	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:52:49,213	[INFO]	494	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:52:52,960	[INFO]	495	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:52:52,961	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:52:53,987	[INFO]	496	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:52:55,055	[INFO]	497	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 04:52:58,543	[INFO]	498	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:52:58,545	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,53 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:53:02,070	[INFO]	499	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 04:53:02,071	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,54 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                     upleft = 0;
+                 }
+                 upright = rows.get(r-1).get(c);
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 04:53:03,079	[INFO]	500	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 04:53:03,080	[INFO]	==== END ====
2020-12-31 04:53:03,080	[INFO]	Reason: step budget
2020-12-31 04:53:03,081	[INFO]	
2020-12-31 04:53:03,081	[INFO]	========== EPOCH 7 ==========
2020-12-31 04:53:03,082	[INFO]	==== WARMUP ====
2020-12-31 04:53:06,566	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 04:53:06,566	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 04:53:10,048	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 04:53:10,048	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 04:53:13,560	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 04:53:13,560	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 04:53:17,033	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-31 04:53:17,033	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 04:53:17,033	[INFO]	==== START ====
2020-12-31 04:53:20,568	[INFO]	1	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 04:53:20,569	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,35 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     rows.add(init);
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 04:53:20,571	[INFO]	2	SUCCESS	+4.0	
2020-12-31 04:53:20,572	[DEBUG]	
2020-12-31 04:53:21,573	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:53:22,575	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:53:26,043	[INFO]	5	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 04:53:26,044	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
!                 upleft = 0;
              }
              rows.add(row);
          }

2020-12-31 04:53:27,086	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:53:28,117	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:53:31,607	[INFO]	8	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:53:31,608	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,28 ****
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
--- 22,30 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
!                     if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 }
                  } else {
                      upleft = 0;
                  }
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 33,39 ----
                  } else {
                      upright = 0;
                  }
!                 upleft = 0;
              }
              rows.add(row);
          }

2020-12-31 04:53:32,617	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:53:33,638	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 04:53:34,682	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:53:35,724	[INFO]	12	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 04:53:35,725	[INFO]	13	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 04:53:35,726	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
!                 upleft = 0;
              }
              rows.add(row);
          }

2020-12-31 04:53:35,727	[INFO]	14	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:53:35,727	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
!                 upleft = 0;
              }
              rows.add(row);
          }

2020-12-31 04:53:36,752	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 04:53:37,768	[INFO]	16	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:53:38,820	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:53:43,026	[INFO]	18	SUCCESS	 5.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:53:43,028	[INFO]	19	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 04:53:43,028	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
!                 upleft = 0;
              }
              rows.add(row);
          }

2020-12-31 04:53:43,029	[INFO]	20	SUCCESS	+4.0	
2020-12-31 04:53:43,029	[DEBUG]	
2020-12-31 04:53:47,758	[INFO]	21	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:53:47,760	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             int upleft, upright;
              rows.add(row);
          }
  

2020-12-31 04:53:47,764	[INFO]	22	SUCCESS	+4.0	
2020-12-31 04:53:47,764	[DEBUG]	
2020-12-31 04:53:49,043	[INFO]	23	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:53:50,114	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:53:51,140	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 04:53:54,640	[INFO]	26	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:53:54,641	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  } else {
                      upleft = 0;
                  }
+                 init.add(1);
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 04:53:58,306	[INFO]	27	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:53:58,307	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,37 ****
                  } else {
                      upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 26,38 ----
                  } else {
                      upleft = 0;
                  }
+                 init.add(1);
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
!                 upright = 0;
              }
              rows.add(row);
          }

2020-12-31 04:54:01,913	[INFO]	28	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:54:01,915	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,37 ****
--- 26,39 ----
                  } else {
                      upleft = 0;
                  }
+                 init.add(1);
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 upright = 0;
              }
              rows.add(row);
          }

2020-12-31 04:54:05,420	[INFO]	29	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:54:05,421	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,36 ****
--- 26,38 ----
                  } else {
                      upleft = 0;
                  }
+                 init.add(1);
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:54:06,455	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:54:06,456	[INFO]	31	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:54:06,457	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  } else {
                      upleft = 0;
                  }
+                 init.add(1);
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 04:54:07,508	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:54:08,713	[INFO]	33	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:54:08,715	[INFO]	34	SUCCESS	+4.0	
2020-12-31 04:54:08,716	[DEBUG]	
2020-12-31 04:54:12,343	[INFO]	35	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 04:54:12,344	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,30 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     upleft = rows.get(r-1).get(c-1);
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 04:54:13,342	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 04:54:13,343	[INFO]	37	SUCCESS	+4.0	
2020-12-31 04:54:13,343	[DEBUG]	
2020-12-31 04:54:14,395	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:54:14,396	[INFO]	39	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:54:14,396	[DEBUG]	
2020-12-31 04:54:15,451	[INFO]	40	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:54:15,452	[INFO]	41	SUCCESS	+4.0	
2020-12-31 04:54:15,452	[DEBUG]	
2020-12-31 04:54:16,482	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:54:17,498	[INFO]	43	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:54:20,999	[INFO]	44	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:54:21,000	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,30 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 04:54:21,001	[INFO]	45	SUCCESS	+4.0	
2020-12-31 04:54:21,002	[DEBUG]	
2020-12-31 04:54:22,048	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:54:23,087	[INFO]	47	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:54:26,642	[INFO]	48	SUCCESS	*3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:54:26,643	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:54:27,630	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:54:28,696	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:54:29,736	[INFO]	51	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:54:29,737	[INFO]	52	SUCCESS	 4.0	
2020-12-31 04:54:33,207	[INFO]	53	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 04:54:34,245	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:54:35,278	[INFO]	55	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 04:54:36,298	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:54:39,924	[INFO]	57	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:54:40,904	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 04:54:41,979	[INFO]	59	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:54:43,021	[INFO]	60	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:54:44,069	[INFO]	61	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:54:45,117	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:54:46,116	[INFO]	63	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 04:54:49,609	[INFO]	64	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:54:49,610	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,36 ****
--- 26,38 ----
                  } else {
                      upleft = 0;
                  }
+                 upright = 0;
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:54:49,611	[INFO]	65	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:54:49,612	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:54:50,614	[INFO]	66	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 04:54:50,616	[INFO]	67	SUCCESS	 4.0	
2020-12-31 04:54:51,653	[INFO]	68	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:54:51,655	[INFO]	69	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 04:54:55,095	[INFO]	70	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 04:54:56,005	[INFO]	71	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:54:57,025	[INFO]	72	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:54:57,898	[INFO]	73	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:54:58,756	[INFO]	74	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 04:54:59,778	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:55:00,830	[INFO]	76	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:55:01,864	[INFO]	77	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:55:02,893	[INFO]	78	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:55:06,394	[INFO]	79	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '=='})
2020-12-31 04:55:09,899	[INFO]	80	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 04:55:09,901	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     upright = rows.get(r-1).get(c);
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
***************
*** 32,37 ****
--- 33,39 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:55:10,941	[INFO]	81	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:55:14,474	[INFO]	82	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 04:55:18,024	[INFO]	83	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:55:18,026	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,27 ****
--- 21,29 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upleft = 0;
                  if (c > 0) {
+                     upright = rows.get(r-1).get(c);
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
***************
*** 32,37 ****
--- 34,40 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:55:21,527	[INFO]	84	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:55:21,528	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,27 ****
--- 21,29 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upleft = 0;
                  if (c > 0) {
+                     upright = rows.get(r-1).get(c);
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
***************
*** 32,41 ****
--- 34,46 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }
  
+         ArrayList<Integer> row = new ArrayList<Integer>();
+ 
          return rows;
      }
  }

2020-12-31 04:55:22,582	[INFO]	85	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:55:26,132	[INFO]	86	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 04:55:29,673	[INFO]	87	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 04:55:29,675	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,27 ****
--- 21,29 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upleft = 0;
                  if (c > 0) {
+                     upright = rows.get(r-1).get(c);
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
***************
*** 29,41 ****
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
!                     upright = 0;
                  }
                  row.add(upleft+upright);
              }
              rows.add(row);
          }
  
          return rows;
      }
  }
--- 31,46 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
!                     upright = rows.get(r-1).get(c);
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);
          }
  
+         ArrayList<Integer> row = new ArrayList<Integer>();
+ 
          return rows;
      }
  }

2020-12-31 04:55:33,145	[INFO]	88	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 04:55:34,176	[INFO]	89	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:55:37,882	[INFO]	90	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:55:37,884	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,41 ****
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
!                     upright = 0;
                  }
                  row.add(upleft+upright);
              }
              rows.add(row);
          }
  
          return rows;
      }
  }
--- 21,48 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upleft = 0;
                  if (c > 0) {
+                     upright = rows.get(r-1).get(c);
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 }
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
!                     upright = rows.get(r-1).get(c);
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);
          }
  
+         ArrayList<Integer> row = new ArrayList<Integer>();
+ 
          return rows;
      }
  }

2020-12-31 04:55:41,814	[INFO]	91	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:55:41,817	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,41 ****
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
!                     upright = 0;
                  }
                  row.add(upleft+upright);
              }
              rows.add(row);
          }
  
          return rows;
      }
  }
--- 21,47 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upleft = 0;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 }
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
!                     upright = rows.get(r-1).get(c);
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);
          }
  
+         ArrayList<Integer> row = new ArrayList<Integer>();
+ 
          return rows;
      }
  }

2020-12-31 04:55:46,228	[INFO]	92	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 04:55:47,272	[INFO]	93	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 04:55:50,841	[INFO]	94	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:55:50,842	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,36 ****
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
!                     upright = 0;
                  }
                  row.add(upleft+upright);
              }
              rows.add(row);
--- 21,40 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upleft = 0;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 }
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
!                     upright = rows.get(r-1).get(c);
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:55:50,844	[INFO]	95	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:55:50,845	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,36 ****
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
!                     upright = 0;
                  }
                  row.add(upleft+upright);
              }
              rows.add(row);
--- 21,40 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upleft = 0;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 }
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
!                     upright = rows.get(r-1).get(c);
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:55:51,899	[INFO]	96	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 04:55:51,901	[INFO]	97	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:55:51,902	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,36 ****
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
!                     upright = 0;
                  }
                  row.add(upleft+upright);
              }
              rows.add(row);
--- 21,40 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upleft = 0;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 }
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
!                     upright = rows.get(r-1).get(c);
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:55:52,936	[INFO]	98	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:55:52,938	[INFO]	99	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:55:52,939	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,36 ****
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
!                     upright = 0;
                  }
                  row.add(upleft+upright);
              }
              rows.add(row);
--- 21,40 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upleft = 0;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 }
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
!                     upright = rows.get(r-1).get(c);
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:55:53,972	[INFO]	100	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:55:57,426	[INFO]	101	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:55:57,427	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,36 ****
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);
              }
              rows.add(row);
--- 21,40 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upleft = 0;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 }
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:55:57,429	[INFO]	102	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:55:57,430	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,36 ****
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);
              }
              rows.add(row);
--- 21,40 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upleft = 0;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 }
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:55:57,431	[INFO]	103	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:55:57,433	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,36 ****
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);
              }
              rows.add(row);
--- 21,40 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upleft = 0;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 }
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:55:58,456	[INFO]	104	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 04:56:02,027	[INFO]	105	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:56:05,502	[INFO]	106	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:56:05,503	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upleft = 0;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
***************
*** 32,37 ****
--- 33,39 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:56:06,531	[INFO]	107	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:56:07,570	[INFO]	108	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:56:07,573	[INFO]	109	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:56:07,574	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upleft = 0;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
***************
*** 32,37 ****
--- 33,39 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:56:08,645	[INFO]	110	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:56:09,668	[INFO]	111	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:56:13,146	[INFO]	112	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:56:14,217	[INFO]	113	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:56:15,260	[INFO]	114	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 04:56:15,262	[INFO]	115	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:56:15,263	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upleft = 0;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
***************
*** 32,37 ****
--- 33,39 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:56:15,264	[INFO]	116	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:56:15,265	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upleft = 0;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
***************
*** 32,37 ****
--- 33,39 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:56:16,260	[INFO]	117	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:56:16,264	[INFO]	118	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:56:16,266	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upleft = 0;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
***************
*** 32,37 ****
--- 33,39 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:56:16,268	[INFO]	119	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:56:16,269	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upleft = 0;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
***************
*** 32,37 ****
--- 33,39 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:56:16,270	[INFO]	120	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:56:16,271	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upleft = 0;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
***************
*** 32,37 ****
--- 33,39 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:56:19,707	[INFO]	121	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:56:19,709	[INFO]	122	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:56:23,218	[INFO]	123	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 04:56:26,766	[INFO]	124	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:56:26,769	[INFO]	125	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:56:26,770	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upleft = 0;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
***************
*** 32,37 ****
--- 33,39 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:56:27,819	[INFO]	126	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:56:27,821	[INFO]	127	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:56:28,836	[INFO]	128	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 04:56:32,397	[INFO]	129	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:56:32,398	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,36 ****
--- 21,39 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upleft = 0;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
                  if (c < r) {
+                     upright = 0;
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:56:32,401	[INFO]	130	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:56:32,403	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,36 ****
--- 21,39 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upleft = 0;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
                  if (c < r) {
+                     upright = 0;
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:56:35,910	[INFO]	131	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:56:36,923	[INFO]	132	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:56:36,925	[INFO]	133	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:56:36,926	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,36 ****
--- 21,39 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upleft = 0;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
                  if (c < r) {
+                     upright = 0;
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:56:36,927	[INFO]	134	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:56:36,928	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,36 ****
--- 21,39 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upleft = 0;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
                  if (c < r) {
+                     upright = 0;
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:56:40,407	[INFO]	135	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:56:40,409	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,36 ****
--- 22,41 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     upright = 0;
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
                  if (c < r) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:56:40,410	[INFO]	136	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:56:40,411	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,36 ****
--- 22,41 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     upright = 0;
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
                  if (c < r) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:56:43,980	[INFO]	137	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:56:45,032	[INFO]	138	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:56:48,549	[INFO]	139	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:56:48,550	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,36 ****
--- 27,40 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:56:52,012	[INFO]	140	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:56:55,501	[INFO]	141	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '!='})
2020-12-31 04:56:55,502	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,36 ****
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);
              }
              rows.add(row);
--- 21,40 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c != 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
                  if (c < r) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:56:59,033	[INFO]	142	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 04:56:59,035	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,36 ****
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);
              }
              rows.add(row);
--- 21,43 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c != 0) {
!                     if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 }
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
                  if (c < r) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:56:59,036	[INFO]	143	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:56:59,037	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,36 ****
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);
              }
              rows.add(row);
--- 21,43 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c != 0) {
!                     if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 }
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
                  if (c < r) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:56:59,890	[INFO]	144	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:57:03,403	[INFO]	145	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:57:03,405	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,36 ****
--- 22,43 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
                  if (c < r) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:57:06,918	[INFO]	146	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:57:07,944	[INFO]	147	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:57:08,991	[INFO]	148	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:57:10,088	[INFO]	149	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:57:10,090	[INFO]	150	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:57:10,091	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,36 ****
--- 22,43 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
                  if (c < r) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:57:10,092	[INFO]	151	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:57:11,128	[INFO]	152	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:57:12,188	[INFO]	153	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:57:12,192	[INFO]	154	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 04:57:13,250	[INFO]	155	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:57:16,745	[INFO]	156	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:57:17,767	[INFO]	157	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:57:18,804	[INFO]	158	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 04:57:22,283	[INFO]	159	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:57:22,285	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,36 ****
--- 21,44 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upright = 0;
                  if (c > 0) {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
                  if (c < r) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:57:23,291	[INFO]	160	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:57:24,317	[INFO]	161	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:57:27,839	[INFO]	162	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:57:27,841	[INFO]	163	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:57:27,842	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,36 ****
--- 21,44 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upright = 0;
                  if (c > 0) {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
                  if (c < r) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:57:27,844	[INFO]	164	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:57:28,868	[INFO]	165	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 04:57:29,888	[INFO]	166	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:57:29,891	[INFO]	167	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:57:29,892	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,36 ****
--- 21,44 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upright = 0;
                  if (c > 0) {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
                  if (c < r) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:57:29,893	[INFO]	168	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:57:29,894	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,36 ****
--- 21,44 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upright = 0;
                  if (c > 0) {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
                  if (c < r) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:57:30,950	[INFO]	169	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 04:57:34,431	[INFO]	170	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:57:34,432	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,27 ****
--- 21,31 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upright = 0;
                  if (c > 0) {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
***************
*** 32,37 ****
--- 36,42 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:57:35,453	[INFO]	171	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:57:38,963	[INFO]	172	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:57:39,991	[INFO]	173	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 04:57:41,057	[INFO]	174	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 04:57:44,617	[INFO]	175	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '=='})
2020-12-31 04:57:48,070	[INFO]	176	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:57:48,072	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,36 ****
--- 21,40 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upright = 0;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
                  if (c < r) {
+                     if (c < r) {
                      upright = rows.get(r-1).get(c);
+                 }
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:57:51,543	[INFO]	177	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 04:57:51,544	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upright = 0;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
***************
*** 32,37 ****
--- 33,39 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:57:51,545	[INFO]	178	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:57:51,546	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upright = 0;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
***************
*** 32,37 ****
--- 33,39 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:57:55,075	[INFO]	179	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:57:58,604	[INFO]	180	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:57:58,605	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:57:58,605	[INFO]	181	SUCCESS	 4.0	
2020-12-31 04:57:59,611	[INFO]	182	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:58:00,630	[INFO]	183	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:58:04,097	[INFO]	184	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:58:07,600	[INFO]	185	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 04:58:08,634	[INFO]	186	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:58:09,654	[INFO]	187	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:58:10,664	[INFO]	188	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:58:14,157	[INFO]	189	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:58:14,159	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     upleft = 0;
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
***************
*** 32,37 ****
--- 33,39 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:58:17,625	[INFO]	190	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:58:21,082	[INFO]	191	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:58:24,551	[INFO]	192	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:58:25,597	[INFO]	193	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 04:58:26,641	[INFO]	194	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 04:58:27,691	[INFO]	195	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:58:27,692	[INFO]	196	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:58:27,693	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:58:28,729	[INFO]	197	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:58:29,548	[INFO]	198	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:58:29,549	[INFO]	199	SUCCESS	 4.0	
2020-12-31 04:58:30,606	[INFO]	200	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:58:34,097	[INFO]	201	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 04:58:37,548	[INFO]	202	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:58:37,549	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,36 ****
--- 26,38 ----
                  } else {
                      upleft = 0;
                  }
+                 upleft = 0;
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:58:38,534	[INFO]	203	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:58:38,535	[INFO]	204	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:58:38,536	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:58:39,419	[INFO]	205	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 04:58:40,449	[INFO]	206	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 04:58:41,511	[INFO]	207	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 04:58:41,513	[INFO]	208	SUCCESS	 4.0	
2020-12-31 04:58:45,092	[INFO]	209	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 04:58:46,179	[INFO]	210	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:58:47,207	[INFO]	211	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 04:58:50,684	[INFO]	212	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 04:58:51,764	[INFO]	213	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 04:58:55,285	[INFO]	214	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 04:58:55,286	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     rows.add(row);
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
***************
*** 32,37 ****
--- 33,39 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:58:58,827	[INFO]	215	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 04:58:58,828	[INFO]	216	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:58:58,829	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:58:58,830	[INFO]	217	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '<'})
2020-12-31 04:58:58,830	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:58:59,860	[INFO]	218	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:58:59,862	[INFO]	219	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:58:59,862	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 04:58:59,863	[INFO]	220	SUCCESS	 4.0	
2020-12-31 04:59:00,681	[INFO]	221	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 04:59:04,184	[INFO]	222	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 04:59:05,212	[INFO]	223	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 04:59:08,640	[INFO]	224	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '>='})
2020-12-31 04:59:08,643	[INFO]	225	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 04:59:12,113	[INFO]	226	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 04:59:13,130	[INFO]	227	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:59:16,604	[INFO]	228	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 04:59:20,053	[INFO]	229	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:59:20,054	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,36 ****
--- 26,38 ----
                  } else {
                      upleft = 0;
                  }
+                 upleft = 0;
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:59:23,541	[INFO]	230	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 04:59:23,542	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,36 ****
--- 22,39 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     rows.add(row);
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
+                 upleft = 0;
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:59:24,618	[INFO]	231	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 04:59:24,620	[INFO]	232	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:59:24,620	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,36 ****
--- 26,38 ----
                  } else {
                      upleft = 0;
                  }
+                 upleft = 0;
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:59:24,622	[INFO]	233	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:59:24,622	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,36 ****
--- 26,38 ----
                  } else {
                      upleft = 0;
                  }
+                 upleft = 0;
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:59:25,654	[INFO]	234	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 04:59:29,161	[INFO]	235	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:59:32,656	[INFO]	236	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 04:59:36,097	[INFO]	237	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '<='})
2020-12-31 04:59:36,099	[INFO]	238	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:59:36,100	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,36 ****
--- 26,38 ----
                  } else {
                      upleft = 0;
                  }
+                 upleft = 0;
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:59:36,101	[INFO]	239	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 04:59:36,102	[INFO]	240	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 04:59:36,102	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,36 ****
--- 26,38 ----
                  } else {
                      upleft = 0;
                  }
+                 upleft = 0;
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:59:37,117	[INFO]	241	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:59:40,601	[INFO]	242	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:59:40,603	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,36 ****
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);
              }
              rows.add(row);
--- 24,40 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
                  }
+                 }
+                 upleft = 0;
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:59:44,123	[INFO]	243	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:59:44,124	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,36 ****
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);
              }
              rows.add(row);
--- 22,41 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     upleft = 0;
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
                  }
+                 }
+                 upleft = 0;
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:59:45,140	[INFO]	244	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 04:59:46,187	[INFO]	245	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 04:59:46,189	[INFO]	246	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:59:46,190	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,36 ****
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);
              }
              rows.add(row);
--- 22,41 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     upleft = 0;
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
                  }
+                 }
+                 upleft = 0;
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:59:47,052	[INFO]	247	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 04:59:50,650	[INFO]	248	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:59:50,652	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,36 ****
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);
              }
              rows.add(row);
--- 22,42 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     upleft = 0;
+                     upleft = 0;
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
                  }
+                 }
+                 upleft = 0;
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:59:51,666	[INFO]	249	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 04:59:52,763	[INFO]	250	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 04:59:52,765	[INFO]	251	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:59:52,766	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,36 ****
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);
              }
              rows.add(row);
--- 22,41 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     upleft = 0;
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
                  }
+                 }
+                 upleft = 0;
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 04:59:56,303	[INFO]	252	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 04:59:57,313	[INFO]	253	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:00:00,820	[INFO]	254	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:00:00,821	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,36 ****
--- 22,39 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     upleft = 0;
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
+                 upleft = 0;
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:00:04,392	[INFO]	255	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:00:04,394	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     upleft = 0;
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
***************
*** 32,37 ****
--- 33,39 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:00:07,907	[INFO]	256	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:00:11,421	[INFO]	257	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:00:14,895	[INFO]	258	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:00:15,936	[INFO]	259	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:00:15,938	[INFO]	260	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:00:15,938	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:00:16,964	[INFO]	261	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:00:16,966	[INFO]	262	SUCCESS	 4.0	
2020-12-31 05:00:17,994	[INFO]	263	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:00:21,490	[INFO]	264	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:00:25,046	[INFO]	265	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:00:28,504	[INFO]	266	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:00:28,505	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,30 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
***************
*** 32,37 ****
--- 35,41 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:00:28,506	[INFO]	267	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:00:28,507	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:00:29,578	[INFO]	268	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:00:30,613	[INFO]	269	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:00:30,615	[INFO]	270	SUCCESS	 4.0	
2020-12-31 05:00:31,514	[INFO]	271	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:00:32,538	[INFO]	272	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:00:33,558	[INFO]	273	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:00:34,611	[INFO]	274	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 05:00:36,001	[INFO]	275	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:00:37,380	[INFO]	276	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:00:38,514	[INFO]	277	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:00:39,566	[INFO]	278	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:00:41,032	[INFO]	279	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:00:44,830	[INFO]	280	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '=='})
2020-12-31 05:00:45,836	[INFO]	281	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:00:46,862	[INFO]	282	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:00:47,921	[INFO]	283	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:00:48,969	[INFO]	284	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:00:50,024	[INFO]	285	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:00:51,074	[INFO]	286	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:00:52,081	[INFO]	287	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:00:53,107	[INFO]	288	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:00:54,139	[INFO]	289	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:00:55,190	[INFO]	290	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:00:56,225	[INFO]	291	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:00:59,720	[INFO]	292	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:00:59,722	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,36 ****
--- 29,38 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     rows.add(row);
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:01:00,729	[INFO]	293	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:01:01,786	[INFO]	294	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:01:02,808	[INFO]	295	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:01:03,650	[INFO]	296	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:01:03,653	[INFO]	297	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:01:03,653	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:01:03,656	[INFO]	298	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:01:03,658	[INFO]	299	SUCCESS	 4.0	
2020-12-31 05:01:04,676	[INFO]	300	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:01:05,500	[INFO]	301	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:01:06,543	[INFO]	302	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:01:07,574	[INFO]	303	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:01:08,629	[INFO]	304	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:01:09,650	[INFO]	305	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:01:13,156	[INFO]	306	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '>='})
2020-12-31 05:01:14,197	[INFO]	307	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:01:15,232	[INFO]	308	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:01:16,257	[INFO]	309	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:01:19,826	[INFO]	310	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:01:20,820	[INFO]	311	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:01:21,865	[INFO]	312	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:01:22,933	[INFO]	313	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:01:23,962	[INFO]	314	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:01:25,028	[INFO]	315	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:01:26,061	[INFO]	316	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:01:29,561	[INFO]	317	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:01:30,635	[INFO]	318	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:01:31,689	[INFO]	319	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 05:01:31,691	[INFO]	320	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:01:31,692	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:01:31,692	[INFO]	321	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:01:32,703	[INFO]	322	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:01:32,705	[INFO]	323	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:01:32,705	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:01:33,756	[INFO]	324	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:01:33,758	[INFO]	325	SUCCESS	 4.0	
2020-12-31 05:01:37,226	[INFO]	326	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:01:38,259	[INFO]	327	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:01:39,299	[INFO]	328	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 05:01:39,301	[INFO]	329	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 05:01:40,107	[INFO]	330	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:01:41,124	[INFO]	331	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:01:42,194	[INFO]	332	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:01:45,719	[INFO]	333	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:01:46,719	[INFO]	334	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:01:47,733	[INFO]	335	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:01:48,573	[INFO]	336	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:01:49,621	[INFO]	337	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:01:50,654	[INFO]	338	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:01:51,708	[INFO]	339	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:01:52,724	[INFO]	340	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:01:53,744	[INFO]	341	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:01:54,783	[INFO]	342	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:01:55,806	[INFO]	343	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:01:56,806	[INFO]	344	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:02:12,702	[INFO]	345	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '>='})
2020-12-31 05:02:13,760	[INFO]	346	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:02:17,168	[INFO]	347	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:02:17,170	[INFO]	348	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:02:17,170	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:02:17,171	[INFO]	349	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:02:17,172	[INFO]	350	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:02:17,172	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:02:17,173	[INFO]	351	SUCCESS	 4.0	
2020-12-31 05:02:18,174	[INFO]	352	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:02:21,645	[INFO]	353	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:02:21,647	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,36 ****
--- 29,38 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     upright = rows.get(r-1).get(c);
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:02:22,642	[INFO]	354	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:02:26,223	[INFO]	355	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:02:27,211	[INFO]	356	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:02:27,214	[INFO]	357	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:02:27,215	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,36 ****
--- 29,38 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     upright = rows.get(r-1).get(c);
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:02:28,232	[INFO]	358	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:02:28,234	[INFO]	359	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:02:31,844	[INFO]	360	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:02:31,845	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,36 ****
--- 29,39 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     upright = rows.get(r-1).get(c);
                      upright = 0;
                  }
+                 row.add(upleft+upright);
+                 upleft = 0;
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:02:31,846	[INFO]	361	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:02:31,847	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,36 ****
--- 29,39 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     upright = rows.get(r-1).get(c);
                      upright = 0;
                  }
+                 row.add(upleft+upright);
+                 upleft = 0;
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:02:35,334	[INFO]	362	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:02:35,335	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,39 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 upleft = 0;
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:02:36,133	[INFO]	363	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 05:02:39,585	[INFO]	364	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:02:39,587	[INFO]	365	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:02:39,587	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:02:39,588	[INFO]	366	SUCCESS	 4.0	
2020-12-31 05:02:43,107	[INFO]	367	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '!='})
2020-12-31 05:02:43,108	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 17,23 ****
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
--- 17,23 ----
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r!=n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:02:46,616	[INFO]	368	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '!='}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<='})
2020-12-31 05:02:46,617	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 17,23 ****
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
--- 17,23 ----
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r!=n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
***************
*** 26,36 ****
                  } else {
                      upleft = 0;
                  }
!                 if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);
              }
              rows.add(row);
--- 26,37 ----
                  } else {
                      upleft = 0;
                  }
!                 if (c <= r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:02:46,618	[INFO]	369	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '!='})
2020-12-31 05:02:46,618	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 17,23 ****
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
--- 17,23 ----
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r!=n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:02:47,625	[INFO]	370	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '!='}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 05:02:51,110	[INFO]	371	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '!='})
2020-12-31 05:02:51,111	[INFO]	372	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:02:51,112	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:02:54,580	[INFO]	373	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:02:54,581	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,36 ****
--- 26,38 ----
                  } else {
                      upleft = 0;
                  }
+                 upleft = 0;
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:02:58,135	[INFO]	374	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:02:59,156	[INFO]	375	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:02:59,157	[INFO]	376	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:02:59,158	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:02:59,158	[INFO]	377	SUCCESS	 4.0	
2020-12-31 05:03:00,251	[INFO]	378	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:03:03,879	[INFO]	379	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:03:04,947	[INFO]	380	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:03:05,987	[INFO]	381	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:03:06,839	[INFO]	382	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:03:07,828	[INFO]	383	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:03:11,367	[INFO]	384	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:03:11,368	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,36 ****
--- 29,38 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     rows.add(init);
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:03:14,847	[INFO]	385	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:03:15,868	[INFO]	386	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:03:16,949	[INFO]	387	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:03:16,952	[INFO]	388	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:03:16,952	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:03:16,954	[INFO]	389	SUCCESS	 4.0	
2020-12-31 05:03:18,085	[INFO]	390	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:03:19,142	[INFO]	391	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:03:22,642	[INFO]	392	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '=='})
2020-12-31 05:03:23,681	[INFO]	393	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:03:24,719	[INFO]	394	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:03:28,240	[INFO]	395	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:03:29,250	[INFO]	396	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:03:30,303	[INFO]	397	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 05:03:31,354	[INFO]	398	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:03:34,930	[INFO]	399	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:03:34,931	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,30 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     upright = 0;
                      upleft = 0;
                  }
                  if (c < r) {
***************
*** 32,37 ****
--- 33,39 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:03:35,944	[INFO]	400	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:03:35,945	[INFO]	401	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:03:35,946	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:03:39,503	[INFO]	402	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:03:40,521	[INFO]	403	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:03:41,603	[INFO]	404	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 05:03:42,658	[INFO]	405	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:03:42,659	[INFO]	406	SUCCESS	 4.0	
2020-12-31 05:03:43,689	[INFO]	407	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:03:44,704	[INFO]	408	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:03:45,748	[INFO]	409	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 05:03:46,756	[INFO]	410	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:03:47,810	[INFO]	411	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:03:47,812	[INFO]	412	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:03:48,923	[INFO]	413	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:03:49,997	[INFO]	414	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:03:51,050	[INFO]	415	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:03:51,919	[INFO]	416	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:03:55,401	[INFO]	417	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:03:58,889	[INFO]	418	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:03:58,890	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,32 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                      upleft = 0;
                  }
                  if (c < r) {
***************
*** 32,37 ****
--- 35,41 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:03:58,891	[INFO]	419	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:03:58,892	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:04:02,361	[INFO]	420	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:04:02,363	[INFO]	421	SUCCESS	 4.0	
2020-12-31 05:04:03,398	[INFO]	422	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:04:04,445	[INFO]	423	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:04:08,085	[INFO]	424	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:04:09,089	[INFO]	425	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:04:12,538	[INFO]	426	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '=='})
2020-12-31 05:04:16,058	[INFO]	427	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:04:17,052	[INFO]	428	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:04:18,090	[INFO]	429	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:04:19,098	[INFO]	430	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:04:22,619	[INFO]	431	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:04:26,119	[INFO]	432	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:04:29,612	[INFO]	433	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:04:30,640	[INFO]	434	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:04:31,659	[INFO]	435	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:04:31,661	[INFO]	436	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:04:31,662	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:04:31,663	[INFO]	437	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:04:35,242	[INFO]	438	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:04:36,258	[INFO]	439	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 05:04:37,285	[INFO]	440	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:04:38,335	[INFO]	441	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:04:39,323	[INFO]	442	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:04:40,354	[INFO]	443	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:04:40,356	[INFO]	444	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:04:40,356	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:04:41,455	[INFO]	445	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:04:44,954	[INFO]	446	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '=='})
2020-12-31 05:04:45,967	[INFO]	447	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:04:49,479	[INFO]	448	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:04:49,481	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,36 ****
--- 27,40 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:04:52,964	[INFO]	449	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:04:54,008	[INFO]	450	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:04:54,010	[INFO]	451	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:04:54,010	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:04:54,011	[INFO]	452	SUCCESS	 4.0	
2020-12-31 05:04:55,018	[INFO]	453	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 05:04:58,493	[INFO]	454	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:04:58,494	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,36 ****
--- 27,38 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     upright = 0;
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:04:58,495	[INFO]	455	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:04:58,496	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:04:59,510	[INFO]	456	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:04:59,511	[INFO]	457	SUCCESS	 4.0	
2020-12-31 05:05:03,028	[INFO]	458	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:05:04,081	[INFO]	459	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:05:07,614	[INFO]	460	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:05:08,671	[INFO]	461	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:05:09,749	[INFO]	462	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:05:10,775	[INFO]	463	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:05:14,335	[INFO]	464	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:05:15,348	[INFO]	465	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:05:16,377	[INFO]	466	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:05:19,912	[INFO]	467	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:05:19,913	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,36 ****
--- 29,38 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     rows.add(row);
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:05:23,368	[INFO]	468	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:05:24,407	[INFO]	469	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:05:25,440	[INFO]	470	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:05:25,441	[INFO]	471	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:05:25,442	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:05:25,442	[INFO]	472	SUCCESS	 4.0	
2020-12-31 05:05:28,998	[INFO]	473	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:05:28,999	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upright = rows.get(r-1).get(c);
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
***************
*** 32,37 ****
--- 33,39 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:05:30,025	[INFO]	474	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:05:33,520	[INFO]	475	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '<='})
2020-12-31 05:05:33,522	[INFO]	476	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:05:33,522	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:05:33,523	[INFO]	477	SUCCESS	 4.0	
2020-12-31 05:05:37,855	[INFO]	478	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:05:39,272	[INFO]	479	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:05:40,340	[INFO]	480	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:05:41,425	[INFO]	481	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:05:44,896	[INFO]	482	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:05:44,897	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     rows.add(row);
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
***************
*** 32,37 ****
--- 33,39 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:05:48,346	[INFO]	483	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:05:51,876	[INFO]	484	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:05:52,890	[INFO]	485	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:05:53,919	[INFO]	486	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:05:54,987	[INFO]	487	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:05:56,037	[INFO]	488	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:05:56,039	[INFO]	489	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:05:56,039	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:05:57,040	[INFO]	490	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:05:57,041	[INFO]	491	SUCCESS	 4.0	
2020-12-31 05:05:58,113	[INFO]	492	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:06:01,579	[INFO]	493	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:06:01,581	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,41 ****
--- 32,44 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }
  
+         ArrayList<Integer> row = new ArrayList<Integer>();
+ 
          return rows;
      }
  }

2020-12-31 05:06:05,004	[INFO]	494	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:06:06,054	[INFO]	495	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:06:07,076	[INFO]	496	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:06:08,180	[INFO]	497	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:06:08,182	[INFO]	498	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:06:08,182	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,41 ****
--- 32,44 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }
  
+         ArrayList<Integer> row = new ArrayList<Integer>();
+ 
          return rows;
      }
  }

2020-12-31 05:06:08,183	[INFO]	499	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:06:08,184	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:06:08,185	[INFO]	500	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:06:08,185	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:06:08,185	[INFO]	==== END ====
2020-12-31 05:06:08,185	[INFO]	Reason: step budget
2020-12-31 05:06:08,188	[INFO]	
2020-12-31 05:06:08,188	[INFO]	========== EPOCH 8 ==========
2020-12-31 05:06:08,188	[INFO]	==== WARMUP ====
2020-12-31 05:06:11,683	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 05:06:11,684	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 05:06:15,177	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 05:06:15,177	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 05:06:18,635	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 05:06:18,636	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 05:06:22,124	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-31 05:06:22,124	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 05:06:22,124	[INFO]	==== START ====
2020-12-31 05:06:23,171	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:06:26,656	[INFO]	2	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:06:26,657	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 18,23 ****
--- 18,24 ----
          rows.add(init);
  
          for (int r=1; r<n; r++) {
+             rows.add(init);
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;

2020-12-31 05:06:30,240	[INFO]	3	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:06:30,241	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 18,27 ****
--- 18,29 ----
          rows.add(init);
  
          for (int r=1; r<n; r++) {
+             rows.add(init);
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     upleft = 0;
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 05:06:31,234	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:06:31,236	[INFO]	5	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:06:31,236	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 18,23 ****
--- 18,24 ----
          rows.add(init);
  
          for (int r=1; r<n; r++) {
+             rows.add(init);
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;

2020-12-31 05:06:32,301	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:06:32,302	[INFO]	7	SUCCESS	+4.0	
2020-12-31 05:06:32,302	[DEBUG]	
2020-12-31 05:06:33,304	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:06:36,800	[INFO]	9	SUCCESS	+4.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:06:36,801	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 17,40 ****
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r<n; r++) {
!             ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
!             rows.add(row);
!         }
  
          return rows;
      }
--- 17,23 ----
          init.add(1);
          rows.add(init);
  
!         
  
          return rows;
      }

2020-12-31 05:06:36,802	[INFO]	10	SUCCESS	+4.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:06:36,803	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 17,40 ****
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r<n; r++) {
!             ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
!             rows.add(row);
!         }
  
          return rows;
      }
--- 17,23 ----
          init.add(1);
          rows.add(init);
  
!         
  
          return rows;
      }

2020-12-31 05:06:37,780	[INFO]	11	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:06:38,806	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:06:38,808	[INFO]	13	SUCCESS	+4.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:06:38,808	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 17,40 ****
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r<n; r++) {
!             ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
!             rows.add(row);
!         }
  
          return rows;
      }
--- 17,23 ----
          init.add(1);
          rows.add(init);
  
!         
  
          return rows;
      }

2020-12-31 05:06:38,809	[INFO]	14	SUCCESS	+4.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:06:38,809	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 17,40 ****
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r<n; r++) {
!             ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
!             rows.add(row);
!         }
  
          return rows;
      }
--- 17,23 ----
          init.add(1);
          rows.add(init);
  
!         
  
          return rows;
      }

2020-12-31 05:06:39,897	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:06:39,898	[INFO]	16	SUCCESS	+4.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:06:39,899	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 17,40 ****
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r<n; r++) {
!             ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
!             rows.add(row);
!         }
  
          return rows;
      }
--- 17,23 ----
          init.add(1);
          rows.add(init);
  
!         
  
          return rows;
      }

2020-12-31 05:06:40,905	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:06:40,907	[INFO]	18	SUCCESS	+4.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:06:40,907	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 17,40 ****
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r<n; r++) {
!             ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
!             rows.add(row);
!         }
  
          return rows;
      }
--- 17,23 ----
          init.add(1);
          rows.add(init);
  
!         
  
          return rows;
      }

2020-12-31 05:06:40,908	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:06:40,909	[INFO]	20	SUCCESS	+4.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:06:40,909	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 17,40 ****
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r<n; r++) {
!             ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
!             rows.add(row);
!         }
  
          return rows;
      }
--- 17,23 ----
          init.add(1);
          rows.add(init);
  
!         
  
          return rows;
      }

2020-12-31 05:06:40,910	[INFO]	21	SUCCESS	+4.0	
2020-12-31 05:06:40,910	[DEBUG]	
2020-12-31 05:06:41,984	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:06:43,016	[INFO]	23	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 05:06:44,053	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:06:47,557	[INFO]	25	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:06:47,558	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 30,35 ****
--- 30,36 ----
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
+                     upright = 0;
                  }
                  row.add(upleft+upright);
              }

2020-12-31 05:06:47,559	[INFO]	26	SUCCESS	+4.0	
2020-12-31 05:06:47,559	[DEBUG]	
2020-12-31 05:06:48,580	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:06:52,080	[INFO]	28	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:06:52,081	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 15,20 ****
--- 15,38 ----
          ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();
          ArrayList<Integer> init = new ArrayList<Integer>();
          init.add(1);
+         for (int r=1; r<n; r++) {
+             ArrayList<Integer> row = new ArrayList<Integer>();
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             rows.add(row);
+         }
          rows.add(init);
  
          for (int r=1; r<n; r++) {

2020-12-31 05:06:52,082	[INFO]	29	SUCCESS	+4.0	
2020-12-31 05:06:52,082	[DEBUG]	
2020-12-31 05:06:53,100	[INFO]	30	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:06:56,567	[INFO]	31	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:06:56,568	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             init.add(1);
              rows.add(row);
          }
  

2020-12-31 05:06:56,569	[INFO]	32	SUCCESS	+4.0	
2020-12-31 05:06:56,569	[DEBUG]	
2020-12-31 05:06:57,597	[INFO]	33	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:06:58,621	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:07:02,083	[INFO]	35	SUCCESS	 5.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '>='})
2020-12-31 05:07:03,096	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:07:04,113	[INFO]	37	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:07:07,576	[INFO]	38	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:07:07,577	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             rows.add(init);
              rows.add(row);
          }
  

2020-12-31 05:07:07,577	[INFO]	39	SUCCESS	+4.0	
2020-12-31 05:07:07,578	[DEBUG]	
2020-12-31 05:07:11,269	[INFO]	40	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:07:11,272	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
+                 rows.add(row);
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);

2020-12-31 05:07:11,273	[INFO]	41	SUCCESS	+4.0	
2020-12-31 05:07:11,273	[DEBUG]	
2020-12-31 05:07:14,718	[INFO]	42	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '>='})
2020-12-31 05:07:14,719	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,27 ****
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c >= 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 05:07:18,136	[INFO]	43	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:07:18,137	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,27 ****
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c >= 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
***************
*** 31,36 ****
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
+                 upright = 0;
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:07:18,138	[INFO]	44	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '>='})
2020-12-31 05:07:18,138	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,27 ****
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c >= 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 05:07:19,160	[INFO]	45	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:07:20,200	[INFO]	46	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 05:07:21,238	[INFO]	47	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:07:22,277	[INFO]	48	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '>='}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:07:22,278	[INFO]	49	SUCCESS	+4.0	
2020-12-31 05:07:22,279	[DEBUG]	
2020-12-31 05:07:23,317	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:07:24,361	[INFO]	51	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:07:27,913	[INFO]	52	SUCCESS	+4.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:07:27,914	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
!                 
              }
              rows.add(row);
          }

2020-12-31 05:07:31,351	[INFO]	53	SUCCESS	+4.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:07:31,352	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,41 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
  
          return rows;
      }
  }
--- 31,43 ----
                  } else {
                      upright = 0;
                  }
!                 
              }
              rows.add(row);
          }
  
+         ArrayList<Integer> row = new ArrayList<Integer>();
+ 
          return rows;
      }
  }

2020-12-31 05:07:34,822	[INFO]	54	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:07:34,824	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 36,41 ****
--- 36,43 ----
              rows.add(row);
          }
  
+         ArrayList<Integer> row = new ArrayList<Integer>();
+ 
          return rows;
      }
  }

2020-12-31 05:07:34,826	[INFO]	55	SUCCESS	+4.0	
2020-12-31 05:07:34,827	[DEBUG]	
2020-12-31 05:07:35,882	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:07:39,406	[INFO]	57	SUCCESS	 5.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:07:40,412	[INFO]	58	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:07:41,480	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:07:42,511	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:07:43,562	[INFO]	61	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:07:44,576	[INFO]	62	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:07:44,578	[INFO]	63	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:07:44,578	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 18,23 ****
--- 18,24 ----
          rows.add(init);
  
          for (int r=1; r<n; r++) {
+             rows.add(init);
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;

2020-12-31 05:07:44,579	[INFO]	64	SUCCESS	+4.0	
2020-12-31 05:07:44,579	[DEBUG]	
2020-12-31 05:07:45,612	[INFO]	65	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:07:49,133	[INFO]	66	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:07:49,134	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,30 ****
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
--- 24,30 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     upleft = rows.get(r-1).get(c-1);
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);

2020-12-31 05:07:49,135	[INFO]	67	SUCCESS	+4.0	
2020-12-31 05:07:49,135	[DEBUG]	
2020-12-31 05:07:50,157	[INFO]	68	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 05:07:51,175	[INFO]	69	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:07:52,187	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:07:53,214	[INFO]	71	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:07:54,231	[INFO]	72	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:07:57,689	[INFO]	73	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:07:57,691	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     rows.add(init);
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 05:08:01,274	[INFO]	74	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:08:02,301	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:08:05,757	[INFO]	76	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:08:05,758	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 20,27 ****
--- 20,29 ----
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
+                 rows.add(row);
                  int upleft, upright;
                  if (c > 0) {
+                     rows.add(init);
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 05:08:05,760	[INFO]	77	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:08:05,760	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     rows.add(init);
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 05:08:06,777	[INFO]	78	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:08:06,778	[INFO]	79	SUCCESS	+4.0	
2020-12-31 05:08:06,779	[DEBUG]	
2020-12-31 05:08:07,822	[INFO]	80	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:08:08,833	[INFO]	81	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:08:12,304	[INFO]	82	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:08:12,305	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,39 ----
                  } else {
                      upright = 0;
                  }
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 }
              }
              rows.add(row);
          }

2020-12-31 05:08:12,305	[INFO]	83	SUCCESS	+4.0	
2020-12-31 05:08:12,306	[DEBUG]	
2020-12-31 05:08:15,787	[INFO]	84	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:08:15,788	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             int upleft, upright;
              rows.add(row);
          }
  

2020-12-31 05:08:15,789	[INFO]	85	SUCCESS	+4.0	
2020-12-31 05:08:15,790	[DEBUG]	
2020-12-31 05:08:19,253	[INFO]	86	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:08:19,254	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,39 ****
                  }
                  row.add(upleft+upright);
              }
!             rows.add(row);
          }
  
          return rows;
--- 33,39 ----
                  }
                  row.add(upleft+upright);
              }
!             init.add(1);
          }
  
          return rows;

2020-12-31 05:08:20,090	[INFO]	87	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:08:20,091	[INFO]	88	SUCCESS	+4.0	
2020-12-31 05:08:20,091	[DEBUG]	
2020-12-31 05:08:20,092	[INFO]	89	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:08:23,593	[INFO]	90	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:08:23,594	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
!                 upleft = rows.get(r-1).get(c-1);
              }
              rows.add(row);
          }

2020-12-31 05:08:23,595	[INFO]	91	SUCCESS	+4.0	
2020-12-31 05:08:23,595	[DEBUG]	
2020-12-31 05:08:27,126	[INFO]	92	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:08:27,127	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
!                 upleft = 0;
              }
              rows.add(row);
          }

2020-12-31 05:08:28,144	[INFO]	93	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:08:28,147	[INFO]	94	SUCCESS	+4.0	
2020-12-31 05:08:28,147	[DEBUG]	
2020-12-31 05:08:28,149	[INFO]	95	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:08:28,149	[DEBUG]	
2020-12-31 05:08:28,150	[INFO]	96	SUCCESS	+4.0	
2020-12-31 05:08:28,150	[DEBUG]	
2020-12-31 05:08:31,716	[INFO]	97	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:08:31,717	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,36 ****
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
+                 upright = 0;
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:08:31,719	[INFO]	98	SUCCESS	+4.0	
2020-12-31 05:08:31,720	[DEBUG]	
2020-12-31 05:08:32,671	[INFO]	99	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:08:33,682	[INFO]	100	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:08:34,688	[INFO]	101	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:08:35,692	[INFO]	102	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 05:08:36,725	[INFO]	103	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 05:08:40,156	[INFO]	104	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:08:40,157	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
!                 upright = 0;
              }
              rows.add(row);
          }

2020-12-31 05:08:41,185	[INFO]	105	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:08:44,776	[INFO]	106	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:08:44,778	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,37 ****
                      upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 27,38 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     upleft = rows.get(r-1).get(c-1);
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
!                 upright = 0;
              }
              rows.add(row);
          }

2020-12-31 05:08:45,903	[INFO]	107	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:08:45,905	[INFO]	108	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:08:45,905	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
!                 upright = 0;
              }
              rows.add(row);
          }

2020-12-31 05:08:46,923	[INFO]	109	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:08:46,924	[INFO]	110	SUCCESS	+4.0	
2020-12-31 05:08:46,925	[DEBUG]	
2020-12-31 05:08:47,956	[INFO]	111	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:08:51,520	[INFO]	112	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:08:51,521	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     rows.add(row);
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 05:08:52,561	[INFO]	113	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:08:52,563	[INFO]	114	SUCCESS	+4.0	
2020-12-31 05:08:52,563	[DEBUG]	
2020-12-31 05:08:56,011	[INFO]	115	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '=='})
2020-12-31 05:08:56,012	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,25 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c==r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);

2020-12-31 05:08:56,013	[INFO]	116	SUCCESS	+4.0	
2020-12-31 05:08:56,013	[DEBUG]	
2020-12-31 05:08:57,027	[INFO]	117	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:08:57,902	[INFO]	118	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:08:58,966	[INFO]	119	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:08:59,994	[INFO]	120	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:09:01,026	[INFO]	121	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:09:02,071	[INFO]	122	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:09:03,139	[INFO]	123	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:09:04,133	[INFO]	124	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:09:05,163	[INFO]	125	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:09:06,179	[INFO]	126	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:09:07,225	[INFO]	127	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:09:08,236	[INFO]	128	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:09:11,712	[INFO]	129	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:09:11,713	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 36,41 ****
--- 36,60 ----
              rows.add(row);
          }
  
+         for (int r=1; r<n; r++) {
+             ArrayList<Integer> row = new ArrayList<Integer>();
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             rows.add(row);
+         }
+ 
          return rows;
      }
  }

2020-12-31 05:09:15,157	[INFO]	130	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:09:15,159	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 36,41 ****
--- 36,61 ----
              rows.add(row);
          }
  
+         for (int r=1; r<n; r++) {
+             ArrayList<Integer> row = new ArrayList<Integer>();
+             for (int c=0; c<r; c++) {
+                 rows.add(row);
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             rows.add(row);
+         }
+ 
          return rows;
      }
  }

2020-12-31 05:09:16,212	[INFO]	131	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:09:19,672	[INFO]	132	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:09:19,674	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
+                 rows.add(row);
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);

2020-12-31 05:09:20,698	[INFO]	133	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:09:21,711	[INFO]	134	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:09:21,712	[INFO]	135	SUCCESS	+4.0	
2020-12-31 05:09:21,712	[DEBUG]	
2020-12-31 05:09:25,238	[INFO]	136	SUCCESS	 5.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '=='})
2020-12-31 05:09:26,248	[INFO]	137	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:09:27,316	[INFO]	138	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:09:30,905	[INFO]	139	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '>='})
2020-12-31 05:09:30,905	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,27 ****
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c >= 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 05:09:31,908	[INFO]	140	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:09:31,909	[INFO]	141	SUCCESS	+4.0	
2020-12-31 05:09:31,909	[DEBUG]	
2020-12-31 05:09:35,360	[INFO]	142	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:09:35,361	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             init.add(1);
              rows.add(row);
          }
  

2020-12-31 05:09:35,362	[INFO]	143	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:09:35,363	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             init.add(1);
              rows.add(row);
          }
  

2020-12-31 05:09:38,874	[INFO]	144	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:09:38,875	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     init.add(1);
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 05:09:38,876	[INFO]	145	SUCCESS	+4.0	
2020-12-31 05:09:38,876	[DEBUG]	
2020-12-31 05:09:39,880	[INFO]	146	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:09:40,907	[INFO]	147	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:09:41,986	[INFO]	148	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:09:43,030	[INFO]	149	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:09:44,067	[INFO]	150	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:09:44,925	[INFO]	151	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:09:45,954	[INFO]	152	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:09:46,960	[INFO]	153	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:09:50,429	[INFO]	154	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:09:50,430	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upright = rows.get(r-1).get(c);
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {

2020-12-31 05:09:51,453	[INFO]	155	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:09:51,454	[INFO]	156	SUCCESS	+4.0	
2020-12-31 05:09:51,454	[DEBUG]	
2020-12-31 05:09:52,469	[INFO]	157	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:09:53,478	[INFO]	158	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:09:54,546	[INFO]	159	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:09:55,583	[INFO]	160	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:09:56,640	[INFO]	161	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:09:57,667	[INFO]	162	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:10:01,155	[INFO]	163	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:10:01,157	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
!                 return rows;
              }
              rows.add(row);
          }

2020-12-31 05:10:01,158	[INFO]	164	SUCCESS	+4.0	
2020-12-31 05:10:01,159	[DEBUG]	
2020-12-31 05:10:02,289	[INFO]	165	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:10:03,142	[INFO]	166	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 05:10:04,216	[INFO]	167	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:10:05,224	[INFO]	168	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:10:06,225	[INFO]	169	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:10:07,233	[INFO]	170	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:10:08,239	[INFO]	171	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:10:11,665	[INFO]	172	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:10:11,666	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,30 ****
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
--- 24,30 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     return rows;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);

2020-12-31 05:10:11,667	[INFO]	173	SUCCESS	+4.0	
2020-12-31 05:10:11,667	[DEBUG]	
2020-12-31 05:10:12,649	[INFO]	174	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:10:13,661	[INFO]	175	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:10:17,094	[INFO]	176	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '>'})
2020-12-31 05:10:17,095	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 17,23 ****
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
--- 17,23 ----
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r>n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;

2020-12-31 05:10:17,096	[INFO]	177	SUCCESS	+4.0	
2020-12-31 05:10:17,096	[DEBUG]	
2020-12-31 05:10:18,062	[INFO]	178	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:10:19,064	[INFO]	179	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:10:20,100	[INFO]	180	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:10:21,144	[INFO]	181	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:10:22,143	[INFO]	182	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 05:10:23,155	[INFO]	183	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:10:24,161	[INFO]	184	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:10:24,163	[INFO]	185	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:10:24,163	[DEBUG]	
2020-12-31 05:10:24,164	[INFO]	186	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:10:24,165	[INFO]	187	SUCCESS	+4.0	
2020-12-31 05:10:24,165	[DEBUG]	
2020-12-31 05:10:27,649	[INFO]	188	SUCCESS	*3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:10:27,650	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:10:27,651	[INFO]	189	SUCCESS	 4.0	
2020-12-31 05:10:28,699	[INFO]	190	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 05:10:29,711	[INFO]	191	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:10:33,237	[INFO]	192	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:10:34,292	[INFO]	193	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:10:38,086	[INFO]	194	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '=='})
2020-12-31 05:10:38,945	[INFO]	195	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:10:39,985	[INFO]	196	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:10:41,058	[INFO]	197	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:10:42,132	[INFO]	198	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:10:43,166	[INFO]	199	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:10:46,691	[INFO]	200	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:10:47,734	[INFO]	201	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:10:48,782	[INFO]	202	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:10:48,784	[INFO]	203	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:10:48,784	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:10:49,808	[INFO]	204	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:10:50,846	[INFO]	205	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:10:54,359	[INFO]	206	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:10:54,361	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,51 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 05:10:55,356	[INFO]	207	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 05:10:55,357	[INFO]	208	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:10:55,358	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:10:56,393	[INFO]	209	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:10:57,443	[INFO]	210	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:10:57,445	[INFO]	211	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:10:57,445	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:10:57,446	[INFO]	212	SUCCESS	 4.0	
2020-12-31 05:10:58,502	[INFO]	213	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:11:02,075	[INFO]	214	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:11:05,530	[INFO]	215	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:11:05,531	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,44 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     upright = rows.get(r-1).get(c);
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 05:11:09,047	[INFO]	216	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:11:09,048	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,45 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upright = rows.get(r-1).get(c);
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 05:11:09,050	[INFO]	217	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:11:09,051	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,45 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upright = rows.get(r-1).get(c);
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 05:11:12,549	[INFO]	218	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:11:12,550	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,44 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 05:11:12,551	[INFO]	219	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:11:12,551	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:11:13,591	[INFO]	220	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:11:14,623	[INFO]	221	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:11:14,625	[INFO]	222	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:11:14,626	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:11:14,626	[INFO]	223	SUCCESS	 4.0	
2020-12-31 05:11:15,634	[INFO]	224	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:11:15,636	[INFO]	225	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:11:15,637	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:11:15,638	[INFO]	226	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:11:15,638	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:11:15,639	[INFO]	227	SUCCESS	 4.0	
2020-12-31 05:11:15,640	[INFO]	228	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:11:15,641	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:11:15,642	[INFO]	229	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:11:19,182	[INFO]	230	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:11:19,184	[INFO]	231	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:11:19,184	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:11:19,185	[INFO]	232	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:11:19,186	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:11:19,187	[INFO]	233	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:11:19,187	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:11:20,200	[INFO]	234	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:11:21,257	[INFO]	235	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:11:21,259	[INFO]	236	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:11:21,260	[INFO]	237	SUCCESS	 4.0	
2020-12-31 05:11:22,311	[INFO]	238	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:11:23,331	[INFO]	239	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 05:11:24,358	[INFO]	240	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:11:25,420	[INFO]	241	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 05:11:26,454	[INFO]	242	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:11:29,953	[INFO]	243	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:11:33,470	[INFO]	244	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:11:33,471	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,49 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     upright = rows.get(r-1).get(c);
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 05:11:34,540	[INFO]	245	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:11:38,098	[INFO]	246	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:11:39,147	[INFO]	247	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:11:39,149	[INFO]	248	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:11:39,149	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:11:39,150	[INFO]	249	SUCCESS	 4.0	
2020-12-31 05:11:40,195	[INFO]	250	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:11:41,263	[INFO]	251	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:11:42,328	[INFO]	252	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:11:43,360	[INFO]	253	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:11:43,362	[INFO]	254	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:11:43,362	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:11:44,412	[INFO]	255	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:11:44,414	[INFO]	256	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:11:44,414	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:11:44,415	[INFO]	257	SUCCESS	 4.0	
2020-12-31 05:11:44,416	[INFO]	258	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:11:44,417	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:11:44,418	[INFO]	259	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:11:44,418	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:11:44,419	[INFO]	260	SUCCESS	 4.0	
2020-12-31 05:11:45,457	[INFO]	261	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:11:46,468	[INFO]	262	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:11:47,500	[INFO]	263	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 05:11:51,042	[INFO]	264	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:11:52,057	[INFO]	265	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:11:53,158	[INFO]	266	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:11:54,211	[INFO]	267	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:11:55,227	[INFO]	268	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:11:58,709	[INFO]	269	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:11:59,727	[INFO]	270	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:12:00,745	[INFO]	271	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:12:00,748	[INFO]	272	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 05:12:00,749	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:12:04,241	[INFO]	273	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 16)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:12:04,243	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,32 ****
--- 27,49 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 05:12:04,244	[INFO]	274	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 05:12:04,244	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:12:04,245	[INFO]	275	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:12:04,246	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:12:04,246	[INFO]	276	SUCCESS	 4.0	
2020-12-31 05:12:05,294	[INFO]	277	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:12:06,334	[INFO]	278	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:12:06,336	[INFO]	279	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '<'})
2020-12-31 05:12:06,337	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:12:06,338	[INFO]	280	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:12:06,339	[INFO]	281	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:12:06,339	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:12:07,354	[INFO]	282	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:12:07,355	[INFO]	283	SUCCESS	 4.0	
2020-12-31 05:12:08,394	[INFO]	284	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:12:09,242	[INFO]	285	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:12:10,081	[INFO]	286	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:12:10,925	[INFO]	287	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:12:11,920	[INFO]	288	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:12:12,959	[INFO]	289	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:12:13,987	[INFO]	290	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:12:15,033	[INFO]	291	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:12:16,069	[INFO]	292	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:12:16,071	[INFO]	293	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:12:16,072	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:12:19,557	[INFO]	294	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:12:19,559	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,46 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 05:12:23,026	[INFO]	295	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:12:23,028	[INFO]	296	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:12:23,029	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,46 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 05:12:24,082	[INFO]	297	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:12:27,555	[INFO]	298	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:12:28,576	[INFO]	299	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:12:29,607	[INFO]	300	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:12:30,484	[INFO]	301	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:12:33,997	[INFO]	302	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:12:33,999	[INFO]	303	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:12:34,000	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,46 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 05:12:37,519	[INFO]	304	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:12:40,996	[INFO]	305	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:12:44,497	[INFO]	306	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:12:45,534	[INFO]	307	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 05:12:45,536	[INFO]	308	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:12:45,536	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,46 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 05:12:45,538	[INFO]	309	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:12:45,538	[INFO]	310	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:12:45,539	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:12:45,539	[INFO]	311	SUCCESS	 4.0	
2020-12-31 05:12:46,577	[INFO]	312	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:12:50,124	[INFO]	313	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:12:53,591	[INFO]	314	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:12:54,630	[INFO]	315	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:12:55,669	[INFO]	316	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:12:59,142	[INFO]	317	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:13:00,217	[INFO]	318	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:13:01,225	[INFO]	319	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:13:02,231	[INFO]	320	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:13:03,281	[INFO]	321	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:13:04,314	[INFO]	322	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:13:07,894	[INFO]	323	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:13:07,895	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,40 ****
--- 33,56 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
+ 
+         ArrayList<Integer> row = new ArrayList<Integer>();
  
          return rows;
      }

2020-12-31 05:13:11,387	[INFO]	324	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:13:11,389	[INFO]	325	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:13:11,389	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,40 ****
--- 33,56 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
+ 
+         ArrayList<Integer> row = new ArrayList<Integer>();
  
          return rows;
      }

2020-12-31 05:13:11,390	[INFO]	326	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:13:11,391	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:13:14,857	[INFO]	327	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:13:14,859	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,32 ****
--- 27,49 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 05:13:18,325	[INFO]	328	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:13:19,345	[INFO]	329	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:13:20,397	[INFO]	330	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:13:21,415	[INFO]	331	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:13:21,417	[INFO]	332	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:13:21,418	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:13:21,419	[INFO]	333	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:13:21,419	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:13:21,420	[INFO]	334	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:13:21,421	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:13:21,422	[INFO]	335	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:13:21,422	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:13:22,449	[INFO]	336	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:13:22,450	[INFO]	337	SUCCESS	 4.0	
2020-12-31 05:13:23,352	[INFO]	338	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 05:13:26,844	[INFO]	339	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:13:27,872	[INFO]	340	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:13:28,908	[INFO]	341	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:13:29,789	[INFO]	342	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:13:30,809	[INFO]	343	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:13:31,809	[INFO]	344	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:13:32,847	[INFO]	345	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:13:36,414	[INFO]	346	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:13:39,934	[INFO]	347	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:13:40,949	[INFO]	348	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:13:42,040	[INFO]	349	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:13:43,105	[INFO]	350	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:13:44,114	[INFO]	351	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:13:45,130	[INFO]	352	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:13:48,595	[INFO]	353	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:13:48,597	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,36 ****
--- 31,53 ----
                  } else {
                      upright = 0;
                  }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:13:48,597	[INFO]	354	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:13:48,598	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:13:49,630	[INFO]	355	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:13:49,632	[INFO]	356	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:13:53,110	[INFO]	357	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:13:53,112	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,49 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     upleft = rows.get(r-1).get(c-1);
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 05:13:56,585	[INFO]	358	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:14:00,127	[INFO]	359	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:14:01,128	[INFO]	360	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:14:02,184	[INFO]	361	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:14:05,693	[INFO]	362	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:14:05,695	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,50 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     upleft = rows.get(r-1).get(c-1);
+                     upright = rows.get(r-1).get(c);
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 05:14:06,734	[INFO]	363	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:14:10,182	[INFO]	364	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:14:10,184	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,49 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     upleft = rows.get(r-1).get(c-1);
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 05:14:10,185	[INFO]	365	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:14:10,186	[INFO]	366	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:14:10,186	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,49 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     upleft = rows.get(r-1).get(c-1);
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 05:14:11,214	[INFO]	367	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:14:11,215	[INFO]	368	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:14:11,216	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,49 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     upleft = rows.get(r-1).get(c-1);
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 05:14:11,217	[INFO]	369	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:14:11,217	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:14:11,218	[INFO]	370	SUCCESS	 4.0	
2020-12-31 05:14:12,250	[INFO]	371	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 05:14:15,693	[INFO]	372	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:14:16,521	[INFO]	373	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:14:17,569	[INFO]	374	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:14:18,438	[INFO]	375	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 05:14:21,907	[INFO]	376	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:14:22,942	[INFO]	377	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:14:26,464	[INFO]	378	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '!='})
2020-12-31 05:14:26,465	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 17,24 ****
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
--- 17,38 ----
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r!=n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 05:14:26,466	[INFO]	379	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:14:26,466	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:14:26,467	[INFO]	380	SUCCESS	 4.0	
2020-12-31 05:14:27,494	[INFO]	381	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:14:28,529	[INFO]	382	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:14:29,588	[INFO]	383	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:14:30,606	[INFO]	384	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:14:30,607	[INFO]	385	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '<'})
2020-12-31 05:14:30,608	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:14:30,609	[INFO]	386	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '<'})
2020-12-31 05:14:34,244	[INFO]	387	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '<'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:14:34,246	[INFO]	388	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:14:34,247	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:14:34,247	[INFO]	389	SUCCESS	 4.0	
2020-12-31 05:14:37,679	[INFO]	390	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:14:38,687	[INFO]	391	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 05:14:39,541	[INFO]	392	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:14:40,580	[INFO]	393	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:14:40,581	[INFO]	394	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:14:40,582	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:14:40,583	[INFO]	395	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:14:40,583	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:14:40,584	[INFO]	396	SUCCESS	 4.0	
2020-12-31 05:14:41,661	[INFO]	397	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:14:42,683	[INFO]	398	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 05:14:43,761	[INFO]	399	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:14:44,817	[INFO]	400	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:14:48,334	[INFO]	401	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:14:49,375	[INFO]	402	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:14:52,862	[INFO]	403	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '>'})
2020-12-31 05:14:53,873	[INFO]	404	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:14:54,917	[INFO]	405	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:14:56,005	[INFO]	406	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:14:56,007	[INFO]	407	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:14:56,008	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:14:56,009	[INFO]	408	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:14:56,009	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:14:57,031	[INFO]	409	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 05:14:57,032	[INFO]	410	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:14:57,033	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:14:57,034	[INFO]	411	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:14:57,034	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:14:57,035	[INFO]	412	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:14:57,036	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:14:57,036	[INFO]	413	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:14:57,037	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:14:58,111	[INFO]	414	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:14:58,113	[INFO]	415	SUCCESS	 4.0	
2020-12-31 05:14:58,114	[INFO]	416	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:14:59,152	[INFO]	417	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:15:00,192	[INFO]	418	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:15:03,671	[INFO]	419	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 05:15:03,672	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,48 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     upright = rows.get(r-1).get(c);
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 05:15:04,689	[INFO]	420	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 05:15:08,149	[INFO]	421	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 05:15:09,180	[INFO]	422	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:15:12,671	[INFO]	423	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:15:13,721	[INFO]	424	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:15:14,734	[INFO]	425	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:15:14,736	[INFO]	426	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:15:14,737	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:15:14,737	[INFO]	427	SUCCESS	 4.0	
2020-12-31 05:15:18,258	[INFO]	428	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '!='})
2020-12-31 05:15:18,259	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,45 ----
                  } else {
                      upleft = 0;
                  }
+                 if (c != r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 05:15:21,648	[INFO]	429	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '!='})
2020-12-31 05:15:22,474	[INFO]	430	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '!='}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:15:23,504	[INFO]	431	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 05:15:27,035	[INFO]	432	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:15:30,536	[INFO]	433	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:15:30,538	[INFO]	434	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:15:30,539	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,45 ----
                  } else {
                      upleft = 0;
                  }
+                 if (c != r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 05:15:30,540	[INFO]	435	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:15:30,540	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,45 ----
                  } else {
                      upleft = 0;
                  }
+                 if (c != r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 05:15:31,558	[INFO]	436	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:15:35,120	[INFO]	437	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:15:35,121	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,46 ----
                  } else {
                      upleft = 0;
                  }
+                 if (c != r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = rows.get(r-1).get(c);
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 05:15:35,123	[INFO]	438	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:15:35,123	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,46 ----
                  } else {
                      upleft = 0;
                  }
+                 if (c != r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = rows.get(r-1).get(c);
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 05:15:35,125	[INFO]	439	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:15:35,125	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,45 ----
                  } else {
                      upleft = 0;
                  }
+                 if (c != r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 05:15:35,126	[INFO]	440	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '!='})
2020-12-31 05:15:35,127	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,45 ----
                  } else {
                      upleft = 0;
                  }
+                 if (c != r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 05:15:35,128	[INFO]	441	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '!='})
2020-12-31 05:15:36,530	[INFO]	442	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '!='}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:15:38,038	[INFO]	443	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:15:38,043	[INFO]	444	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:15:38,044	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:15:38,050	[INFO]	445	SUCCESS	 4.0	
2020-12-31 05:15:39,318	[INFO]	446	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 05:15:40,775	[INFO]	447	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:15:44,788	[INFO]	448	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:15:45,843	[INFO]	449	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:15:46,876	[INFO]	450	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:15:50,359	[INFO]	451	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:15:51,407	[INFO]	452	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:15:52,282	[INFO]	453	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:15:53,303	[INFO]	454	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:15:54,292	[INFO]	455	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:15:55,283	[INFO]	456	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:15:58,896	[INFO]	457	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:15:58,898	[INFO]	458	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:15:58,898	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:15:58,899	[INFO]	459	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:15:58,900	[INFO]	460	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:15:58,900	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:15:58,901	[INFO]	461	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:15:58,902	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:15:59,907	[INFO]	462	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:16:00,936	[INFO]	463	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:16:04,489	[INFO]	464	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '>'})
2020-12-31 05:16:04,491	[INFO]	465	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:16:04,491	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:16:08,010	[INFO]	466	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:16:11,495	[INFO]	467	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:16:12,529	[INFO]	468	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:16:12,531	[INFO]	469	SUCCESS	 4.0	
2020-12-31 05:16:13,567	[INFO]	470	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:16:17,039	[INFO]	471	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:16:17,040	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,48 ----
                  } else {
                      upleft = 0;
                  }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 05:16:18,044	[INFO]	472	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:16:18,046	[INFO]	473	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:16:18,047	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,48 ----
                  } else {
                      upleft = 0;
                  }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 05:16:21,540	[INFO]	474	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:16:21,541	[INFO]	475	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:16:21,542	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,48 ----
                  } else {
                      upleft = 0;
                  }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 05:16:25,107	[INFO]	476	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:16:25,109	[INFO]	477	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:16:25,110	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:16:26,123	[INFO]	478	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:16:27,145	[INFO]	479	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:16:27,146	[INFO]	480	SUCCESS	 4.0	
2020-12-31 05:16:27,147	[INFO]	481	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:16:27,148	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:16:30,748	[INFO]	482	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '!='})
2020-12-31 05:16:30,749	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,38 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             for (int c=0; c!=r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 05:16:34,264	[INFO]	483	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:16:34,266	[INFO]	484	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:16:34,266	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:16:35,300	[INFO]	485	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:16:38,802	[INFO]	486	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '=='})
2020-12-31 05:16:38,804	[INFO]	487	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:16:38,805	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:16:38,805	[INFO]	488	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:16:38,806	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:16:39,825	[INFO]	489	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:16:40,859	[INFO]	490	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:16:41,939	[INFO]	491	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 05:16:41,940	[INFO]	492	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:16:42,970	[INFO]	493	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:16:43,844	[INFO]	494	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:16:47,276	[INFO]	495	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12)}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:16:48,285	[INFO]	496	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:16:49,320	[INFO]	497	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:16:49,321	[INFO]	498	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:16:49,322	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:16:50,371	[INFO]	499	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:16:50,372	[INFO]	500	SUCCESS	 4.0	
2020-12-31 05:16:50,372	[INFO]	==== END ====
2020-12-31 05:16:50,372	[INFO]	Reason: step budget
2020-12-31 05:16:50,373	[INFO]	
2020-12-31 05:16:50,373	[INFO]	========== EPOCH 9 ==========
2020-12-31 05:16:50,373	[INFO]	==== WARMUP ====
2020-12-31 05:16:53,857	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 05:16:53,858	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 05:16:57,284	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 05:16:57,284	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 05:17:00,772	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 05:17:00,772	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 05:17:04,252	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-31 05:17:04,253	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 05:17:04,253	[INFO]	==== START ====
2020-12-31 05:17:05,226	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:17:06,221	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:17:07,263	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:17:10,714	[INFO]	4	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:17:10,715	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,36 ****
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
+                 upleft = rows.get(r-1).get(c-1);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:17:11,742	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:17:11,743	[INFO]	6	SUCCESS	+4.0	
2020-12-31 05:17:11,744	[DEBUG]	
2020-12-31 05:17:12,730	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:17:13,558	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:17:17,049	[INFO]	9	SUCCESS	 5.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:17:20,547	[INFO]	10	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:17:20,548	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,39 ----
                  } else {
                      upright = 0;
                  }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 }
              }
              rows.add(row);
          }

2020-12-31 05:17:24,037	[INFO]	11	SUCCESS	 5.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:17:24,038	[INFO]	12	SUCCESS	+4.0	
2020-12-31 05:17:24,039	[DEBUG]	
2020-12-31 05:17:25,096	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:17:26,117	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:17:27,128	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 05:17:30,575	[INFO]	16	SUCCESS	 5.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:17:31,585	[INFO]	17	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:17:32,617	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:17:33,683	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:17:37,093	[INFO]	20	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:17:37,094	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             rows.add(row);
              rows.add(row);
          }
  

2020-12-31 05:17:37,095	[INFO]	21	SUCCESS	+4.0	
2020-12-31 05:17:37,095	[DEBUG]	
2020-12-31 05:17:38,127	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:17:39,162	[INFO]	23	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:17:40,246	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:17:41,349	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:17:42,204	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:17:43,232	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:17:44,258	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 05:17:47,720	[INFO]	29	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:17:47,721	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,36 ****
--- 31,39 ----
                  } else {
                      upright = 0;
                  }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:17:47,722	[INFO]	30	SUCCESS	+4.0	
2020-12-31 05:17:47,722	[DEBUG]	
2020-12-31 05:17:47,725	[INFO]	31	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:17:47,726	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             rows.add(row);
              rows.add(row);
          }
  

2020-12-31 05:17:47,728	[INFO]	32	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:17:47,729	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             rows.add(row);
              rows.add(row);
          }
  

2020-12-31 05:17:48,538	[INFO]	33	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:17:51,960	[INFO]	34	SUCCESS	 5.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:17:51,961	[INFO]	35	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:17:51,962	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             rows.add(row);
              rows.add(row);
          }
  

2020-12-31 05:17:51,963	[INFO]	36	SUCCESS	+4.0	
2020-12-31 05:17:51,963	[DEBUG]	
2020-12-31 05:17:52,978	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:17:53,848	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:17:54,878	[INFO]	39	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:17:55,896	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:17:56,930	[INFO]	41	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:18:00,461	[INFO]	42	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:18:00,463	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 18,23 ****
--- 18,24 ----
          rows.add(init);
  
          for (int r=1; r<n; r++) {
+             rows.add(init);
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;

2020-12-31 05:18:00,465	[INFO]	43	SUCCESS	+4.0	
2020-12-31 05:18:00,465	[DEBUG]	
2020-12-31 05:18:01,501	[INFO]	44	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:18:02,517	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:18:03,555	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:18:04,600	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 05:18:08,068	[INFO]	48	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:18:08,069	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,30 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 05:18:08,070	[INFO]	49	SUCCESS	+4.0	
2020-12-31 05:18:08,070	[DEBUG]	
2020-12-31 05:18:11,556	[INFO]	50	SUCCESS	 5.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:18:12,585	[INFO]	51	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 05:18:16,070	[INFO]	52	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:18:16,071	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(init);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 05:18:16,072	[INFO]	53	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:18:16,073	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(init);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 05:18:17,094	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:18:18,119	[INFO]	55	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:18:19,107	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:18:19,109	[INFO]	57	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:18:19,109	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(init);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 05:18:19,110	[INFO]	58	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:18:19,111	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(init);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 05:18:20,145	[INFO]	59	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 05:18:20,146	[INFO]	60	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:18:20,147	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(init);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 05:18:20,148	[INFO]	61	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:18:20,148	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(init);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 05:18:20,149	[INFO]	62	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:18:20,150	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(init);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 05:18:20,150	[INFO]	63	SUCCESS	+4.0	
2020-12-31 05:18:20,151	[DEBUG]	
2020-12-31 05:18:21,018	[INFO]	64	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:18:22,046	[INFO]	65	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:18:23,075	[INFO]	66	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:18:26,617	[INFO]	67	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '=='})
2020-12-31 05:18:26,618	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,32 ****
                  } else {
                      upleft = 0;
                  }
!                 if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
--- 26,32 ----
                  } else {
                      upleft = 0;
                  }
!                 if (c == r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 05:18:26,619	[INFO]	68	SUCCESS	+4.0	
2020-12-31 05:18:26,619	[DEBUG]	
2020-12-31 05:18:27,612	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:18:31,126	[INFO]	70	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:18:32,163	[INFO]	71	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:18:33,179	[INFO]	72	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:18:34,191	[INFO]	73	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:18:35,212	[INFO]	74	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:18:38,655	[INFO]	75	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:18:38,657	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,30 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     rows.add(row);
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 05:18:38,658	[INFO]	76	SUCCESS	+4.0	
2020-12-31 05:18:38,659	[DEBUG]	
2020-12-31 05:18:39,521	[INFO]	77	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:18:40,575	[INFO]	78	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:18:41,655	[INFO]	79	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:18:42,721	[INFO]	80	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:18:43,763	[INFO]	81	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:18:44,821	[INFO]	82	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:18:45,877	[INFO]	83	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:18:49,428	[INFO]	84	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:18:49,429	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     rows.add(row);
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 05:18:52,931	[INFO]	85	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:18:52,934	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     rows.add(row);
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
***************
*** 31,36 ****
--- 32,38 ----
                  } else {
                      upright = 0;
                  }
+                 init.add(1);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:18:56,464	[INFO]	86	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:18:56,466	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,36 ****
--- 22,39 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     rows.add(row);
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
                  if (c < r) {
+                     upright = 0;
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 init.add(1);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:18:57,294	[INFO]	87	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:19:00,826	[INFO]	88	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:19:00,827	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,32 ****
--- 22,34 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     rows.add(row);
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
                  if (c < r) {
+                     upright = 0;
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 05:19:04,301	[INFO]	89	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:19:04,301	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     upright = 0;
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 05:19:04,302	[INFO]	90	SUCCESS	+4.0	
2020-12-31 05:19:04,302	[DEBUG]	
2020-12-31 05:19:05,400	[INFO]	91	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:19:06,495	[INFO]	92	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:19:07,529	[INFO]	93	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:19:11,020	[INFO]	94	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 05:19:11,021	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
!                 upright = rows.get(r-1).get(c);
              }
              rows.add(row);
          }

2020-12-31 05:19:11,022	[INFO]	95	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 16)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:19:11,022	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
!                 upright = rows.get(r-1).get(c);
              }
              rows.add(row);
          }

2020-12-31 05:19:14,577	[INFO]	96	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 16)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:19:14,579	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,37 ****
                  } else {
                      upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 26,38 ----
                  } else {
                      upleft = 0;
                  }
+                 rows.add(init);
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
!                 upright = rows.get(r-1).get(c);
              }
              rows.add(row);
          }

2020-12-31 05:19:18,122	[INFO]	97	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 16)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:19:18,124	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,37 ****
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 24,39 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     upright = 0;
                      upleft = 0;
                  }
+                 rows.add(init);
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
!                 upright = rows.get(r-1).get(c);
              }
              rows.add(row);
          }

2020-12-31 05:19:21,595	[INFO]	98	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:19:21,596	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,31 ****
--- 24,33 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     upright = 0;
                      upleft = 0;
                  }
+                 rows.add(init);
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 05:19:21,598	[INFO]	99	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:19:21,599	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,31 ****
--- 24,33 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     upright = 0;
                      upleft = 0;
                  }
+                 rows.add(init);
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 05:19:21,600	[INFO]	100	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:19:21,600	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,31 ****
--- 24,33 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     upright = 0;
                      upleft = 0;
                  }
+                 rows.add(init);
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 05:19:21,602	[INFO]	101	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:19:21,602	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,31 ****
--- 24,33 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     upright = 0;
                      upleft = 0;
                  }
+                 rows.add(init);
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 05:19:22,617	[INFO]	102	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:19:26,139	[INFO]	103	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:19:26,140	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  } else {
                      upleft = 0;
                  }
+                 rows.add(init);
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 05:19:27,157	[INFO]	104	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:19:27,160	[INFO]	105	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:19:27,161	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  } else {
                      upleft = 0;
                  }
+                 rows.add(init);
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 05:19:27,163	[INFO]	106	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:19:28,179	[INFO]	107	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 05:19:28,180	[INFO]	108	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:19:28,181	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  } else {
                      upleft = 0;
                  }
+                 rows.add(init);
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 05:19:28,182	[INFO]	109	SUCCESS	+4.0	
2020-12-31 05:19:28,182	[DEBUG]	
2020-12-31 05:19:29,189	[INFO]	110	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 05:19:32,687	[INFO]	111	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 05:19:32,688	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,39 ----
                  }
                  row.add(upleft+upright);
              }
+             int upleft, upright;
              rows.add(row);
          }
  

2020-12-31 05:19:33,731	[INFO]	112	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:19:33,734	[INFO]	113	SUCCESS	+4.0	
2020-12-31 05:19:33,735	[DEBUG]	
2020-12-31 05:19:33,739	[INFO]	114	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:19:34,747	[INFO]	115	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:19:35,837	[INFO]	116	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 05:19:36,846	[INFO]	117	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:19:37,845	[INFO]	118	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:19:38,853	[INFO]	119	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:19:39,892	[INFO]	120	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 05:19:39,894	[INFO]	121	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:19:40,909	[INFO]	122	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 05:19:41,969	[INFO]	123	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 05:19:42,842	[INFO]	124	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:19:43,845	[INFO]	125	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:19:44,879	[INFO]	126	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:19:45,894	[INFO]	127	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:19:46,878	[INFO]	128	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:19:47,912	[INFO]	129	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:19:48,983	[INFO]	130	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:19:49,854	[INFO]	131	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:19:50,700	[INFO]	132	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:19:51,695	[INFO]	133	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:19:52,752	[INFO]	134	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:19:53,795	[INFO]	135	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:19:57,326	[INFO]	136	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:19:57,327	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
!                 upleft = rows.get(r-1).get(c-1);
              }
              rows.add(row);
          }

2020-12-31 05:19:58,343	[INFO]	137	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:19:59,351	[INFO]	138	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 12)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:19:59,352	[INFO]	139	SUCCESS	+4.0	
2020-12-31 05:19:59,352	[DEBUG]	
2020-12-31 05:20:00,379	[INFO]	140	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:20:01,386	[INFO]	141	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:20:04,882	[INFO]	142	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:20:04,883	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  } else {
                      upleft = 0;
                  }
+                 init.add(1);
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 05:20:05,897	[INFO]	143	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:20:06,948	[INFO]	144	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:20:07,958	[INFO]	145	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:20:07,960	[INFO]	146	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:20:07,960	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  } else {
                      upleft = 0;
                  }
+                 init.add(1);
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 05:20:07,961	[INFO]	147	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:20:07,961	[DEBUG]	
2020-12-31 05:20:07,962	[INFO]	148	SUCCESS	+4.0	
2020-12-31 05:20:07,962	[DEBUG]	
2020-12-31 05:20:11,444	[INFO]	149	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '>='})
2020-12-31 05:20:11,445	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,25 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c>=r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);

2020-12-31 05:20:12,459	[INFO]	150	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:20:12,460	[INFO]	151	SUCCESS	+4.0	
2020-12-31 05:20:12,461	[DEBUG]	
2020-12-31 05:20:15,958	[INFO]	152	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:20:15,959	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,36 ****
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
+                 init.add(1);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:20:15,960	[INFO]	153	SUCCESS	+4.0	
2020-12-31 05:20:15,961	[DEBUG]	
2020-12-31 05:20:17,003	[INFO]	154	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 05:20:18,012	[INFO]	155	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:20:19,043	[INFO]	156	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:20:20,051	[INFO]	157	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:20:23,549	[INFO]	158	SUCCESS	*3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:20:23,550	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:20:23,551	[INFO]	159	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:20:23,552	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:20:24,586	[INFO]	160	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:20:28,079	[INFO]	161	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:20:28,081	[INFO]	162	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:20:28,081	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:20:28,082	[INFO]	163	SUCCESS	 4.0	
2020-12-31 05:20:29,107	[INFO]	164	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:20:32,598	[INFO]	165	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:20:32,599	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,46 ----
                  } else {
                      upleft = 0;
                  }
+                 upright = rows.get(r-1).get(c);
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 05:20:33,613	[INFO]	166	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:20:33,615	[INFO]	167	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:20:33,615	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:20:33,616	[INFO]	168	SUCCESS	 4.0	
2020-12-31 05:20:34,637	[INFO]	169	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:20:35,913	[INFO]	170	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:20:37,175	[INFO]	171	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:20:38,540	[INFO]	172	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:20:40,088	[INFO]	173	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:20:41,631	[INFO]	174	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:20:43,080	[INFO]	175	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:20:44,455	[INFO]	176	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:20:45,818	[INFO]	177	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:20:50,503	[INFO]	178	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:20:54,084	[INFO]	179	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:20:57,594	[INFO]	180	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:20:57,596	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,36 ****
--- 31,51 ----
                  } else {
                      upright = 0;
                  }
+                 upright = rows.get(r-1).get(c);
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:21:01,107	[INFO]	181	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:21:02,125	[INFO]	182	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:21:02,127	[INFO]	183	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:21:02,127	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:21:05,655	[INFO]	184	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:21:09,167	[INFO]	185	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '>='})
2020-12-31 05:21:09,168	[INFO]	186	SUCCESS	 4.0	
2020-12-31 05:21:10,141	[INFO]	187	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:21:11,187	[INFO]	188	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:21:12,286	[INFO]	189	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:21:15,789	[INFO]	190	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:21:15,790	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,51 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 05:21:15,791	[INFO]	191	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:21:15,792	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:21:15,793	[INFO]	192	SUCCESS	 4.0	
2020-12-31 05:21:19,268	[INFO]	193	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:21:19,269	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,32 ****
--- 27,47 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     upright = 0;
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 05:21:20,361	[INFO]	194	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:21:20,364	[INFO]	195	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:21:20,365	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:21:20,367	[INFO]	196	SUCCESS	 4.0	
2020-12-31 05:21:23,826	[INFO]	197	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:21:24,907	[INFO]	198	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:21:28,441	[INFO]	199	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:21:28,442	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,49 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     rows.add(row);
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 05:21:32,005	[INFO]	200	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:21:32,006	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 28,33 ****
--- 28,49 ----
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     rows.add(row);
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }

2020-12-31 05:21:32,007	[INFO]	201	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:21:32,008	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,49 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     rows.add(row);
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 05:21:32,009	[INFO]	202	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:21:32,009	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:21:32,010	[INFO]	203	SUCCESS	 4.0	
2020-12-31 05:21:33,034	[INFO]	204	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 05:21:34,036	[INFO]	205	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:21:35,067	[INFO]	206	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:21:36,108	[INFO]	207	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:21:37,159	[INFO]	208	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:21:37,161	[INFO]	209	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:21:37,161	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:21:38,202	[INFO]	210	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:21:38,203	[INFO]	211	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:21:38,204	[INFO]	212	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:21:38,205	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:21:39,244	[INFO]	213	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 05:21:42,869	[INFO]	214	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '=='})
2020-12-31 05:21:43,671	[INFO]	215	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:21:43,672	[INFO]	216	SUCCESS	 4.0	
2020-12-31 05:21:44,662	[INFO]	217	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:21:48,162	[INFO]	218	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:21:49,198	[INFO]	219	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:21:49,200	[INFO]	220	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:21:49,201	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:21:50,236	[INFO]	221	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:21:50,239	[INFO]	222	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:21:51,065	[INFO]	223	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:21:51,066	[INFO]	224	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:21:51,067	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:21:52,107	[INFO]	225	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:21:52,108	[INFO]	226	SUCCESS	 4.0	
2020-12-31 05:21:55,619	[INFO]	227	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:21:55,622	[INFO]	228	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:21:55,622	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:21:55,623	[INFO]	229	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:21:55,624	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:21:55,624	[INFO]	230	SUCCESS	 4.0	
2020-12-31 05:21:59,063	[INFO]	231	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:21:59,064	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,48 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     return rows;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 05:21:59,927	[INFO]	232	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:21:59,930	[INFO]	233	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:21:59,930	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:21:59,931	[INFO]	234	SUCCESS	 4.0	
2020-12-31 05:22:00,936	[INFO]	235	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:22:02,012	[INFO]	236	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:22:02,015	[INFO]	237	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:22:02,016	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:22:02,017	[INFO]	238	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:22:02,019	[INFO]	239	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:22:02,019	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:22:02,020	[INFO]	240	SUCCESS	 4.0	
2020-12-31 05:22:05,492	[INFO]	241	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:22:05,494	[INFO]	242	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:22:05,494	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:22:06,525	[INFO]	243	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:22:06,526	[INFO]	244	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:22:06,527	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:22:06,527	[INFO]	245	SUCCESS	 4.0	
2020-12-31 05:22:07,568	[INFO]	246	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:22:07,571	[INFO]	247	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:22:07,572	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:22:07,573	[INFO]	248	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:22:08,431	[INFO]	249	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:22:08,433	[INFO]	250	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:22:08,434	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:22:08,434	[INFO]	251	SUCCESS	 4.0	
2020-12-31 05:22:09,483	[INFO]	252	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:22:10,512	[INFO]	253	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 05:22:11,556	[INFO]	254	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:22:12,587	[INFO]	255	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:22:13,603	[INFO]	256	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:22:17,199	[INFO]	257	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:22:17,202	[INFO]	258	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:22:17,203	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:22:18,157	[INFO]	259	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:22:19,180	[INFO]	260	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:22:20,211	[INFO]	261	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:22:21,233	[INFO]	262	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 05:22:22,270	[INFO]	263	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:22:22,272	[INFO]	264	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:22:22,272	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:22:22,273	[INFO]	265	SUCCESS	 4.0	
2020-12-31 05:22:23,306	[INFO]	266	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:22:26,771	[INFO]	267	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:22:30,214	[INFO]	268	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:22:30,215	[INFO]	269	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:22:31,301	[INFO]	270	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:22:32,434	[INFO]	271	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:22:32,436	[INFO]	272	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:22:33,508	[INFO]	273	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:22:34,567	[INFO]	274	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:22:35,641	[INFO]	275	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:22:36,654	[INFO]	276	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:22:37,688	[INFO]	277	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 05:22:38,709	[INFO]	278	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:22:42,265	[INFO]	279	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:22:43,275	[INFO]	280	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:22:44,304	[INFO]	281	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:22:45,338	[INFO]	282	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:22:45,340	[INFO]	283	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:22:46,384	[INFO]	284	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:22:47,466	[INFO]	285	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:22:50,988	[INFO]	286	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:22:50,990	[INFO]	287	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:22:50,991	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:22:50,992	[INFO]	288	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:22:50,993	[INFO]	289	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:22:50,993	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:22:50,994	[INFO]	290	SUCCESS	 4.0	
2020-12-31 05:22:52,023	[INFO]	291	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:22:53,077	[INFO]	292	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:22:53,079	[INFO]	293	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:22:53,079	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:22:56,595	[INFO]	294	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:22:56,597	[INFO]	295	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:22:56,597	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:22:57,616	[INFO]	296	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 05:22:58,678	[INFO]	297	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:22:58,679	[INFO]	298	SUCCESS	 4.0	
2020-12-31 05:22:59,691	[INFO]	299	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:23:00,726	[INFO]	300	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:23:01,784	[INFO]	301	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:23:02,819	[INFO]	302	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:23:03,840	[INFO]	303	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:23:07,340	[INFO]	304	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:23:08,360	[INFO]	305	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:23:09,437	[INFO]	306	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:23:12,947	[INFO]	307	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '<='})
2020-12-31 05:23:13,986	[INFO]	308	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:23:14,847	[INFO]	309	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:23:18,354	[INFO]	310	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:23:19,433	[INFO]	311	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:23:20,470	[INFO]	312	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:23:20,472	[INFO]	313	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:23:20,473	[INFO]	314	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:23:20,473	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:23:21,516	[INFO]	315	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:23:22,520	[INFO]	316	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:23:22,521	[INFO]	317	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:23:22,522	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:23:22,523	[INFO]	318	SUCCESS	 4.0	
2020-12-31 05:23:23,540	[INFO]	319	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:23:24,639	[INFO]	320	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:23:28,130	[INFO]	321	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:23:29,136	[INFO]	322	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 05:23:30,198	[INFO]	323	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:23:30,200	[INFO]	324	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:23:33,640	[INFO]	325	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:23:34,668	[INFO]	326	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:23:35,694	[INFO]	327	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:23:36,783	[INFO]	328	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 05:23:37,815	[INFO]	329	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 05:23:38,649	[INFO]	330	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:23:39,695	[INFO]	331	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:23:40,734	[INFO]	332	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:23:44,322	[INFO]	333	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:23:44,323	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,44 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     upright = rows.get(r-1).get(c);
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 05:23:45,346	[INFO]	334	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:23:46,166	[INFO]	335	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 05:23:46,168	[INFO]	336	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:23:46,168	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:23:47,151	[INFO]	337	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:23:47,152	[INFO]	338	SUCCESS	 4.0	
2020-12-31 05:23:48,181	[INFO]	339	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:23:49,037	[INFO]	340	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:23:49,893	[INFO]	341	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:23:50,760	[INFO]	342	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:23:54,271	[INFO]	343	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:23:54,272	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 23,28 ****
--- 23,45 ----
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
+                 }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }

2020-12-31 05:23:54,274	[INFO]	344	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:23:54,275	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:23:54,276	[INFO]	345	SUCCESS	 4.0	
2020-12-31 05:23:55,281	[INFO]	346	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:23:56,331	[INFO]	347	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:23:56,334	[INFO]	348	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:23:56,334	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:23:56,335	[INFO]	349	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:23:57,366	[INFO]	350	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:23:57,368	[INFO]	351	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:24:00,982	[INFO]	352	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:24:02,032	[INFO]	353	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:24:03,080	[INFO]	354	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:24:06,575	[INFO]	355	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:24:06,576	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,49 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     rows.add(row);
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 05:24:06,577	[INFO]	356	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:24:06,577	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:24:10,046	[INFO]	357	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:24:10,049	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,41 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upright = 0;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {

2020-12-31 05:24:13,553	[INFO]	358	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:24:17,092	[INFO]	359	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:24:18,146	[INFO]	360	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:24:18,152	[INFO]	361	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:24:18,154	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,41 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upright = 0;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {

2020-12-31 05:24:19,194	[INFO]	362	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:24:19,199	[INFO]	363	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:24:19,200	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,41 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upright = 0;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {

2020-12-31 05:24:20,253	[INFO]	364	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 05:24:20,257	[INFO]	365	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:24:20,258	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:24:21,280	[INFO]	366	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:24:21,282	[INFO]	367	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:24:21,282	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:24:22,328	[INFO]	368	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:24:22,330	[INFO]	369	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:24:22,330	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:24:25,874	[INFO]	370	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:24:25,876	[INFO]	371	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:24:25,876	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:24:25,877	[INFO]	372	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:24:25,878	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:24:29,368	[INFO]	373	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '>='})
2020-12-31 05:24:29,370	[INFO]	374	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:24:29,371	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:24:29,371	[INFO]	375	SUCCESS	 4.0	
2020-12-31 05:24:30,419	[INFO]	376	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 05:24:31,466	[INFO]	377	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:24:35,026	[INFO]	378	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:24:35,027	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 30,35 ****
--- 30,50 ----
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
                  }
                  row.add(upleft+upright);
              }

2020-12-31 05:24:38,517	[INFO]	379	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:24:39,540	[INFO]	380	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:24:39,541	[INFO]	381	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:24:39,542	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:24:43,105	[INFO]	382	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:24:43,106	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,36 ****
--- 31,53 ----
                  } else {
                      upright = 0;
                  }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:24:46,603	[INFO]	383	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:24:47,608	[INFO]	384	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:24:48,465	[INFO]	385	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:24:49,524	[INFO]	386	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:24:53,049	[INFO]	387	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:24:54,069	[INFO]	388	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:24:57,624	[INFO]	389	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:24:57,625	[INFO]	390	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:24:57,626	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:25:01,061	[INFO]	391	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:25:01,945	[INFO]	392	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:25:05,438	[INFO]	393	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:25:05,440	[INFO]	394	SUCCESS	 4.0	
2020-12-31 05:25:06,479	[INFO]	395	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:25:07,518	[INFO]	396	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:25:08,560	[INFO]	397	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:25:09,428	[INFO]	398	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:25:12,985	[INFO]	399	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:25:13,995	[INFO]	400	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:25:15,040	[INFO]	401	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 05:25:18,506	[INFO]	402	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:25:19,557	[INFO]	403	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:25:20,606	[INFO]	404	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:25:24,142	[INFO]	405	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:25:24,144	[INFO]	406	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:25:24,145	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:25:25,010	[INFO]	407	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 05:25:26,074	[INFO]	408	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:25:26,075	[INFO]	409	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:25:26,076	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:25:29,586	[INFO]	410	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '>='})
2020-12-31 05:25:29,588	[INFO]	411	SUCCESS	 4.0	
2020-12-31 05:25:33,077	[INFO]	412	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:25:33,079	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,48 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     return rows;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 05:25:33,081	[INFO]	413	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:25:33,082	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:25:33,083	[INFO]	414	SUCCESS	 4.0	
2020-12-31 05:25:36,738	[INFO]	415	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '=='})
2020-12-31 05:25:37,814	[INFO]	416	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:25:38,859	[INFO]	417	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:25:39,909	[INFO]	418	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:25:40,956	[INFO]	419	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:25:40,957	[INFO]	420	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:25:40,958	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:25:42,040	[INFO]	421	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:25:43,106	[INFO]	422	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:25:43,108	[INFO]	423	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:25:43,108	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:25:43,109	[INFO]	424	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 05:25:43,110	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:25:43,111	[INFO]	425	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:25:43,111	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:25:43,112	[INFO]	426	SUCCESS	 4.0	
2020-12-31 05:25:44,208	[INFO]	427	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:25:45,264	[INFO]	428	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:25:46,307	[INFO]	429	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 05:25:47,349	[INFO]	430	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 05:25:48,370	[INFO]	431	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:25:49,387	[INFO]	432	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:25:50,427	[INFO]	433	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:25:51,471	[INFO]	434	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:25:52,521	[INFO]	435	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:25:53,598	[INFO]	436	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:25:54,651	[INFO]	437	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:25:55,700	[INFO]	438	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:25:59,189	[INFO]	439	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:26:00,216	[INFO]	440	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:26:01,264	[INFO]	441	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:26:02,321	[INFO]	442	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:26:05,858	[INFO]	443	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:26:05,859	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,32 ****
--- 27,49 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 05:26:09,314	[INFO]	444	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:26:09,315	[INFO]	445	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:26:09,316	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:26:10,367	[INFO]	446	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:26:10,368	[INFO]	447	SUCCESS	 4.0	
2020-12-31 05:26:11,391	[INFO]	448	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 05:26:14,886	[INFO]	449	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:26:15,931	[INFO]	450	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:26:16,971	[INFO]	451	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:26:17,999	[INFO]	452	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:26:19,024	[INFO]	453	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:26:19,026	[INFO]	454	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:26:19,027	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:26:20,077	[INFO]	455	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:26:21,115	[INFO]	456	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:26:22,180	[INFO]	457	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:26:25,772	[INFO]	458	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:26:25,773	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,42 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     upright = 0;
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 05:26:29,334	[INFO]	459	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:26:30,361	[INFO]	460	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:26:30,363	[INFO]	461	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:26:30,364	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,42 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     upright = 0;
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 05:26:31,413	[INFO]	462	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:26:31,415	[INFO]	463	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:26:31,415	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:26:32,441	[INFO]	464	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:26:33,472	[INFO]	465	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:26:37,028	[INFO]	466	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:26:37,029	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,42 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     rows.add(init);
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 05:26:38,080	[INFO]	467	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:26:38,081	[INFO]	468	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:26:38,082	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:26:39,109	[INFO]	469	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:26:39,110	[INFO]	470	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:26:39,111	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:26:40,197	[INFO]	471	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:26:41,263	[INFO]	472	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:26:44,807	[INFO]	473	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 05:26:45,842	[INFO]	474	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:26:49,412	[INFO]	475	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:26:50,278	[INFO]	476	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:26:53,768	[INFO]	477	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:26:54,801	[INFO]	478	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:26:58,286	[INFO]	479	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '<'})
2020-12-31 05:26:58,287	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,40 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 if (c < 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {

2020-12-31 05:26:58,288	[INFO]	480	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '<'})
2020-12-31 05:26:58,288	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,40 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 if (c < 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {

2020-12-31 05:26:58,289	[INFO]	481	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:26:58,290	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:26:59,317	[INFO]	482	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:27:02,833	[INFO]	483	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:27:02,834	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,51 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 05:27:03,900	[INFO]	484	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:27:03,903	[INFO]	485	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:27:03,903	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:27:03,904	[INFO]	486	SUCCESS	 4.0	
2020-12-31 05:27:03,906	[INFO]	487	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:27:03,906	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:27:04,920	[INFO]	488	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:27:08,508	[INFO]	489	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:27:09,542	[INFO]	490	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:27:10,577	[INFO]	491	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:27:10,579	[INFO]	492	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:27:10,579	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:27:14,070	[INFO]	493	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:27:14,071	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 30,35 ****
--- 30,50 ----
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
                  }
                  row.add(upleft+upright);
              }

2020-12-31 05:27:14,072	[INFO]	494	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:27:14,073	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:27:14,074	[INFO]	495	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 05:27:14,074	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:27:15,116	[INFO]	496	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 16)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:27:18,633	[INFO]	497	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 16)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:27:18,634	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,44 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 05:27:18,635	[INFO]	498	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:27:18,636	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,44 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 05:27:19,695	[INFO]	499	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:27:23,205	[INFO]	500	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:27:23,206	[INFO]	==== END ====
2020-12-31 05:27:23,206	[INFO]	Reason: step budget
2020-12-31 05:27:23,207	[INFO]	
2020-12-31 05:27:23,207	[INFO]	========== EPOCH 10 ==========
2020-12-31 05:27:23,207	[INFO]	==== WARMUP ====
2020-12-31 05:27:26,807	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 05:27:26,808	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 05:27:30,234	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 05:27:30,234	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 05:27:33,772	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 05:27:33,772	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 05:27:37,260	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-31 05:27:37,261	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 05:27:37,262	[INFO]	==== START ====
2020-12-31 05:27:40,729	[INFO]	1	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:27:40,730	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
+                 rows.add(row);
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);

2020-12-31 05:27:40,731	[INFO]	2	SUCCESS	+4.0	
2020-12-31 05:27:40,731	[DEBUG]	
2020-12-31 05:27:44,293	[INFO]	3	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:27:44,294	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 36,41 ****
--- 36,43 ----
              rows.add(row);
          }
  
+         ArrayList<Integer> row = new ArrayList<Integer>();
+ 
          return rows;
      }
  }

2020-12-31 05:27:45,321	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 05:27:45,322	[INFO]	5	SUCCESS	+4.0	
2020-12-31 05:27:45,323	[DEBUG]	
2020-12-31 05:27:46,352	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:27:49,841	[INFO]	7	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:27:49,842	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,36 ****
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
+                 init.add(1);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:27:53,341	[INFO]	8	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:27:53,343	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,28 ****
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
--- 22,28 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
!                     return rows;
                  } else {
                      upleft = 0;
                  }
***************
*** 31,36 ****
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
+                 init.add(1);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:27:53,344	[INFO]	9	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:27:53,344	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,36 ****
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
+                 init.add(1);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:27:53,345	[INFO]	10	SUCCESS	+4.0	
2020-12-31 05:27:53,345	[DEBUG]	
2020-12-31 05:27:54,367	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:27:57,875	[INFO]	12	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:27:57,876	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     upright = rows.get(r-1).get(c);
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 05:27:58,887	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:27:58,889	[INFO]	14	SUCCESS	+4.0	
2020-12-31 05:27:58,889	[DEBUG]	
2020-12-31 05:27:59,889	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:28:00,923	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:28:01,985	[INFO]	17	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:28:03,028	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:28:04,057	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:28:05,078	[INFO]	20	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:28:05,080	[INFO]	21	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:28:06,139	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:28:09,606	[INFO]	23	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:28:09,607	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     rows.add(row);
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 05:28:10,637	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 05:28:10,638	[INFO]	25	SUCCESS	+4.0	
2020-12-31 05:28:10,638	[DEBUG]	
2020-12-31 05:28:11,669	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:28:11,670	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:28:12,715	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:28:16,225	[INFO]	29	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:28:16,226	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 18,23 ****
--- 18,24 ----
          rows.add(init);
  
          for (int r=1; r<n; r++) {
+             init.add(1);
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;

2020-12-31 05:28:16,227	[INFO]	30	SUCCESS	+4.0	
2020-12-31 05:28:16,228	[DEBUG]	
2020-12-31 05:28:16,229	[INFO]	31	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:28:19,755	[INFO]	32	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:28:19,756	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 13,18 ****
--- 13,36 ----
  public class PASCAL {
      public static ArrayList<ArrayList<Integer>> pascal(int n) {
          ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();
+         for (int r=1; r<n; r++) {
+             ArrayList<Integer> row = new ArrayList<Integer>();
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             rows.add(row);
+         }
          ArrayList<Integer> init = new ArrayList<Integer>();
          init.add(1);
          rows.add(init);

2020-12-31 05:28:23,246	[INFO]	33	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '>'})
2020-12-31 05:28:23,249	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 13,22 ****
  public class PASCAL {
      public static ArrayList<ArrayList<Integer>> pascal(int n) {
          ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();
-         ArrayList<Integer> init = new ArrayList<Integer>();
-         init.add(1);
-         rows.add(init);
- 
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
--- 13,18 ----
***************
*** 35,40 ****
--- 31,58 ----
              }
              rows.add(row);
          }
+         ArrayList<Integer> init = new ArrayList<Integer>();
+         init.add(1);
+         rows.add(init);
+ 
+         for (int r=1; r<n; r++) {
+             ArrayList<Integer> row = new ArrayList<Integer>();
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c > r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             rows.add(row);
+         }
  
          return rows;
      }

2020-12-31 05:28:23,251	[INFO]	34	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:28:23,253	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 13,18 ****
--- 13,36 ----
  public class PASCAL {
      public static ArrayList<ArrayList<Integer>> pascal(int n) {
          ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();
+         for (int r=1; r<n; r++) {
+             ArrayList<Integer> row = new ArrayList<Integer>();
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             rows.add(row);
+         }
          ArrayList<Integer> init = new ArrayList<Integer>();
          init.add(1);
          rows.add(init);

2020-12-31 05:28:26,817	[INFO]	35	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:28:26,818	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 13,22 ****
  public class PASCAL {
      public static ArrayList<ArrayList<Integer>> pascal(int n) {
          ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();
-         ArrayList<Integer> init = new ArrayList<Integer>();
-         init.add(1);
-         rows.add(init);
- 
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
--- 13,18 ----
***************
*** 35,40 ****
--- 31,59 ----
              }
              rows.add(row);
          }
+         ArrayList<Integer> init = new ArrayList<Integer>();
+         init.add(1);
+         rows.add(init);
+ 
+         for (int r=1; r<n; r++) {
+             ArrayList<Integer> row = new ArrayList<Integer>();
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 rows.add(init);
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             rows.add(row);
+         }
  
          return rows;
      }

2020-12-31 05:28:26,819	[INFO]	36	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:28:26,819	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 13,18 ****
--- 13,36 ----
  public class PASCAL {
      public static ArrayList<ArrayList<Integer>> pascal(int n) {
          ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();
+         for (int r=1; r<n; r++) {
+             ArrayList<Integer> row = new ArrayList<Integer>();
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             rows.add(row);
+         }
          ArrayList<Integer> init = new ArrayList<Integer>();
          init.add(1);
          rows.add(init);

2020-12-31 05:28:26,820	[INFO]	37	SUCCESS	+4.0	
2020-12-31 05:28:26,820	[DEBUG]	
2020-12-31 05:28:30,331	[INFO]	38	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:28:30,332	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             init.add(1);
              rows.add(row);
          }
  

2020-12-31 05:28:30,333	[INFO]	39	SUCCESS	+4.0	
2020-12-31 05:28:30,333	[DEBUG]	
2020-12-31 05:28:31,374	[INFO]	40	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:28:34,900	[INFO]	41	SUCCESS	+4.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:28:34,900	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,39 ****
                  }
                  row.add(upleft+upright);
              }
!             rows.add(row);
          }
  
          return rows;
--- 33,39 ----
                  }
                  row.add(upleft+upright);
              }
!             
          }
  
          return rows;

2020-12-31 05:28:35,931	[INFO]	42	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:28:39,449	[INFO]	43	SUCCESS	+4.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '>='})
2020-12-31 05:28:39,450	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,39 ****
                  } else {
                      upleft = 0;
                  }
!                 if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);
              }
!             rows.add(row);
          }
  
          return rows;
--- 26,39 ----
                  } else {
                      upleft = 0;
                  }
!                 if (c >= r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);
              }
!             
          }
  
          return rows;

2020-12-31 05:28:40,470	[INFO]	44	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '>='}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:28:44,246	[INFO]	45	SUCCESS	 5.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '>='}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:28:45,114	[INFO]	46	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '>='}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:28:46,179	[INFO]	47	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '>='}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:28:47,207	[INFO]	48	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:28:50,744	[INFO]	49	SUCCESS	+4.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:28:50,745	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,39 ****
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
!                 if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);
              }
!             rows.add(row);
          }
  
          return rows;
--- 24,40 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     upleft = rows.get(r-1).get(c-1);
                      upleft = 0;
                  }
!                 if (c >= r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);
              }
!             
          }
  
          return rows;

2020-12-31 05:28:51,836	[INFO]	50	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:28:55,463	[INFO]	51	SUCCESS	+4.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:28:55,464	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,30 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     upleft = rows.get(r-1).get(c-1);
                      upleft = 0;
                  }
                  if (c < r) {
***************
*** 33,39 ****
                  }
                  row.add(upleft+upright);
              }
!             rows.add(row);
          }
  
          return rows;
--- 34,40 ----
                  }
                  row.add(upleft+upright);
              }
!             
          }
  
          return rows;

2020-12-31 05:28:58,957	[INFO]	52	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:28:58,958	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,30 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     upleft = rows.get(r-1).get(c-1);
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 05:28:58,959	[INFO]	53	SUCCESS	+4.0	
2020-12-31 05:28:58,959	[DEBUG]	
2020-12-31 05:28:59,997	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:29:01,083	[INFO]	55	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:29:02,160	[INFO]	56	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:29:03,193	[INFO]	57	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:29:04,202	[INFO]	58	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:29:07,708	[INFO]	59	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:29:07,709	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     upleft = 0;
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 05:29:07,710	[INFO]	60	SUCCESS	+4.0	
2020-12-31 05:29:07,710	[DEBUG]	
2020-12-31 05:29:08,753	[INFO]	61	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:29:09,781	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:29:10,793	[INFO]	63	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:29:14,327	[INFO]	64	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:29:14,328	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,39 ----
                  } else {
                      upright = 0;
                  }
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 }
              }
              rows.add(row);
          }

2020-12-31 05:29:14,329	[INFO]	65	SUCCESS	+4.0	
2020-12-31 05:29:14,329	[DEBUG]	
2020-12-31 05:29:15,346	[INFO]	66	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:29:18,858	[INFO]	67	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:29:18,859	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 init.add(1);
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {

2020-12-31 05:29:18,861	[INFO]	68	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '>='})
2020-12-31 05:29:18,861	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 init.add(1);
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {

2020-12-31 05:29:22,348	[INFO]	69	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '>='})
2020-12-31 05:29:22,350	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,32 ****
                  } else {
                      upleft = 0;
                  }
!                 if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
--- 26,32 ----
                  } else {
                      upleft = 0;
                  }
!                 if (c >= r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 05:29:22,352	[INFO]	70	SUCCESS	+4.0	
2020-12-31 05:29:22,352	[DEBUG]	
2020-12-31 05:29:23,381	[INFO]	71	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:29:24,451	[INFO]	72	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:29:25,485	[INFO]	73	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:29:26,515	[INFO]	74	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:29:27,508	[INFO]	75	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:29:28,534	[INFO]	76	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:29:29,568	[INFO]	77	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:29:30,443	[INFO]	78	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:29:31,458	[INFO]	79	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:29:31,460	[INFO]	80	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:29:31,460	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,36 ****
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
+                 init.add(1);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:29:32,489	[INFO]	81	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:29:32,490	[INFO]	82	SUCCESS	+4.0	
2020-12-31 05:29:32,490	[DEBUG]	
2020-12-31 05:29:33,538	[INFO]	83	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 05:29:34,604	[INFO]	84	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:29:35,643	[INFO]	85	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:29:36,680	[INFO]	86	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:29:40,202	[INFO]	87	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:29:40,203	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,36 ****
--- 31,39 ----
                  } else {
                      upright = 0;
                  }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:29:40,203	[INFO]	88	SUCCESS	+4.0	
2020-12-31 05:29:40,204	[DEBUG]	
2020-12-31 05:29:41,285	[INFO]	89	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:29:41,286	[INFO]	90	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:29:41,287	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     upleft = 0;
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 05:29:41,287	[INFO]	91	SUCCESS	+4.0	
2020-12-31 05:29:41,288	[DEBUG]	
2020-12-31 05:29:42,334	[INFO]	92	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:29:42,336	[INFO]	93	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:29:43,374	[INFO]	94	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:29:44,404	[INFO]	95	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:29:45,407	[INFO]	96	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 05:29:48,905	[INFO]	97	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:29:48,906	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upleft = rows.get(r-1).get(c-1);
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {

2020-12-31 05:29:48,907	[INFO]	98	SUCCESS	+4.0	
2020-12-31 05:29:48,907	[DEBUG]	
2020-12-31 05:29:49,946	[INFO]	99	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:29:50,961	[INFO]	100	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:29:52,044	[INFO]	101	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:29:55,528	[INFO]	102	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:29:55,529	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     upright = 0;
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 05:29:56,415	[INFO]	103	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:29:56,416	[INFO]	104	SUCCESS	+4.0	
2020-12-31 05:29:56,416	[DEBUG]	
2020-12-31 05:29:57,457	[INFO]	105	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:29:58,488	[INFO]	106	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:29:59,548	[INFO]	107	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:30:03,110	[INFO]	108	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:30:03,111	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
+                 }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }

2020-12-31 05:30:03,111	[INFO]	109	SUCCESS	+4.0	
2020-12-31 05:30:03,112	[DEBUG]	
2020-12-31 05:30:03,112	[INFO]	110	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:30:03,113	[DEBUG]	
2020-12-31 05:30:03,113	[INFO]	111	SUCCESS	+4.0	
2020-12-31 05:30:03,114	[DEBUG]	
2020-12-31 05:30:04,153	[INFO]	112	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:30:05,187	[INFO]	113	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:30:08,736	[INFO]	114	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '>='})
2020-12-31 05:30:08,737	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,25 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c>=r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);

2020-12-31 05:30:08,738	[INFO]	115	SUCCESS	+4.0	
2020-12-31 05:30:08,738	[DEBUG]	
2020-12-31 05:30:09,764	[INFO]	116	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:30:10,762	[INFO]	117	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:30:14,291	[INFO]	118	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '<='})
2020-12-31 05:30:14,292	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,25 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<=r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);

2020-12-31 05:30:14,293	[INFO]	==== END ====
2020-12-31 05:30:14,293	[INFO]	Reason: target fitness reached
2020-12-31 05:30:14,293	[INFO]	
2020-12-31 05:30:14,293	[INFO]	========== EPOCH 11 ==========
2020-12-31 05:30:14,294	[INFO]	==== WARMUP ====
2020-12-31 05:30:17,749	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 05:30:17,750	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 05:30:21,174	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 05:30:21,175	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 05:30:24,677	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 05:30:24,678	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 05:30:28,126	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-31 05:30:28,126	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 05:30:28,126	[INFO]	==== START ====
2020-12-31 05:30:29,169	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:30:30,223	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:30:31,251	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:30:34,726	[INFO]	4	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:30:34,727	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 18,23 ****
--- 18,24 ----
          rows.add(init);
  
          for (int r=1; r<n; r++) {
+             rows.add(init);
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;

2020-12-31 05:30:34,728	[INFO]	5	SUCCESS	+4.0	
2020-12-31 05:30:34,728	[DEBUG]	
2020-12-31 05:30:36,080	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:30:37,473	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:30:38,886	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:30:42,571	[INFO]	9	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '>='})
2020-12-31 05:30:42,572	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,25 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c>=r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);

2020-12-31 05:30:42,573	[INFO]	10	SUCCESS	+4.0	
2020-12-31 05:30:42,574	[DEBUG]	
2020-12-31 05:30:43,622	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:30:47,101	[INFO]	12	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:30:47,102	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             rows.add(row);
              rows.add(row);
          }
  

2020-12-31 05:30:47,103	[INFO]	13	SUCCESS	+4.0	
2020-12-31 05:30:47,103	[DEBUG]	
2020-12-31 05:30:48,130	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:30:49,211	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:30:50,246	[INFO]	16	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:30:51,268	[INFO]	17	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:30:52,336	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:30:55,889	[INFO]	19	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:30:55,890	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  } else {
                      upleft = 0;
                  }
+                 upleft = rows.get(r-1).get(c-1);
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 05:30:55,891	[INFO]	20	SUCCESS	+4.0	
2020-12-31 05:30:55,891	[DEBUG]	
2020-12-31 05:30:56,893	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:30:57,919	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:31:01,464	[INFO]	23	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:31:01,465	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     rows.add(row);
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 05:31:02,513	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:31:02,514	[INFO]	25	SUCCESS	+4.0	
2020-12-31 05:31:02,514	[DEBUG]	
2020-12-31 05:31:06,029	[INFO]	26	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:31:06,030	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,35 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     rows.add(init);
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 05:31:06,031	[INFO]	27	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:31:06,032	[DEBUG]	
2020-12-31 05:31:06,032	[INFO]	28	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:31:06,033	[DEBUG]	
2020-12-31 05:31:07,090	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:31:07,091	[INFO]	30	SUCCESS	+4.0	
2020-12-31 05:31:07,091	[DEBUG]	
2020-12-31 05:31:10,581	[INFO]	31	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:31:11,621	[INFO]	32	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:31:15,178	[INFO]	33	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:31:15,179	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,30 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 05:31:15,180	[INFO]	34	SUCCESS	+4.0	
2020-12-31 05:31:15,180	[DEBUG]	
2020-12-31 05:31:16,220	[INFO]	35	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 05:31:19,665	[INFO]	36	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:31:19,668	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,32 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 05:31:19,672	[INFO]	37	SUCCESS	+4.0	
2020-12-31 05:31:19,673	[DEBUG]	
2020-12-31 05:31:23,166	[INFO]	38	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:31:23,167	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 25,30 ****
--- 25,31 ----
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
+                     upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);

2020-12-31 05:31:26,627	[INFO]	39	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:31:26,628	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 17,40 ****
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r<n; r++) {
!             ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
!             rows.add(row);
!         }
  
          return rows;
      }
--- 17,23 ----
          init.add(1);
          rows.add(init);
  
!         
  
          return rows;
      }

2020-12-31 05:31:26,629	[INFO]	40	SUCCESS	+4.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:31:26,630	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 17,40 ****
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r<n; r++) {
!             ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
!             rows.add(row);
!         }
  
          return rows;
      }
--- 17,23 ----
          init.add(1);
          rows.add(init);
  
!         
  
          return rows;
      }

2020-12-31 05:31:26,630	[INFO]	41	SUCCESS	+4.0	
2020-12-31 05:31:26,631	[DEBUG]	
2020-12-31 05:31:30,099	[INFO]	42	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:31:30,100	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,33 ****
                      upleft = 0;
                  }
                  if (c < r) {
!                     upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
--- 27,33 ----
                      upleft = 0;
                  }
                  if (c < r) {
!                     return rows;
                  } else {
                      upright = 0;
                  }

2020-12-31 05:31:30,101	[INFO]	43	SUCCESS	+4.0	
2020-12-31 05:31:30,101	[DEBUG]	
2020-12-31 05:31:33,553	[INFO]	44	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:31:33,554	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     init.add(1);
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 05:31:34,582	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:31:35,648	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:31:35,650	[INFO]	47	SUCCESS	+4.0	
2020-12-31 05:31:35,650	[DEBUG]	
2020-12-31 05:31:36,666	[INFO]	48	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:31:37,671	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:31:37,673	[INFO]	50	SUCCESS	+4.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:31:37,673	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 17,40 ****
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r<n; r++) {
!             ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
!             rows.add(row);
!         }
  
          return rows;
      }
--- 17,23 ----
          init.add(1);
          rows.add(init);
  
!         
  
          return rows;
      }

2020-12-31 05:31:38,647	[INFO]	51	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:31:39,639	[INFO]	52	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:31:39,640	[INFO]	53	SUCCESS	+4.0	
2020-12-31 05:31:39,641	[DEBUG]	
2020-12-31 05:31:40,698	[INFO]	54	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:31:44,212	[INFO]	55	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:31:44,213	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
!                 upleft = rows.get(r-1).get(c-1);
              }
              rows.add(row);
          }

2020-12-31 05:31:44,214	[INFO]	56	SUCCESS	+4.0	
2020-12-31 05:31:44,214	[DEBUG]	
2020-12-31 05:31:45,201	[INFO]	57	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:31:46,257	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:31:47,282	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:31:47,283	[INFO]	60	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<'})
2020-12-31 05:31:47,284	[DEBUG]	
2020-12-31 05:31:47,284	[INFO]	61	SUCCESS	+4.0	
2020-12-31 05:31:47,285	[DEBUG]	
2020-12-31 05:31:48,301	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:31:51,773	[INFO]	63	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:31:51,774	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     rows.add(init);
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 05:31:52,821	[INFO]	64	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:31:53,858	[INFO]	65	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:31:54,873	[INFO]	66	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:31:54,875	[INFO]	67	SUCCESS	+4.0	
2020-12-31 05:31:54,875	[DEBUG]	
2020-12-31 05:31:55,904	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:31:56,932	[INFO]	69	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:31:57,955	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:32:01,422	[INFO]	71	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:32:01,423	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  } else {
                      upleft = 0;
                  }
+                 upright = 0;
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 05:32:01,424	[INFO]	72	SUCCESS	+4.0	
2020-12-31 05:32:01,424	[DEBUG]	
2020-12-31 05:32:02,454	[INFO]	73	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:32:03,317	[INFO]	74	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:32:04,355	[INFO]	75	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:32:07,867	[INFO]	76	SUCCESS	+4.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:32:07,868	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,39 ****
                  }
                  row.add(upleft+upright);
              }
!             rows.add(row);
          }
  
          return rows;
--- 33,39 ----
                  }
                  row.add(upleft+upright);
              }
!             
          }
  
          return rows;

2020-12-31 05:32:08,915	[INFO]	77	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:32:09,946	[INFO]	78	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:32:10,959	[INFO]	79	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:32:14,451	[INFO]	80	SUCCESS	+4.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:32:14,452	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,39 ****
                      upright = 0;
                  }
                  row.add(upleft+upright);
              }
!             rows.add(row);
          }
  
          return rows;
--- 32,40 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
!             
          }
  
          return rows;

2020-12-31 05:32:17,978	[INFO]	81	SUCCESS	*3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:32:17,980	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:32:21,541	[INFO]	82	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:32:21,542	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,36 ****
--- 26,38 ----
                  } else {
                      upleft = 0;
                  }
+                 upright = 0;
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:32:25,063	[INFO]	83	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:32:25,065	[INFO]	84	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:32:26,062	[INFO]	85	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:32:29,607	[INFO]	86	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:32:30,662	[INFO]	87	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:32:30,664	[INFO]	88	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:32:30,665	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:32:31,690	[INFO]	89	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:32:31,693	[INFO]	90	SUCCESS	 4.0	
2020-12-31 05:32:32,723	[INFO]	91	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:32:36,211	[INFO]	92	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 05:32:36,213	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,36 ****
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
!                     upright = 0;
                  }
                  row.add(upleft+upright);
              }
              rows.add(row);
--- 29,37 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
!                     upright = rows.get(r-1).get(c);
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:32:36,214	[INFO]	93	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:32:36,215	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:32:37,038	[INFO]	94	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:32:38,067	[INFO]	95	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:32:39,088	[INFO]	96	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:32:39,089	[INFO]	97	SUCCESS	 4.0	
2020-12-31 05:32:40,128	[INFO]	98	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:32:41,208	[INFO]	99	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:32:44,768	[INFO]	100	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:32:44,769	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,39 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 upleft = 0;
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:32:48,231	[INFO]	101	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:32:51,703	[INFO]	102	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '=='})
2020-12-31 05:32:52,717	[INFO]	103	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 05:32:53,751	[INFO]	104	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:32:54,757	[INFO]	105	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:32:55,796	[INFO]	106	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:32:55,797	[INFO]	107	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:32:55,798	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:32:56,835	[INFO]	108	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:32:57,843	[INFO]	109	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:32:57,844	[INFO]	110	SUCCESS	 4.0	
2020-12-31 05:32:58,858	[INFO]	111	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:32:59,909	[INFO]	112	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:33:00,933	[INFO]	113	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:33:04,397	[INFO]	114	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:33:05,427	[INFO]	115	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:33:06,531	[INFO]	116	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:33:07,582	[INFO]	117	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:33:11,088	[INFO]	118	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:33:12,098	[INFO]	119	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 05:33:12,100	[INFO]	120	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:33:13,147	[INFO]	121	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:33:14,173	[INFO]	122	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 05:33:15,191	[INFO]	123	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 05:33:16,220	[INFO]	124	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:33:19,725	[INFO]	125	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:33:19,726	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     upright = 0;
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
***************
*** 32,37 ****
--- 33,39 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:33:20,790	[INFO]	126	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:33:20,792	[INFO]	127	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:33:20,792	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:33:20,793	[INFO]	128	SUCCESS	 4.0	
2020-12-31 05:33:21,824	[INFO]	129	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:33:22,854	[INFO]	130	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:33:23,921	[INFO]	131	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:33:27,462	[INFO]	132	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '>='})
2020-12-31 05:33:28,480	[INFO]	133	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:33:31,985	[INFO]	134	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:33:31,987	[INFO]	135	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:33:31,987	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:33:31,988	[INFO]	136	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:33:31,989	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:33:31,990	[INFO]	137	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:33:31,991	[INFO]	138	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:33:31,991	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:33:31,992	[INFO]	139	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:33:35,445	[INFO]	140	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:33:36,503	[INFO]	141	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:33:37,554	[INFO]	142	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:33:41,162	[INFO]	143	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:33:41,164	[INFO]	144	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:33:41,166	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:33:41,168	[INFO]	145	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:33:44,630	[INFO]	146	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:33:44,631	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,29 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
***************
*** 32,37 ****
--- 35,41 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:33:48,148	[INFO]	147	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:33:49,493	[INFO]	148	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:33:49,495	[INFO]	149	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:33:49,496	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:33:49,497	[INFO]	150	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:33:49,497	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:33:49,498	[INFO]	151	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:33:50,540	[INFO]	152	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 05:33:50,541	[INFO]	153	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:33:50,542	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:33:50,542	[INFO]	154	SUCCESS	 4.0	
2020-12-31 05:33:51,597	[INFO]	155	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 05:33:55,028	[INFO]	156	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:33:55,029	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,36 ****
--- 29,38 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     upleft = 0;
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:33:58,568	[INFO]	157	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:33:59,580	[INFO]	158	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:34:03,197	[INFO]	159	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:34:03,198	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,36 ****
--- 27,41 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                      upright = rows.get(r-1).get(c);
                  } else {
+                     upleft = 0;
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:34:06,674	[INFO]	160	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:34:06,675	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,36 ****
--- 27,40 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:34:10,297	[INFO]	161	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:34:11,323	[INFO]	162	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:34:11,325	[INFO]	163	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:34:11,326	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:34:11,326	[INFO]	164	SUCCESS	 4.0	
2020-12-31 05:34:14,823	[INFO]	165	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:34:14,826	[INFO]	166	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 05:34:14,826	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:34:15,821	[INFO]	167	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 16)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:34:19,367	[INFO]	168	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 16)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:34:19,368	[INFO]	169	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 05:34:20,371	[INFO]	170	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 16)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:34:20,373	[INFO]	171	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:34:20,373	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:34:20,374	[INFO]	172	SUCCESS	 4.0	
2020-12-31 05:34:23,924	[INFO]	173	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:34:23,925	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upleft = 0;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
***************
*** 32,37 ****
--- 33,39 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:34:27,419	[INFO]	174	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:34:28,451	[INFO]	175	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:34:28,452	[INFO]	176	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:34:28,453	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:34:28,453	[INFO]	177	SUCCESS	 4.0	
2020-12-31 05:34:29,474	[INFO]	178	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:34:30,523	[INFO]	179	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:34:31,561	[INFO]	180	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:34:32,614	[INFO]	181	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:34:36,046	[INFO]	182	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:34:37,082	[INFO]	183	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 05:34:38,148	[INFO]	184	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 05:34:41,649	[INFO]	185	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:34:42,708	[INFO]	186	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:34:43,739	[INFO]	187	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:34:47,187	[INFO]	188	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:34:47,188	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 23,28 ****
--- 23,29 ----
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
+                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
***************
*** 32,37 ****
--- 33,39 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:34:48,193	[INFO]	189	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:34:48,195	[INFO]	190	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:34:48,196	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:34:48,197	[INFO]	191	SUCCESS	 4.0	
2020-12-31 05:34:49,255	[INFO]	192	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:34:50,306	[INFO]	193	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:34:51,330	[INFO]	194	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:34:51,331	[INFO]	195	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '>'})
2020-12-31 05:34:51,332	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:34:52,331	[INFO]	196	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:34:55,827	[INFO]	197	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:34:55,828	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,41 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:34:55,829	[INFO]	198	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '>'})
2020-12-31 05:34:55,830	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:34:55,831	[INFO]	199	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '>'})
2020-12-31 05:34:55,831	[INFO]	200	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:34:55,832	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:34:59,347	[INFO]	201	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:34:59,348	[INFO]	202	SUCCESS	 4.0	
2020-12-31 05:34:59,349	[INFO]	203	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:34:59,349	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:34:59,350	[INFO]	204	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:34:59,351	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:34:59,351	[INFO]	205	SUCCESS	 4.0	
2020-12-31 05:35:00,340	[INFO]	206	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:35:03,819	[INFO]	207	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:35:03,820	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upright = rows.get(r-1).get(c);
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
***************
*** 32,37 ****
--- 33,39 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:35:07,343	[INFO]	208	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:35:08,200	[INFO]	209	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:35:09,237	[INFO]	210	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:35:09,239	[INFO]	211	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:35:09,240	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upright = rows.get(r-1).get(c);
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
***************
*** 32,37 ****
--- 33,39 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:35:10,258	[INFO]	212	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:35:11,294	[INFO]	213	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:35:12,342	[INFO]	214	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:35:12,344	[INFO]	215	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:35:12,345	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upright = rows.get(r-1).get(c);
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
***************
*** 32,37 ****
--- 33,39 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:35:13,386	[INFO]	216	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:35:14,438	[INFO]	217	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 05:35:15,533	[INFO]	218	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:35:16,550	[INFO]	219	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:35:16,552	[INFO]	220	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:35:16,552	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:35:32,481	[INFO]	221	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '>='})
2020-12-31 05:35:32,483	[INFO]	222	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:35:32,483	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:35:32,485	[INFO]	223	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:35:36,292	[INFO]	224	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '=='})
2020-12-31 05:35:36,294	[INFO]	225	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:35:36,294	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:35:36,295	[INFO]	226	SUCCESS	 4.0	
2020-12-31 05:35:37,330	[INFO]	227	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:35:37,332	[INFO]	228	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:35:37,332	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:35:38,359	[INFO]	229	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:35:38,360	[INFO]	230	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:35:38,361	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:35:38,361	[INFO]	231	SUCCESS	 4.0	
2020-12-31 05:35:39,428	[INFO]	232	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:35:40,465	[INFO]	233	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:35:41,525	[INFO]	234	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:35:41,528	[INFO]	235	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:35:42,584	[INFO]	236	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:35:46,127	[INFO]	237	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:35:49,623	[INFO]	238	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '!='})
2020-12-31 05:35:49,624	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 17,23 ****
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
--- 17,23 ----
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r!=n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:35:49,626	[INFO]	239	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:35:49,626	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:35:50,638	[INFO]	240	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:35:51,693	[INFO]	241	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:35:51,694	[INFO]	242	SUCCESS	 4.0	
2020-12-31 05:35:52,736	[INFO]	243	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:35:52,739	[INFO]	244	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '<'})
2020-12-31 05:35:52,740	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:35:53,741	[INFO]	245	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:35:54,774	[INFO]	246	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '<'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:35:55,781	[INFO]	247	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:35:56,810	[INFO]	248	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:35:56,812	[INFO]	249	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:35:56,813	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upright = rows.get(r-1).get(c);
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
***************
*** 32,37 ****
--- 33,39 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:35:57,851	[INFO]	250	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:35:57,854	[INFO]	251	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '<'})
2020-12-31 05:35:57,855	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:35:58,880	[INFO]	252	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:35:59,933	[INFO]	253	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:36:00,989	[INFO]	254	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:36:02,047	[INFO]	255	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:36:02,050	[INFO]	256	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '<'})
2020-12-31 05:36:02,053	[INFO]	257	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '<'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:36:02,055	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:36:03,058	[INFO]	258	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '<'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 12)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 05:36:04,063	[INFO]	259	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '<'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:36:04,064	[INFO]	260	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '<'})
2020-12-31 05:36:04,065	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:36:04,066	[INFO]	261	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:36:04,066	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:36:04,067	[INFO]	262	SUCCESS	 4.0	
2020-12-31 05:36:04,068	[INFO]	263	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:36:05,106	[INFO]	264	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:36:06,132	[INFO]	265	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:36:07,190	[INFO]	266	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:36:07,192	[INFO]	267	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<'})
2020-12-31 05:36:07,192	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:36:07,193	[INFO]	268	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:36:07,193	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:36:08,238	[INFO]	269	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:36:08,239	[INFO]	270	SUCCESS	 4.0	
2020-12-31 05:36:09,283	[INFO]	271	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:36:10,304	[INFO]	272	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 05:36:11,327	[INFO]	273	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:36:12,339	[INFO]	274	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:36:13,383	[INFO]	275	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:36:14,389	[INFO]	276	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:36:15,416	[INFO]	277	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:36:18,941	[INFO]	278	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:36:20,024	[INFO]	279	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:36:23,530	[INFO]	280	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:36:24,598	[INFO]	281	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:36:25,616	[INFO]	282	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:36:26,652	[INFO]	283	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:36:27,716	[INFO]	284	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:36:31,207	[INFO]	285	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:36:34,668	[INFO]	286	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:36:35,663	[INFO]	287	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:36:36,660	[INFO]	288	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:36:37,690	[INFO]	289	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:36:38,730	[INFO]	290	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:36:42,331	[INFO]	291	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:36:42,332	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,28 ****
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
--- 22,28 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
!                     return rows;
                  } else {
                      upleft = 0;
                  }
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:36:42,333	[INFO]	292	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:36:42,333	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:36:42,334	[INFO]	293	SUCCESS	 4.0	
2020-12-31 05:36:43,338	[INFO]	294	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:36:44,185	[INFO]	295	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:36:47,586	[INFO]	296	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:36:47,587	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,30 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
***************
*** 32,37 ****
--- 35,41 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:36:51,085	[INFO]	297	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:36:54,549	[INFO]	298	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:36:55,417	[INFO]	299	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:36:56,406	[INFO]	300	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:36:56,408	[INFO]	301	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:36:56,408	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:36:56,409	[INFO]	302	SUCCESS	 4.0	
2020-12-31 05:36:57,250	[INFO]	303	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:36:58,265	[INFO]	304	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:36:59,102	[INFO]	305	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:37:00,120	[INFO]	306	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:37:01,149	[INFO]	307	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:37:02,152	[INFO]	308	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:37:03,202	[INFO]	309	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:37:04,217	[INFO]	310	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:37:04,220	[INFO]	311	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:37:04,221	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:37:04,222	[INFO]	312	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:37:05,054	[INFO]	313	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:37:05,056	[INFO]	314	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:37:05,056	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:37:05,923	[INFO]	315	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:37:06,956	[INFO]	316	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:37:06,957	[INFO]	317	SUCCESS	 4.0	
2020-12-31 05:37:10,488	[INFO]	318	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:37:11,526	[INFO]	319	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:37:15,032	[INFO]	320	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:37:15,033	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,36 ****
--- 26,38 ----
                  } else {
                      upleft = 0;
                  }
+                 upright = 0;
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:37:15,034	[INFO]	321	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:37:15,035	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:37:16,061	[INFO]	322	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 05:37:19,559	[INFO]	323	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '!='})
2020-12-31 05:37:19,560	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 17,23 ****
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
--- 17,23 ----
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r!=n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:37:20,607	[INFO]	324	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:37:24,124	[INFO]	325	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '!='})
2020-12-31 05:37:25,193	[INFO]	326	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:37:26,236	[INFO]	327	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '!='}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:37:27,267	[INFO]	328	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:37:28,284	[INFO]	329	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '!='}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:37:31,827	[INFO]	330	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 05:37:31,830	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 17,23 ****
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
--- 17,23 ----
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r!=n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
***************
*** 32,41 ****
--- 32,44 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }
  
+         int upleft, upright;
+ 
          return rows;
      }
  }

2020-12-31 05:37:35,284	[INFO]	331	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:37:35,285	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 17,23 ****
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
--- 17,23 ----
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r!=n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
***************
*** 28,41 ****
--- 28,45 ----
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
+                     upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);
          }
  
+         int upleft, upright;
+ 
          return rows;
      }
  }

2020-12-31 05:37:36,307	[INFO]	332	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:37:39,787	[INFO]	333	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:37:39,788	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 17,23 ****
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
--- 17,23 ----
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r!=n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
***************
*** 28,36 ****
--- 28,38 ----
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
+                     upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:37:43,357	[INFO]	334	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:37:43,359	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 28,36 ****
--- 28,38 ----
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
+                     upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:37:46,840	[INFO]	335	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:37:47,885	[INFO]	336	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:37:47,886	[INFO]	337	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:37:47,887	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:37:48,907	[INFO]	338	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:37:48,908	[INFO]	339	SUCCESS	 4.0	
2020-12-31 05:37:49,976	[INFO]	340	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:37:51,013	[INFO]	341	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:37:52,043	[INFO]	342	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 05:37:53,075	[INFO]	343	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:37:54,105	[INFO]	344	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:37:55,120	[INFO]	345	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:37:58,610	[INFO]	346	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:37:58,612	[INFO]	347	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:38:02,203	[INFO]	348	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:38:03,156	[INFO]	349	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:38:04,005	[INFO]	350	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:38:05,036	[INFO]	351	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:38:08,540	[INFO]	352	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:38:08,541	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
+                 }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
***************
*** 32,37 ****
--- 35,41 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:38:09,546	[INFO]	353	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:38:10,573	[INFO]	354	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:38:11,448	[INFO]	355	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:38:14,940	[INFO]	356	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:38:14,941	[INFO]	357	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:38:14,942	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:38:15,956	[INFO]	358	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:38:15,957	[INFO]	359	SUCCESS	 4.0	
2020-12-31 05:38:16,973	[INFO]	360	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:38:18,019	[INFO]	361	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:38:21,503	[INFO]	362	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:38:25,047	[INFO]	363	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 05:38:26,070	[INFO]	364	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:38:29,520	[INFO]	365	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '=='})
2020-12-31 05:38:30,574	[INFO]	366	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:38:31,452	[INFO]	367	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:38:32,463	[INFO]	368	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:38:33,497	[INFO]	369	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:38:34,542	[INFO]	370	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:38:35,601	[INFO]	371	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:38:36,631	[INFO]	372	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 05:38:37,495	[INFO]	373	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:38:38,521	[INFO]	374	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:38:39,563	[INFO]	375	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:38:40,592	[INFO]	376	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:38:41,674	[INFO]	377	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:38:45,297	[INFO]	378	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:38:45,299	[INFO]	379	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:38:45,300	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:38:45,301	[INFO]	380	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:38:45,301	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:38:48,801	[INFO]	381	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:38:49,834	[INFO]	382	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:38:49,835	[INFO]	383	SUCCESS	 4.0	
2020-12-31 05:38:50,874	[INFO]	384	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:38:51,924	[INFO]	385	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:38:55,430	[INFO]	386	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:38:56,477	[INFO]	387	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:38:57,525	[INFO]	388	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:38:58,597	[INFO]	389	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 05:38:59,610	[INFO]	390	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:39:00,596	[INFO]	391	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:39:01,657	[INFO]	392	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:39:05,116	[INFO]	393	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '>='})
2020-12-31 05:39:06,123	[INFO]	394	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:39:09,591	[INFO]	395	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:39:09,592	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     upright = 0;
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
***************
*** 32,37 ****
--- 33,39 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:39:09,593	[INFO]	396	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:39:09,593	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:39:09,594	[INFO]	397	SUCCESS	 4.0	
2020-12-31 05:39:10,611	[INFO]	398	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:39:11,632	[INFO]	399	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:39:12,695	[INFO]	400	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:39:16,258	[INFO]	401	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:39:19,610	[INFO]	402	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:39:20,476	[INFO]	403	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:39:21,519	[INFO]	404	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:39:22,515	[INFO]	405	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:39:23,569	[INFO]	406	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:39:27,068	[INFO]	407	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 05:39:27,069	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,36 ****
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
!                     upright = 0;
                  }
                  row.add(upleft+upright);
              }
              rows.add(row);
--- 29,37 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
!                     upright = rows.get(r-1).get(c);
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:39:27,070	[INFO]	408	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:39:27,071	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:39:27,072	[INFO]	409	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '<'})
2020-12-31 05:39:27,072	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:39:27,073	[INFO]	410	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:39:27,074	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:39:27,074	[INFO]	411	SUCCESS	 4.0	
2020-12-31 05:39:28,109	[INFO]	412	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:39:28,111	[INFO]	413	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:39:28,111	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:39:28,112	[INFO]	414	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:39:28,113	[INFO]	415	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:39:28,114	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:39:28,114	[INFO]	416	SUCCESS	 4.0	
2020-12-31 05:39:29,144	[INFO]	417	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 05:39:30,188	[INFO]	418	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:39:31,190	[INFO]	419	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:39:32,215	[INFO]	420	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:39:33,243	[INFO]	421	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:39:34,275	[INFO]	422	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:39:35,310	[INFO]	423	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:39:36,320	[INFO]	424	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:39:37,350	[INFO]	425	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:39:40,846	[INFO]	426	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '!='})
2020-12-31 05:39:40,847	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,27 ****
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c != 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:39:44,364	[INFO]	427	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '!='})
2020-12-31 05:39:45,375	[INFO]	428	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:39:45,377	[INFO]	429	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:39:45,377	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:39:46,241	[INFO]	430	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:39:46,242	[INFO]	431	SUCCESS	 4.0	
2020-12-31 05:39:47,217	[INFO]	432	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:39:50,704	[INFO]	433	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:39:51,719	[INFO]	434	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:39:52,753	[INFO]	435	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:39:53,768	[INFO]	436	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:39:53,772	[INFO]	437	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:39:53,774	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:39:57,247	[INFO]	438	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:40:00,699	[INFO]	439	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:40:00,701	[INFO]	440	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:40:00,702	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:40:00,703	[INFO]	441	SUCCESS	 4.0	
2020-12-31 05:40:01,767	[INFO]	442	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 05:40:02,787	[INFO]	443	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:40:03,836	[INFO]	444	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 05:40:04,864	[INFO]	445	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:40:05,889	[INFO]	446	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 05:40:06,899	[INFO]	447	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:40:10,400	[INFO]	448	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:40:10,402	[INFO]	449	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<'})
2020-12-31 05:40:10,402	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:40:10,403	[INFO]	450	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<'})
2020-12-31 05:40:11,470	[INFO]	451	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:40:11,471	[INFO]	452	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:40:11,472	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:40:14,986	[INFO]	453	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:40:18,426	[INFO]	454	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:40:19,286	[INFO]	455	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:40:22,775	[INFO]	456	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:40:26,290	[INFO]	457	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:40:26,292	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,36 ****
--- 26,38 ----
                  } else {
                      upleft = 0;
                  }
+                 upleft = 0;
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:40:27,323	[INFO]	458	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:40:30,855	[INFO]	459	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '!='})
2020-12-31 05:40:30,857	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,36 ****
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);
              }
              rows.add(row);
--- 21,38 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c != 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
+                 upleft = 0;
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:40:31,931	[INFO]	460	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:40:31,933	[INFO]	461	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:40:31,934	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,36 ****
--- 26,38 ----
                  } else {
                      upleft = 0;
                  }
+                 upleft = 0;
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:40:35,596	[INFO]	462	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:40:37,033	[INFO]	463	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:40:38,497	[INFO]	464	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:40:38,499	[INFO]	465	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:40:38,499	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:40:38,500	[INFO]	466	SUCCESS	 4.0	
2020-12-31 05:40:39,953	[INFO]	467	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:40:41,303	[INFO]	468	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:40:41,307	[INFO]	469	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:40:41,308	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:40:42,594	[INFO]	470	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:40:46,977	[INFO]	471	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:40:46,978	[INFO]	472	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:40:46,979	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:40:48,013	[INFO]	473	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:40:48,015	[INFO]	474	SUCCESS	 4.0	
2020-12-31 05:40:49,044	[INFO]	475	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:40:50,100	[INFO]	476	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:40:51,130	[INFO]	477	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:40:51,132	[INFO]	478	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:40:51,132	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:40:52,132	[INFO]	479	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:40:52,134	[INFO]	480	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:40:52,137	[INFO]	481	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:40:53,188	[INFO]	482	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:40:56,668	[INFO]	483	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:40:56,670	[INFO]	484	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:40:56,671	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:40:57,673	[INFO]	485	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 05:40:57,674	[INFO]	486	SUCCESS	 4.0	
2020-12-31 05:40:58,717	[INFO]	487	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:40:59,543	[INFO]	488	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:40:59,545	[INFO]	489	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:41:00,553	[INFO]	490	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:41:01,626	[INFO]	491	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:41:02,709	[INFO]	492	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:41:02,712	[INFO]	493	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:41:02,713	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:41:02,714	[INFO]	494	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:41:02,714	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:41:03,745	[INFO]	495	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:41:07,229	[INFO]	496	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:41:07,231	[INFO]	497	SUCCESS	 4.0	
2020-12-31 05:41:08,044	[INFO]	498	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:41:11,605	[INFO]	499	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:41:11,606	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,36 ****
--- 27,40 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:41:12,701	[INFO]	500	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 05:41:12,701	[INFO]	==== END ====
2020-12-31 05:41:12,701	[INFO]	Reason: step budget
2020-12-31 05:41:12,702	[INFO]	
2020-12-31 05:41:12,703	[INFO]	========== EPOCH 12 ==========
2020-12-31 05:41:12,703	[INFO]	==== WARMUP ====
2020-12-31 05:41:16,268	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 05:41:16,269	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 05:41:19,749	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 05:41:19,750	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 05:41:23,217	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 05:41:23,217	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 05:41:26,748	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-31 05:41:26,748	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 05:41:26,749	[INFO]	==== START ====
2020-12-31 05:41:27,784	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:41:28,789	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:41:32,305	[INFO]	3	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:41:32,307	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,35 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     init.add(1);
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 05:41:33,320	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:41:33,321	[INFO]	5	SUCCESS	+4.0	
2020-12-31 05:41:33,321	[DEBUG]	
2020-12-31 05:41:34,331	[INFO]	6	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:41:35,366	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:41:36,375	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:41:39,902	[INFO]	9	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:41:39,902	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,36 ****
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
+                 upleft = 0;
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:41:40,969	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:41:42,096	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:41:43,136	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 05:41:43,138	[INFO]	13	SUCCESS	+4.0	
2020-12-31 05:41:43,138	[DEBUG]	
2020-12-31 05:41:44,152	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 05:41:45,191	[INFO]	15	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:41:48,709	[INFO]	16	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:41:48,710	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,39 ****
                  }
                  row.add(upleft+upright);
              }
!             rows.add(row);
          }
  
          return rows;
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
          }
  
          return rows;

2020-12-31 05:41:48,712	[INFO]	17	SUCCESS	+4.0	
2020-12-31 05:41:48,712	[DEBUG]	
2020-12-31 05:41:49,649	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:41:50,482	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:41:51,337	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:41:54,803	[INFO]	21	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:41:54,804	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,32 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 05:41:54,805	[INFO]	22	SUCCESS	+4.0	
2020-12-31 05:41:54,805	[DEBUG]	
2020-12-31 05:41:58,293	[INFO]	23	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '<='})
2020-12-31 05:41:58,294	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,25 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<=r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);

2020-12-31 05:41:58,294	[INFO]	==== END ====
2020-12-31 05:41:58,294	[INFO]	Reason: target fitness reached
2020-12-31 05:41:58,295	[INFO]	
2020-12-31 05:41:58,295	[INFO]	========== EPOCH 13 ==========
2020-12-31 05:41:58,295	[INFO]	==== WARMUP ====
2020-12-31 05:42:01,836	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 05:42:01,837	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 05:42:05,244	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 05:42:05,244	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 05:42:08,755	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 05:42:08,755	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 05:42:12,186	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-31 05:42:12,186	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 05:42:12,186	[INFO]	==== START ====
2020-12-31 05:42:15,653	[INFO]	1	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:42:15,655	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 init.add(1);
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {

2020-12-31 05:42:16,739	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:42:16,741	[INFO]	3	SUCCESS	+4.0	
2020-12-31 05:42:16,741	[DEBUG]	
2020-12-31 05:42:16,742	[INFO]	4	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:42:16,742	[DEBUG]	
2020-12-31 05:42:17,794	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 12)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:42:21,252	[INFO]	6	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 12)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:42:21,254	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 36,41 ****
--- 36,43 ----
              rows.add(row);
          }
  
+         ArrayList<Integer> row = new ArrayList<Integer>();
+ 
          return rows;
      }
  }

2020-12-31 05:42:22,271	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 12)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:42:23,270	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 12)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:42:24,286	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 12)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:42:24,287	[INFO]	10	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:42:24,287	[DEBUG]	
2020-12-31 05:42:24,288	[INFO]	11	SUCCESS	+4.0	
2020-12-31 05:42:24,288	[DEBUG]	
2020-12-31 05:42:25,338	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:42:26,380	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:42:27,410	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:42:28,433	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:42:31,954	[INFO]	16	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:42:31,955	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     rows.add(row);
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 05:42:32,983	[INFO]	17	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:42:32,985	[INFO]	18	SUCCESS	+4.0	
2020-12-31 05:42:32,985	[DEBUG]	
2020-12-31 05:42:36,486	[INFO]	19	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:42:37,533	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:42:41,060	[INFO]	21	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:42:41,061	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,39 ****
                  }
                  row.add(upleft+upright);
              }
!             rows.add(row);
          }
  
          return rows;
--- 33,39 ----
                  }
                  row.add(upleft+upright);
              }
!             init.add(1);
          }
  
          return rows;

2020-12-31 05:42:41,062	[INFO]	22	SUCCESS	+4.0	
2020-12-31 05:42:41,062	[DEBUG]	
2020-12-31 05:42:42,135	[INFO]	23	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:42:45,554	[INFO]	24	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:42:45,555	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,33 ****
                      upleft = 0;
                  }
                  if (c < r) {
!                     upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
--- 27,33 ----
                      upleft = 0;
                  }
                  if (c < r) {
!                     return rows;
                  } else {
                      upright = 0;
                  }

2020-12-31 05:42:46,584	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:42:47,614	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:42:47,615	[INFO]	27	SUCCESS	+4.0	
2020-12-31 05:42:47,615	[DEBUG]	
2020-12-31 05:42:48,653	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:42:49,698	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:42:50,713	[INFO]	30	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:42:51,726	[INFO]	31	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:42:52,751	[INFO]	32	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:42:53,782	[INFO]	33	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 05:42:54,812	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:42:55,807	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:42:59,461	[INFO]	36	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:42:59,462	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  } else {
                      upleft = 0;
                  }
+                 rows.add(row);
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 05:42:59,463	[INFO]	37	SUCCESS	+4.0	
2020-12-31 05:42:59,463	[DEBUG]	
2020-12-31 05:43:00,509	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:43:04,047	[INFO]	39	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:43:05,080	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:43:08,578	[INFO]	41	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:43:08,579	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             int upleft, upright;
              rows.add(row);
          }
  

2020-12-31 05:43:08,580	[INFO]	42	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:43:08,581	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             int upleft, upright;
              rows.add(row);
          }
  

2020-12-31 05:43:09,601	[INFO]	43	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:43:09,602	[INFO]	44	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:43:09,603	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             int upleft, upright;
              rows.add(row);
          }
  

2020-12-31 05:43:10,456	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:43:10,457	[INFO]	46	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:43:10,458	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             int upleft, upright;
              rows.add(row);
          }
  

2020-12-31 05:43:11,333	[INFO]	47	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:43:12,363	[INFO]	48	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:43:13,409	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:43:14,417	[INFO]	50	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:43:14,419	[INFO]	51	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:43:14,419	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             int upleft, upright;
              rows.add(row);
          }
  

2020-12-31 05:43:14,420	[INFO]	52	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:43:14,421	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             int upleft, upright;
              rows.add(row);
          }
  

2020-12-31 05:43:14,422	[INFO]	53	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:43:14,422	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             int upleft, upright;
              rows.add(row);
          }
  

2020-12-31 05:43:14,423	[INFO]	54	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:43:14,424	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             int upleft, upright;
              rows.add(row);
          }
  

2020-12-31 05:43:14,425	[INFO]	55	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:43:14,425	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             int upleft, upright;
              rows.add(row);
          }
  

2020-12-31 05:43:15,449	[INFO]	56	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 05:43:15,451	[INFO]	57	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:43:15,452	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             int upleft, upright;
              rows.add(row);
          }
  

2020-12-31 05:43:15,452	[INFO]	58	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:43:15,453	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             int upleft, upright;
              rows.add(row);
          }
  

2020-12-31 05:43:15,454	[INFO]	59	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:43:15,454	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             int upleft, upright;
              rows.add(row);
          }
  

2020-12-31 05:43:15,455	[INFO]	60	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:43:15,456	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             int upleft, upright;
              rows.add(row);
          }
  

2020-12-31 05:43:16,479	[INFO]	61	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:43:17,480	[INFO]	62	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:43:17,482	[INFO]	63	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '<'})
2020-12-31 05:43:17,483	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             int upleft, upright;
              rows.add(row);
          }
  

2020-12-31 05:43:17,484	[INFO]	64	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:43:17,484	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             int upleft, upright;
              rows.add(row);
          }
  

2020-12-31 05:43:20,975	[INFO]	65	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:43:20,977	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,32 ****
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
--- 21,35 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c < 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
                  if (c < r) {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 05:43:24,538	[INFO]	66	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:43:24,539	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,32 ****
--- 27,35 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 05:43:24,540	[INFO]	67	SUCCESS	+4.0	
2020-12-31 05:43:24,540	[DEBUG]	
2020-12-31 05:43:25,537	[INFO]	68	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:43:26,567	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:43:30,057	[INFO]	70	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:43:30,058	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,32 ****
--- 27,35 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 05:43:31,109	[INFO]	71	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:43:31,110	[INFO]	72	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:43:31,111	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,32 ****
--- 27,35 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 05:43:31,112	[INFO]	73	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:43:31,113	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,32 ****
--- 27,35 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 05:43:32,174	[INFO]	74	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:43:33,200	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:43:33,202	[INFO]	76	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:43:33,203	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,32 ****
--- 27,35 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 05:43:36,616	[INFO]	77	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:43:36,617	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,32 ****
--- 27,35 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
***************
*** 36,41 ****
--- 39,46 ----
              rows.add(row);
          }
  
+         ArrayList<Integer> row = new ArrayList<Integer>();
+ 
          return rows;
      }
  }

2020-12-31 05:43:40,080	[INFO]	78	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:43:40,081	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,32 ****
--- 24,38 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                      upleft = 0;
                  }
                  if (c < r) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
***************
*** 36,41 ****
--- 42,49 ----
              rows.add(row);
          }
  
+         ArrayList<Integer> row = new ArrayList<Integer>();
+ 
          return rows;
      }
  }

2020-12-31 05:43:41,109	[INFO]	79	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:43:44,657	[INFO]	80	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:43:44,659	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,32 ****
--- 21,39 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 rows.add(row);
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                      upleft = 0;
                  }
                  if (c < r) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
***************
*** 36,41 ****
--- 43,50 ----
              rows.add(row);
          }
  
+         ArrayList<Integer> row = new ArrayList<Integer>();
+ 
          return rows;
      }
  }

2020-12-31 05:43:45,682	[INFO]	81	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:43:46,729	[INFO]	82	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:43:46,732	[INFO]	83	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:43:46,734	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,32 ****
--- 21,39 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 rows.add(row);
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                      upleft = 0;
                  }
                  if (c < r) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
***************
*** 36,41 ****
--- 43,50 ----
              rows.add(row);
          }
  
+         ArrayList<Integer> row = new ArrayList<Integer>();
+ 
          return rows;
      }
  }

2020-12-31 05:43:46,736	[INFO]	84	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:43:46,737	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,32 ****
--- 24,38 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                      upleft = 0;
                  }
                  if (c < r) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
***************
*** 36,41 ****
--- 42,49 ----
              rows.add(row);
          }
  
+         ArrayList<Integer> row = new ArrayList<Integer>();
+ 
          return rows;
      }
  }

2020-12-31 05:43:47,570	[INFO]	85	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 05:43:51,055	[INFO]	86	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:43:51,056	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,32 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                      upleft = 0;
                  }
                  if (c < r) {
***************
*** 36,41 ****
--- 39,46 ----
              rows.add(row);
          }
  
+         ArrayList<Integer> row = new ArrayList<Integer>();
+ 
          return rows;
      }
  }

2020-12-31 05:43:52,067	[INFO]	87	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:43:55,556	[INFO]	88	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:43:55,557	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 36,41 ****
--- 36,43 ----
              rows.add(row);
          }
  
+         ArrayList<Integer> row = new ArrayList<Integer>();
+ 
          return rows;
      }
  }

2020-12-31 05:43:56,580	[INFO]	89	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:43:56,581	[INFO]	90	SUCCESS	+4.0	
2020-12-31 05:43:56,582	[DEBUG]	
2020-12-31 05:44:00,095	[INFO]	91	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '>'})
2020-12-31 05:44:00,096	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 17,23 ****
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
--- 17,23 ----
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r>n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;

2020-12-31 05:44:01,115	[INFO]	92	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:44:01,116	[INFO]	93	SUCCESS	+4.0	
2020-12-31 05:44:01,117	[DEBUG]	
2020-12-31 05:44:02,174	[INFO]	94	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:44:05,697	[INFO]	95	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:44:05,698	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,35 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     rows.add(init);
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 05:44:05,699	[INFO]	96	SUCCESS	+4.0	
2020-12-31 05:44:05,699	[DEBUG]	
2020-12-31 05:44:06,674	[INFO]	97	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:44:07,692	[INFO]	98	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:44:07,695	[INFO]	99	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 05:44:07,696	[DEBUG]	
2020-12-31 05:44:08,713	[INFO]	100	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 16)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:44:09,727	[INFO]	101	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 16)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:44:09,728	[INFO]	102	SUCCESS	+4.0	
2020-12-31 05:44:09,728	[DEBUG]	
2020-12-31 05:44:10,734	[INFO]	103	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:44:11,762	[INFO]	104	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:44:12,782	[INFO]	105	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:44:13,799	[INFO]	106	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 05:44:13,800	[INFO]	107	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '>'})
2020-12-31 05:44:13,800	[DEBUG]	
2020-12-31 05:44:13,801	[INFO]	108	SUCCESS	+4.0	
2020-12-31 05:44:13,801	[DEBUG]	
2020-12-31 05:44:14,862	[INFO]	109	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:44:15,899	[INFO]	110	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:44:16,924	[INFO]	111	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:44:20,399	[INFO]	112	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 05:44:20,400	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,39 ----
                  }
                  row.add(upleft+upright);
              }
+             int upleft, upright;
              rows.add(row);
          }
  

2020-12-31 05:44:23,919	[INFO]	113	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '!='})
2020-12-31 05:44:23,920	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,38 ****
                  } else {
                      upleft = 0;
                  }
!                 if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);
              }
              rows.add(row);
          }
  
--- 26,39 ----
                  } else {
                      upleft = 0;
                  }
!                 if (c != r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);
              }
+             int upleft, upright;
              rows.add(row);
          }
  

2020-12-31 05:44:27,392	[INFO]	114	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '!='})
2020-12-31 05:44:27,393	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,32 ****
                  } else {
                      upleft = 0;
                  }
!                 if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
--- 26,32 ----
                  } else {
                      upleft = 0;
                  }
!                 if (c != r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 05:44:27,394	[INFO]	115	SUCCESS	+4.0	
2020-12-31 05:44:27,394	[DEBUG]	
2020-12-31 05:44:28,452	[INFO]	116	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:44:29,458	[INFO]	117	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:44:32,960	[INFO]	118	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:44:32,961	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 rows.add(init);
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {

2020-12-31 05:44:36,496	[INFO]	119	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:44:36,497	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,31 ****
--- 21,33 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 rows.add(init);
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
+                 rows.add(row);
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 05:44:40,078	[INFO]	120	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:44:40,079	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 rows.add(row);
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {

2020-12-31 05:44:40,080	[INFO]	121	SUCCESS	+4.0	
2020-12-31 05:44:40,080	[DEBUG]	
2020-12-31 05:44:43,616	[INFO]	122	SUCCESS	 5.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:44:44,627	[INFO]	123	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 05:44:48,225	[INFO]	124	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:44:48,226	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,34 ----
                  } else {
                      upleft = 0;
                  }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 05:44:49,240	[INFO]	125	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:44:49,244	[INFO]	126	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:44:49,244	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,34 ----
                  } else {
                      upleft = 0;
                  }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 05:44:50,309	[INFO]	127	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:44:50,313	[INFO]	128	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:44:50,314	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,34 ----
                  } else {
                      upleft = 0;
                  }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 05:44:53,790	[INFO]	129	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:44:53,791	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,34 ****
--- 26,38 ----
                  } else {
                      upleft = 0;
                  }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     upleft = 0;
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 05:44:54,820	[INFO]	130	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:44:54,821	[INFO]	131	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:44:54,822	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,34 ----
                  } else {
                      upleft = 0;
                  }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 05:44:54,823	[INFO]	132	SUCCESS	+4.0	
2020-12-31 05:44:54,823	[DEBUG]	
2020-12-31 05:44:55,847	[INFO]	133	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:44:56,883	[INFO]	134	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:44:57,918	[INFO]	135	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:44:58,938	[INFO]	136	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:44:59,970	[INFO]	137	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:45:01,023	[INFO]	138	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:45:04,505	[INFO]	139	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:45:04,506	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,36 ****
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
+                 rows.add(init);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:45:07,989	[INFO]	140	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:45:07,990	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upleft = rows.get(r-1).get(c-1);
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
***************
*** 31,36 ****
--- 32,38 ----
                  } else {
                      upright = 0;
                  }
+                 rows.add(init);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:45:07,992	[INFO]	141	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:45:07,993	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upleft = rows.get(r-1).get(c-1);
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
***************
*** 31,36 ****
--- 32,38 ----
                  } else {
                      upright = 0;
                  }
+                 rows.add(init);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:45:09,043	[INFO]	142	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:45:12,572	[INFO]	143	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:45:12,573	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upleft = rows.get(r-1).get(c-1);
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {

2020-12-31 05:45:13,599	[INFO]	144	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 05:45:14,640	[INFO]	145	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:45:14,642	[INFO]	146	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:45:14,643	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upleft = rows.get(r-1).get(c-1);
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {

2020-12-31 05:45:14,644	[INFO]	147	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:45:14,644	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upleft = rows.get(r-1).get(c-1);
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {

2020-12-31 05:45:14,645	[INFO]	148	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:45:14,646	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upleft = rows.get(r-1).get(c-1);
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {

2020-12-31 05:45:14,646	[INFO]	149	SUCCESS	+4.0	
2020-12-31 05:45:14,646	[DEBUG]	
2020-12-31 05:45:15,686	[INFO]	150	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:45:16,707	[INFO]	151	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:45:17,737	[INFO]	152	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:45:18,748	[INFO]	153	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:45:19,784	[INFO]	154	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:45:20,821	[INFO]	155	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:45:21,844	[INFO]	156	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:45:22,866	[INFO]	157	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:45:23,909	[INFO]	158	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:45:24,952	[INFO]	159	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:45:26,005	[INFO]	160	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:45:27,053	[INFO]	161	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:45:30,559	[INFO]	162	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:45:30,561	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,39 ----
                  }
                  row.add(upleft+upright);
              }
+             init.add(1);
              rows.add(row);
          }
  

2020-12-31 05:45:30,563	[INFO]	163	SUCCESS	+4.0	
2020-12-31 05:45:30,563	[DEBUG]	
2020-12-31 05:45:31,590	[INFO]	164	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:45:32,608	[INFO]	165	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:45:33,628	[INFO]	166	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:45:34,636	[INFO]	167	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:45:38,291	[INFO]	168	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:45:38,292	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
+                 rows.add(row);
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);

2020-12-31 05:45:41,817	[INFO]	169	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:45:41,819	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
+                 rows.add(row);
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
***************
*** 33,39 ****
                  }
                  row.add(upleft+upright);
              }
!             rows.add(row);
          }
  
          return rows;
--- 34,40 ----
                  }
                  row.add(upleft+upright);
              }
!             int upleft, upright;
          }
  
          return rows;

2020-12-31 05:45:42,861	[INFO]	170	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 05:45:46,354	[INFO]	171	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:45:46,355	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,39 ****
                  }
                  row.add(upleft+upright);
              }
!             rows.add(row);
          }
  
          return rows;
--- 33,39 ----
                  }
                  row.add(upleft+upright);
              }
!             int upleft, upright;
          }
  
          return rows;

2020-12-31 05:45:46,356	[INFO]	172	SUCCESS	+4.0	
2020-12-31 05:45:46,356	[DEBUG]	
2020-12-31 05:45:49,813	[INFO]	173	SUCCESS	*3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:45:49,814	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:45:49,815	[INFO]	174	SUCCESS	 4.0	
2020-12-31 05:45:50,844	[INFO]	175	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:45:54,349	[INFO]	176	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:45:55,401	[INFO]	177	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:45:58,927	[INFO]	178	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '=='})
2020-12-31 05:45:59,963	[INFO]	179	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 05:46:00,820	[INFO]	180	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:46:01,865	[INFO]	181	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:46:01,867	[INFO]	182	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:46:02,912	[INFO]	183	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:46:03,949	[INFO]	184	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:46:07,435	[INFO]	185	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:46:07,436	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,32 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                      upleft = 0;
                  }
                  if (c < r) {
***************
*** 32,37 ****
--- 35,41 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:46:10,928	[INFO]	186	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '=='})
2020-12-31 05:46:10,929	[INFO]	187	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:46:10,930	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:46:10,930	[INFO]	188	SUCCESS	 4.0	
2020-12-31 05:46:14,397	[INFO]	189	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '>='})
2020-12-31 05:46:17,943	[INFO]	190	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:46:17,944	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,41 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:46:21,438	[INFO]	191	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:46:21,439	[INFO]	192	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:46:21,440	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:46:21,440	[INFO]	193	SUCCESS	 4.0	
2020-12-31 05:46:21,442	[INFO]	194	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:46:21,442	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,41 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:46:21,443	[INFO]	195	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:46:21,444	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:46:21,444	[INFO]	196	SUCCESS	 4.0	
2020-12-31 05:46:25,008	[INFO]	197	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:46:26,027	[INFO]	198	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 05:46:27,050	[INFO]	199	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:46:28,104	[INFO]	200	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:46:29,147	[INFO]	201	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:46:30,210	[INFO]	202	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:46:33,656	[INFO]	203	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:46:37,111	[INFO]	204	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:46:40,602	[INFO]	205	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:46:40,603	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     rows.add(init);
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
***************
*** 32,37 ****
--- 33,39 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:46:44,150	[INFO]	206	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:46:45,157	[INFO]	207	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:46:45,159	[INFO]	208	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:46:45,159	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:46:45,160	[INFO]	209	SUCCESS	 4.0	
2020-12-31 05:46:45,162	[INFO]	210	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:46:48,693	[INFO]	211	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:46:48,694	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     init.add(1);
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
***************
*** 32,37 ****
--- 33,39 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:46:52,192	[INFO]	212	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:46:55,617	[INFO]	213	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:46:55,619	[INFO]	214	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:46:55,619	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:46:56,642	[INFO]	215	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:46:57,690	[INFO]	216	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 05:46:58,709	[INFO]	217	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:47:02,258	[INFO]	218	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:47:02,260	[INFO]	219	SUCCESS	 4.0	
2020-12-31 05:47:03,290	[INFO]	220	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:47:04,328	[INFO]	221	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:47:05,360	[INFO]	222	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:47:06,204	[INFO]	223	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:47:07,217	[INFO]	224	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:47:08,231	[INFO]	225	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:47:09,264	[INFO]	226	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:47:10,085	[INFO]	227	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:47:10,087	[INFO]	228	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 05:47:11,126	[INFO]	229	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:47:12,139	[INFO]	230	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:47:13,185	[INFO]	231	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:47:14,208	[INFO]	232	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:47:17,666	[INFO]	233	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:47:17,668	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,36 ****
--- 29,38 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     upleft = 0;
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:47:21,142	[INFO]	234	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:47:22,168	[INFO]	235	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:47:23,194	[INFO]	236	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:47:26,730	[INFO]	237	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:47:26,731	[INFO]	238	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:47:26,732	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:47:30,219	[INFO]	239	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:47:30,220	[INFO]	240	SUCCESS	 4.0	
2020-12-31 05:47:33,724	[INFO]	241	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:47:33,726	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,36 ****
--- 29,38 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     rows.add(init);
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:47:37,184	[INFO]	242	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:47:38,197	[INFO]	243	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:47:38,199	[INFO]	244	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:47:38,200	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:47:39,239	[INFO]	245	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 05:47:40,339	[INFO]	246	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:47:40,340	[INFO]	247	SUCCESS	 4.0	
2020-12-31 05:47:41,187	[INFO]	248	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:47:42,246	[INFO]	249	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:47:43,091	[INFO]	250	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:47:44,102	[INFO]	251	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:47:45,140	[INFO]	252	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:47:46,195	[INFO]	253	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:47:49,637	[INFO]	254	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:47:53,110	[INFO]	255	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:47:54,142	[INFO]	256	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:47:55,196	[INFO]	257	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:47:56,246	[INFO]	258	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:47:57,280	[INFO]	259	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:47:58,314	[INFO]	260	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:48:01,836	[INFO]	261	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:48:01,837	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,36 ****
--- 27,40 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:48:05,367	[INFO]	262	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:48:05,369	[INFO]	263	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:48:05,369	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:48:05,370	[INFO]	264	SUCCESS	 4.0	
2020-12-31 05:48:06,394	[INFO]	265	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:48:09,829	[INFO]	266	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:48:10,835	[INFO]	267	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:48:14,328	[INFO]	268	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:48:14,329	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upright = 0;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
***************
*** 32,37 ****
--- 33,39 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:48:17,857	[INFO]	269	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:48:17,858	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upright = 0;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
***************
*** 29,36 ****
--- 30,39 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     init.add(1);
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:48:17,859	[INFO]	270	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:48:17,860	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upright = 0;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
***************
*** 32,37 ****
--- 33,39 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:48:18,887	[INFO]	271	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:48:19,920	[INFO]	272	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:48:19,922	[INFO]	273	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:48:19,922	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:48:20,968	[INFO]	274	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:48:20,970	[INFO]	275	SUCCESS	 4.0	
2020-12-31 05:48:22,021	[INFO]	276	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:48:25,546	[INFO]	277	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:48:26,565	[INFO]	278	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:48:27,600	[INFO]	279	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:48:31,103	[INFO]	280	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:48:31,105	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,32 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                      upleft = 0;
                  }
                  if (c < r) {
***************
*** 32,37 ****
--- 35,41 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:48:32,110	[INFO]	281	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:48:33,121	[INFO]	282	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:48:34,158	[INFO]	283	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:48:34,161	[INFO]	284	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:48:34,161	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,32 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                      upleft = 0;
                  }
                  if (c < r) {
***************
*** 32,37 ****
--- 35,41 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:48:34,163	[INFO]	285	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:48:34,163	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,32 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                      upleft = 0;
                  }
                  if (c < r) {
***************
*** 32,37 ****
--- 35,41 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:48:35,224	[INFO]	286	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:48:36,240	[INFO]	287	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:48:36,242	[INFO]	288	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:48:36,243	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,32 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                      upleft = 0;
                  }
                  if (c < r) {
***************
*** 32,37 ****
--- 35,41 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:48:36,244	[INFO]	289	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:48:36,245	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,32 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                      upleft = 0;
                  }
                  if (c < r) {
***************
*** 32,37 ****
--- 35,41 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:48:39,751	[INFO]	290	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:48:39,753	[INFO]	291	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:48:39,753	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:48:40,775	[INFO]	292	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:48:40,777	[INFO]	293	SUCCESS	 4.0	
2020-12-31 05:48:41,915	[INFO]	294	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 05:48:42,980	[INFO]	295	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:48:46,528	[INFO]	296	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:48:47,568	[INFO]	297	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:48:51,058	[INFO]	298	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '>'})
2020-12-31 05:48:52,094	[INFO]	299	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:48:53,127	[INFO]	300	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:48:53,129	[INFO]	301	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:48:53,130	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:48:53,131	[INFO]	302	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:48:53,131	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:48:54,138	[INFO]	303	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:48:55,161	[INFO]	304	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:48:55,162	[INFO]	305	SUCCESS	 4.0	
2020-12-31 05:48:56,205	[INFO]	306	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:48:57,208	[INFO]	307	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:49:00,742	[INFO]	308	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:49:01,782	[INFO]	309	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:49:02,821	[INFO]	310	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:49:03,848	[INFO]	311	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:49:07,297	[INFO]	312	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:49:08,350	[INFO]	313	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:49:09,407	[INFO]	314	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:49:10,438	[INFO]	315	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:49:11,483	[INFO]	316	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:49:12,557	[INFO]	317	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:49:12,559	[INFO]	318	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:49:12,560	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:49:12,560	[INFO]	319	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:49:12,561	[INFO]	320	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:49:12,562	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:49:12,562	[INFO]	321	SUCCESS	 4.0	
2020-12-31 05:49:13,590	[INFO]	322	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 05:49:17,050	[INFO]	323	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:49:18,064	[INFO]	324	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:49:21,558	[INFO]	325	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:49:25,064	[INFO]	326	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:49:28,544	[INFO]	327	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:49:32,097	[INFO]	328	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '<='})
2020-12-31 05:49:35,598	[INFO]	329	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:49:36,659	[INFO]	330	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:49:40,156	[INFO]	331	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:49:43,731	[INFO]	332	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:49:44,740	[INFO]	333	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 05:49:45,794	[INFO]	334	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:49:46,844	[INFO]	335	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:49:47,853	[INFO]	336	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:49:48,881	[INFO]	337	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 05:49:49,887	[INFO]	338	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:49:50,928	[INFO]	339	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:49:51,979	[INFO]	340	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:49:52,834	[INFO]	341	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:49:56,363	[INFO]	342	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:49:59,864	[INFO]	343	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:50:00,877	[INFO]	344	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:50:01,910	[INFO]	345	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:50:02,984	[INFO]	346	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:50:04,049	[INFO]	347	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:50:04,051	[INFO]	348	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 05:50:07,544	[INFO]	349	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:50:07,545	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     upright = 0;
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
***************
*** 32,37 ****
--- 33,39 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:50:11,023	[INFO]	350	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:50:11,025	[INFO]	351	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:50:11,026	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:50:12,061	[INFO]	352	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:50:15,566	[INFO]	353	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:50:15,567	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,32 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                      upleft = 0;
                  }
                  if (c < r) {
***************
*** 32,37 ****
--- 35,41 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:50:16,596	[INFO]	354	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:50:20,168	[INFO]	355	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:50:21,184	[INFO]	356	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:50:22,185	[INFO]	357	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:50:22,186	[INFO]	358	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:50:22,187	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:50:23,047	[INFO]	359	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:50:24,060	[INFO]	360	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:50:27,568	[INFO]	361	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:50:28,611	[INFO]	362	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:50:29,648	[INFO]	363	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:50:29,650	[INFO]	364	SUCCESS	 4.0	
2020-12-31 05:50:29,652	[INFO]	365	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:50:30,689	[INFO]	366	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:50:34,225	[INFO]	367	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:50:35,380	[INFO]	368	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:50:36,739	[INFO]	369	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:50:38,207	[INFO]	370	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:50:39,621	[INFO]	371	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:50:40,740	[INFO]	372	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:50:41,876	[INFO]	373	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:50:42,912	[INFO]	374	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:50:43,983	[INFO]	375	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:50:47,488	[INFO]	376	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:50:47,489	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     init.add(1);
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
***************
*** 32,37 ****
--- 33,39 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:50:48,542	[INFO]	377	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:50:52,040	[INFO]	378	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:50:53,067	[INFO]	379	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:50:53,068	[INFO]	380	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:50:53,069	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:50:53,069	[INFO]	381	SUCCESS	 4.0	
2020-12-31 05:50:54,098	[INFO]	382	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:50:55,120	[INFO]	383	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:50:56,153	[INFO]	384	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:50:56,156	[INFO]	385	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:50:56,157	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:50:57,192	[INFO]	386	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:50:58,201	[INFO]	387	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:50:58,202	[INFO]	388	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:50:58,203	[INFO]	389	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:50:58,204	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:50:59,253	[INFO]	390	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:51:00,299	[INFO]	391	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:51:01,306	[INFO]	392	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:51:01,307	[INFO]	393	SUCCESS	 4.0	
2020-12-31 05:51:04,835	[INFO]	394	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:51:05,881	[INFO]	395	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:51:06,891	[INFO]	396	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:51:22,738	[INFO]	397	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '>='})
2020-12-31 05:51:26,271	[INFO]	398	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:51:27,307	[INFO]	399	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:51:28,327	[INFO]	400	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:51:29,337	[INFO]	401	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:51:30,365	[INFO]	402	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:51:31,193	[INFO]	403	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:51:32,192	[INFO]	404	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 05:51:33,004	[INFO]	405	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 05:51:34,033	[INFO]	406	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:51:37,523	[INFO]	407	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:51:37,524	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 23,28 ****
--- 23,29 ----
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
+                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
***************
*** 32,37 ****
--- 33,39 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:51:38,542	[INFO]	408	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:51:38,543	[INFO]	409	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:51:38,544	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:51:38,544	[INFO]	410	SUCCESS	 4.0	
2020-12-31 05:51:39,594	[INFO]	411	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:51:40,642	[INFO]	412	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:51:41,729	[INFO]	413	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:51:42,800	[INFO]	414	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:51:46,307	[INFO]	415	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:51:47,328	[INFO]	416	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 05:51:47,330	[INFO]	417	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:51:47,331	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:51:48,345	[INFO]	418	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 05:51:48,347	[INFO]	419	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:51:49,368	[INFO]	420	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:51:50,422	[INFO]	421	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:51:50,424	[INFO]	422	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:51:50,424	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:51:50,425	[INFO]	423	SUCCESS	 4.0	
2020-12-31 05:51:51,465	[INFO]	424	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:51:52,545	[INFO]	425	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:51:53,584	[INFO]	426	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:51:54,598	[INFO]	427	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:51:55,632	[INFO]	428	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:51:56,694	[INFO]	429	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:51:56,696	[INFO]	430	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:51:57,757	[INFO]	431	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 05:52:01,253	[INFO]	432	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:52:01,255	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,36 ****
--- 29,40 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:52:01,256	[INFO]	433	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:52:01,256	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:52:02,376	[INFO]	434	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:52:02,378	[INFO]	435	SUCCESS	 4.0	
2020-12-31 05:52:05,903	[INFO]	436	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:52:05,905	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,36 ****
--- 29,38 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     init.add(1);
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:52:06,922	[INFO]	437	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:52:07,940	[INFO]	438	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:52:07,941	[INFO]	439	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:52:07,942	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:52:09,000	[INFO]	440	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:52:12,488	[INFO]	441	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:52:12,489	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 30,36 ****
--- 30,38 ----
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
+                     upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:52:16,023	[INFO]	442	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:52:19,518	[INFO]	443	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:52:20,593	[INFO]	444	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:52:24,072	[INFO]	445	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:52:25,155	[INFO]	446	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 05:52:26,024	[INFO]	447	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:52:27,031	[INFO]	448	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 05:52:27,033	[INFO]	449	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:52:27,033	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:52:27,034	[INFO]	450	SUCCESS	 4.0	
2020-12-31 05:52:28,105	[INFO]	451	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:52:29,124	[INFO]	452	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:52:32,628	[INFO]	453	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:52:32,630	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 23,28 ****
--- 23,29 ----
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
+                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
***************
*** 32,37 ****
--- 33,39 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:52:36,114	[INFO]	454	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:52:36,116	[INFO]	455	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:52:36,116	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:52:36,968	[INFO]	456	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:52:36,969	[INFO]	457	SUCCESS	 4.0	
2020-12-31 05:52:40,467	[INFO]	458	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:52:40,469	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,32 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                      upleft = 0;
                  }
                  if (c < r) {
***************
*** 32,37 ****
--- 35,41 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:52:44,018	[INFO]	459	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:52:44,020	[INFO]	460	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:52:44,020	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:52:44,021	[INFO]	461	SUCCESS	 4.0	
2020-12-31 05:52:44,022	[INFO]	462	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:52:45,094	[INFO]	463	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:52:45,096	[INFO]	464	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:52:45,097	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 23,28 ****
--- 23,29 ----
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
+                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
***************
*** 32,37 ****
--- 33,39 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:52:46,130	[INFO]	465	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:52:46,132	[INFO]	466	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:52:47,178	[INFO]	467	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:52:47,180	[INFO]	468	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:52:47,180	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:52:47,181	[INFO]	469	SUCCESS	 4.0	
2020-12-31 05:52:48,195	[INFO]	470	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:52:49,235	[INFO]	471	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:52:50,269	[INFO]	472	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:52:53,686	[INFO]	473	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:52:54,515	[INFO]	474	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:52:55,504	[INFO]	475	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:52:56,539	[INFO]	476	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:52:57,390	[INFO]	477	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:52:58,421	[INFO]	478	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:52:59,540	[INFO]	479	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:53:03,220	[INFO]	480	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:53:06,652	[INFO]	481	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:53:06,653	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,36 ****
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
!                     upright = 0;
                  }
                  row.add(upleft+upright);
              }
              rows.add(row);
--- 29,37 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
!                     return rows;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:53:06,654	[INFO]	482	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:53:06,654	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:53:06,655	[INFO]	483	SUCCESS	 4.0	
2020-12-31 05:53:07,646	[INFO]	484	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:53:11,138	[INFO]	485	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:53:14,605	[INFO]	486	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:53:18,076	[INFO]	487	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:53:18,077	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,36 ****
--- 29,38 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     rows.add(init);
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:53:21,551	[INFO]	488	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '>'})
2020-12-31 05:53:22,570	[INFO]	489	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:53:26,122	[INFO]	490	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:53:26,125	[INFO]	491	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:53:26,126	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:53:27,155	[INFO]	492	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:53:27,161	[INFO]	493	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '>'})
2020-12-31 05:53:27,163	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:53:27,165	[INFO]	494	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:53:27,168	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 05:53:27,170	[INFO]	495	SUCCESS	 4.0	
2020-12-31 05:53:28,220	[INFO]	496	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:53:29,252	[INFO]	497	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:53:30,281	[INFO]	498	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:53:31,327	[INFO]	499	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:53:32,350	[INFO]	500	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:53:32,351	[INFO]	==== END ====
2020-12-31 05:53:32,351	[INFO]	Reason: step budget
2020-12-31 05:53:32,352	[INFO]	
2020-12-31 05:53:32,352	[INFO]	========== EPOCH 14 ==========
2020-12-31 05:53:32,353	[INFO]	==== WARMUP ====
2020-12-31 05:53:35,847	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 05:53:35,848	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 05:53:39,384	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 05:53:39,384	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 05:53:43,594	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 05:53:43,594	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 05:53:48,400	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-31 05:53:48,401	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 05:53:48,401	[INFO]	==== START ====
2020-12-31 05:53:51,919	[INFO]	1	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:53:51,920	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,39 ****
                  }
                  row.add(upleft+upright);
              }
!             rows.add(row);
          }
  
          return rows;
--- 33,39 ----
                  }
                  row.add(upleft+upright);
              }
!             rows.add(init);
          }
  
          return rows;

2020-12-31 05:53:52,934	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:53:54,043	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:53:54,044	[INFO]	4	SUCCESS	+4.0	
2020-12-31 05:53:54,045	[DEBUG]	
2020-12-31 05:53:57,622	[INFO]	5	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:53:57,623	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     upright = rows.get(r-1).get(c);
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 05:54:01,091	[INFO]	6	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:54:01,093	[INFO]	7	SUCCESS	+4.0	
2020-12-31 05:54:01,093	[DEBUG]	
2020-12-31 05:54:04,564	[INFO]	8	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:54:04,565	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     rows.add(row);
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 05:54:08,103	[INFO]	9	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:54:08,104	[INFO]	10	SUCCESS	+4.0	
2020-12-31 05:54:08,105	[DEBUG]	
2020-12-31 05:54:08,934	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:54:12,453	[INFO]	12	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '>='})
2020-12-31 05:54:12,453	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,27 ****
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c >= 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 05:54:12,454	[INFO]	13	SUCCESS	+4.0	
2020-12-31 05:54:12,455	[DEBUG]	
2020-12-31 05:54:13,490	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:54:17,095	[INFO]	15	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:54:17,096	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
!                 upleft = rows.get(r-1).get(c-1);
              }
              rows.add(row);
          }

2020-12-31 05:54:17,097	[INFO]	16	SUCCESS	+4.0	
2020-12-31 05:54:17,097	[DEBUG]	
2020-12-31 05:54:18,107	[INFO]	17	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 05:54:21,586	[INFO]	18	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:54:25,063	[INFO]	19	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:54:25,064	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upright = rows.get(r-1).get(c);
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {

2020-12-31 05:54:25,065	[INFO]	20	SUCCESS	+4.0	
2020-12-31 05:54:25,065	[DEBUG]	
2020-12-31 05:54:28,550	[INFO]	21	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:54:28,550	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,28 ****
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
--- 22,28 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
!                     return rows;
                  } else {
                      upleft = 0;
                  }

2020-12-31 05:54:31,969	[INFO]	22	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:54:31,970	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,28 ****
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
--- 22,29 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
!                     rows.add(init);
!                     return rows;
                  } else {
                      upleft = 0;
                  }

2020-12-31 05:54:31,971	[INFO]	23	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:54:31,971	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,28 ****
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
--- 22,28 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
!                     return rows;
                  } else {
                      upleft = 0;
                  }

2020-12-31 05:54:33,005	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:54:34,051	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:54:37,579	[INFO]	26	SUCCESS	 5.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:54:37,580	[INFO]	27	SUCCESS	+4.0	
2020-12-31 05:54:37,581	[DEBUG]	
2020-12-31 05:54:41,072	[INFO]	28	SUCCESS	*3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:54:41,073	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:54:41,073	[INFO]	29	SUCCESS	 4.0	
2020-12-31 05:54:42,141	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:54:43,252	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:54:46,805	[INFO]	32	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:54:46,806	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 28,33 ****
--- 28,50 ----
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }

2020-12-31 05:54:46,807	[INFO]	33	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:54:46,808	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 28,33 ****
--- 28,50 ----
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }

2020-12-31 05:54:47,852	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:54:47,853	[INFO]	35	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:54:47,854	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:54:47,855	[INFO]	36	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:54:47,855	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:54:47,856	[INFO]	37	SUCCESS	 4.0	
2020-12-31 05:54:48,869	[INFO]	38	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:54:52,393	[INFO]	39	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '!='})
2020-12-31 05:54:52,394	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 17,24 ****
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
--- 17,38 ----
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r!=n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 05:54:52,395	[INFO]	40	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:54:52,396	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:54:53,419	[INFO]	41	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 05:54:53,421	[INFO]	42	SUCCESS	 4.0	
2020-12-31 05:54:54,446	[INFO]	43	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:54:57,983	[INFO]	44	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:54:57,984	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,41 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upright = rows.get(r-1).get(c);
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {

2020-12-31 05:54:57,985	[INFO]	45	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:54:57,985	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:54:59,057	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:54:59,059	[INFO]	47	SUCCESS	 4.0	
2020-12-31 05:55:02,612	[INFO]	48	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:55:02,613	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,44 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 05:55:06,044	[INFO]	49	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:55:07,079	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:55:08,114	[INFO]	51	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:55:08,116	[INFO]	52	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:55:08,117	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,44 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 05:55:08,118	[INFO]	53	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:55:08,119	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:55:11,686	[INFO]	54	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:55:12,697	[INFO]	55	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:55:13,729	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:55:14,741	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:55:14,743	[INFO]	58	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:55:14,744	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:55:14,745	[INFO]	59	SUCCESS	 4.0	
2020-12-31 05:55:15,775	[INFO]	60	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:55:16,831	[INFO]	61	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:55:17,851	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:55:18,889	[INFO]	63	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:55:19,909	[INFO]	64	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:55:23,460	[INFO]	65	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:55:27,009	[INFO]	66	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:55:28,013	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:55:31,525	[INFO]	68	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:55:35,037	[INFO]	69	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:55:35,039	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,49 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     upleft = rows.get(r-1).get(c-1);
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 05:55:35,042	[INFO]	70	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:55:35,043	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,49 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     upleft = rows.get(r-1).get(c-1);
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 05:55:35,044	[INFO]	71	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:55:35,045	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:55:35,046	[INFO]	72	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:55:35,046	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:55:35,048	[INFO]	73	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:55:35,048	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:55:35,049	[INFO]	74	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:55:35,050	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:55:35,050	[INFO]	75	SUCCESS	 4.0	
2020-12-31 05:55:38,757	[INFO]	76	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:55:42,315	[INFO]	77	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:55:43,341	[INFO]	78	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:55:44,382	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:55:45,440	[INFO]	80	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:55:46,486	[INFO]	81	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:55:47,535	[INFO]	82	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:55:48,573	[INFO]	83	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 05:55:49,605	[INFO]	84	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 05:55:50,658	[INFO]	85	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:55:50,660	[INFO]	86	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:55:50,663	[INFO]	87	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:55:50,664	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:55:51,713	[INFO]	88	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 05:55:52,722	[INFO]	89	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:55:53,771	[INFO]	90	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:55:53,773	[INFO]	91	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:55:53,774	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:55:53,774	[INFO]	92	SUCCESS	 4.0	
2020-12-31 05:55:54,556	[INFO]	93	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:55:55,585	[INFO]	94	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:55:59,060	[INFO]	95	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:56:00,091	[INFO]	96	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:56:03,599	[INFO]	97	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:56:03,601	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,48 ----
                  } else {
                      upleft = 0;
                  }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 05:56:07,101	[INFO]	98	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:56:07,102	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,51 ----
                  } else {
                      upleft = 0;
                  }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 05:56:08,132	[INFO]	99	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:56:09,196	[INFO]	100	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:56:12,663	[INFO]	101	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:56:13,686	[INFO]	102	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:56:13,688	[INFO]	103	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:56:13,689	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,48 ----
                  } else {
                      upleft = 0;
                  }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 05:56:17,210	[INFO]	104	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '!='})
2020-12-31 05:56:17,213	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,41 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             for (int c=0; c!=r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 05:56:20,658	[INFO]	105	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:56:20,661	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,42 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             for (int c=0; c!=r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     rows.add(init);
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 05:56:20,664	[INFO]	106	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:56:20,666	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,42 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             for (int c=0; c!=r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     rows.add(init);
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 05:56:21,732	[INFO]	107	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:56:22,792	[INFO]	108	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:56:26,362	[INFO]	109	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:56:26,363	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,45 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     rows.add(init);
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 05:56:27,392	[INFO]	110	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:56:30,941	[INFO]	111	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:56:30,943	[INFO]	112	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:56:30,944	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,45 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     rows.add(init);
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 05:56:34,443	[INFO]	113	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:56:34,444	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,42 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     rows.add(init);
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 05:56:34,445	[INFO]	114	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:56:34,446	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:56:35,481	[INFO]	115	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:56:35,482	[INFO]	116	SUCCESS	 4.0	
2020-12-31 05:56:36,365	[INFO]	117	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:56:37,362	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:56:40,913	[INFO]	119	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '<='})
2020-12-31 05:56:40,915	[INFO]	120	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:56:40,915	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:56:41,967	[INFO]	121	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:56:45,546	[INFO]	122	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:56:45,547	[INFO]	123	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:56:45,548	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:56:45,549	[INFO]	124	SUCCESS	 4.0	
2020-12-31 05:56:46,413	[INFO]	125	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:56:47,423	[INFO]	126	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:56:51,004	[INFO]	127	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:56:51,006	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,41 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     return rows;
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 05:56:54,478	[INFO]	128	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:56:54,479	[INFO]	129	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:56:54,480	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:56:55,562	[INFO]	130	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:56:55,563	[INFO]	131	SUCCESS	 4.0	
2020-12-31 05:56:59,066	[INFO]	132	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:57:00,069	[INFO]	133	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:57:01,114	[INFO]	134	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:57:02,180	[INFO]	135	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:57:02,182	[INFO]	136	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '<'})
2020-12-31 05:57:02,183	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:57:02,183	[INFO]	137	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:57:02,184	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:57:02,185	[INFO]	138	SUCCESS	 4.0	
2020-12-31 05:57:03,212	[INFO]	139	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 05:57:03,214	[INFO]	140	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:57:03,215	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:57:03,216	[INFO]	141	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:57:03,216	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:57:03,217	[INFO]	142	SUCCESS	 4.0	
2020-12-31 05:57:06,633	[INFO]	143	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:57:10,100	[INFO]	144	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:57:13,619	[INFO]	145	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:57:14,668	[INFO]	146	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:57:15,501	[INFO]	147	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:57:16,525	[INFO]	148	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:57:20,046	[INFO]	149	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:57:23,553	[INFO]	150	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:57:23,555	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,46 ----
                  } else {
                      upleft = 0;
                  }
+                 upright = rows.get(r-1).get(c);
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 05:57:24,419	[INFO]	151	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:57:27,919	[INFO]	152	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:57:31,483	[INFO]	153	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:57:32,547	[INFO]	154	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:57:36,076	[INFO]	155	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:57:37,086	[INFO]	156	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:57:38,108	[INFO]	157	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 05:57:39,180	[INFO]	158	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:57:40,236	[INFO]	159	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:57:41,311	[INFO]	160	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:57:42,361	[INFO]	161	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:57:43,404	[INFO]	162	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:57:46,913	[INFO]	163	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:57:46,915	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,45 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 upright = rows.get(r-1).get(c);
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 05:57:46,916	[INFO]	164	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:57:46,917	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,45 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 upright = rows.get(r-1).get(c);
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 05:57:46,918	[INFO]	165	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:57:46,919	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,45 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 upright = rows.get(r-1).get(c);
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 05:57:47,951	[INFO]	166	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 05:57:49,002	[INFO]	167	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:57:49,004	[INFO]	168	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 05:57:49,005	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,45 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 upright = rows.get(r-1).get(c);
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 05:57:50,025	[INFO]	169	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 05:57:50,027	[INFO]	170	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:57:50,029	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,45 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 upright = rows.get(r-1).get(c);
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 05:57:50,030	[INFO]	171	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:57:50,031	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,45 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 upright = rows.get(r-1).get(c);
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 05:57:53,500	[INFO]	172	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:57:53,501	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,46 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 upright = rows.get(r-1).get(c);
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     row.add(upleft+upright);
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 05:57:54,563	[INFO]	173	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:57:54,565	[INFO]	174	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:57:54,566	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,45 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 upright = rows.get(r-1).get(c);
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 05:57:54,568	[INFO]	175	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:57:54,569	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,45 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 upright = rows.get(r-1).get(c);
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 05:57:58,056	[INFO]	176	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:57:58,058	[INFO]	177	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:57:58,059	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,45 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 upright = rows.get(r-1).get(c);
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 05:58:01,607	[INFO]	178	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:58:01,609	[INFO]	179	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:58:01,609	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,46 ----
                  } else {
                      upleft = 0;
                  }
+                 upright = rows.get(r-1).get(c);
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 05:58:01,611	[INFO]	180	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:58:01,612	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,46 ----
                  } else {
                      upleft = 0;
                  }
+                 upright = rows.get(r-1).get(c);
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 05:58:02,617	[INFO]	181	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:58:02,619	[INFO]	182	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:58:02,620	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,46 ----
                  } else {
                      upleft = 0;
                  }
+                 upright = rows.get(r-1).get(c);
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 05:58:03,669	[INFO]	183	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:58:03,673	[INFO]	184	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:58:03,674	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,46 ----
                  } else {
                      upleft = 0;
                  }
+                 upright = rows.get(r-1).get(c);
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 05:58:04,529	[INFO]	185	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 05:58:05,560	[INFO]	186	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:58:05,562	[INFO]	187	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:58:05,562	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:58:05,563	[INFO]	188	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:58:05,564	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:58:05,564	[INFO]	189	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:58:05,565	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:58:05,565	[INFO]	190	SUCCESS	 4.0	
2020-12-31 05:58:06,428	[INFO]	191	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:58:07,494	[INFO]	192	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:58:10,991	[INFO]	193	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:58:10,993	[INFO]	194	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:58:10,994	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:58:14,534	[INFO]	195	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:58:15,569	[INFO]	196	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:58:19,072	[INFO]	197	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:58:20,116	[INFO]	198	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:58:21,188	[INFO]	199	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 05:58:21,189	[INFO]	200	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:58:21,190	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:58:22,200	[INFO]	201	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 05:58:25,720	[INFO]	202	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:58:25,721	[INFO]	203	SUCCESS	 4.0	
2020-12-31 05:58:26,748	[INFO]	204	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:58:27,821	[INFO]	205	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:58:28,886	[INFO]	206	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:58:32,406	[INFO]	207	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:58:32,407	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,36 ****
--- 31,51 ----
                  } else {
                      upright = 0;
                  }
+                 upright = rows.get(r-1).get(c);
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 05:58:35,905	[INFO]	208	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:58:35,906	[INFO]	209	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:58:35,907	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:58:35,908	[INFO]	210	SUCCESS	 4.0	
2020-12-31 05:58:36,947	[INFO]	211	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:58:37,982	[INFO]	212	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:58:41,674	[INFO]	213	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:58:45,179	[INFO]	214	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:58:46,052	[INFO]	215	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:58:47,088	[INFO]	216	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:58:48,128	[INFO]	217	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 05:58:49,177	[INFO]	218	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 05:58:50,230	[INFO]	219	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:58:51,077	[INFO]	220	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 05:58:52,107	[INFO]	221	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 05:58:53,136	[INFO]	222	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 05:58:54,159	[INFO]	223	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:58:55,165	[INFO]	224	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 05:58:56,217	[INFO]	225	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:58:57,231	[INFO]	226	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 05:58:58,288	[INFO]	227	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:59:01,812	[INFO]	228	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:59:02,838	[INFO]	229	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 05:59:02,841	[INFO]	230	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:59:02,841	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:59:03,869	[INFO]	231	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 05:59:07,398	[INFO]	232	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 05:59:07,400	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,48 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     upright = rows.get(r-1).get(c);
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 05:59:07,404	[INFO]	233	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16)}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:59:07,406	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,48 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     upright = rows.get(r-1).get(c);
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 05:59:08,463	[INFO]	234	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16)}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:59:09,498	[INFO]	235	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16)}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 05:59:10,550	[INFO]	236	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16)}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 05:59:11,608	[INFO]	237	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16)}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:59:11,609	[INFO]	238	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:59:11,610	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:59:12,678	[INFO]	239	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:59:13,751	[INFO]	240	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:59:14,791	[INFO]	241	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:59:14,793	[INFO]	242	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:59:14,793	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:59:15,860	[INFO]	243	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:59:19,343	[INFO]	244	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 05:59:20,388	[INFO]	245	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:59:21,411	[INFO]	246	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 05:59:22,422	[INFO]	247	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:59:23,491	[INFO]	248	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:59:27,024	[INFO]	249	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:59:28,049	[INFO]	250	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 05:59:29,100	[INFO]	251	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:59:29,101	[INFO]	252	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:59:29,102	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:59:30,138	[INFO]	253	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:59:30,140	[INFO]	254	SUCCESS	 4.0	
2020-12-31 05:59:31,153	[INFO]	255	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 05:59:34,644	[INFO]	256	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 05:59:35,648	[INFO]	257	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 05:59:36,690	[INFO]	258	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 05:59:37,723	[INFO]	259	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 05:59:41,310	[INFO]	260	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:59:41,311	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,48 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     return rows;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 05:59:41,312	[INFO]	261	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:59:41,312	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:59:42,378	[INFO]	262	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 05:59:43,458	[INFO]	263	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 05:59:44,479	[INFO]	264	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 05:59:44,480	[INFO]	265	SUCCESS	 4.0	
2020-12-31 05:59:45,541	[INFO]	266	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 05:59:46,576	[INFO]	267	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 05:59:47,604	[INFO]	268	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 05:59:48,643	[INFO]	269	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:59:49,495	[INFO]	270	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:59:50,514	[INFO]	271	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 05:59:51,552	[INFO]	272	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:59:52,408	[INFO]	273	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:59:53,458	[INFO]	274	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 05:59:53,459	[INFO]	275	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:59:54,490	[INFO]	276	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 05:59:54,493	[INFO]	277	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 05:59:57,979	[INFO]	278	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 05:59:59,050	[INFO]	279	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 05:59:59,052	[INFO]	280	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 05:59:59,052	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:59:59,053	[INFO]	281	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:59:59,054	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:59:59,922	[INFO]	282	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 05:59:59,923	[INFO]	283	SUCCESS	 4.0	
2020-12-31 05:59:59,924	[INFO]	284	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 05:59:59,925	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:59:59,926	[INFO]	285	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 05:59:59,926	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 05:59:59,927	[INFO]	286	SUCCESS	 4.0	
2020-12-31 06:00:00,945	[INFO]	287	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:00:00,947	[INFO]	288	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:00:00,947	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:00:01,974	[INFO]	289	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:00:01,976	[INFO]	290	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:00:01,977	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:00:01,977	[INFO]	291	SUCCESS	 4.0	
2020-12-31 06:00:01,979	[INFO]	292	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:00:01,979	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:00:03,055	[INFO]	293	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:00:06,556	[INFO]	294	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:00:06,557	[INFO]	295	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:00:06,558	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:00:07,589	[INFO]	296	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:00:07,590	[INFO]	297	SUCCESS	 4.0	
2020-12-31 06:00:08,625	[INFO]	298	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:00:12,109	[INFO]	299	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:00:12,110	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,40 ****
--- 33,56 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
+ 
+         int upleft, upright;
  
          return rows;
      }

2020-12-31 06:00:12,111	[INFO]	300	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:00:12,111	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:00:13,135	[INFO]	301	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:00:14,165	[INFO]	302	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:00:15,163	[INFO]	303	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:00:16,190	[INFO]	304	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:00:16,192	[INFO]	305	SUCCESS	 4.0	
2020-12-31 06:00:19,642	[INFO]	306	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:00:19,643	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,41 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     return rows;
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 06:00:20,654	[INFO]	307	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:00:24,220	[INFO]	308	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:00:24,221	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,44 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     return rows;
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 06:00:25,270	[INFO]	309	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:00:25,272	[INFO]	310	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:00:25,273	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,41 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     return rows;
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 06:00:28,772	[INFO]	311	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:00:29,817	[INFO]	312	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:00:29,818	[INFO]	313	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:00:29,819	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:00:30,867	[INFO]	314	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:00:31,941	[INFO]	315	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:00:31,943	[INFO]	316	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:00:31,944	[INFO]	317	SUCCESS	 4.0	
2020-12-31 06:00:32,941	[INFO]	318	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:00:33,970	[INFO]	319	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:00:35,049	[INFO]	320	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:00:36,432	[INFO]	321	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 06:00:37,870	[INFO]	322	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:00:37,872	[INFO]	323	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:00:37,873	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,41 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     return rows;
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 06:00:39,042	[INFO]	324	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:00:43,726	[INFO]	325	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:00:47,989	[INFO]	326	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:00:47,990	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,42 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     return rows;
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     init.add(1);
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 06:00:49,009	[INFO]	327	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:00:49,011	[INFO]	328	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:00:49,011	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,41 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     return rows;
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 06:00:50,048	[INFO]	329	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:00:50,050	[INFO]	330	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:00:50,052	[INFO]	331	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:00:50,053	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:00:50,054	[INFO]	332	SUCCESS	 4.0	
2020-12-31 06:00:53,550	[INFO]	333	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:00:53,552	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 25,30 ****
--- 25,45 ----
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);

2020-12-31 06:00:54,574	[INFO]	334	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:00:55,645	[INFO]	335	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:00:55,647	[INFO]	336	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:00:55,647	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:00:55,649	[INFO]	337	SUCCESS	 4.0	
2020-12-31 06:00:59,058	[INFO]	338	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:01:00,103	[INFO]	339	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:01:03,606	[INFO]	340	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:01:03,607	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,44 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     upright = rows.get(r-1).get(c);
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 06:01:07,143	[INFO]	341	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:01:08,180	[INFO]	342	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:01:08,184	[INFO]	343	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:01:08,184	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:01:08,185	[INFO]	344	SUCCESS	 4.0	
2020-12-31 06:01:09,209	[INFO]	345	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:01:12,731	[INFO]	346	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:01:13,757	[INFO]	347	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:01:14,580	[INFO]	348	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:01:15,623	[INFO]	349	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:01:15,625	[INFO]	350	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:01:15,625	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:01:16,675	[INFO]	351	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:01:20,227	[INFO]	352	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:01:21,239	[INFO]	353	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:01:22,276	[INFO]	354	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:01:25,761	[INFO]	355	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:01:25,762	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,40 ****
--- 33,56 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
+ 
+         ArrayList<Integer> row = new ArrayList<Integer>();
  
          return rows;
      }

2020-12-31 06:01:25,764	[INFO]	356	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:01:25,765	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,40 ****
--- 33,56 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
+ 
+         ArrayList<Integer> row = new ArrayList<Integer>();
  
          return rows;
      }

2020-12-31 06:01:29,287	[INFO]	357	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:01:32,801	[INFO]	358	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:01:32,803	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,32 ****
--- 27,49 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
***************
*** 36,41 ****
--- 53,60 ----
              rows.add(row);
          }
  
+         ArrayList<Integer> row = new ArrayList<Integer>();
+ 
          return rows;
      }
  }

2020-12-31 06:01:32,804	[INFO]	359	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:01:32,805	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,32 ****
--- 27,49 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
***************
*** 36,41 ****
--- 53,60 ----
              rows.add(row);
          }
  
+         ArrayList<Integer> row = new ArrayList<Integer>();
+ 
          return rows;
      }
  }

2020-12-31 06:01:36,369	[INFO]	360	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:01:39,841	[INFO]	361	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:01:39,842	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,32 ****
--- 27,49 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = rows.get(r-1).get(c);
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
***************
*** 36,41 ****
--- 53,60 ----
              rows.add(row);
          }
  
+         ArrayList<Integer> row = new ArrayList<Integer>();
+ 
          return rows;
      }
  }

2020-12-31 06:01:39,844	[INFO]	362	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:01:39,845	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,32 ****
--- 27,49 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = rows.get(r-1).get(c);
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
***************
*** 36,41 ****
--- 53,60 ----
              rows.add(row);
          }
  
+         ArrayList<Integer> row = new ArrayList<Integer>();
+ 
          return rows;
      }
  }

2020-12-31 06:01:40,906	[INFO]	363	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:01:42,020	[INFO]	364	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:01:45,546	[INFO]	365	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:01:45,548	[INFO]	366	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:01:45,549	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,32 ****
--- 27,49 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = rows.get(r-1).get(c);
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
***************
*** 36,41 ****
--- 53,60 ----
              rows.add(row);
          }
  
+         ArrayList<Integer> row = new ArrayList<Integer>();
+ 
          return rows;
      }
  }

2020-12-31 06:01:45,550	[INFO]	367	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:01:46,619	[INFO]	368	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:01:50,106	[INFO]	369	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:01:50,107	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,32 ****
--- 27,49 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = rows.get(r-1).get(c);
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 06:01:53,593	[INFO]	370	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:01:53,595	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,32 ****
--- 27,49 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 06:01:54,637	[INFO]	371	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 06:01:55,702	[INFO]	372	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:01:56,723	[INFO]	373	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:01:57,754	[INFO]	374	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:02:01,221	[INFO]	375	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:02:04,709	[INFO]	376	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:02:05,739	[INFO]	377	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:02:06,788	[INFO]	378	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:02:10,244	[INFO]	379	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:02:10,245	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,32 ****
--- 27,49 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 06:02:10,247	[INFO]	380	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:02:10,247	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,32 ****
--- 27,49 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 06:02:10,248	[INFO]	381	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:02:10,249	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,32 ****
--- 27,49 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 06:02:11,294	[INFO]	382	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:02:11,296	[INFO]	383	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:02:11,297	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,32 ****
--- 27,49 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
***************
*** 36,41 ****
--- 53,60 ----
              rows.add(row);
          }
  
+         ArrayList<Integer> row = new ArrayList<Integer>();
+ 
          return rows;
      }
  }

2020-12-31 06:02:14,813	[INFO]	384	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:02:14,814	[INFO]	385	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:02:14,815	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,40 ****
--- 33,56 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
+ 
+         ArrayList<Integer> row = new ArrayList<Integer>();
  
          return rows;
      }

2020-12-31 06:02:18,275	[INFO]	386	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:02:18,277	[INFO]	387	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:02:18,279	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:02:19,315	[INFO]	388	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:02:20,343	[INFO]	389	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:02:20,345	[INFO]	390	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:02:20,346	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:02:23,990	[INFO]	391	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:02:23,992	[INFO]	392	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:02:23,992	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:02:23,993	[INFO]	393	SUCCESS	 4.0	
2020-12-31 06:02:25,043	[INFO]	394	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:02:26,084	[INFO]	395	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:02:27,125	[INFO]	396	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:02:27,127	[INFO]	397	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:02:27,128	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:02:28,140	[INFO]	398	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:02:31,651	[INFO]	399	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:02:31,652	[INFO]	400	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:02:31,653	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:02:32,686	[INFO]	401	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:02:32,688	[INFO]	402	SUCCESS	 4.0	
2020-12-31 06:02:36,113	[INFO]	403	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:02:36,114	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,49 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     upleft = 0;
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 06:02:37,141	[INFO]	404	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:02:40,601	[INFO]	405	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:02:40,603	[INFO]	406	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:02:40,603	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:02:40,604	[INFO]	407	SUCCESS	 4.0	
2020-12-31 06:02:40,605	[INFO]	408	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:02:40,605	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:02:40,606	[INFO]	409	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:02:40,607	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:02:41,657	[INFO]	410	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:02:42,693	[INFO]	411	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:02:43,717	[INFO]	412	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:02:44,726	[INFO]	413	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:02:44,728	[INFO]	414	SUCCESS	 4.0	
2020-12-31 06:02:45,774	[INFO]	415	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:02:49,269	[INFO]	416	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:02:49,271	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,48 ----
                  } else {
                      upleft = 0;
                  }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 06:02:49,273	[INFO]	417	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:02:49,273	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:02:52,759	[INFO]	418	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:02:52,762	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,36 ****
--- 31,51 ----
                  } else {
                      upright = 0;
                  }
+                 upright = rows.get(r-1).get(c);
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 06:02:56,200	[INFO]	419	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:02:56,202	[INFO]	420	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:02:56,203	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:02:57,226	[INFO]	421	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:02:57,228	[INFO]	422	SUCCESS	 4.0	
2020-12-31 06:03:00,782	[INFO]	423	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:03:01,830	[INFO]	424	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:03:02,914	[INFO]	425	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:03:03,949	[INFO]	426	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:03:07,413	[INFO]	427	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:03:08,272	[INFO]	428	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:03:08,273	[INFO]	429	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:03:08,274	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:03:08,276	[INFO]	430	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:03:08,277	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:03:08,277	[INFO]	431	SUCCESS	 4.0	
2020-12-31 06:03:09,314	[INFO]	432	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:03:10,341	[INFO]	433	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:03:10,343	[INFO]	434	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:03:11,359	[INFO]	435	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:03:14,847	[INFO]	436	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:03:18,307	[INFO]	437	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:03:19,321	[INFO]	438	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:03:22,817	[INFO]	439	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:03:23,830	[INFO]	440	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:03:23,832	[INFO]	441	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:03:23,832	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:03:27,370	[INFO]	442	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:03:28,402	[INFO]	443	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:03:31,902	[INFO]	444	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:03:32,947	[INFO]	445	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:03:34,002	[INFO]	446	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:03:34,003	[INFO]	447	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:03:34,004	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:03:34,005	[INFO]	448	SUCCESS	 4.0	
2020-12-31 06:03:35,028	[INFO]	449	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:03:38,579	[INFO]	450	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:03:42,129	[INFO]	451	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:03:43,150	[INFO]	452	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:03:44,187	[INFO]	453	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:03:47,667	[INFO]	454	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:03:51,247	[INFO]	455	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<='})
2020-12-31 06:03:51,248	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,45 ----
                  } else {
                      upleft = 0;
                  }
+                 if (c <= r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 06:03:52,260	[INFO]	456	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<='}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:03:55,821	[INFO]	457	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<='})
2020-12-31 06:03:56,828	[INFO]	458	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:03:57,882	[INFO]	459	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<='}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:03:57,884	[INFO]	460	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:03:57,884	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:03:58,930	[INFO]	461	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:03:59,956	[INFO]	462	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:04:03,444	[INFO]	463	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:04:03,445	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,41 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     return rows;
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 06:04:07,026	[INFO]	464	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:04:08,057	[INFO]	465	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:04:08,059	[INFO]	466	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:04:08,059	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:04:08,060	[INFO]	467	SUCCESS	 4.0	
2020-12-31 06:04:08,941	[INFO]	468	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:04:12,499	[INFO]	469	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '<='})
2020-12-31 06:04:13,534	[INFO]	470	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:04:13,536	[INFO]	471	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:04:13,536	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:04:14,562	[INFO]	472	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:04:15,601	[INFO]	473	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:04:16,617	[INFO]	474	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:04:17,654	[INFO]	475	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:04:17,655	[INFO]	476	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:04:18,703	[INFO]	477	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 06:04:18,704	[INFO]	478	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:04:18,705	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:04:18,707	[INFO]	479	SUCCESS	 4.0	
2020-12-31 06:04:18,709	[INFO]	480	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:04:18,711	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:04:19,705	[INFO]	481	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 06:04:19,707	[INFO]	482	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:04:19,708	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:04:19,710	[INFO]	483	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:04:19,710	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:04:19,711	[INFO]	484	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:04:19,711	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:04:20,771	[INFO]	485	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:04:21,799	[INFO]	486	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:04:21,800	[INFO]	487	SUCCESS	 4.0	
2020-12-31 06:04:25,340	[INFO]	488	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:04:26,355	[INFO]	489	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:04:27,395	[INFO]	490	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:04:27,398	[INFO]	491	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '<'})
2020-12-31 06:04:27,398	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:04:27,399	[INFO]	492	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '<'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:04:27,400	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:04:27,400	[INFO]	493	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '<'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:04:27,401	[INFO]	494	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '<'})
2020-12-31 06:04:27,402	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:04:27,403	[INFO]	495	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '>'})
2020-12-31 06:04:27,404	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:04:28,434	[INFO]	496	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:04:29,472	[INFO]	497	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '>'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:04:29,474	[INFO]	498	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '>'})
2020-12-31 06:04:29,474	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:04:29,475	[INFO]	499	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:04:29,476	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:04:30,527	[INFO]	500	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:04:30,527	[INFO]	==== END ====
2020-12-31 06:04:30,527	[INFO]	Reason: step budget
2020-12-31 06:04:30,529	[INFO]	
2020-12-31 06:04:30,529	[INFO]	========== EPOCH 15 ==========
2020-12-31 06:04:30,529	[INFO]	==== WARMUP ====
2020-12-31 06:04:33,995	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 06:04:33,995	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 06:04:37,516	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 06:04:37,516	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 06:04:40,964	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 06:04:40,964	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 06:04:44,617	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-31 06:04:44,617	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 06:04:44,618	[INFO]	==== START ====
2020-12-31 06:04:45,613	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:04:46,636	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:04:47,669	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:04:51,164	[INFO]	4	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '>='})
2020-12-31 06:04:51,166	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,27 ****
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c >= 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 06:04:51,168	[INFO]	5	SUCCESS	+4.0	
2020-12-31 06:04:51,169	[DEBUG]	
2020-12-31 06:04:52,175	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:04:53,186	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:04:54,033	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:04:55,073	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:04:56,126	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:04:57,143	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:04:58,218	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:05:01,725	[INFO]	13	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:05:01,727	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,36 ****
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
+                 upright = rows.get(r-1).get(c);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 06:05:02,803	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:05:03,806	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:05:03,807	[INFO]	16	SUCCESS	+4.0	
2020-12-31 06:05:03,807	[DEBUG]	
2020-12-31 06:05:04,857	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:05:05,698	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:05:06,687	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:05:07,543	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:05:08,542	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:05:09,542	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:05:10,576	[INFO]	23	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:05:11,603	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:05:15,157	[INFO]	25	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:05:15,161	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 25,30 ****
--- 25,31 ----
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
+                     upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);

2020-12-31 06:05:15,164	[INFO]	26	SUCCESS	+4.0	
2020-12-31 06:05:15,165	[DEBUG]	
2020-12-31 06:05:16,161	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:05:16,163	[INFO]	28	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:05:16,163	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,36 ****
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
+                 upright = rows.get(r-1).get(c);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 06:05:16,164	[INFO]	29	SUCCESS	+4.0	
2020-12-31 06:05:16,164	[DEBUG]	
2020-12-31 06:05:17,174	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:05:20,634	[INFO]	31	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:05:20,634	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     init.add(1);
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 06:05:21,471	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:05:21,473	[INFO]	33	SUCCESS	+4.0	
2020-12-31 06:05:21,473	[DEBUG]	
2020-12-31 06:05:22,474	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:05:23,482	[INFO]	35	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:05:24,566	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:05:25,603	[INFO]	37	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:05:29,071	[INFO]	38	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:05:29,072	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
!                 return rows;
              }
              rows.add(row);
          }

2020-12-31 06:05:29,073	[INFO]	39	SUCCESS	+4.0	
2020-12-31 06:05:29,073	[DEBUG]	
2020-12-31 06:05:30,108	[INFO]	40	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:05:33,614	[INFO]	41	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:05:33,615	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             rows.add(row);
              rows.add(row);
          }
  

2020-12-31 06:05:33,615	[INFO]	42	SUCCESS	+4.0	
2020-12-31 06:05:33,616	[DEBUG]	
2020-12-31 06:05:34,627	[INFO]	43	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:05:35,840	[INFO]	44	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:05:36,898	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:05:37,912	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:05:38,787	[INFO]	47	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:05:42,320	[INFO]	48	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:05:42,321	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upleft = 0;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {

2020-12-31 06:05:42,322	[INFO]	49	SUCCESS	+4.0	
2020-12-31 06:05:42,322	[DEBUG]	
2020-12-31 06:05:45,782	[INFO]	50	SUCCESS	 5.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:05:46,795	[INFO]	51	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:05:46,796	[INFO]	52	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:05:46,797	[DEBUG]	
2020-12-31 06:05:46,797	[INFO]	53	SUCCESS	+4.0	
2020-12-31 06:05:46,798	[DEBUG]	
2020-12-31 06:05:47,822	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:05:48,840	[INFO]	55	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:05:49,883	[INFO]	56	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:05:53,365	[INFO]	57	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:05:53,365	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,39 ****
                  }
                  row.add(upleft+upright);
              }
!             rows.add(row);
          }
  
          return rows;
--- 33,39 ----
                  }
                  row.add(upleft+upright);
              }
!             init.add(1);
          }
  
          return rows;

2020-12-31 06:05:56,827	[INFO]	58	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:05:56,829	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,30 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
***************
*** 33,39 ****
                  }
                  row.add(upleft+upright);
              }
!             rows.add(row);
          }
  
          return rows;
--- 36,42 ----
                  }
                  row.add(upleft+upright);
              }
!             init.add(1);
          }
  
          return rows;

2020-12-31 06:06:00,328	[INFO]	59	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:06:00,329	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,30 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 06:06:01,350	[INFO]	60	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:06:04,826	[INFO]	61	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:06:04,827	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,30 ****
--- 22,36 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
+                 }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);

2020-12-31 06:06:04,828	[INFO]	62	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:06:04,829	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,30 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 06:06:04,829	[INFO]	63	SUCCESS	+4.0	
2020-12-31 06:06:04,829	[DEBUG]	
2020-12-31 06:06:05,862	[INFO]	64	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:06:09,383	[INFO]	65	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:06:09,384	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 18,23 ****
--- 18,24 ----
          rows.add(init);
  
          for (int r=1; r<n; r++) {
+             rows.add(init);
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;

2020-12-31 06:06:09,385	[INFO]	66	SUCCESS	+4.0	
2020-12-31 06:06:09,385	[DEBUG]	
2020-12-31 06:06:12,899	[INFO]	67	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:06:12,900	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 25,30 ****
--- 25,31 ----
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
+                     upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);

2020-12-31 06:06:13,920	[INFO]	68	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:06:13,921	[INFO]	69	SUCCESS	+4.0	
2020-12-31 06:06:13,921	[DEBUG]	
2020-12-31 06:06:14,938	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:06:16,037	[INFO]	71	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:06:16,888	[INFO]	72	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:06:17,900	[INFO]	73	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:06:18,937	[INFO]	74	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:06:19,981	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:06:21,015	[INFO]	76	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:06:22,061	[INFO]	77	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:06:25,617	[INFO]	78	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:06:25,618	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,35 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     upright = rows.get(r-1).get(c);
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 06:06:26,650	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:06:27,678	[INFO]	80	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:06:27,680	[INFO]	81	SUCCESS	+4.0	
2020-12-31 06:06:27,680	[DEBUG]	
2020-12-31 06:06:28,708	[INFO]	82	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:06:29,754	[INFO]	83	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:06:29,756	[INFO]	84	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:06:30,781	[INFO]	85	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:06:31,797	[INFO]	86	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:06:32,786	[INFO]	87	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:06:33,775	[INFO]	88	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:06:34,618	[INFO]	89	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:06:35,622	[INFO]	90	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:06:36,668	[INFO]	91	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:06:37,712	[INFO]	92	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:06:41,363	[INFO]	93	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:06:41,365	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,35 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     upleft = 0;
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 06:06:41,366	[INFO]	94	SUCCESS	+4.0	
2020-12-31 06:06:41,366	[DEBUG]	
2020-12-31 06:06:42,439	[INFO]	95	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:06:43,491	[INFO]	96	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:06:44,531	[INFO]	97	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:06:45,558	[INFO]	98	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:06:49,076	[INFO]	99	SUCCESS	*3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:06:49,077	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:06:52,561	[INFO]	100	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:06:52,562	[INFO]	101	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:06:52,563	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:06:53,601	[INFO]	102	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:06:54,613	[INFO]	103	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:06:55,655	[INFO]	104	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:06:56,709	[INFO]	105	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:06:56,711	[INFO]	106	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:06:56,712	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:06:56,713	[INFO]	107	SUCCESS	 4.0	
2020-12-31 06:06:56,715	[INFO]	108	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:06:56,715	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:07:00,158	[INFO]	109	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:07:03,640	[INFO]	110	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:07:03,641	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,49 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     upleft = 0;
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 06:07:04,678	[INFO]	111	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:07:04,680	[INFO]	112	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:07:04,682	[INFO]	113	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:07:04,684	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,49 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     upleft = 0;
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 06:07:04,686	[INFO]	114	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:07:08,144	[INFO]	115	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:07:11,618	[INFO]	116	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:07:11,619	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,52 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     upleft = 0;
+                     upright = 0;
+                 }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 06:07:12,633	[INFO]	117	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:07:13,487	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:07:17,047	[INFO]	119	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:07:17,923	[INFO]	120	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:07:17,925	[INFO]	121	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:07:17,926	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,49 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     upleft = 0;
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 06:07:17,928	[INFO]	122	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:07:18,955	[INFO]	123	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:07:22,468	[INFO]	124	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:07:22,470	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 28,33 ****
--- 28,51 ----
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upleft = 0;
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }

2020-12-31 06:07:25,966	[INFO]	125	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:07:25,968	[INFO]	126	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:07:25,969	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,49 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     upleft = 0;
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 06:07:25,970	[INFO]	127	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:07:25,970	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:07:25,971	[INFO]	128	SUCCESS	 4.0	
2020-12-31 06:07:25,972	[INFO]	129	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:07:25,972	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:07:26,991	[INFO]	130	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:07:30,475	[INFO]	131	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:07:31,505	[INFO]	132	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:07:31,507	[INFO]	133	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:07:31,507	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:07:31,508	[INFO]	134	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:07:31,509	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:07:31,510	[INFO]	135	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:07:31,510	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:07:32,530	[INFO]	136	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:07:33,581	[INFO]	137	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:07:33,584	[INFO]	138	SUCCESS	 4.0	
2020-12-31 06:07:34,606	[INFO]	139	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:07:35,629	[INFO]	140	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:07:39,144	[INFO]	141	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:07:42,923	[INFO]	142	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:07:42,925	[INFO]	143	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:07:42,925	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:07:46,617	[INFO]	144	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:07:47,732	[INFO]	145	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:07:47,735	[INFO]	146	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:07:47,736	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:07:47,738	[INFO]	147	SUCCESS	 4.0	
2020-12-31 06:07:48,823	[INFO]	148	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:07:49,964	[INFO]	149	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:07:51,077	[INFO]	150	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:07:52,126	[INFO]	151	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:07:53,217	[INFO]	152	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:07:53,220	[INFO]	153	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:07:53,220	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:07:56,883	[INFO]	154	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:07:56,884	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,51 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 06:08:00,656	[INFO]	155	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:08:00,658	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,47 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 06:08:01,695	[INFO]	156	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:08:01,698	[INFO]	157	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:08:01,700	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,47 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 06:08:02,726	[INFO]	158	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:08:06,262	[INFO]	159	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:08:06,264	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,44 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 06:08:09,782	[INFO]	160	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:08:10,827	[INFO]	161	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:08:14,293	[INFO]	162	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:08:15,309	[INFO]	163	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:08:16,326	[INFO]	164	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:08:16,328	[INFO]	165	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:08:16,329	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:08:16,329	[INFO]	166	SUCCESS	 4.0	
2020-12-31 06:08:17,330	[INFO]	167	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:08:18,342	[INFO]	168	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:08:18,344	[INFO]	169	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:08:18,344	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:08:18,345	[INFO]	170	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:08:18,346	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:08:18,346	[INFO]	171	SUCCESS	 4.0	
2020-12-31 06:08:19,386	[INFO]	172	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:08:19,388	[INFO]	173	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:08:22,864	[INFO]	174	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:08:23,923	[INFO]	175	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:08:23,925	[INFO]	176	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:08:23,925	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:08:23,926	[INFO]	177	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:08:23,927	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:08:25,025	[INFO]	178	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:08:26,072	[INFO]	179	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:08:27,076	[INFO]	180	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:08:28,120	[INFO]	181	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:08:28,122	[INFO]	182	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:08:28,122	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:08:28,123	[INFO]	183	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:08:28,124	[INFO]	184	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:08:28,124	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:08:28,125	[INFO]	185	SUCCESS	 4.0	
2020-12-31 06:08:29,154	[INFO]	186	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:08:30,183	[INFO]	187	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:08:31,284	[INFO]	188	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:08:34,807	[INFO]	189	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '<='})
2020-12-31 06:08:35,814	[INFO]	190	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:08:36,854	[INFO]	191	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:08:37,908	[INFO]	192	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:08:41,522	[INFO]	193	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:08:42,576	[INFO]	194	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:08:43,617	[INFO]	195	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:08:47,314	[INFO]	196	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:08:48,404	[INFO]	197	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:08:52,070	[INFO]	198	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 06:08:53,131	[INFO]	199	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:08:56,831	[INFO]	200	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:08:57,920	[INFO]	201	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:08:58,971	[INFO]	202	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:09:00,037	[INFO]	203	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:09:01,070	[INFO]	204	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:09:02,104	[INFO]	205	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:09:05,684	[INFO]	206	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:09:06,681	[INFO]	207	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:09:07,720	[INFO]	208	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:09:11,267	[INFO]	209	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:09:11,269	[INFO]	210	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:09:11,270	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:09:12,087	[INFO]	211	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:09:15,576	[INFO]	212	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:09:15,577	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,49 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     init.add(1);
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 06:09:16,619	[INFO]	213	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:09:17,686	[INFO]	214	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:09:17,688	[INFO]	215	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:09:17,689	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:09:17,690	[INFO]	216	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:09:17,691	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:09:17,691	[INFO]	217	SUCCESS	 4.0	
2020-12-31 06:09:21,187	[INFO]	218	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '=='})
2020-12-31 06:09:22,224	[INFO]	219	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:09:23,250	[INFO]	220	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:09:24,320	[INFO]	221	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:09:24,322	[INFO]	222	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:09:24,322	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:09:27,863	[INFO]	223	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '>'})
2020-12-31 06:09:27,865	[INFO]	224	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:09:27,865	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:09:27,866	[INFO]	225	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:09:27,867	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:09:27,868	[INFO]	226	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:09:27,868	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:09:28,877	[INFO]	227	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:09:29,922	[INFO]	228	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:09:29,923	[INFO]	229	SUCCESS	 4.0	
2020-12-31 06:09:30,776	[INFO]	230	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:09:31,796	[INFO]	231	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:09:32,818	[INFO]	232	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:09:33,878	[INFO]	233	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 06:09:34,918	[INFO]	234	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:09:35,945	[INFO]	235	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 06:09:39,380	[INFO]	236	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:09:42,976	[INFO]	237	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:09:42,977	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,36 ****
--- 31,53 ----
                  } else {
                      upright = 0;
                  }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 06:09:44,009	[INFO]	238	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:09:47,487	[INFO]	239	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:09:48,339	[INFO]	240	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:09:51,827	[INFO]	241	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:09:51,829	[INFO]	242	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:09:51,830	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:09:51,830	[INFO]	243	SUCCESS	 4.0	
2020-12-31 06:09:52,861	[INFO]	244	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:09:52,863	[INFO]	245	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:09:52,863	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:09:53,697	[INFO]	246	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:09:53,700	[INFO]	247	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:09:54,741	[INFO]	248	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:09:58,271	[INFO]	249	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:09:58,273	[INFO]	250	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:09:58,273	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:09:58,274	[INFO]	251	SUCCESS	 4.0	
2020-12-31 06:10:01,821	[INFO]	252	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:10:01,824	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 23,28 ****
--- 23,43 ----
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }

2020-12-31 06:10:05,365	[INFO]	253	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:10:08,885	[INFO]	254	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:10:08,886	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 23,28 ****
--- 23,44 ----
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upright = rows.get(r-1).get(c);
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }

2020-12-31 06:10:09,921	[INFO]	255	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:10:13,417	[INFO]	256	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:10:13,418	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,44 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     upright = rows.get(r-1).get(c);
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 06:10:16,898	[INFO]	257	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:10:16,899	[INFO]	258	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:10:16,900	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:10:20,468	[INFO]	259	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:10:21,326	[INFO]	260	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 06:10:22,348	[INFO]	261	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:10:22,349	[INFO]	262	SUCCESS	 4.0	
2020-12-31 06:10:23,377	[INFO]	263	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:10:24,444	[INFO]	264	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:10:27,988	[INFO]	265	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:10:27,990	[INFO]	266	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:10:27,990	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:10:29,040	[INFO]	267	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:10:29,042	[INFO]	268	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:10:30,081	[INFO]	269	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:10:30,082	[INFO]	270	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:10:30,083	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:10:30,084	[INFO]	271	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:10:30,085	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:10:33,671	[INFO]	272	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:10:38,008	[INFO]	273	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:10:39,325	[INFO]	274	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:10:39,327	[INFO]	275	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:10:39,328	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:10:42,927	[INFO]	276	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:10:43,803	[INFO]	277	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:10:43,805	[INFO]	278	SUCCESS	 4.0	
2020-12-31 06:10:44,831	[INFO]	279	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:10:44,833	[INFO]	280	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:10:44,834	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:10:44,834	[INFO]	281	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:10:45,876	[INFO]	282	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:10:47,000	[INFO]	283	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:10:50,749	[INFO]	284	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:10:50,750	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,32 ****
--- 27,49 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 06:10:51,790	[INFO]	285	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:10:51,792	[INFO]	286	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:10:51,793	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:10:51,795	[INFO]	287	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:10:51,795	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:10:55,325	[INFO]	288	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:10:56,681	[INFO]	289	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:11:00,341	[INFO]	290	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:11:00,342	[INFO]	291	SUCCESS	 4.0	
2020-12-31 06:11:01,403	[INFO]	292	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:11:01,404	[INFO]	293	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:11:01,405	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:11:01,406	[INFO]	294	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:11:01,406	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:11:02,462	[INFO]	295	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:11:02,463	[INFO]	296	SUCCESS	 4.0	
2020-12-31 06:11:03,528	[INFO]	297	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:11:04,578	[INFO]	298	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:11:20,281	[INFO]	299	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '>='})
2020-12-31 06:11:21,283	[INFO]	300	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:11:22,356	[INFO]	301	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:11:25,950	[INFO]	302	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:11:25,951	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,43 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {

2020-12-31 06:11:29,402	[INFO]	303	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:11:29,403	[INFO]	304	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:11:29,404	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:11:29,404	[INFO]	305	SUCCESS	 4.0	
2020-12-31 06:11:30,236	[INFO]	306	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:11:31,258	[INFO]	307	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:11:32,315	[INFO]	308	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:11:33,338	[INFO]	309	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:11:33,340	[INFO]	310	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:11:33,340	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:11:33,341	[INFO]	311	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:11:33,342	[INFO]	312	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:11:33,343	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:11:33,344	[INFO]	313	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:11:33,344	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:11:36,859	[INFO]	314	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:11:36,860	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,49 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     upleft = rows.get(r-1).get(c-1);
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 06:11:36,861	[INFO]	315	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:11:36,862	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:11:37,896	[INFO]	316	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:11:41,407	[INFO]	317	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:11:41,408	[INFO]	318	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:11:42,439	[INFO]	319	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 06:11:43,534	[INFO]	320	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:11:43,536	[INFO]	321	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:11:43,536	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:11:44,603	[INFO]	322	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:11:45,606	[INFO]	323	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:11:46,636	[INFO]	324	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:11:50,092	[INFO]	325	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '>'})
2020-12-31 06:11:50,093	[INFO]	326	SUCCESS	 4.0	
2020-12-31 06:11:51,108	[INFO]	327	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:11:52,109	[INFO]	328	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:11:53,144	[INFO]	329	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:11:54,192	[INFO]	330	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:11:57,688	[INFO]	331	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:11:57,690	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 30,35 ****
--- 30,50 ----
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
                  }
                  row.add(upleft+upright);
              }

2020-12-31 06:11:57,691	[INFO]	332	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:11:57,691	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:11:57,693	[INFO]	333	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:11:57,693	[INFO]	334	SUCCESS	 4.0	
2020-12-31 06:11:58,744	[INFO]	335	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:12:02,212	[INFO]	336	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '=='})
2020-12-31 06:12:05,736	[INFO]	337	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:12:05,737	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,46 ----
                  } else {
                      upleft = 0;
                  }
+                 upright = 0;
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 06:12:06,755	[INFO]	338	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 06:12:10,293	[INFO]	339	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:12:10,294	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,49 ----
                  } else {
                      upleft = 0;
                  }
+                 upright = 0;
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 06:12:11,344	[INFO]	340	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:12:14,871	[INFO]	341	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:12:14,872	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,36 ****
--- 31,53 ----
                  } else {
                      upright = 0;
                  }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 06:12:15,945	[INFO]	342	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:12:16,956	[INFO]	343	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:12:20,434	[INFO]	344	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:12:21,491	[INFO]	345	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:12:22,533	[INFO]	346	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:12:23,596	[INFO]	347	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:12:23,598	[INFO]	348	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:12:23,599	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:12:27,126	[INFO]	349	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:12:28,174	[INFO]	350	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:12:29,190	[INFO]	351	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:12:30,231	[INFO]	352	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:12:30,233	[INFO]	353	SUCCESS	 4.0	
2020-12-31 06:12:31,291	[INFO]	354	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:12:32,301	[INFO]	355	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:12:33,324	[INFO]	356	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:12:34,371	[INFO]	357	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:12:35,409	[INFO]	358	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:12:35,411	[INFO]	359	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:12:36,441	[INFO]	360	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:12:37,479	[INFO]	361	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:12:38,499	[INFO]	362	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:12:39,542	[INFO]	363	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:12:39,544	[INFO]	364	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:12:39,545	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:12:43,097	[INFO]	365	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:12:43,099	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,32 ****
--- 27,47 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     upleft = 0;
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 06:12:44,153	[INFO]	366	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:12:45,170	[INFO]	367	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:12:46,225	[INFO]	368	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:12:47,288	[INFO]	369	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:12:50,795	[INFO]	370	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:12:50,797	[INFO]	371	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:12:50,797	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:12:50,798	[INFO]	372	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:12:50,799	[INFO]	373	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:12:50,799	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:12:50,800	[INFO]	374	SUCCESS	 4.0	
2020-12-31 06:12:54,246	[INFO]	375	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '!='})
2020-12-31 06:12:54,247	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,40 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 if (c != 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {

2020-12-31 06:12:55,283	[INFO]	376	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '!='}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:12:58,758	[INFO]	377	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:12:58,759	[INFO]	378	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:12:58,760	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:12:58,761	[INFO]	379	SUCCESS	 4.0	
2020-12-31 06:12:59,824	[INFO]	380	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:12:59,826	[INFO]	381	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:13:00,867	[INFO]	382	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:13:01,908	[INFO]	383	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:13:01,911	[INFO]	384	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:13:01,912	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:13:01,913	[INFO]	385	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:13:01,914	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:13:01,914	[INFO]	386	SUCCESS	 4.0	
2020-12-31 06:13:02,929	[INFO]	387	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:13:03,989	[INFO]	388	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:13:05,004	[INFO]	389	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:13:08,530	[INFO]	390	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:13:09,562	[INFO]	391	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:13:10,608	[INFO]	392	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:13:11,657	[INFO]	393	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:13:12,690	[INFO]	394	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:13:16,220	[INFO]	395	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:13:16,221	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,40 ****
--- 33,56 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
+ 
+         int upleft, upright;
  
          return rows;
      }

2020-12-31 06:13:17,234	[INFO]	396	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:13:18,231	[INFO]	397	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:13:21,738	[INFO]	398	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '=='})
2020-12-31 06:13:25,215	[INFO]	399	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:13:26,216	[INFO]	400	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:13:27,259	[INFO]	401	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:13:28,278	[INFO]	402	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:13:28,280	[INFO]	403	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:13:28,280	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:13:28,281	[INFO]	404	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:13:28,282	[INFO]	405	SUCCESS	 4.0	
2020-12-31 06:13:29,130	[INFO]	406	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:13:30,166	[INFO]	407	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:13:31,197	[INFO]	408	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:13:32,226	[INFO]	409	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:13:33,244	[INFO]	410	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:13:34,242	[INFO]	411	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:13:35,341	[INFO]	412	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:13:36,380	[INFO]	413	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:13:37,202	[INFO]	414	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:13:38,232	[INFO]	415	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:13:41,818	[INFO]	416	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:13:41,819	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,46 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 06:13:45,276	[INFO]	417	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:13:46,318	[INFO]	418	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:13:46,319	[INFO]	419	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:13:46,320	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:13:46,320	[INFO]	420	SUCCESS	 4.0	
2020-12-31 06:13:47,379	[INFO]	421	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:13:50,922	[INFO]	422	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:13:50,923	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,36 ****
--- 31,51 ----
                  } else {
                      upright = 0;
                  }
+                 upleft = 0;
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 06:13:54,434	[INFO]	423	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:13:54,437	[INFO]	424	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:13:54,438	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:13:54,440	[INFO]	425	SUCCESS	 4.0	
2020-12-31 06:13:55,473	[INFO]	426	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:13:56,472	[INFO]	427	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:13:57,549	[INFO]	428	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:13:58,597	[INFO]	429	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:14:02,095	[INFO]	430	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:14:02,096	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,48 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     upright = rows.get(r-1).get(c);
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 06:14:03,121	[INFO]	431	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:14:03,122	[INFO]	432	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:14:03,123	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:14:03,124	[INFO]	433	SUCCESS	 4.0	
2020-12-31 06:14:04,149	[INFO]	434	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 06:14:05,179	[INFO]	435	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:14:06,207	[INFO]	436	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:14:07,251	[INFO]	437	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:14:07,253	[INFO]	438	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:14:08,075	[INFO]	439	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:14:08,935	[INFO]	440	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:14:09,955	[INFO]	441	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:14:11,029	[INFO]	442	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 06:14:12,081	[INFO]	443	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:14:15,509	[INFO]	444	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:14:18,979	[INFO]	445	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:14:20,003	[INFO]	446	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:14:20,886	[INFO]	447	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:14:21,906	[INFO]	448	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:14:22,940	[INFO]	449	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:14:26,445	[INFO]	450	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:14:29,965	[INFO]	451	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '=='})
2020-12-31 06:14:31,016	[INFO]	452	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:14:32,075	[INFO]	453	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:14:33,109	[INFO]	454	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:14:48,776	[INFO]	455	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '>='})
2020-12-31 06:14:49,837	[INFO]	456	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:14:50,891	[INFO]	457	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:14:51,942	[INFO]	458	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:14:52,972	[INFO]	459	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:14:54,060	[INFO]	460	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:14:55,097	[INFO]	461	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:14:56,112	[INFO]	462	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:14:57,155	[INFO]	463	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:15:00,674	[INFO]	464	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:15:01,720	[INFO]	465	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:15:02,736	[INFO]	466	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:15:03,815	[INFO]	467	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:15:07,324	[INFO]	468	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:15:07,325	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,48 ----
                  } else {
                      upleft = 0;
                  }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 06:15:08,348	[INFO]	469	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:15:09,409	[INFO]	470	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:15:10,471	[INFO]	471	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:15:10,473	[INFO]	472	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:15:10,473	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:15:10,474	[INFO]	473	SUCCESS	 4.0	
2020-12-31 06:15:11,513	[INFO]	474	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:15:15,018	[INFO]	475	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:15:16,042	[INFO]	476	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:15:17,089	[INFO]	477	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:15:18,114	[INFO]	478	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:15:19,135	[INFO]	479	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:15:22,605	[INFO]	480	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:15:23,634	[INFO]	481	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:15:24,696	[INFO]	482	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:15:25,768	[INFO]	483	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:15:29,220	[INFO]	484	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:15:29,221	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 30,35 ****
--- 30,50 ----
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
                  }
                  row.add(upleft+upright);
              }

2020-12-31 06:15:30,257	[INFO]	485	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:15:31,298	[INFO]	486	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:15:47,064	[INFO]	487	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '>='})
2020-12-31 06:15:50,557	[INFO]	488	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:15:54,023	[INFO]	489	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:15:54,025	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 30,35 ****
--- 30,53 ----
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
                  }
                  row.add(upleft+upright);
              }

2020-12-31 06:15:54,026	[INFO]	490	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:15:54,027	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 30,35 ****
--- 30,50 ----
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
                  }
                  row.add(upleft+upright);
              }

2020-12-31 06:15:57,520	[INFO]	491	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:15:57,521	[INFO]	492	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:15:57,522	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:15:58,592	[INFO]	493	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:16:02,066	[INFO]	494	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:16:02,067	[INFO]	495	SUCCESS	 4.0	
2020-12-31 06:16:03,092	[INFO]	496	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 06:16:04,138	[INFO]	497	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:16:05,165	[INFO]	498	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:16:06,170	[INFO]	499	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:16:07,211	[INFO]	500	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:16:07,212	[INFO]	==== END ====
2020-12-31 06:16:07,212	[INFO]	Reason: step budget
2020-12-31 06:16:07,213	[INFO]	
2020-12-31 06:16:07,213	[INFO]	========== EPOCH 16 ==========
2020-12-31 06:16:07,213	[INFO]	==== WARMUP ====
2020-12-31 06:16:10,652	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 06:16:10,653	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 06:16:14,101	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 06:16:14,101	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 06:16:17,601	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 06:16:17,601	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 06:16:21,099	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-31 06:16:21,099	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 06:16:21,099	[INFO]	==== START ====
2020-12-31 06:16:22,193	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:16:23,230	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:16:26,712	[INFO]	3	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:16:27,707	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:16:31,188	[INFO]	5	SUCCESS	+4.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:16:31,189	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,39 ****
                  }
                  row.add(upleft+upright);
              }
!             rows.add(row);
          }
  
          return rows;
--- 33,39 ----
                  }
                  row.add(upleft+upright);
              }
!             
          }
  
          return rows;

2020-12-31 06:16:31,189	[INFO]	6	SUCCESS	+4.0	
2020-12-31 06:16:31,190	[DEBUG]	
2020-12-31 06:16:32,201	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:16:33,221	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:16:34,189	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:16:34,191	[INFO]	10	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:16:34,191	[DEBUG]	
2020-12-31 06:16:35,230	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 06:16:35,232	[INFO]	12	SUCCESS	+4.0	
2020-12-31 06:16:35,232	[DEBUG]	
2020-12-31 06:16:36,261	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:16:37,304	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:16:38,339	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:16:39,365	[INFO]	16	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:16:40,390	[INFO]	17	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:16:41,446	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:16:42,463	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:16:43,498	[INFO]	20	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:16:44,533	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 06:16:45,387	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:16:46,381	[INFO]	23	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:16:47,430	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:16:48,482	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:16:49,501	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:16:50,534	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:16:54,007	[INFO]	28	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:16:54,008	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
+                 }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }

2020-12-31 06:16:54,009	[INFO]	29	SUCCESS	+4.0	
2020-12-31 06:16:54,010	[DEBUG]	
2020-12-31 06:16:55,025	[INFO]	30	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:16:56,065	[INFO]	31	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 06:16:57,059	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:16:57,921	[INFO]	33	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:16:57,922	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:16:58,931	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:16:59,973	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:17:01,007	[INFO]	37	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:17:02,037	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:17:03,069	[INFO]	39	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:17:04,091	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:17:04,093	[INFO]	41	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:17:05,119	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:17:06,191	[INFO]	43	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:17:09,626	[INFO]	44	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:17:09,627	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 17,40 ****
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r<n; r++) {
!             ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
!             rows.add(row);
!         }
  
          return rows;
      }
--- 17,23 ----
          init.add(1);
          rows.add(init);
  
!         ArrayList<Integer> row = new ArrayList<Integer>();
  
          return rows;
      }

2020-12-31 06:17:09,628	[INFO]	45	SUCCESS	+4.0	
2020-12-31 06:17:09,628	[DEBUG]	
2020-12-31 06:17:10,638	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:17:14,132	[INFO]	47	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:17:14,133	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,39 ----
                  } else {
                      upright = 0;
                  }
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 }
              }
              rows.add(row);
          }

2020-12-31 06:17:14,134	[INFO]	48	SUCCESS	+4.0	
2020-12-31 06:17:14,134	[DEBUG]	
2020-12-31 06:17:15,117	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:17:16,161	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:17:17,152	[INFO]	51	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:17:17,154	[INFO]	52	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:17:20,604	[INFO]	53	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:17:20,605	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,33 ****
                      upleft = 0;
                  }
                  if (c < r) {
!                     upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
--- 27,33 ----
                      upleft = 0;
                  }
                  if (c < r) {
!                     return rows;
                  } else {
                      upright = 0;
                  }

2020-12-31 06:17:20,606	[INFO]	54	SUCCESS	+4.0	
2020-12-31 06:17:20,606	[DEBUG]	
2020-12-31 06:17:21,637	[INFO]	55	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:17:22,656	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:17:23,695	[INFO]	57	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:17:24,807	[INFO]	58	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:17:25,823	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:17:26,864	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:17:26,866	[INFO]	61	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:17:30,368	[INFO]	62	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '=='})
2020-12-31 06:17:30,369	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,32 ****
                  } else {
                      upleft = 0;
                  }
!                 if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
--- 26,32 ----
                  } else {
                      upleft = 0;
                  }
!                 if (c == r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 06:17:30,369	[INFO]	63	SUCCESS	+4.0	
2020-12-31 06:17:30,370	[DEBUG]	
2020-12-31 06:17:31,346	[INFO]	64	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:17:34,851	[INFO]	65	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:17:34,852	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,33 ****
                      upleft = 0;
                  }
                  if (c < r) {
!                     upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
--- 27,33 ----
                      upleft = 0;
                  }
                  if (c < r) {
!                     upright = 0;
                  } else {
                      upright = 0;
                  }

2020-12-31 06:17:34,853	[INFO]	66	SUCCESS	+4.0	
2020-12-31 06:17:34,853	[DEBUG]	
2020-12-31 06:17:38,316	[INFO]	67	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:17:38,317	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 36,41 ****
--- 36,60 ----
              rows.add(row);
          }
  
+         for (int r=1; r<n; r++) {
+             ArrayList<Integer> row = new ArrayList<Integer>();
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             rows.add(row);
+         }
+ 
          return rows;
      }
  }

2020-12-31 06:17:41,851	[INFO]	68	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '!='})
2020-12-31 06:17:41,852	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 36,41 ****
--- 36,60 ----
              rows.add(row);
          }
  
+         for (int r=1; r<n; r++) {
+             ArrayList<Integer> row = new ArrayList<Integer>();
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c != r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             rows.add(row);
+         }
+ 
          return rows;
      }
  }

2020-12-31 06:17:42,867	[INFO]	69	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '!='}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:17:42,868	[INFO]	70	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:17:42,869	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 36,41 ****
--- 36,60 ----
              rows.add(row);
          }
  
+         for (int r=1; r<n; r++) {
+             ArrayList<Integer> row = new ArrayList<Integer>();
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             rows.add(row);
+         }
+ 
          return rows;
      }
  }

2020-12-31 06:17:42,870	[INFO]	71	SUCCESS	+4.0	
2020-12-31 06:17:42,870	[DEBUG]	
2020-12-31 06:17:43,872	[INFO]	72	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:17:44,890	[INFO]	73	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:17:45,909	[INFO]	74	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:17:49,402	[INFO]	75	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:17:49,403	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 rows.add(row);
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {

2020-12-31 06:17:49,403	[INFO]	76	SUCCESS	+4.0	
2020-12-31 06:17:49,404	[DEBUG]	
2020-12-31 06:17:50,206	[INFO]	77	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:17:51,030	[INFO]	78	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:17:54,524	[INFO]	79	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:17:54,525	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,35 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     upright = rows.get(r-1).get(c);
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 06:17:54,526	[INFO]	80	SUCCESS	+4.0	
2020-12-31 06:17:54,526	[DEBUG]	
2020-12-31 06:17:55,555	[INFO]	81	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:17:56,550	[INFO]	82	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 06:17:56,551	[INFO]	83	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:17:57,584	[INFO]	84	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:18:01,096	[INFO]	85	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '>='})
2020-12-31 06:18:01,097	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,32 ****
                  } else {
                      upleft = 0;
                  }
!                 if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
--- 26,32 ----
                  } else {
                      upleft = 0;
                  }
!                 if (c >= r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 06:18:01,098	[INFO]	86	SUCCESS	+4.0	
2020-12-31 06:18:01,098	[DEBUG]	
2020-12-31 06:18:02,123	[INFO]	87	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:18:02,124	[INFO]	88	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:18:02,125	[DEBUG]	
2020-12-31 06:18:02,125	[INFO]	89	SUCCESS	+4.0	
2020-12-31 06:18:02,125	[DEBUG]	
2020-12-31 06:18:02,126	[INFO]	90	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:18:03,151	[INFO]	91	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:18:06,624	[INFO]	92	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:18:06,625	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 15,20 ****
--- 15,38 ----
          ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();
          ArrayList<Integer> init = new ArrayList<Integer>();
          init.add(1);
+         for (int r=1; r<n; r++) {
+             ArrayList<Integer> row = new ArrayList<Integer>();
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             rows.add(row);
+         }
          rows.add(init);
  
          for (int r=1; r<n; r++) {

2020-12-31 06:18:07,678	[INFO]	93	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:18:07,680	[INFO]	94	SUCCESS	+4.0	
2020-12-31 06:18:07,681	[DEBUG]	
2020-12-31 06:18:08,698	[INFO]	95	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:18:12,123	[INFO]	96	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:18:12,124	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 34,39 ****
--- 34,40 ----
                  row.add(upleft+upright);
              }
              rows.add(row);
+             rows.add(row);
          }
  
          return rows;

2020-12-31 06:18:12,124	[INFO]	97	SUCCESS	+4.0	
2020-12-31 06:18:12,125	[DEBUG]	
2020-12-31 06:18:13,144	[INFO]	98	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:18:14,169	[INFO]	99	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:18:15,164	[INFO]	100	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:18:16,177	[INFO]	101	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:18:17,213	[INFO]	102	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:18:18,228	[INFO]	103	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:18:21,773	[INFO]	104	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:18:21,774	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 30,35 ****
--- 30,36 ----
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
+                     upright = 0;
                  }
                  row.add(upleft+upright);
              }

2020-12-31 06:18:22,795	[INFO]	105	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:18:22,796	[INFO]	106	SUCCESS	+4.0	
2020-12-31 06:18:22,797	[DEBUG]	
2020-12-31 06:18:23,821	[INFO]	107	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:18:27,357	[INFO]	108	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:18:27,358	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
!                 rows.add(init);
              }
              rows.add(row);
          }

2020-12-31 06:18:27,359	[INFO]	109	SUCCESS	+4.0	
2020-12-31 06:18:27,359	[DEBUG]	
2020-12-31 06:18:28,383	[INFO]	110	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:18:29,394	[INFO]	111	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:18:32,887	[INFO]	112	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:18:32,888	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             int upleft, upright;
              rows.add(row);
          }
  

2020-12-31 06:18:33,905	[INFO]	113	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:18:34,942	[INFO]	114	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:18:35,942	[INFO]	115	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:18:35,944	[INFO]	116	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:18:35,944	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             int upleft, upright;
              rows.add(row);
          }
  

2020-12-31 06:18:39,442	[INFO]	117	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:18:39,443	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  } else {
                      upleft = 0;
                  }
+                 init.add(1);
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 06:18:39,444	[INFO]	118	SUCCESS	+4.0	
2020-12-31 06:18:39,444	[DEBUG]	
2020-12-31 06:18:40,473	[INFO]	119	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:18:41,525	[INFO]	120	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:18:42,576	[INFO]	121	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:18:43,653	[INFO]	122	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:18:47,257	[INFO]	123	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '!='})
2020-12-31 06:18:47,257	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 17,23 ****
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
--- 17,23 ----
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r!=n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;

2020-12-31 06:18:48,280	[INFO]	124	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:18:48,281	[INFO]	125	SUCCESS	+4.0	
2020-12-31 06:18:48,282	[DEBUG]	
2020-12-31 06:18:49,271	[INFO]	126	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:18:50,096	[INFO]	127	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:18:51,105	[INFO]	128	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:18:52,117	[INFO]	129	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:18:55,560	[INFO]	130	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:18:55,561	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(init);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 06:18:55,562	[INFO]	131	SUCCESS	+4.0	
2020-12-31 06:18:55,562	[DEBUG]	
2020-12-31 06:18:56,607	[INFO]	132	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:18:57,657	[INFO]	133	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:18:58,719	[INFO]	134	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:18:59,748	[INFO]	135	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:19:00,813	[INFO]	136	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:19:00,815	[INFO]	137	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:19:04,338	[INFO]	138	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:19:04,339	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
+                 }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }

2020-12-31 06:19:04,340	[INFO]	139	SUCCESS	+4.0	
2020-12-31 06:19:04,340	[DEBUG]	
2020-12-31 06:19:05,373	[INFO]	140	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:19:08,868	[INFO]	141	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:19:08,869	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,30 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 06:19:08,869	[INFO]	142	SUCCESS	+4.0	
2020-12-31 06:19:08,870	[DEBUG]	
2020-12-31 06:19:12,330	[INFO]	143	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:19:12,331	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,33 ****
                      upleft = 0;
                  }
                  if (c < r) {
!                     upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
--- 27,33 ----
                      upleft = 0;
                  }
                  if (c < r) {
!                     upright = 0;
                  } else {
                      upright = 0;
                  }

2020-12-31 06:19:12,332	[INFO]	144	SUCCESS	+4.0	
2020-12-31 06:19:12,332	[DEBUG]	
2020-12-31 06:19:13,336	[INFO]	145	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:19:14,354	[INFO]	146	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:19:15,423	[INFO]	147	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:19:15,424	[INFO]	148	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:19:15,424	[DEBUG]	
2020-12-31 06:19:16,448	[INFO]	149	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 16)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:19:16,449	[INFO]	150	SUCCESS	+4.0	
2020-12-31 06:19:16,449	[DEBUG]	
2020-12-31 06:19:17,492	[INFO]	151	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:19:17,493	[INFO]	152	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:19:17,494	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,33 ****
                      upleft = 0;
                  }
                  if (c < r) {
!                     upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
--- 27,33 ----
                      upleft = 0;
                  }
                  if (c < r) {
!                     upright = 0;
                  } else {
                      upright = 0;
                  }

2020-12-31 06:19:17,494	[INFO]	153	SUCCESS	+4.0	
2020-12-31 06:19:17,495	[DEBUG]	
2020-12-31 06:19:17,495	[INFO]	154	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:19:17,496	[DEBUG]	
2020-12-31 06:19:18,523	[INFO]	155	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:19:19,573	[INFO]	156	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:19:20,583	[INFO]	157	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:19:20,584	[INFO]	158	SUCCESS	+4.0	
2020-12-31 06:19:20,585	[DEBUG]	
2020-12-31 06:19:21,619	[INFO]	159	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:19:22,681	[INFO]	160	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:19:23,708	[INFO]	161	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:19:24,595	[INFO]	162	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:19:25,607	[INFO]	163	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:19:26,630	[INFO]	164	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:19:30,062	[INFO]	165	SUCCESS	+4.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:19:30,063	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             
              rows.add(row);
          }
  

2020-12-31 06:19:30,064	[INFO]	166	SUCCESS	+4.0	
2020-12-31 06:19:30,064	[DEBUG]	
2020-12-31 06:19:31,086	[INFO]	167	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:19:32,121	[INFO]	168	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:19:33,106	[INFO]	169	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:19:34,133	[INFO]	170	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:19:35,133	[INFO]	171	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:19:38,555	[INFO]	172	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:19:38,556	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     init.add(1);
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 06:19:42,080	[INFO]	173	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:19:42,082	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,27 ****
--- 19,29 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(init);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     init.add(1);
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 06:19:42,083	[INFO]	174	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:19:42,084	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,27 ****
--- 19,29 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(init);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     init.add(1);
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 06:19:42,085	[INFO]	175	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:19:42,085	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(init);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 06:19:43,128	[INFO]	176	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:19:43,130	[INFO]	177	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:19:43,131	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(init);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 06:19:43,132	[INFO]	178	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:19:43,132	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(init);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 06:19:44,194	[INFO]	179	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 06:19:44,196	[INFO]	180	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:19:44,197	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(init);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 06:19:45,201	[INFO]	181	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:19:45,203	[INFO]	182	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:19:45,203	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(init);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 06:19:46,220	[INFO]	183	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:19:47,296	[INFO]	184	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:19:47,298	[INFO]	185	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:19:47,298	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(init);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 06:19:50,847	[INFO]	186	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:19:50,848	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upleft = rows.get(r-1).get(c-1);
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
***************
*** 29,34 ****
--- 30,36 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     upright = 0;
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 06:19:54,316	[INFO]	187	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:19:54,317	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upleft = rows.get(r-1).get(c-1);
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {

2020-12-31 06:19:54,317	[INFO]	188	SUCCESS	+4.0	
2020-12-31 06:19:54,318	[DEBUG]	
2020-12-31 06:19:55,294	[INFO]	189	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:19:56,332	[INFO]	190	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:19:57,362	[INFO]	191	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:19:58,425	[INFO]	192	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:19:59,473	[INFO]	193	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:20:00,511	[INFO]	194	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:20:01,553	[INFO]	195	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:20:02,404	[INFO]	196	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:20:05,995	[INFO]	197	SUCCESS	*3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:20:05,996	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:20:07,008	[INFO]	198	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:20:07,009	[INFO]	199	SUCCESS	 4.0	
2020-12-31 06:20:10,485	[INFO]	200	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:20:10,486	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 23,28 ****
--- 23,43 ----
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }

2020-12-31 06:20:14,036	[INFO]	201	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:20:17,565	[INFO]	202	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:20:18,628	[INFO]	203	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:20:22,132	[INFO]	204	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:20:22,133	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 23,28 ****
--- 23,44 ----
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 upright = rows.get(r-1).get(c);
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }

2020-12-31 06:20:22,134	[INFO]	205	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:20:22,135	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 23,28 ****
--- 23,43 ----
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }

2020-12-31 06:20:22,136	[INFO]	206	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:20:22,136	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 23,28 ****
--- 23,43 ----
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }

2020-12-31 06:20:23,184	[INFO]	207	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:20:23,185	[INFO]	208	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:20:23,186	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:20:23,187	[INFO]	209	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:20:23,189	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:20:24,189	[INFO]	210	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:20:25,277	[INFO]	211	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:20:25,278	[INFO]	212	SUCCESS	 4.0	
2020-12-31 06:20:28,804	[INFO]	213	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '=='})
2020-12-31 06:20:32,322	[INFO]	214	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<='})
2020-12-31 06:20:32,323	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,45 ----
                  } else {
                      upleft = 0;
                  }
+                 if (c <= r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 06:20:36,129	[INFO]	215	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:20:37,346	[INFO]	216	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<='}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:20:42,046	[INFO]	217	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<='})
2020-12-31 06:20:42,048	[INFO]	218	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:20:42,049	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:20:43,443	[INFO]	219	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:20:43,444	[INFO]	220	SUCCESS	 4.0	
2020-12-31 06:20:47,653	[INFO]	221	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:20:48,780	[INFO]	222	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:20:49,910	[INFO]	223	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:20:50,970	[INFO]	224	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:20:51,989	[INFO]	225	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:20:53,092	[INFO]	226	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:20:54,155	[INFO]	227	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:20:55,224	[INFO]	228	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:20:58,731	[INFO]	229	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:20:59,781	[INFO]	230	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:21:03,239	[INFO]	231	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:21:06,661	[INFO]	232	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:21:10,207	[INFO]	233	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:21:10,208	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,42 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     rows.add(row);
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 06:21:11,197	[INFO]	234	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:21:14,667	[INFO]	235	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:21:18,094	[INFO]	236	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:21:18,095	[INFO]	237	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:21:18,096	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:21:18,096	[INFO]	238	SUCCESS	 4.0	
2020-12-31 06:21:19,093	[INFO]	239	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:21:20,145	[INFO]	240	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:21:21,202	[INFO]	241	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:21:22,219	[INFO]	242	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:21:25,732	[INFO]	243	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:21:26,770	[INFO]	244	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:21:30,293	[INFO]	245	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:21:30,294	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,48 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     return rows;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 06:21:33,734	[INFO]	246	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:21:34,790	[INFO]	247	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:21:38,286	[INFO]	248	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:21:38,287	[INFO]	249	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:21:38,288	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:21:38,289	[INFO]	250	SUCCESS	 4.0	
2020-12-31 06:21:41,810	[INFO]	251	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:21:41,812	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 28,33 ****
--- 28,48 ----
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }

2020-12-31 06:21:45,305	[INFO]	252	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:21:48,821	[INFO]	253	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:21:49,927	[INFO]	254	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:21:50,947	[INFO]	255	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:21:51,966	[INFO]	256	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:21:51,968	[INFO]	257	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:21:51,969	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:21:51,969	[INFO]	258	SUCCESS	 4.0	
2020-12-31 06:21:55,479	[INFO]	259	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:21:58,992	[INFO]	260	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:21:58,994	[INFO]	261	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:21:58,994	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:22:00,025	[INFO]	262	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:22:00,027	[INFO]	263	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:22:00,028	[INFO]	264	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:22:00,028	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:22:00,029	[INFO]	265	SUCCESS	 4.0	
2020-12-31 06:22:00,030	[INFO]	266	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:22:01,064	[INFO]	267	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:22:04,556	[INFO]	268	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:22:04,557	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,41 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     upleft = 0;
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 06:22:04,558	[INFO]	269	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<'})
2020-12-31 06:22:04,558	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,41 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     upleft = 0;
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 06:22:08,022	[INFO]	270	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<'})
2020-12-31 06:22:08,024	[INFO]	271	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:22:08,025	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,41 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     upleft = 0;
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 06:22:08,025	[INFO]	272	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:22:09,007	[INFO]	273	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:22:12,500	[INFO]	274	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '>'})
2020-12-31 06:22:13,537	[INFO]	275	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:22:14,575	[INFO]	276	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:22:14,577	[INFO]	277	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:22:14,578	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:22:15,606	[INFO]	278	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:22:15,608	[INFO]	279	SUCCESS	 4.0	
2020-12-31 06:22:16,630	[INFO]	280	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:22:20,103	[INFO]	281	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:22:20,104	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,49 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     upleft = 0;
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 06:22:23,577	[INFO]	282	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:22:23,580	[INFO]	283	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:22:23,580	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,49 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     upleft = 0;
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 06:22:23,581	[INFO]	284	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:22:23,582	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:22:27,120	[INFO]	285	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:22:30,626	[INFO]	286	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:22:30,627	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,49 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     upright = rows.get(r-1).get(c);
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 06:22:31,668	[INFO]	287	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:22:31,670	[INFO]	288	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:22:31,670	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:22:31,671	[INFO]	289	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:22:31,672	[INFO]	290	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:22:31,672	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:22:35,164	[INFO]	291	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:22:35,165	[INFO]	292	SUCCESS	 4.0	
2020-12-31 06:22:35,167	[INFO]	293	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:22:35,167	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:22:36,208	[INFO]	294	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:22:37,249	[INFO]	295	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:22:37,251	[INFO]	296	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:22:37,253	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:22:38,294	[INFO]	297	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:22:38,295	[INFO]	298	SUCCESS	 4.0	
2020-12-31 06:22:39,336	[INFO]	299	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:22:42,850	[INFO]	300	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:22:43,691	[INFO]	301	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:22:43,693	[INFO]	302	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:22:43,694	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:22:43,695	[INFO]	303	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:22:43,695	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:22:43,696	[INFO]	304	SUCCESS	 4.0	
2020-12-31 06:22:44,785	[INFO]	305	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:22:45,853	[INFO]	306	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:22:49,580	[INFO]	307	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '!='})
2020-12-31 06:22:49,581	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,45 ----
                  } else {
                      upleft = 0;
                  }
+                 if (c != r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 06:22:49,582	[INFO]	308	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:22:49,582	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:22:49,583	[INFO]	309	SUCCESS	 4.0	
2020-12-31 06:22:50,596	[INFO]	310	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:22:51,617	[INFO]	311	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:22:55,143	[INFO]	312	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:22:56,157	[INFO]	313	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:22:57,186	[INFO]	314	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:23:00,730	[INFO]	315	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:23:00,731	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,44 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 06:23:04,198	[INFO]	316	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:23:04,200	[INFO]	317	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:23:04,200	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,44 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 06:23:05,223	[INFO]	318	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:23:05,226	[INFO]	319	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:23:05,227	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,44 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 06:23:05,228	[INFO]	320	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:23:05,229	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:23:05,229	[INFO]	321	SUCCESS	 4.0	
2020-12-31 06:23:06,276	[INFO]	322	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:23:06,278	[INFO]	323	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:23:06,279	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:23:07,305	[INFO]	324	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:23:08,332	[INFO]	325	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:23:09,356	[INFO]	326	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:23:10,409	[INFO]	327	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:23:10,410	[INFO]	328	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:23:10,411	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:23:10,412	[INFO]	329	SUCCESS	 4.0	
2020-12-31 06:23:11,437	[INFO]	330	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:23:12,304	[INFO]	331	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:23:13,320	[INFO]	332	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:23:13,322	[INFO]	333	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:23:13,323	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:23:13,324	[INFO]	334	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:23:13,324	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:23:14,338	[INFO]	335	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:23:17,852	[INFO]	336	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:23:17,853	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,48 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     upright = rows.get(r-1).get(c);
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 06:23:17,854	[INFO]	337	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:23:17,855	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:23:18,887	[INFO]	338	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:23:19,925	[INFO]	339	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:23:20,970	[INFO]	340	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:23:22,009	[INFO]	341	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:23:23,045	[INFO]	342	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:23:24,094	[INFO]	343	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:23:24,096	[INFO]	344	SUCCESS	 4.0	
2020-12-31 06:23:25,146	[INFO]	345	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:23:26,212	[INFO]	346	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:23:27,271	[INFO]	347	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:23:30,808	[INFO]	348	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:23:34,327	[INFO]	349	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:23:35,346	[INFO]	350	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:23:36,380	[INFO]	351	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:23:37,427	[INFO]	352	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:23:38,450	[INFO]	353	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:23:39,503	[INFO]	354	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:23:39,505	[INFO]	355	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:23:39,506	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:23:39,507	[INFO]	356	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:23:39,507	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:23:40,391	[INFO]	357	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:23:40,392	[INFO]	358	SUCCESS	 4.0	
2020-12-31 06:23:41,456	[INFO]	359	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:23:42,487	[INFO]	360	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:23:43,547	[INFO]	361	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:23:44,568	[INFO]	362	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:23:45,435	[INFO]	363	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:23:46,458	[INFO]	364	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:23:47,512	[INFO]	365	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:23:48,523	[INFO]	366	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:23:49,561	[INFO]	367	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:23:50,590	[INFO]	368	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:23:51,609	[INFO]	369	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:23:52,650	[INFO]	370	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:23:53,745	[INFO]	371	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:23:57,379	[INFO]	372	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:23:57,380	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,46 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 06:23:58,384	[INFO]	373	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:23:59,414	[INFO]	374	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:24:00,472	[INFO]	375	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:24:03,964	[INFO]	376	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:24:05,007	[INFO]	377	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:24:08,527	[INFO]	378	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:24:08,529	[INFO]	379	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:24:08,529	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:24:08,530	[INFO]	380	SUCCESS	 4.0	
2020-12-31 06:24:09,556	[INFO]	381	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:24:13,060	[INFO]	382	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:24:13,061	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,44 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     upright = 0;
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 06:24:13,062	[INFO]	383	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:24:13,063	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:24:13,063	[INFO]	384	SUCCESS	 4.0	
2020-12-31 06:24:14,089	[INFO]	385	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:24:17,590	[INFO]	386	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:24:17,591	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 23,28 ****
--- 23,43 ----
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }

2020-12-31 06:24:17,592	[INFO]	387	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<'})
2020-12-31 06:24:17,593	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 23,28 ****
--- 23,43 ----
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }

2020-12-31 06:24:18,675	[INFO]	388	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:24:18,678	[INFO]	389	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<'})
2020-12-31 06:24:18,678	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:24:18,679	[INFO]	390	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:24:18,679	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:24:18,680	[INFO]	391	SUCCESS	 4.0	
2020-12-31 06:24:19,728	[INFO]	392	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:24:20,777	[INFO]	393	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:24:21,837	[INFO]	394	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:24:25,391	[INFO]	395	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:24:26,442	[INFO]	396	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:24:29,961	[INFO]	397	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:24:29,962	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,44 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     upright = rows.get(r-1).get(c);
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 06:24:29,963	[INFO]	398	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:24:29,964	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:24:29,965	[INFO]	399	SUCCESS	 4.0	
2020-12-31 06:24:33,515	[INFO]	400	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:24:33,517	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,44 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 06:24:37,028	[INFO]	401	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:24:40,515	[INFO]	402	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:24:41,577	[INFO]	403	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:24:41,579	[INFO]	404	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:24:41,579	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:24:41,580	[INFO]	405	SUCCESS	 4.0	
2020-12-31 06:24:42,661	[INFO]	406	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:24:43,744	[INFO]	407	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:24:44,791	[INFO]	408	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:24:45,835	[INFO]	409	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:24:46,685	[INFO]	410	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:24:47,737	[INFO]	411	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:24:48,784	[INFO]	412	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:24:49,828	[INFO]	413	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:24:50,834	[INFO]	414	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:24:54,332	[INFO]	415	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:24:54,333	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,42 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     rows.add(init);
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 06:24:54,334	[INFO]	416	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:24:54,334	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:24:55,343	[INFO]	417	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:24:56,390	[INFO]	418	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:24:59,899	[INFO]	419	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:24:59,901	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,48 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     return rows;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 06:24:59,902	[INFO]	420	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:24:59,902	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:25:03,449	[INFO]	421	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:25:03,450	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,49 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     upleft = rows.get(r-1).get(c-1);
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 06:25:04,482	[INFO]	422	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:25:05,523	[INFO]	423	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:25:05,524	[INFO]	424	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:25:05,525	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:25:05,525	[INFO]	425	SUCCESS	 4.0	
2020-12-31 06:25:06,568	[INFO]	426	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:25:07,562	[INFO]	427	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:25:08,587	[INFO]	428	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:25:09,610	[INFO]	429	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:25:09,612	[INFO]	430	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:25:09,612	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:25:10,666	[INFO]	431	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:25:11,746	[INFO]	432	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:25:11,748	[INFO]	433	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:25:11,748	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:25:11,749	[INFO]	434	SUCCESS	 4.0	
2020-12-31 06:25:12,788	[INFO]	435	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:25:13,654	[INFO]	436	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:25:14,742	[INFO]	437	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:25:14,745	[INFO]	438	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:25:18,223	[INFO]	439	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:25:18,225	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 28,33 ****
--- 28,50 ----
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }

2020-12-31 06:25:21,723	[INFO]	440	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:25:22,790	[INFO]	441	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:25:23,848	[INFO]	442	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:25:23,850	[INFO]	443	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:25:23,850	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:25:23,851	[INFO]	444	SUCCESS	 4.0	
2020-12-31 06:25:24,888	[INFO]	445	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 06:25:25,954	[INFO]	446	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:25:25,956	[INFO]	447	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:25:25,956	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:25:29,437	[INFO]	448	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:25:29,439	[INFO]	449	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:25:29,440	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:25:29,441	[INFO]	450	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:25:29,441	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:25:30,479	[INFO]	451	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:25:30,480	[INFO]	452	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:25:30,481	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:25:30,482	[INFO]	453	SUCCESS	 4.0	
2020-12-31 06:25:31,503	[INFO]	454	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:25:31,506	[INFO]	455	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<'})
2020-12-31 06:25:31,507	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:25:31,509	[INFO]	456	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:25:31,509	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:25:35,100	[INFO]	457	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:25:35,102	[INFO]	458	SUCCESS	 4.0	
2020-12-31 06:25:36,005	[INFO]	459	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:25:37,047	[INFO]	460	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:25:38,094	[INFO]	461	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:25:39,092	[INFO]	462	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:25:40,158	[INFO]	463	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:25:41,223	[INFO]	464	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:25:42,271	[INFO]	465	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:25:45,883	[INFO]	466	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:25:45,884	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,46 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 06:25:45,885	[INFO]	467	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:25:45,886	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:25:46,728	[INFO]	468	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 06:25:50,196	[INFO]	469	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:25:50,198	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,49 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     rows.add(row);
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 06:25:50,200	[INFO]	470	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:25:50,201	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:25:53,711	[INFO]	471	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:25:53,712	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,42 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     upleft = 0;
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 06:25:54,747	[INFO]	472	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:25:58,243	[INFO]	473	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:26:01,754	[INFO]	474	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:26:01,756	[INFO]	475	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:26:01,756	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,42 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     upleft = 0;
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 06:26:01,757	[INFO]	476	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:26:01,758	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,42 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     upleft = 0;
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 06:26:01,759	[INFO]	477	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:26:01,759	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:26:01,760	[INFO]	478	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:26:01,761	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:26:02,772	[INFO]	479	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:26:03,802	[INFO]	480	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:26:04,839	[INFO]	481	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:26:08,315	[INFO]	482	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:26:09,340	[INFO]	483	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:26:12,904	[INFO]	484	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:26:12,905	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,44 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     upright = rows.get(r-1).get(c);
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 06:26:12,906	[INFO]	485	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:26:12,906	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:26:16,465	[INFO]	486	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:26:16,467	[INFO]	487	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:26:16,468	[INFO]	488	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:26:16,468	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:26:19,927	[INFO]	489	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:26:20,963	[INFO]	490	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:26:20,964	[INFO]	491	SUCCESS	 4.0	
2020-12-31 06:26:22,047	[INFO]	492	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:26:22,960	[INFO]	493	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:26:23,957	[INFO]	494	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:26:25,026	[INFO]	495	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:26:26,099	[INFO]	496	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:26:29,599	[INFO]	497	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:26:30,629	[INFO]	498	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:26:34,112	[INFO]	499	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:26:37,596	[INFO]	500	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:26:37,597	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,51 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 06:26:37,597	[INFO]	==== END ====
2020-12-31 06:26:37,597	[INFO]	Reason: step budget
2020-12-31 06:26:37,598	[INFO]	
2020-12-31 06:26:37,598	[INFO]	========== EPOCH 17 ==========
2020-12-31 06:26:37,598	[INFO]	==== WARMUP ====
2020-12-31 06:26:41,070	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 06:26:41,071	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 06:26:44,617	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 06:26:44,618	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 06:26:48,127	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 06:26:48,127	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 06:26:51,723	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-31 06:26:51,723	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 06:26:51,723	[INFO]	==== START ====
2020-12-31 06:26:52,692	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:26:53,689	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:26:54,526	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:26:55,543	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:26:59,025	[INFO]	5	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:27:00,026	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:27:03,554	[INFO]	7	SUCCESS	 5.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:27:04,577	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:27:05,600	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:27:09,086	[INFO]	10	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:27:09,087	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,30 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     init.add(1);
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 06:27:10,099	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 06:27:10,100	[INFO]	12	SUCCESS	+4.0	
2020-12-31 06:27:10,101	[DEBUG]	
2020-12-31 06:27:10,967	[INFO]	13	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:27:11,990	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:27:13,043	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:27:14,063	[INFO]	16	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:27:17,546	[INFO]	17	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:27:17,547	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 28,33 ****
--- 28,34 ----
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
+                     upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }

2020-12-31 06:27:18,584	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:27:18,585	[INFO]	19	SUCCESS	+4.0	
2020-12-31 06:27:18,585	[DEBUG]	
2020-12-31 06:27:19,636	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:27:20,652	[INFO]	21	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:27:20,653	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:27:21,676	[INFO]	23	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:27:22,727	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:27:23,744	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:27:24,813	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:27:25,635	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:27:26,634	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:27:30,088	[INFO]	29	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:27:30,089	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,39 ----
                  } else {
                      upright = 0;
                  }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 }
              }
              rows.add(row);
          }

2020-12-31 06:27:31,109	[INFO]	30	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:27:31,111	[INFO]	31	SUCCESS	+4.0	
2020-12-31 06:27:31,111	[DEBUG]	
2020-12-31 06:27:32,131	[INFO]	32	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:27:33,155	[INFO]	33	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 06:27:34,162	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:27:34,165	[INFO]	35	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:27:34,165	[DEBUG]	
2020-12-31 06:27:34,167	[INFO]	36	SUCCESS	+4.0	
2020-12-31 06:27:34,167	[DEBUG]	
2020-12-31 06:27:37,641	[INFO]	37	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '>'})
2020-12-31 06:27:37,641	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 17,23 ****
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
--- 17,23 ----
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r>n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;

2020-12-31 06:27:37,643	[INFO]	38	SUCCESS	+4.0	
2020-12-31 06:27:37,644	[DEBUG]	
2020-12-31 06:27:38,674	[INFO]	39	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:27:42,200	[INFO]	40	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:27:42,201	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upleft = rows.get(r-1).get(c-1);
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {

2020-12-31 06:27:42,202	[INFO]	41	SUCCESS	+4.0	
2020-12-31 06:27:42,202	[DEBUG]	
2020-12-31 06:27:42,203	[INFO]	42	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:27:45,783	[INFO]	43	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:27:45,784	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,36 ****
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
+                 rows.add(init);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 06:27:45,785	[INFO]	44	SUCCESS	+4.0	
2020-12-31 06:27:45,785	[DEBUG]	
2020-12-31 06:27:46,819	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:27:47,841	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:27:48,883	[INFO]	47	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:27:49,906	[INFO]	48	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:27:50,951	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:27:51,981	[INFO]	50	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:27:55,494	[INFO]	51	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:27:55,496	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     upright = 0;
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 06:27:56,534	[INFO]	52	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:27:57,558	[INFO]	53	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:27:58,609	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:27:58,610	[INFO]	55	SUCCESS	+4.0	
2020-12-31 06:27:58,611	[DEBUG]	
2020-12-31 06:27:59,647	[INFO]	56	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:28:00,679	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:28:01,702	[INFO]	58	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:28:02,705	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:28:06,155	[INFO]	60	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:28:06,157	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,30 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     upright = 0;
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 06:28:07,169	[INFO]	61	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:28:08,186	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:28:08,187	[INFO]	63	SUCCESS	+4.0	
2020-12-31 06:28:08,187	[DEBUG]	
2020-12-31 06:28:09,190	[INFO]	64	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:28:10,218	[INFO]	65	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:28:11,272	[INFO]	66	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:28:11,273	[INFO]	67	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:28:12,329	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:28:13,339	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:28:14,395	[INFO]	70	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:28:17,876	[INFO]	71	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:28:17,877	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,33 ****
                      upleft = 0;
                  }
                  if (c < r) {
!                     upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
--- 27,33 ----
                      upleft = 0;
                  }
                  if (c < r) {
!                     upright = 0;
                  } else {
                      upright = 0;
                  }

2020-12-31 06:28:17,878	[INFO]	72	SUCCESS	+4.0	
2020-12-31 06:28:17,878	[DEBUG]	
2020-12-31 06:28:21,380	[INFO]	73	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:28:22,383	[INFO]	74	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:28:23,415	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:28:24,264	[INFO]	76	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:28:27,860	[INFO]	77	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '=='})
2020-12-31 06:28:27,861	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,25 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c==r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);

2020-12-31 06:28:27,861	[INFO]	78	SUCCESS	+4.0	
2020-12-31 06:28:27,862	[DEBUG]	
2020-12-31 06:28:28,909	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:28:29,990	[INFO]	80	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:28:31,009	[INFO]	81	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:28:32,023	[INFO]	82	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:28:33,057	[INFO]	83	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:28:34,082	[INFO]	84	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:28:37,616	[INFO]	85	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:28:37,617	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,39 ****
                  }
                  row.add(upleft+upright);
              }
!             rows.add(row);
          }
  
          return rows;
--- 33,39 ----
                  }
                  row.add(upleft+upright);
              }
!             return rows;
          }
  
          return rows;

2020-12-31 06:28:41,107	[INFO]	86	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:28:41,108	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,39 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
!             rows.add(row);
          }
  
          return rows;
--- 31,39 ----
                  } else {
                      upright = 0;
                  }
!                 
              }
!             return rows;
          }
  
          return rows;

2020-12-31 06:28:45,182	[INFO]	87	SUCCESS	+4.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:28:45,183	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
!                 
              }
              rows.add(row);
          }

2020-12-31 06:28:46,265	[INFO]	88	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 18)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:28:46,266	[INFO]	89	SUCCESS	+4.0	
2020-12-31 06:28:46,266	[DEBUG]	
2020-12-31 06:28:47,329	[INFO]	90	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 06:28:48,373	[INFO]	91	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:28:49,219	[INFO]	92	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:28:50,228	[INFO]	93	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:28:50,231	[INFO]	94	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:28:50,232	[DEBUG]	
2020-12-31 06:28:51,064	[INFO]	95	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 06:28:52,072	[INFO]	96	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:28:52,073	[INFO]	97	SUCCESS	+4.0	
2020-12-31 06:28:52,073	[DEBUG]	
2020-12-31 06:28:53,119	[INFO]	98	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:28:54,165	[INFO]	99	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:28:55,184	[INFO]	100	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:28:58,693	[INFO]	101	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:28:58,695	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,36 ****
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
+                 upright = 0;
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 06:28:58,696	[INFO]	102	SUCCESS	+4.0	
2020-12-31 06:28:58,697	[DEBUG]	
2020-12-31 06:28:59,702	[INFO]	103	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:29:00,733	[INFO]	104	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:29:04,240	[INFO]	105	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:29:04,242	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,30 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     rows.add(row);
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 06:29:05,285	[INFO]	106	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:29:05,286	[INFO]	107	SUCCESS	+4.0	
2020-12-31 06:29:05,287	[DEBUG]	
2020-12-31 06:29:08,698	[INFO]	108	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:29:08,699	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  } else {
                      upleft = 0;
                  }
+                 upright = 0;
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 06:29:09,717	[INFO]	109	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:29:09,718	[INFO]	110	SUCCESS	+4.0	
2020-12-31 06:29:09,718	[DEBUG]	
2020-12-31 06:29:10,750	[INFO]	111	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:29:11,605	[INFO]	112	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:29:12,628	[INFO]	113	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:29:16,141	[INFO]	114	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:29:16,143	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,39 ****
                  }
                  row.add(upleft+upright);
              }
!             rows.add(row);
          }
  
          return rows;
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
          }
  
          return rows;

2020-12-31 06:29:16,145	[INFO]	115	SUCCESS	+4.0	
2020-12-31 06:29:16,145	[DEBUG]	
2020-12-31 06:29:17,148	[INFO]	116	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:29:18,157	[INFO]	117	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:29:19,188	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:29:20,189	[INFO]	119	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:29:21,266	[INFO]	120	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:29:22,286	[INFO]	121	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:29:23,329	[INFO]	122	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:29:23,330	[INFO]	123	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:29:24,365	[INFO]	124	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:29:25,448	[INFO]	125	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:29:26,460	[INFO]	126	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:29:29,957	[INFO]	127	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:29:29,958	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 34,39 ****
--- 34,40 ----
                  row.add(upleft+upright);
              }
              rows.add(row);
+             rows.add(row);
          }
  
          return rows;

2020-12-31 06:29:30,832	[INFO]	128	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:29:34,315	[INFO]	129	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:29:35,349	[INFO]	130	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:29:36,378	[INFO]	131	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:29:37,418	[INFO]	132	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:29:37,419	[INFO]	133	SUCCESS	+4.0	
2020-12-31 06:29:37,419	[DEBUG]	
2020-12-31 06:29:38,426	[INFO]	134	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:29:39,512	[INFO]	135	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:29:43,063	[INFO]	136	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:29:44,105	[INFO]	137	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:29:47,576	[INFO]	138	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:29:47,577	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,37 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 06:29:47,578	[INFO]	139	SUCCESS	+4.0	
2020-12-31 06:29:47,578	[DEBUG]	
2020-12-31 06:29:48,640	[INFO]	140	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:29:49,686	[INFO]	141	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:29:50,700	[INFO]	142	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 06:29:51,789	[INFO]	143	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:29:52,846	[INFO]	144	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:29:56,415	[INFO]	145	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:29:56,416	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  } else {
                      upleft = 0;
                  }
+                 upright = 0;
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 06:29:56,417	[INFO]	146	SUCCESS	+4.0	
2020-12-31 06:29:56,417	[DEBUG]	
2020-12-31 06:29:57,407	[INFO]	147	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:29:58,424	[INFO]	148	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:29:58,426	[INFO]	149	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 06:29:59,453	[INFO]	150	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:30:00,495	[INFO]	151	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 06:30:01,530	[INFO]	152	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:30:05,040	[INFO]	153	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:30:05,041	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,39 ****
                  }
                  row.add(upleft+upright);
              }
!             rows.add(row);
          }
  
          return rows;
--- 33,39 ----
                  }
                  row.add(upleft+upright);
              }
!             rows.add(init);
          }
  
          return rows;

2020-12-31 06:30:06,062	[INFO]	154	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:30:07,140	[INFO]	155	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:30:10,633	[INFO]	156	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:30:10,634	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,30 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     upright = 0;
                      upleft = 0;
                  }
                  if (c < r) {
***************
*** 33,39 ****
                  }
                  row.add(upleft+upright);
              }
!             rows.add(row);
          }
  
          return rows;
--- 34,40 ----
                  }
                  row.add(upleft+upright);
              }
!             rows.add(init);
          }
  
          return rows;

2020-12-31 06:30:14,166	[INFO]	157	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:30:14,167	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,31 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     upright = 0;
+                     upleft = rows.get(r-1).get(c-1);
                      upleft = 0;
                  }
                  if (c < r) {
***************
*** 33,39 ****
                  }
                  row.add(upleft+upright);
              }
!             rows.add(row);
          }
  
          return rows;
--- 35,41 ----
                  }
                  row.add(upleft+upright);
              }
!             rows.add(init);
          }
  
          return rows;

2020-12-31 06:30:14,965	[INFO]	158	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:30:14,966	[INFO]	159	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:30:14,967	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,30 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     upright = 0;
                      upleft = 0;
                  }
                  if (c < r) {
***************
*** 33,39 ****
                  }
                  row.add(upleft+upright);
              }
!             rows.add(row);
          }
  
          return rows;
--- 34,40 ----
                  }
                  row.add(upleft+upright);
              }
!             rows.add(init);
          }
  
          return rows;

2020-12-31 06:30:18,447	[INFO]	160	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:30:18,448	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,30 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     upright = 0;
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 06:30:18,449	[INFO]	161	SUCCESS	+4.0	
2020-12-31 06:30:18,450	[DEBUG]	
2020-12-31 06:30:19,483	[INFO]	162	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:30:20,519	[INFO]	163	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:30:21,374	[INFO]	164	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:30:22,413	[INFO]	165	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:30:22,414	[INFO]	166	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:30:25,962	[INFO]	167	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:30:25,963	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 13,18 ****
--- 13,36 ----
  public class PASCAL {
      public static ArrayList<ArrayList<Integer>> pascal(int n) {
          ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();
+         for (int r=1; r<n; r++) {
+             ArrayList<Integer> row = new ArrayList<Integer>();
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             rows.add(row);
+         }
          ArrayList<Integer> init = new ArrayList<Integer>();
          init.add(1);
          rows.add(init);

2020-12-31 06:30:29,451	[INFO]	168	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:30:29,452	[INFO]	169	SUCCESS	+4.0	
2020-12-31 06:30:29,452	[DEBUG]	
2020-12-31 06:30:30,311	[INFO]	170	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:30:31,348	[INFO]	171	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:30:32,172	[INFO]	172	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:30:33,175	[INFO]	173	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:30:34,226	[INFO]	174	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:30:35,383	[INFO]	175	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:30:36,531	[INFO]	176	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:30:37,951	[INFO]	177	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:30:42,004	[INFO]	178	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '>'})
2020-12-31 06:30:42,004	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,25 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c>r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);

2020-12-31 06:30:42,005	[INFO]	179	SUCCESS	+4.0	
2020-12-31 06:30:42,005	[DEBUG]	
2020-12-31 06:30:42,877	[INFO]	180	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:30:43,889	[INFO]	181	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:30:44,902	[INFO]	182	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:30:45,937	[INFO]	183	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:30:46,950	[INFO]	184	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:30:47,997	[INFO]	185	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:30:49,031	[INFO]	186	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:30:50,053	[INFO]	187	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:30:51,089	[INFO]	188	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:30:51,090	[INFO]	189	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:30:51,091	[DEBUG]	
2020-12-31 06:30:52,101	[INFO]	190	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:30:55,672	[INFO]	191	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:30:55,673	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     upleft = 0;
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 06:30:55,674	[INFO]	192	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:30:55,675	[DEBUG]	
2020-12-31 06:30:56,686	[INFO]	193	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:30:56,689	[INFO]	194	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:30:56,689	[DEBUG]	
2020-12-31 06:30:56,691	[INFO]	195	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:30:56,692	[DEBUG]	
2020-12-31 06:31:00,151	[INFO]	196	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:31:00,153	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     upright = rows.get(r-1).get(c);
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 06:31:01,164	[INFO]	197	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:31:02,196	[INFO]	198	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:31:05,675	[INFO]	199	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:31:05,676	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             rows.add(init);
              rows.add(row);
          }
  

2020-12-31 06:31:05,678	[INFO]	200	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:31:05,681	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             rows.add(init);
              rows.add(row);
          }
  

2020-12-31 06:31:05,683	[INFO]	201	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:31:05,685	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             rows.add(init);
              rows.add(row);
          }
  

2020-12-31 06:31:05,686	[INFO]	202	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:31:05,687	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             rows.add(init);
              rows.add(row);
          }
  

2020-12-31 06:31:05,688	[INFO]	203	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:31:05,689	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             rows.add(init);
              rows.add(row);
          }
  

2020-12-31 06:31:05,690	[INFO]	204	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:31:05,691	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             rows.add(init);
              rows.add(row);
          }
  

2020-12-31 06:31:05,692	[INFO]	205	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:31:05,693	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             rows.add(init);
              rows.add(row);
          }
  

2020-12-31 06:31:06,689	[INFO]	206	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:31:06,692	[INFO]	207	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:31:06,693	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             rows.add(init);
              rows.add(row);
          }
  

2020-12-31 06:31:07,717	[INFO]	208	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:31:08,744	[INFO]	209	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:31:09,732	[INFO]	210	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:31:09,734	[INFO]	211	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:31:09,734	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             rows.add(init);
              rows.add(row);
          }
  

2020-12-31 06:31:09,735	[INFO]	212	SUCCESS	+4.0	
2020-12-31 06:31:09,735	[DEBUG]	
2020-12-31 06:31:10,741	[INFO]	213	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:31:11,789	[INFO]	214	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:31:12,825	[INFO]	215	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:31:13,838	[INFO]	216	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:31:14,881	[INFO]	217	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:31:15,897	[INFO]	218	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:31:16,921	[INFO]	219	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:31:17,945	[INFO]	220	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:31:18,916	[INFO]	221	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:31:22,409	[INFO]	222	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:31:22,410	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upright = rows.get(r-1).get(c);
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {

2020-12-31 06:31:22,411	[INFO]	223	SUCCESS	+4.0	
2020-12-31 06:31:22,411	[DEBUG]	
2020-12-31 06:31:23,450	[INFO]	224	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:31:24,502	[INFO]	225	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:31:25,550	[INFO]	226	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:31:26,596	[INFO]	227	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:31:30,051	[INFO]	228	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:31:30,051	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,33 ****
                      upleft = 0;
                  }
                  if (c < r) {
!                     upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
--- 27,33 ----
                      upleft = 0;
                  }
                  if (c < r) {
!                     upright = 0;
                  } else {
                      upright = 0;
                  }

2020-12-31 06:31:30,052	[INFO]	229	SUCCESS	+4.0	
2020-12-31 06:31:30,053	[DEBUG]	
2020-12-31 06:31:33,554	[INFO]	230	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '>'})
2020-12-31 06:31:33,555	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,25 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c>r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);

2020-12-31 06:31:33,556	[INFO]	231	SUCCESS	+4.0	
2020-12-31 06:31:33,556	[DEBUG]	
2020-12-31 06:31:34,585	[INFO]	232	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:31:38,070	[INFO]	233	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:31:38,071	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,30 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     rows.add(row);
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 06:31:38,072	[INFO]	234	SUCCESS	+4.0	
2020-12-31 06:31:38,072	[DEBUG]	
2020-12-31 06:31:39,087	[INFO]	235	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:31:40,085	[INFO]	236	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:31:41,101	[INFO]	237	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:31:44,619	[INFO]	238	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:31:44,620	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
!                 init.add(1);
              }
              rows.add(row);
          }

2020-12-31 06:31:44,621	[INFO]	239	SUCCESS	+4.0	
2020-12-31 06:31:44,621	[DEBUG]	
2020-12-31 06:31:45,608	[INFO]	240	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:31:46,449	[INFO]	241	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:31:49,996	[INFO]	242	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:31:49,997	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,32 ****
--- 27,35 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 06:31:49,998	[INFO]	243	SUCCESS	+4.0	
2020-12-31 06:31:49,998	[DEBUG]	
2020-12-31 06:31:51,037	[INFO]	244	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:31:52,064	[INFO]	245	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:31:53,119	[INFO]	246	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:31:56,565	[INFO]	247	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:31:56,566	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upright = 0;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {

2020-12-31 06:31:56,567	[INFO]	248	SUCCESS	+4.0	
2020-12-31 06:31:56,567	[DEBUG]	
2020-12-31 06:31:57,419	[INFO]	249	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 06:31:58,432	[INFO]	250	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:31:59,296	[INFO]	251	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:32:00,290	[INFO]	252	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:32:01,315	[INFO]	253	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:32:02,372	[INFO]	254	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:32:03,398	[INFO]	255	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:32:04,431	[INFO]	256	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:32:05,456	[INFO]	257	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:32:08,954	[INFO]	258	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:32:08,955	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,30 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     upleft = rows.get(r-1).get(c-1);
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 06:32:08,956	[INFO]	259	SUCCESS	+4.0	
2020-12-31 06:32:08,956	[DEBUG]	
2020-12-31 06:32:09,998	[INFO]	260	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:32:13,547	[INFO]	261	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:32:14,560	[INFO]	262	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:32:15,559	[INFO]	263	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:32:16,604	[INFO]	264	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:32:20,081	[INFO]	265	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:32:20,082	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
+                 rows.add(row);
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);

2020-12-31 06:32:23,609	[INFO]	266	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:32:23,610	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
+                 rows.add(row);
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
***************
*** 29,34 ****
--- 30,36 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     rows.add(row);
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 06:32:27,116	[INFO]	267	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:32:27,118	[INFO]	268	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:32:27,118	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
+                 rows.add(row);
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);

2020-12-31 06:32:27,120	[INFO]	269	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:32:27,120	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
+                 rows.add(row);
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);

2020-12-31 06:32:27,978	[INFO]	270	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 06:32:28,839	[INFO]	271	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:32:28,840	[INFO]	272	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:32:28,841	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
+                 rows.add(row);
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);

2020-12-31 06:32:29,854	[INFO]	273	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:32:29,856	[INFO]	274	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:32:29,856	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
+                 rows.add(row);
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);

2020-12-31 06:32:33,390	[INFO]	275	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:32:33,391	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
+                 rows.add(row);
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
***************
*** 31,36 ****
--- 32,40 ----
                  } else {
                      upright = 0;
                  }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 06:32:34,429	[INFO]	276	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:32:37,958	[INFO]	277	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:32:37,960	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 20,35 ****
--- 20,40 ----
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
+                 rows.add(row);
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
+                 upleft = rows.get(r-1).get(c-1);
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
                  }
                  row.add(upleft+upright);
              }

2020-12-31 06:32:37,961	[INFO]	278	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:32:37,962	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 20,35 ****
--- 20,40 ----
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
+                 rows.add(row);
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
+                 upleft = rows.get(r-1).get(c-1);
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
                  }
                  row.add(upleft+upright);
              }

2020-12-31 06:32:38,986	[INFO]	279	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:32:38,988	[INFO]	280	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:32:38,989	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
+                 rows.add(row);
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
***************
*** 31,36 ****
--- 32,40 ----
                  } else {
                      upright = 0;
                  }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 06:32:42,589	[INFO]	281	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:32:42,590	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,36 ****
--- 31,39 ----
                  } else {
                      upright = 0;
                  }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 06:32:42,591	[INFO]	282	SUCCESS	+4.0	
2020-12-31 06:32:42,591	[DEBUG]	
2020-12-31 06:32:46,017	[INFO]	283	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:32:46,018	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 18,23 ****
--- 18,24 ----
          rows.add(init);
  
          for (int r=1; r<n; r++) {
+             rows.add(init);
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;

2020-12-31 06:32:46,019	[INFO]	284	SUCCESS	+4.0	
2020-12-31 06:32:46,020	[DEBUG]	
2020-12-31 06:32:49,504	[INFO]	285	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:32:49,505	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     rows.add(init);
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 06:32:49,506	[INFO]	286	SUCCESS	+4.0	
2020-12-31 06:32:49,506	[DEBUG]	
2020-12-31 06:32:50,596	[INFO]	287	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:32:51,631	[INFO]	288	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:32:52,644	[INFO]	289	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:32:53,660	[INFO]	290	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:32:54,649	[INFO]	291	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:32:54,650	[INFO]	292	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:32:54,651	[DEBUG]	
2020-12-31 06:32:54,652	[INFO]	293	SUCCESS	+4.0	
2020-12-31 06:32:54,652	[DEBUG]	
2020-12-31 06:32:58,117	[INFO]	294	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '<='})
2020-12-31 06:32:58,118	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,27 ****
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c <= 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 06:33:01,589	[INFO]	295	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:33:01,590	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,29 ****
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
                  if (c < r) {
--- 21,30 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c <= 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     upright = rows.get(r-1).get(c);
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 06:33:02,637	[INFO]	296	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:33:06,117	[INFO]	297	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:33:06,118	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,30 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     upright = rows.get(r-1).get(c);
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 06:33:09,587	[INFO]	298	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:33:09,588	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,31 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     upright = rows.get(r-1).get(c);
+                     upleft = 0;
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 06:33:13,078	[INFO]	299	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:33:13,078	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 25,30 ****
--- 25,31 ----
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
+                     upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);

2020-12-31 06:33:13,079	[INFO]	300	SUCCESS	+4.0	
2020-12-31 06:33:13,080	[DEBUG]	
2020-12-31 06:33:14,109	[INFO]	301	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:33:17,579	[INFO]	302	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:33:17,580	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(row);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 06:33:18,620	[INFO]	303	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:33:19,638	[INFO]	304	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:33:19,639	[INFO]	305	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:33:19,640	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(row);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 06:33:19,641	[INFO]	306	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:33:19,641	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(row);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 06:33:19,642	[INFO]	307	SUCCESS	+4.0	
2020-12-31 06:33:19,642	[DEBUG]	
2020-12-31 06:33:20,692	[INFO]	308	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:33:21,764	[INFO]	309	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:33:22,587	[INFO]	310	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:33:26,114	[INFO]	311	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:33:26,115	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,30 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 06:33:27,146	[INFO]	312	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:33:27,148	[INFO]	313	SUCCESS	+4.0	
2020-12-31 06:33:27,149	[DEBUG]	
2020-12-31 06:33:28,190	[INFO]	314	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:33:29,190	[INFO]	315	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:33:30,243	[INFO]	316	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:33:33,704	[INFO]	317	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:33:33,705	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  } else {
                      upleft = 0;
                  }
+                 upright = 0;
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 06:33:33,706	[INFO]	318	SUCCESS	+4.0	
2020-12-31 06:33:33,706	[DEBUG]	
2020-12-31 06:33:34,728	[INFO]	319	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:33:38,294	[INFO]	320	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:33:38,295	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,39 ****
                  }
                  row.add(upleft+upright);
              }
!             rows.add(row);
          }
  
          return rows;
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
          }
  
          return rows;

2020-12-31 06:33:38,296	[INFO]	321	SUCCESS	+4.0	
2020-12-31 06:33:38,296	[DEBUG]	
2020-12-31 06:33:41,872	[INFO]	322	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:33:42,883	[INFO]	323	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:33:43,891	[INFO]	324	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:33:44,910	[INFO]	325	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 06:33:45,901	[INFO]	326	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:33:46,955	[INFO]	327	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:33:47,793	[INFO]	328	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:33:51,328	[INFO]	329	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:33:51,329	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,30 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     upright = 0;
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 06:33:52,351	[INFO]	330	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:33:52,352	[INFO]	331	SUCCESS	+4.0	
2020-12-31 06:33:52,352	[DEBUG]	
2020-12-31 06:33:53,385	[INFO]	332	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:33:54,447	[INFO]	333	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:33:55,481	[INFO]	334	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:33:56,339	[INFO]	335	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:33:57,127	[INFO]	336	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:33:57,992	[INFO]	337	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:33:59,043	[INFO]	338	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:34:00,070	[INFO]	339	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:34:03,601	[INFO]	340	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:34:03,602	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,30 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     rows.add(init);
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 06:34:04,582	[INFO]	341	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:34:04,584	[INFO]	342	SUCCESS	+4.0	
2020-12-31 06:34:04,584	[DEBUG]	
2020-12-31 06:34:05,598	[INFO]	343	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:34:09,029	[INFO]	344	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:34:10,086	[INFO]	345	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:34:10,087	[INFO]	346	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<'})
2020-12-31 06:34:10,088	[DEBUG]	
2020-12-31 06:34:10,088	[INFO]	347	SUCCESS	+4.0	
2020-12-31 06:34:10,089	[DEBUG]	
2020-12-31 06:34:11,132	[INFO]	348	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:34:12,165	[INFO]	349	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:34:13,204	[INFO]	350	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:34:14,230	[INFO]	351	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:34:14,233	[INFO]	352	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:34:15,307	[INFO]	353	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:34:16,357	[INFO]	354	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:34:17,373	[INFO]	355	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:34:20,913	[INFO]	356	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 06:34:20,914	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,30 ****
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
--- 24,30 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     upleft = rows.get(r-1).get(c-1);
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);

2020-12-31 06:34:20,914	[INFO]	357	SUCCESS	+4.0	
2020-12-31 06:34:20,915	[DEBUG]	
2020-12-31 06:34:21,902	[INFO]	358	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:34:22,930	[INFO]	359	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:34:23,996	[INFO]	360	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:34:25,048	[INFO]	361	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:34:26,074	[INFO]	362	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:34:27,122	[INFO]	363	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:34:28,138	[INFO]	364	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:34:29,194	[INFO]	365	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:34:32,733	[INFO]	366	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:34:32,734	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     upright = 0;
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 06:34:33,723	[INFO]	367	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:34:33,726	[INFO]	368	SUCCESS	+4.0	
2020-12-31 06:34:33,726	[DEBUG]	
2020-12-31 06:34:33,728	[INFO]	369	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:34:33,728	[DEBUG]	
2020-12-31 06:34:33,729	[INFO]	370	SUCCESS	+4.0	
2020-12-31 06:34:33,730	[DEBUG]	
2020-12-31 06:34:34,764	[INFO]	371	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:34:35,786	[INFO]	372	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:34:36,802	[INFO]	373	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:34:37,827	[INFO]	374	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:34:38,889	[INFO]	375	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:34:39,883	[INFO]	376	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:34:40,895	[INFO]	377	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:34:41,966	[INFO]	378	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:34:45,478	[INFO]	379	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:34:45,479	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     init.add(1);
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 06:34:45,480	[INFO]	380	SUCCESS	+4.0	
2020-12-31 06:34:45,480	[DEBUG]	
2020-12-31 06:34:46,517	[INFO]	381	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:34:46,518	[INFO]	382	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:34:46,519	[DEBUG]	
2020-12-31 06:34:46,519	[INFO]	383	SUCCESS	+4.0	
2020-12-31 06:34:46,520	[DEBUG]	
2020-12-31 06:34:47,566	[INFO]	384	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:34:48,584	[INFO]	385	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:34:49,667	[INFO]	386	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:34:53,126	[INFO]	387	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:34:53,127	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upright = rows.get(r-1).get(c);
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {

2020-12-31 06:34:53,128	[INFO]	388	SUCCESS	+4.0	
2020-12-31 06:34:53,129	[DEBUG]	
2020-12-31 06:34:54,150	[INFO]	389	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:34:55,140	[INFO]	390	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:34:56,208	[INFO]	391	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:34:57,254	[INFO]	392	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:34:58,289	[INFO]	393	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:35:01,805	[INFO]	394	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '>'})
2020-12-31 06:35:01,806	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,25 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c>r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);

2020-12-31 06:35:01,807	[INFO]	395	SUCCESS	+4.0	
2020-12-31 06:35:01,807	[DEBUG]	
2020-12-31 06:35:02,824	[INFO]	396	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:35:03,846	[INFO]	397	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:35:04,861	[INFO]	398	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:35:08,327	[INFO]	399	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:35:08,328	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 30,35 ****
--- 30,36 ----
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
+                     upright = 0;
                  }
                  row.add(upleft+upright);
              }

2020-12-31 06:35:08,329	[INFO]	400	SUCCESS	+4.0	
2020-12-31 06:35:08,329	[DEBUG]	
2020-12-31 06:35:09,321	[INFO]	401	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:35:12,807	[INFO]	402	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:35:12,808	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,33 ****
                      upleft = 0;
                  }
                  if (c < r) {
!                     upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
--- 27,33 ----
                      upleft = 0;
                  }
                  if (c < r) {
!                     upright = 0;
                  } else {
                      upright = 0;
                  }

2020-12-31 06:35:16,236	[INFO]	403	SUCCESS	 5.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:35:17,244	[INFO]	404	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 06:35:17,245	[INFO]	405	SUCCESS	+4.0	
2020-12-31 06:35:17,246	[DEBUG]	
2020-12-31 06:35:18,283	[INFO]	406	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:35:21,726	[INFO]	407	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '<='})
2020-12-31 06:35:21,727	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,27 ****
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c <= 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 06:35:21,728	[INFO]	408	SUCCESS	+4.0	
2020-12-31 06:35:21,728	[DEBUG]	
2020-12-31 06:35:22,735	[INFO]	409	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:35:23,782	[INFO]	410	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:35:23,783	[INFO]	411	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:35:23,783	[DEBUG]	
2020-12-31 06:35:27,346	[INFO]	412	SUCCESS	 5.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:35:28,333	[INFO]	413	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:35:28,334	[INFO]	414	SUCCESS	+4.0	
2020-12-31 06:35:28,335	[DEBUG]	
2020-12-31 06:35:29,150	[INFO]	415	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:35:29,153	[INFO]	416	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:35:32,659	[INFO]	417	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:35:32,660	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(row);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 06:35:32,662	[INFO]	418	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:35:32,662	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(row);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 06:35:32,663	[INFO]	419	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:35:32,664	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(row);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 06:35:32,664	[INFO]	420	SUCCESS	+4.0	
2020-12-31 06:35:32,664	[DEBUG]	
2020-12-31 06:35:36,313	[INFO]	421	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:35:36,314	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  } else {
                      upleft = 0;
                  }
+                 upright = rows.get(r-1).get(c);
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 06:35:36,315	[INFO]	422	SUCCESS	+4.0	
2020-12-31 06:35:36,316	[DEBUG]	
2020-12-31 06:35:37,336	[INFO]	423	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 06:35:38,149	[INFO]	424	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:35:39,186	[INFO]	425	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:35:40,242	[INFO]	426	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:35:41,320	[INFO]	427	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:35:42,318	[INFO]	428	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:35:42,320	[INFO]	429	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:35:42,320	[DEBUG]	
2020-12-31 06:35:42,321	[INFO]	430	SUCCESS	+4.0	
2020-12-31 06:35:42,321	[DEBUG]	
2020-12-31 06:35:43,377	[INFO]	431	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:35:46,918	[INFO]	432	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:35:46,919	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 36,41 ****
--- 36,60 ----
              rows.add(row);
          }
  
+         for (int r=1; r<n; r++) {
+             ArrayList<Integer> row = new ArrayList<Integer>();
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             rows.add(row);
+         }
+ 
          return rows;
      }
  }

2020-12-31 06:35:46,920	[INFO]	433	SUCCESS	+4.0	
2020-12-31 06:35:46,920	[DEBUG]	
2020-12-31 06:35:47,976	[INFO]	434	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:35:49,002	[INFO]	435	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:35:50,036	[INFO]	436	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:35:51,108	[INFO]	437	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:35:52,113	[INFO]	438	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:35:55,629	[INFO]	439	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '!='})
2020-12-31 06:35:55,630	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,32 ****
                  } else {
                      upleft = 0;
                  }
!                 if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
--- 26,32 ----
                  } else {
                      upleft = 0;
                  }
!                 if (c != r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 06:35:55,631	[INFO]	440	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '!='}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:35:55,631	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,32 ****
                  } else {
                      upleft = 0;
                  }
!                 if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
--- 26,32 ----
                  } else {
                      upleft = 0;
                  }
!                 if (c != r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 06:35:55,632	[INFO]	441	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '!='})
2020-12-31 06:35:55,632	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,32 ****
                  } else {
                      upleft = 0;
                  }
!                 if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
--- 26,32 ----
                  } else {
                      upleft = 0;
                  }
!                 if (c != r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 06:35:55,633	[INFO]	442	SUCCESS	+4.0	
2020-12-31 06:35:55,633	[DEBUG]	
2020-12-31 06:35:55,634	[INFO]	443	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:35:56,633	[INFO]	444	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:35:57,691	[INFO]	445	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:35:58,701	[INFO]	446	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:35:59,676	[INFO]	447	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:36:00,690	[INFO]	448	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:36:01,701	[INFO]	449	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:36:05,108	[INFO]	450	SUCCESS	+4.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:36:05,109	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 17,40 ****
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r<n; r++) {
!             ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
!             rows.add(row);
!         }
  
          return rows;
      }
--- 17,23 ----
          init.add(1);
          rows.add(init);
  
!         
  
          return rows;
      }

2020-12-31 06:36:05,110	[INFO]	451	SUCCESS	+4.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:36:05,110	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 17,40 ****
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r<n; r++) {
!             ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
!             rows.add(row);
!         }
  
          return rows;
      }
--- 17,23 ----
          init.add(1);
          rows.add(init);
  
!         
  
          return rows;
      }

2020-12-31 06:36:05,111	[INFO]	452	SUCCESS	+4.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:36:05,111	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 17,40 ****
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r<n; r++) {
!             ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
!             rows.add(row);
!         }
  
          return rows;
      }
--- 17,23 ----
          init.add(1);
          rows.add(init);
  
!         
  
          return rows;
      }

2020-12-31 06:36:05,112	[INFO]	453	SUCCESS	+4.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:36:05,113	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 17,40 ****
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r<n; r++) {
!             ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
!             rows.add(row);
!         }
  
          return rows;
      }
--- 17,23 ----
          init.add(1);
          rows.add(init);
  
!         
  
          return rows;
      }

2020-12-31 06:36:06,135	[INFO]	454	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:36:06,137	[INFO]	455	SUCCESS	+4.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:36:06,137	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 17,40 ****
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r<n; r++) {
!             ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
!             rows.add(row);
!         }
  
          return rows;
      }
--- 17,23 ----
          init.add(1);
          rows.add(init);
  
!         
  
          return rows;
      }

2020-12-31 06:36:07,135	[INFO]	456	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:36:07,137	[INFO]	457	SUCCESS	+4.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:36:07,138	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 17,40 ****
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r<n; r++) {
!             ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
!             rows.add(row);
!         }
  
          return rows;
      }
--- 17,23 ----
          init.add(1);
          rows.add(init);
  
!         
  
          return rows;
      }

2020-12-31 06:36:10,612	[INFO]	458	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:36:10,613	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,39 ****
                  }
                  row.add(upleft+upright);
              }
!             rows.add(row);
          }
  
          return rows;
--- 33,39 ----
                  }
                  row.add(upleft+upright);
              }
!             int upleft, upright;
          }
  
          return rows;

2020-12-31 06:36:14,052	[INFO]	459	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '>='})
2020-12-31 06:36:14,053	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,39 ****
                  } else {
                      upleft = 0;
                  }
!                 if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);
              }
!             rows.add(row);
          }
  
          return rows;
--- 26,39 ----
                  } else {
                      upleft = 0;
                  }
!                 if (c >= r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);
              }
!             int upleft, upright;
          }
  
          return rows;

2020-12-31 06:36:14,054	[INFO]	460	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:36:14,054	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,39 ****
                  }
                  row.add(upleft+upright);
              }
!             rows.add(row);
          }
  
          return rows;
--- 33,39 ----
                  }
                  row.add(upleft+upright);
              }
!             int upleft, upright;
          }
  
          return rows;

2020-12-31 06:36:14,055	[INFO]	461	SUCCESS	+4.0	
2020-12-31 06:36:14,055	[DEBUG]	
2020-12-31 06:36:14,904	[INFO]	462	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 06:36:14,906	[INFO]	463	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:36:15,930	[INFO]	464	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:36:16,942	[INFO]	465	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:36:17,991	[INFO]	466	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:36:19,028	[INFO]	467	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:36:20,050	[INFO]	468	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:36:20,051	[INFO]	469	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:36:23,521	[INFO]	470	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '>'})
2020-12-31 06:36:23,522	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,25 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c>r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);

2020-12-31 06:36:24,572	[INFO]	471	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '>'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:36:24,573	[INFO]	472	SUCCESS	+4.0	
2020-12-31 06:36:24,574	[DEBUG]	
2020-12-31 06:36:24,575	[INFO]	473	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:36:25,609	[INFO]	474	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:36:26,630	[INFO]	475	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:36:30,230	[INFO]	476	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:36:30,231	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,36 ****
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
+                 init.add(1);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 06:36:30,233	[INFO]	477	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:36:30,233	[DEBUG]	
2020-12-31 06:36:30,234	[INFO]	478	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:36:30,235	[DEBUG]	
2020-12-31 06:36:31,057	[INFO]	479	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:36:32,077	[INFO]	480	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:36:32,078	[INFO]	481	SUCCESS	+4.0	
2020-12-31 06:36:32,078	[DEBUG]	
2020-12-31 06:36:33,101	[INFO]	482	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:36:34,133	[INFO]	483	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:36:35,179	[INFO]	484	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:36:36,010	[INFO]	485	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:36:37,030	[INFO]	486	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:36:38,060	[INFO]	487	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:36:41,557	[INFO]	488	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '=='})
2020-12-31 06:36:41,558	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,25 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c==r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);

2020-12-31 06:36:41,558	[INFO]	489	SUCCESS	+4.0	
2020-12-31 06:36:41,559	[DEBUG]	
2020-12-31 06:36:42,422	[INFO]	490	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:36:43,426	[INFO]	491	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:36:44,455	[INFO]	492	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:36:44,456	[INFO]	493	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:36:44,457	[DEBUG]	
2020-12-31 06:36:48,038	[INFO]	494	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:36:48,040	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,36 ****
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
+                 upright = 0;
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 06:36:48,040	[INFO]	495	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:36:48,041	[DEBUG]	
2020-12-31 06:36:48,041	[INFO]	496	SUCCESS	+4.0	
2020-12-31 06:36:48,042	[DEBUG]	
2020-12-31 06:36:49,137	[INFO]	497	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:36:50,010	[INFO]	498	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:36:51,043	[INFO]	499	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:36:54,635	[INFO]	500	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:36:54,636	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,39 ****
                  }
                  row.add(upleft+upright);
              }
!             rows.add(row);
          }
  
          return rows;
--- 33,39 ----
                  }
                  row.add(upleft+upright);
              }
!             init.add(1);
          }
  
          return rows;

2020-12-31 06:36:54,637	[INFO]	==== END ====
2020-12-31 06:36:54,638	[INFO]	Reason: step budget
2020-12-31 06:36:54,639	[INFO]	
2020-12-31 06:36:54,640	[INFO]	========== EPOCH 18 ==========
2020-12-31 06:36:54,640	[INFO]	==== WARMUP ====
2020-12-31 06:36:58,137	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 06:36:58,137	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 06:37:01,577	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 06:37:01,577	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 06:37:05,266	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 06:37:05,267	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 06:37:08,696	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-31 06:37:08,697	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 06:37:08,697	[INFO]	==== START ====
2020-12-31 06:37:09,722	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 06:37:13,203	[INFO]	2	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:37:13,205	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,35 ****
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
!                     upright = 0;
                  }
                  row.add(upleft+upright);
              }
--- 29,35 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
!                     return rows;
                  }
                  row.add(upleft+upright);
              }

2020-12-31 06:37:14,257	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:37:15,301	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:37:16,323	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:37:16,324	[INFO]	6	SUCCESS	+4.0	
2020-12-31 06:37:16,324	[DEBUG]	
2020-12-31 06:37:17,350	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:37:18,397	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:37:21,901	[INFO]	9	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:37:21,902	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,29 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {

2020-12-31 06:37:25,509	[INFO]	10	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:37:25,511	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 14,22 ****
      public static ArrayList<ArrayList<Integer>> pascal(int n) {
          ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();
          ArrayList<Integer> init = new ArrayList<Integer>();
-         init.add(1);
-         rows.add(init);
- 
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
--- 14,19 ----
***************
*** 35,40 ****
--- 32,61 ----
              }
              rows.add(row);
          }
+         init.add(1);
+         rows.add(init);
+ 
+         for (int r=1; r<n; r++) {
+             ArrayList<Integer> row = new ArrayList<Integer>();
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             rows.add(row);
+         }
  
          return rows;
      }

2020-12-31 06:37:25,512	[INFO]	11	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:37:25,513	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 14,22 ****
      public static ArrayList<ArrayList<Integer>> pascal(int n) {
          ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();
          ArrayList<Integer> init = new ArrayList<Integer>();
-         init.add(1);
-         rows.add(init);
- 
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
--- 14,19 ----
***************
*** 35,40 ****
--- 32,61 ----
              }
              rows.add(row);
          }
+         init.add(1);
+         rows.add(init);
+ 
+         for (int r=1; r<n; r++) {
+             ArrayList<Integer> row = new ArrayList<Integer>();
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             rows.add(row);
+         }
  
          return rows;
      }

2020-12-31 06:37:26,541	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:37:27,422	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:37:30,970	[INFO]	14	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:37:30,971	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 14,21 ****
--- 14,61 ----
      public static ArrayList<ArrayList<Integer>> pascal(int n) {
          ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();
          ArrayList<Integer> init = new ArrayList<Integer>();
+         for (int r=1; r<n; r++) {
+             ArrayList<Integer> row = new ArrayList<Integer>();
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             rows.add(row);
+         }
          init.add(1);
          rows.add(init);
+ 
+         for (int r=1; r<n; r++) {
+             ArrayList<Integer> row = new ArrayList<Integer>();
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             rows.add(row);
+         }
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();

2020-12-31 06:37:30,973	[INFO]	15	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:37:30,973	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 14,21 ****
--- 14,61 ----
      public static ArrayList<ArrayList<Integer>> pascal(int n) {
          ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();
          ArrayList<Integer> init = new ArrayList<Integer>();
+         for (int r=1; r<n; r++) {
+             ArrayList<Integer> row = new ArrayList<Integer>();
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             rows.add(row);
+         }
          init.add(1);
          rows.add(init);
+ 
+         for (int r=1; r<n; r++) {
+             ArrayList<Integer> row = new ArrayList<Integer>();
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             rows.add(row);
+         }
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();

2020-12-31 06:37:34,600	[INFO]	16	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:37:34,601	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 14,21 ****
--- 14,64 ----
      public static ArrayList<ArrayList<Integer>> pascal(int n) {
          ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();
          ArrayList<Integer> init = new ArrayList<Integer>();
+         for (int r=1; r<n; r++) {
+             ArrayList<Integer> row = new ArrayList<Integer>();
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             rows.add(row);
+         }
          init.add(1);
          rows.add(init);
+ 
+         for (int r=1; r<n; r++) {
+             ArrayList<Integer> row = new ArrayList<Integer>();
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             rows.add(row);
+         }
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();

2020-12-31 06:37:38,062	[INFO]	17	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:37:38,064	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 14,21 ****
--- 14,61 ----
      public static ArrayList<ArrayList<Integer>> pascal(int n) {
          ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();
          ArrayList<Integer> init = new ArrayList<Integer>();
+         for (int r=1; r<n; r++) {
+             ArrayList<Integer> row = new ArrayList<Integer>();
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             rows.add(row);
+         }
          init.add(1);
          rows.add(init);
+ 
+         for (int r=1; r<n; r++) {
+             ArrayList<Integer> row = new ArrayList<Integer>();
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             rows.add(row);
+         }
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();

2020-12-31 06:37:41,600	[INFO]	18	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:37:41,601	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 14,21 ****
--- 14,58 ----
      public static ArrayList<ArrayList<Integer>> pascal(int n) {
          ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();
          ArrayList<Integer> init = new ArrayList<Integer>();
+         for (int r=1; r<n; r++) {
+             ArrayList<Integer> row = new ArrayList<Integer>();
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             rows.add(row);
+         }
          init.add(1);
          rows.add(init);
+ 
+         for (int r=1; r<n; r++) {
+             ArrayList<Integer> row = new ArrayList<Integer>();
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             rows.add(row);
+         }
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();

2020-12-31 06:37:45,078	[INFO]	19	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:37:45,079	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 14,19 ****
--- 14,37 ----
      public static ArrayList<ArrayList<Integer>> pascal(int n) {
          ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();
          ArrayList<Integer> init = new ArrayList<Integer>();
+         for (int r=1; r<n; r++) {
+             ArrayList<Integer> row = new ArrayList<Integer>();
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             rows.add(row);
+         }
          init.add(1);
          rows.add(init);
  

2020-12-31 06:37:48,570	[INFO]	20	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:37:48,572	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 14,22 ****
      public static ArrayList<ArrayList<Integer>> pascal(int n) {
          ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();
          ArrayList<Integer> init = new ArrayList<Integer>();
-         init.add(1);
-         rows.add(init);
- 
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
--- 14,19 ----
***************
*** 35,40 ****
--- 32,59 ----
              }
              rows.add(row);
          }
+         init.add(1);
+         rows.add(init);
+ 
+         for (int r=1; r<n; r++) {
+             ArrayList<Integer> row = new ArrayList<Integer>();
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     rows.add(init);
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             rows.add(row);
+         }
  
          return rows;
      }

2020-12-31 06:37:48,573	[INFO]	21	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:37:48,574	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 14,22 ****
      public static ArrayList<ArrayList<Integer>> pascal(int n) {
          ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();
          ArrayList<Integer> init = new ArrayList<Integer>();
-         init.add(1);
-         rows.add(init);
- 
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
--- 14,19 ----
***************
*** 35,40 ****
--- 32,59 ----
              }
              rows.add(row);
          }
+         init.add(1);
+         rows.add(init);
+ 
+         for (int r=1; r<n; r++) {
+             ArrayList<Integer> row = new ArrayList<Integer>();
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     rows.add(init);
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             rows.add(row);
+         }
  
          return rows;
      }

2020-12-31 06:37:48,575	[INFO]	22	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:37:48,576	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 14,22 ****
      public static ArrayList<ArrayList<Integer>> pascal(int n) {
          ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();
          ArrayList<Integer> init = new ArrayList<Integer>();
-         init.add(1);
-         rows.add(init);
- 
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
--- 14,19 ----
***************
*** 35,40 ****
--- 32,59 ----
              }
              rows.add(row);
          }
+         init.add(1);
+         rows.add(init);
+ 
+         for (int r=1; r<n; r++) {
+             ArrayList<Integer> row = new ArrayList<Integer>();
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     rows.add(init);
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             rows.add(row);
+         }
  
          return rows;
      }

2020-12-31 06:37:52,185	[INFO]	23	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:37:52,186	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 14,19 ****
--- 14,37 ----
      public static ArrayList<ArrayList<Integer>> pascal(int n) {
          ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();
          ArrayList<Integer> init = new ArrayList<Integer>();
+         for (int r=1; r<n; r++) {
+             ArrayList<Integer> row = new ArrayList<Integer>();
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             rows.add(row);
+         }
          init.add(1);
          rows.add(init);
  
***************
*** 33,38 ****
--- 51,71 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     rows.add(init);
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:37:55,660	[INFO]	24	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:37:55,662	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 14,24 ****
--- 14,56 ----
      public static ArrayList<ArrayList<Integer>> pascal(int n) {
          ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();
          ArrayList<Integer> init = new ArrayList<Integer>();
+         for (int r=1; r<n; r++) {
+             ArrayList<Integer> row = new ArrayList<Integer>();
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             rows.add(row);
+         }
          init.add(1);
          rows.add(init);
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 06:37:59,146	[INFO]	25	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '=='})
2020-12-31 06:38:00,223	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:38:00,225	[INFO]	27	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:38:00,226	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 14,19 ****
--- 14,37 ----
      public static ArrayList<ArrayList<Integer>> pascal(int n) {
          ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();
          ArrayList<Integer> init = new ArrayList<Integer>();
+         for (int r=1; r<n; r++) {
+             ArrayList<Integer> row = new ArrayList<Integer>();
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             rows.add(row);
+         }
          init.add(1);
          rows.add(init);
  

2020-12-31 06:38:00,227	[INFO]	28	SUCCESS	+4.0	
2020-12-31 06:38:00,227	[DEBUG]	
2020-12-31 06:38:03,713	[INFO]	29	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:38:03,715	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,36 ****
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
+                 init.add(1);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 06:38:04,530	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:38:05,573	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:38:05,574	[INFO]	32	SUCCESS	+4.0	
2020-12-31 06:38:05,575	[DEBUG]	
2020-12-31 06:38:09,128	[INFO]	33	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:38:09,129	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  } else {
                      upleft = 0;
                  }
+                 init.add(1);
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 06:38:10,181	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:38:10,184	[INFO]	35	SUCCESS	+4.0	
2020-12-31 06:38:10,184	[DEBUG]	
2020-12-31 06:38:11,224	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:38:12,230	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:38:15,721	[INFO]	38	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:38:15,722	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,36 ****
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
+                 rows.add(row);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 06:38:15,722	[INFO]	39	SUCCESS	+4.0	
2020-12-31 06:38:15,723	[DEBUG]	
2020-12-31 06:38:19,154	[INFO]	40	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:38:19,155	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
!                 init.add(1);
              }
              rows.add(row);
          }

2020-12-31 06:38:20,183	[INFO]	41	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:38:20,185	[INFO]	42	SUCCESS	+4.0	
2020-12-31 06:38:20,186	[DEBUG]	
2020-12-31 06:38:23,686	[INFO]	43	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:38:23,687	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 23,28 ****
--- 23,29 ----
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
+                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }

2020-12-31 06:38:23,688	[INFO]	44	SUCCESS	+4.0	
2020-12-31 06:38:23,689	[DEBUG]	
2020-12-31 06:38:23,691	[INFO]	45	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:38:23,691	[DEBUG]	
2020-12-31 06:38:27,259	[INFO]	46	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:38:27,260	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,30 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 06:38:30,717	[INFO]	47	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:38:30,718	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,31 ****
--- 22,35 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
+                 rows.add(row);
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 06:38:31,742	[INFO]	48	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:38:32,759	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:38:36,293	[INFO]	50	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:38:36,294	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  } else {
                      upleft = 0;
                  }
+                 rows.add(row);
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 06:38:37,289	[INFO]	51	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:38:40,763	[INFO]	52	SUCCESS	 5.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:38:41,822	[INFO]	53	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:38:41,823	[INFO]	54	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:38:41,824	[DEBUG]	
2020-12-31 06:38:41,824	[INFO]	55	SUCCESS	+4.0	
2020-12-31 06:38:41,825	[DEBUG]	
2020-12-31 06:38:41,826	[INFO]	56	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:38:41,826	[DEBUG]	
2020-12-31 06:38:42,892	[INFO]	57	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:38:42,893	[INFO]	58	SUCCESS	+4.0	
2020-12-31 06:38:42,893	[DEBUG]	
2020-12-31 06:38:43,920	[INFO]	59	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:38:43,922	[INFO]	60	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:38:43,922	[DEBUG]	
2020-12-31 06:38:45,012	[INFO]	61	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 16)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:38:46,096	[INFO]	62	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 16)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:38:46,097	[INFO]	63	SUCCESS	+4.0	
2020-12-31 06:38:46,097	[DEBUG]	
2020-12-31 06:38:47,154	[INFO]	64	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:38:50,678	[INFO]	65	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:38:50,679	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,28 ****
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
--- 22,28 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
!                     return rows;
                  } else {
                      upleft = 0;
                  }

2020-12-31 06:38:51,700	[INFO]	66	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:38:51,702	[INFO]	67	SUCCESS	+4.0	
2020-12-31 06:38:51,703	[DEBUG]	
2020-12-31 06:38:52,525	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:38:53,558	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:38:57,018	[INFO]	70	SUCCESS	 5.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:38:58,061	[INFO]	71	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:39:01,608	[INFO]	72	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:39:01,609	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,36 ****
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
+                 rows.add(init);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 06:39:01,610	[INFO]	73	SUCCESS	+4.0	
2020-12-31 06:39:01,610	[DEBUG]	
2020-12-31 06:39:05,113	[INFO]	74	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:39:05,114	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,39 ****
                  }
                  row.add(upleft+upright);
              }
!             rows.add(row);
          }
  
          return rows;
--- 33,39 ----
                  }
                  row.add(upleft+upright);
              }
!             rows.add(init);
          }
  
          return rows;

2020-12-31 06:39:05,971	[INFO]	75	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:39:05,973	[INFO]	76	SUCCESS	+4.0	
2020-12-31 06:39:05,973	[DEBUG]	
2020-12-31 06:39:06,967	[INFO]	77	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:39:10,512	[INFO]	78	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:39:10,513	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 36,41 ****
--- 36,60 ----
              rows.add(row);
          }
  
+         for (int r=1; r<n; r++) {
+             ArrayList<Integer> row = new ArrayList<Integer>();
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             rows.add(row);
+         }
+ 
          return rows;
      }
  }

2020-12-31 06:39:10,514	[INFO]	79	SUCCESS	+4.0	
2020-12-31 06:39:10,514	[DEBUG]	
2020-12-31 06:39:11,581	[INFO]	80	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:39:12,613	[INFO]	81	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:39:13,654	[INFO]	82	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:39:17,111	[INFO]	83	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:39:17,112	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
!                 return rows;
              }
              rows.add(row);
          }

2020-12-31 06:39:17,112	[INFO]	84	SUCCESS	+4.0	
2020-12-31 06:39:17,113	[DEBUG]	
2020-12-31 06:39:18,138	[INFO]	85	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:39:19,179	[INFO]	86	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:39:22,703	[INFO]	87	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:39:22,704	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 34,39 ****
--- 34,40 ----
                  row.add(upleft+upright);
              }
              rows.add(row);
+             rows.add(row);
          }
  
          return rows;

2020-12-31 06:39:22,706	[INFO]	88	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:39:22,706	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 34,39 ****
--- 34,40 ----
                  row.add(upleft+upright);
              }
              rows.add(row);
+             rows.add(row);
          }
  
          return rows;

2020-12-31 06:39:22,708	[INFO]	89	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:39:22,709	[DEBUG]	
2020-12-31 06:39:22,710	[INFO]	90	SUCCESS	+4.0	
2020-12-31 06:39:22,711	[DEBUG]	
2020-12-31 06:39:23,717	[INFO]	91	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:39:27,182	[INFO]	92	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:39:27,183	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     init.add(1);
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 06:39:27,184	[INFO]	93	SUCCESS	+4.0	
2020-12-31 06:39:27,184	[DEBUG]	
2020-12-31 06:39:28,195	[INFO]	94	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:39:29,049	[INFO]	95	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:39:30,075	[INFO]	96	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:39:31,086	[INFO]	97	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:39:34,561	[INFO]	98	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:39:34,562	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,36 ****
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
+                 rows.add(row);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 06:39:34,562	[INFO]	99	SUCCESS	+4.0	
2020-12-31 06:39:34,563	[DEBUG]	
2020-12-31 06:39:35,589	[INFO]	100	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:39:36,594	[INFO]	101	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:39:37,643	[INFO]	102	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:39:38,690	[INFO]	103	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:39:39,660	[INFO]	104	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 06:39:40,699	[INFO]	105	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:39:44,258	[INFO]	106	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:39:44,260	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
!                 rows.add(row);
              }
              rows.add(row);
          }

2020-12-31 06:39:47,712	[INFO]	107	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:39:47,713	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,39 ----
                  } else {
                      upright = 0;
                  }
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 }
              }
              rows.add(row);
          }

2020-12-31 06:39:48,560	[INFO]	108	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:39:48,563	[INFO]	109	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:39:48,565	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,39 ----
                  } else {
                      upright = 0;
                  }
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 }
              }
              rows.add(row);
          }

2020-12-31 06:39:48,566	[INFO]	110	SUCCESS	+4.0	
2020-12-31 06:39:48,567	[DEBUG]	
2020-12-31 06:39:49,587	[INFO]	111	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:39:50,607	[INFO]	112	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:39:51,631	[INFO]	113	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:39:52,674	[INFO]	114	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:39:52,676	[INFO]	115	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:39:52,677	[DEBUG]	
2020-12-31 06:39:52,677	[INFO]	116	SUCCESS	+4.0	
2020-12-31 06:39:52,678	[DEBUG]	
2020-12-31 06:39:53,697	[INFO]	117	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:39:54,727	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:39:55,784	[INFO]	119	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:39:56,814	[INFO]	120	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:40:00,302	[INFO]	121	SUCCESS	 5.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:40:01,297	[INFO]	122	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:40:01,299	[INFO]	123	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:40:01,299	[DEBUG]	
2020-12-31 06:40:01,300	[INFO]	124	SUCCESS	+4.0	
2020-12-31 06:40:01,300	[DEBUG]	
2020-12-31 06:40:02,327	[INFO]	125	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:40:03,368	[INFO]	126	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:40:03,370	[INFO]	127	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:40:03,371	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,36 ****
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
+                 rows.add(row);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 06:40:04,398	[INFO]	128	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:40:04,399	[INFO]	129	SUCCESS	+4.0	
2020-12-31 06:40:04,399	[DEBUG]	
2020-12-31 06:40:05,444	[INFO]	130	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:40:06,515	[INFO]	131	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:40:07,544	[INFO]	132	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:40:08,585	[INFO]	133	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:40:12,063	[INFO]	134	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:40:15,544	[INFO]	135	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '<='})
2020-12-31 06:40:15,545	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,25 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<=r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);

2020-12-31 06:40:15,545	[INFO]	==== END ====
2020-12-31 06:40:15,545	[INFO]	Reason: target fitness reached
2020-12-31 06:40:15,546	[INFO]	
2020-12-31 06:40:15,546	[INFO]	========== EPOCH 19 ==========
2020-12-31 06:40:15,547	[INFO]	==== WARMUP ====
2020-12-31 06:40:19,035	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 06:40:19,035	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 06:40:22,556	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 06:40:22,556	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 06:40:26,138	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 06:40:26,138	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 06:40:29,590	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-31 06:40:29,590	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 06:40:29,590	[INFO]	==== START ====
2020-12-31 06:40:29,591	[INFO]	1	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:40:29,591	[DEBUG]	
2020-12-31 06:40:29,592	[INFO]	2	SUCCESS	+4.0	
2020-12-31 06:40:29,592	[DEBUG]	
2020-12-31 06:40:30,609	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:40:31,629	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:40:32,674	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:40:33,714	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:40:34,711	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:40:39,606	[INFO]	8	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:40:39,607	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     init.add(1);
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 06:40:44,151	[INFO]	9	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '!='})
2020-12-31 06:40:44,153	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 17,23 ****
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
--- 17,23 ----
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r!=n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
***************
*** 27,32 ****
--- 27,33 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     init.add(1);
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 06:40:44,155	[INFO]	10	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:40:44,156	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,32 ****
--- 27,33 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     init.add(1);
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 06:40:44,157	[INFO]	11	SUCCESS	+4.0	
2020-12-31 06:40:44,158	[DEBUG]	
2020-12-31 06:40:45,546	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:40:46,795	[INFO]	13	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:40:50,369	[INFO]	14	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:40:50,370	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,28 ****
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
--- 22,28 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
!                     return rows;
                  } else {
                      upleft = 0;
                  }

2020-12-31 06:40:53,877	[INFO]	15	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:40:53,878	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,29 ****
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
                  if (c < r) {
--- 22,30 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
!                     return rows;
                  } else {
+                     upright = rows.get(r-1).get(c);
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 06:40:57,445	[INFO]	16	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:40:57,447	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,30 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     upright = rows.get(r-1).get(c);
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 06:40:57,447	[INFO]	17	SUCCESS	+4.0	
2020-12-31 06:40:57,448	[DEBUG]	
2020-12-31 06:40:58,481	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:40:59,338	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:41:00,379	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:41:03,878	[INFO]	21	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:41:03,879	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,32 ****
--- 27,35 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 06:41:03,879	[INFO]	22	SUCCESS	+4.0	
2020-12-31 06:41:03,880	[DEBUG]	
2020-12-31 06:41:04,886	[INFO]	23	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:41:05,908	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:41:06,933	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:41:07,815	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:41:08,864	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:41:09,894	[INFO]	28	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:41:09,896	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:41:10,911	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:41:11,945	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:41:15,446	[INFO]	32	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:41:15,447	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
!                 upleft = 0;
              }
              rows.add(row);
          }

2020-12-31 06:41:15,447	[INFO]	33	SUCCESS	+4.0	
2020-12-31 06:41:15,448	[DEBUG]	
2020-12-31 06:41:16,282	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:41:17,294	[INFO]	35	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:41:18,337	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:41:21,825	[INFO]	37	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:41:21,826	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,30 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     upright = 0;
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 06:41:21,827	[INFO]	38	SUCCESS	+4.0	
2020-12-31 06:41:21,828	[DEBUG]	
2020-12-31 06:41:22,835	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:41:22,837	[INFO]	40	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:41:26,414	[INFO]	41	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '!='})
2020-12-31 06:41:26,415	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,27 ****
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c != 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 06:41:27,433	[INFO]	42	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:41:27,434	[INFO]	43	SUCCESS	+4.0	
2020-12-31 06:41:27,435	[DEBUG]	
2020-12-31 06:41:28,473	[INFO]	44	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:41:29,492	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:41:30,529	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:41:33,993	[INFO]	47	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:41:33,995	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 34,39 ****
--- 34,40 ----
                  row.add(upleft+upright);
              }
              rows.add(row);
+             rows.add(row);
          }
  
          return rows;

2020-12-31 06:41:37,489	[INFO]	48	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:41:37,490	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,38 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
  
--- 31,39 ----
                  } else {
                      upright = 0;
                  }
!                 return rows;
              }
+             rows.add(row);
              rows.add(row);
          }
  

2020-12-31 06:41:40,999	[INFO]	49	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:41:41,000	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,30 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     upleft = rows.get(r-1).get(c-1);
                      upleft = 0;
                  }
                  if (c < r) {
***************
*** 31,38 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
  
--- 32,40 ----
                  } else {
                      upright = 0;
                  }
!                 return rows;
              }
+             rows.add(row);
              rows.add(row);
          }
  

2020-12-31 06:41:42,062	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:41:42,064	[INFO]	51	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:41:42,065	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,30 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     upleft = rows.get(r-1).get(c-1);
                      upleft = 0;
                  }
                  if (c < r) {
***************
*** 31,38 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
  
--- 32,40 ----
                  } else {
                      upright = 0;
                  }
!                 return rows;
              }
+             rows.add(row);
              rows.add(row);
          }
  

2020-12-31 06:41:45,517	[INFO]	52	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:41:45,518	[INFO]	53	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:41:45,519	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,38 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
  
--- 31,39 ----
                  } else {
                      upright = 0;
                  }
!                 return rows;
              }
+             rows.add(row);
              rows.add(row);
          }
  

2020-12-31 06:41:45,520	[INFO]	54	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:41:45,521	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,38 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
  
--- 31,39 ----
                  } else {
                      upright = 0;
                  }
!                 return rows;
              }
+             rows.add(row);
              rows.add(row);
          }
  

2020-12-31 06:41:46,525	[INFO]	55	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:41:47,573	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:41:51,091	[INFO]	57	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:41:51,092	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
!                 return rows;
              }
              rows.add(row);
          }

2020-12-31 06:41:52,093	[INFO]	58	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:41:53,158	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:41:53,159	[INFO]	60	SUCCESS	+4.0	
2020-12-31 06:41:53,159	[DEBUG]	
2020-12-31 06:41:54,191	[INFO]	61	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:41:54,193	[INFO]	62	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:41:54,194	[DEBUG]	
2020-12-31 06:41:55,196	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:41:55,198	[INFO]	64	SUCCESS	+4.0	
2020-12-31 06:41:55,198	[DEBUG]	
2020-12-31 06:41:55,200	[INFO]	65	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:41:56,237	[INFO]	66	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:41:57,291	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:41:58,306	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:41:58,307	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:41:59,357	[INFO]	70	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:42:02,876	[INFO]	71	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '=='})
2020-12-31 06:42:02,877	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,32 ****
                  } else {
                      upleft = 0;
                  }
!                 if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
--- 26,32 ----
                  } else {
                      upleft = 0;
                  }
!                 if (c == r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 06:42:03,888	[INFO]	72	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:42:03,890	[INFO]	73	SUCCESS	+4.0	
2020-12-31 06:42:03,890	[DEBUG]	
2020-12-31 06:42:04,922	[INFO]	74	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:42:05,971	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:42:06,828	[INFO]	76	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:42:07,884	[INFO]	77	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:42:07,886	[INFO]	78	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:42:07,886	[DEBUG]	
2020-12-31 06:42:09,149	[INFO]	79	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:42:10,466	[INFO]	80	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:42:10,467	[INFO]	81	SUCCESS	+4.0	
2020-12-31 06:42:10,468	[DEBUG]	
2020-12-31 06:42:11,897	[INFO]	82	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:42:16,408	[INFO]	83	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:42:16,409	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 18,23 ****
--- 18,24 ----
          rows.add(init);
  
          for (int r=1; r<n; r++) {
+             init.add(1);
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;

2020-12-31 06:42:17,824	[INFO]	84	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:42:17,825	[INFO]	85	SUCCESS	+4.0	
2020-12-31 06:42:17,825	[DEBUG]	
2020-12-31 06:42:19,150	[INFO]	86	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:42:23,750	[INFO]	87	SUCCESS	*3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:42:23,751	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:42:25,095	[INFO]	88	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:42:25,097	[INFO]	89	SUCCESS	 4.0	
2020-12-31 06:42:26,518	[INFO]	90	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:42:27,669	[INFO]	91	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:42:31,119	[INFO]	92	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:42:32,146	[INFO]	93	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:42:35,653	[INFO]	94	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:42:36,683	[INFO]	95	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:42:37,683	[INFO]	96	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:42:41,221	[INFO]	97	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:42:42,250	[INFO]	98	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:42:43,309	[INFO]	99	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:42:46,872	[INFO]	100	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:42:46,873	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,44 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     upright = 0;
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 06:42:47,935	[INFO]	101	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:42:48,972	[INFO]	102	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:42:52,489	[INFO]	103	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:42:52,491	[INFO]	104	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:42:52,492	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,44 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     upright = 0;
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 06:42:52,493	[INFO]	105	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:42:52,493	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,44 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     upright = 0;
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 06:42:53,525	[INFO]	106	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:42:54,567	[INFO]	107	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:42:55,623	[INFO]	108	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:42:59,113	[INFO]	109	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:42:59,114	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:42:59,115	[INFO]	110	SUCCESS	 4.0	
2020-12-31 06:42:59,117	[INFO]	111	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:42:59,117	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:42:59,118	[INFO]	112	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:42:59,119	[INFO]	113	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:42:59,119	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:43:00,017	[INFO]	114	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:43:01,082	[INFO]	115	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:43:01,083	[INFO]	116	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:43:01,084	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:43:02,113	[INFO]	117	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:43:03,129	[INFO]	118	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:43:03,131	[INFO]	119	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:43:03,131	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:43:03,132	[INFO]	120	SUCCESS	 4.0	
2020-12-31 06:43:04,163	[INFO]	121	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:43:04,166	[INFO]	122	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:43:04,166	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:43:04,167	[INFO]	123	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:43:04,168	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:43:05,222	[INFO]	124	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:43:06,268	[INFO]	125	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:43:07,313	[INFO]	126	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:43:10,866	[INFO]	127	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '=='})
2020-12-31 06:43:10,867	[INFO]	128	SUCCESS	 4.0	
2020-12-31 06:43:11,876	[INFO]	129	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:43:12,908	[INFO]	130	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:43:13,936	[INFO]	131	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:43:15,001	[INFO]	132	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:43:16,052	[INFO]	133	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:43:17,089	[INFO]	134	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:43:17,091	[INFO]	135	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:43:17,091	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:43:18,117	[INFO]	136	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:43:19,157	[INFO]	137	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:43:20,000	[INFO]	138	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:43:21,020	[INFO]	139	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:43:21,898	[INFO]	140	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:43:21,900	[INFO]	141	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:43:25,380	[INFO]	142	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '<='})
2020-12-31 06:43:25,382	[INFO]	143	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:43:25,382	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:43:25,383	[INFO]	144	SUCCESS	 4.0	
2020-12-31 06:43:26,191	[INFO]	145	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 06:43:27,181	[INFO]	146	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:43:28,195	[INFO]	147	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:43:29,261	[INFO]	148	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:43:29,263	[INFO]	149	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:43:29,264	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,44 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     upright = 0;
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 06:43:30,313	[INFO]	150	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 06:43:33,815	[INFO]	151	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:43:37,283	[INFO]	152	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:43:37,285	[INFO]	153	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:43:37,286	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:43:38,307	[INFO]	154	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 06:43:41,870	[INFO]	155	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:43:41,871	[INFO]	156	SUCCESS	 4.0	
2020-12-31 06:43:42,896	[INFO]	157	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:43:42,898	[INFO]	158	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:43:42,899	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:43:42,900	[INFO]	159	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<'})
2020-12-31 06:43:42,900	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:43:43,786	[INFO]	160	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:43:43,788	[INFO]	161	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<'})
2020-12-31 06:43:43,788	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:43:44,799	[INFO]	162	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:43:45,823	[INFO]	163	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:43:45,824	[INFO]	164	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '<'})
2020-12-31 06:43:45,825	[INFO]	165	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:43:45,826	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:43:46,842	[INFO]	166	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:43:47,909	[INFO]	167	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:43:47,910	[INFO]	168	SUCCESS	 4.0	
2020-12-31 06:43:51,399	[INFO]	169	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:43:54,898	[INFO]	170	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:43:55,921	[INFO]	171	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:43:56,959	[INFO]	172	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:43:57,991	[INFO]	173	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:43:59,057	[INFO]	174	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:44:02,538	[INFO]	175	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:44:02,539	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,32 ****
--- 27,49 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 06:44:03,595	[INFO]	176	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:44:03,597	[INFO]	177	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:44:03,597	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:44:04,636	[INFO]	178	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:44:04,637	[INFO]	179	SUCCESS	 4.0	
2020-12-31 06:44:05,697	[INFO]	180	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:44:06,729	[INFO]	181	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:44:07,747	[INFO]	182	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:44:08,805	[INFO]	183	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:44:09,851	[INFO]	184	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:44:13,332	[INFO]	185	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:44:14,366	[INFO]	186	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:44:15,392	[INFO]	187	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:44:16,486	[INFO]	188	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:44:17,570	[INFO]	189	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:44:18,412	[INFO]	190	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:44:19,449	[INFO]	191	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:44:22,934	[INFO]	192	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:44:26,475	[INFO]	193	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:44:27,543	[INFO]	194	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:44:28,596	[INFO]	195	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:44:28,598	[INFO]	196	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:44:28,599	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:44:28,600	[INFO]	197	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:44:28,601	[INFO]	198	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:44:28,601	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:44:28,602	[INFO]	199	SUCCESS	 4.0	
2020-12-31 06:44:29,618	[INFO]	200	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:44:33,154	[INFO]	201	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:44:33,155	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,46 ----
                  } else {
                      upleft = 0;
                  }
+                 upright = 0;
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 06:44:36,626	[INFO]	202	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:44:37,668	[INFO]	203	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:44:41,154	[INFO]	204	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:44:41,157	[INFO]	205	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:44:41,158	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,46 ----
                  } else {
                      upleft = 0;
                  }
+                 upright = 0;
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 06:44:41,159	[INFO]	206	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:44:41,160	[INFO]	207	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:44:41,160	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,46 ----
                  } else {
                      upleft = 0;
                  }
+                 upright = 0;
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 06:44:41,161	[INFO]	208	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:44:41,162	[INFO]	209	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:44:41,162	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:44:41,163	[INFO]	210	SUCCESS	 4.0	
2020-12-31 06:44:42,224	[INFO]	211	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:44:43,254	[INFO]	212	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:44:44,308	[INFO]	213	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:44:47,812	[INFO]	214	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:44:48,856	[INFO]	215	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:44:49,893	[INFO]	216	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:44:50,940	[INFO]	217	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:44:51,838	[INFO]	218	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:44:52,840	[INFO]	219	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:44:56,410	[INFO]	220	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '>'})
2020-12-31 06:44:59,866	[INFO]	221	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:44:59,867	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,48 ----
                  } else {
                      upleft = 0;
                  }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 06:44:59,868	[INFO]	222	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:44:59,869	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:44:59,869	[INFO]	223	SUCCESS	 4.0	
2020-12-31 06:45:00,887	[INFO]	224	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:45:01,913	[INFO]	225	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:45:02,972	[INFO]	226	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:45:02,974	[INFO]	227	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:45:04,009	[INFO]	228	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:45:05,050	[INFO]	229	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:45:06,088	[INFO]	230	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:45:09,600	[INFO]	231	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '<='})
2020-12-31 06:45:10,664	[INFO]	232	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:45:14,179	[INFO]	233	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:45:14,181	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,42 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     init.add(1);
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 06:45:17,613	[INFO]	234	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:45:18,667	[INFO]	235	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:45:19,716	[INFO]	236	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:45:23,186	[INFO]	237	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:45:23,189	[INFO]	238	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:45:23,190	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:45:24,188	[INFO]	239	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:45:24,191	[INFO]	240	SUCCESS	 4.0	
2020-12-31 06:45:25,237	[INFO]	241	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:45:26,329	[INFO]	242	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:45:27,381	[INFO]	243	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:45:28,417	[INFO]	244	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:45:31,941	[INFO]	245	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:45:35,595	[INFO]	246	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:45:35,596	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 28,33 ****
--- 28,50 ----
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }

2020-12-31 06:45:39,088	[INFO]	247	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:45:40,162	[INFO]	248	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:45:40,163	[INFO]	249	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:45:40,164	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:45:40,165	[INFO]	250	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:45:40,165	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:45:41,181	[INFO]	251	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:45:42,269	[INFO]	252	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:45:42,270	[INFO]	253	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:45:42,271	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:45:43,320	[INFO]	254	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:45:43,321	[INFO]	255	SUCCESS	 4.0	
2020-12-31 06:45:44,354	[INFO]	256	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:45:47,858	[INFO]	257	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:45:47,860	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,41 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upright = 0;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {

2020-12-31 06:45:51,389	[INFO]	258	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:45:51,390	[INFO]	259	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:45:51,390	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:45:51,392	[INFO]	260	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:45:51,392	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:45:54,807	[INFO]	261	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:45:54,808	[INFO]	262	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:45:54,809	[INFO]	263	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:45:54,810	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:45:54,810	[INFO]	264	SUCCESS	 4.0	
2020-12-31 06:45:55,843	[INFO]	265	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:45:56,850	[INFO]	266	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:45:57,904	[INFO]	267	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:46:01,417	[INFO]	268	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:46:01,419	[INFO]	269	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:46:01,419	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:46:04,900	[INFO]	270	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:46:04,901	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 28,33 ****
--- 28,48 ----
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }

2020-12-31 06:46:04,903	[INFO]	271	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:46:04,903	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:46:04,904	[INFO]	272	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:46:04,904	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:46:04,905	[INFO]	273	SUCCESS	 4.0	
2020-12-31 06:46:05,914	[INFO]	274	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:46:06,750	[INFO]	275	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:46:07,773	[INFO]	276	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:46:07,776	[INFO]	277	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:46:08,804	[INFO]	278	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:46:12,359	[INFO]	279	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:46:13,357	[INFO]	280	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:46:16,860	[INFO]	281	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:46:17,878	[INFO]	282	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:46:18,904	[INFO]	283	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:46:19,748	[INFO]	284	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:46:20,774	[INFO]	285	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:46:24,322	[INFO]	286	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:46:25,383	[INFO]	287	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:46:26,395	[INFO]	288	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:46:26,397	[INFO]	289	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:46:26,397	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:46:26,398	[INFO]	290	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:46:26,399	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:46:27,447	[INFO]	291	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:46:31,031	[INFO]	292	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:46:32,097	[INFO]	293	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:46:33,132	[INFO]	294	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:46:34,162	[INFO]	295	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:46:35,200	[INFO]	296	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:46:35,202	[INFO]	297	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:46:36,251	[INFO]	298	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:46:36,253	[INFO]	299	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:46:36,254	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:46:36,256	[INFO]	300	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:46:36,258	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:46:37,283	[INFO]	301	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:46:38,333	[INFO]	302	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:46:39,384	[INFO]	303	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:46:40,405	[INFO]	304	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:46:40,407	[INFO]	305	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:46:40,407	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:46:43,986	[INFO]	306	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:46:43,987	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,46 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 06:46:44,851	[INFO]	307	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:46:45,881	[INFO]	308	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:46:46,895	[INFO]	309	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:46:46,898	[INFO]	310	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:46:46,899	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,46 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 06:46:50,416	[INFO]	311	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:46:51,432	[INFO]	312	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:46:52,453	[INFO]	313	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:46:52,454	[INFO]	314	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:46:52,455	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:46:52,456	[INFO]	315	SUCCESS	 4.0	
2020-12-31 06:46:53,511	[INFO]	316	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:46:54,577	[INFO]	317	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:46:55,616	[INFO]	318	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:46:55,618	[INFO]	319	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:46:55,618	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:46:55,619	[INFO]	320	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:46:55,620	[INFO]	321	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:46:55,621	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:46:56,679	[INFO]	322	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:46:57,690	[INFO]	323	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:46:57,692	[INFO]	324	SUCCESS	 4.0	
2020-12-31 06:46:57,693	[INFO]	325	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:46:57,694	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:46:57,694	[INFO]	326	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:46:57,695	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:46:57,695	[INFO]	327	SUCCESS	 4.0	
2020-12-31 06:46:58,757	[INFO]	328	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:46:58,759	[INFO]	329	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:47:02,320	[INFO]	330	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:47:03,331	[INFO]	331	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:47:03,334	[INFO]	332	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:47:03,334	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:47:04,369	[INFO]	333	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:47:07,846	[INFO]	334	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:47:08,869	[INFO]	335	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:47:08,871	[INFO]	336	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:47:08,872	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:47:09,893	[INFO]	337	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:47:10,894	[INFO]	338	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:47:10,895	[INFO]	339	SUCCESS	 4.0	
2020-12-31 06:47:11,956	[INFO]	340	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:47:12,993	[INFO]	341	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:47:14,031	[INFO]	342	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:47:15,089	[INFO]	343	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:47:15,950	[INFO]	344	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:47:19,466	[INFO]	345	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '<='})
2020-12-31 06:47:20,498	[INFO]	346	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:47:21,544	[INFO]	347	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:47:22,578	[INFO]	348	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:47:23,597	[INFO]	349	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:47:24,499	[INFO]	350	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:47:27,971	[INFO]	351	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:47:29,029	[INFO]	352	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:47:30,068	[INFO]	353	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:47:31,090	[INFO]	354	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:47:32,162	[INFO]	355	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:47:33,241	[INFO]	356	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:47:34,277	[INFO]	357	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:47:35,341	[INFO]	358	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:47:36,383	[INFO]	359	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:47:37,421	[INFO]	360	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:47:38,308	[INFO]	361	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:47:41,807	[INFO]	362	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:47:42,820	[INFO]	363	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:47:43,854	[INFO]	364	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:47:43,856	[INFO]	365	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:47:43,856	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:47:44,881	[INFO]	366	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:47:45,735	[INFO]	367	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:47:46,551	[INFO]	368	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:47:46,552	[INFO]	369	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:47:46,553	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:47:47,409	[INFO]	370	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:47:48,479	[INFO]	371	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:47:48,480	[INFO]	372	SUCCESS	 4.0	
2020-12-31 06:47:52,000	[INFO]	373	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:47:52,001	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,36 ****
--- 31,51 ----
                  } else {
                      upright = 0;
                  }
+                 upleft = 0;
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 06:47:55,511	[INFO]	374	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:47:55,513	[INFO]	375	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:47:55,513	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:47:56,522	[INFO]	376	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:47:56,523	[INFO]	377	SUCCESS	 4.0	
2020-12-31 06:47:57,559	[INFO]	378	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:48:01,045	[INFO]	379	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:48:02,077	[INFO]	380	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:48:03,105	[INFO]	381	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:48:04,119	[INFO]	382	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:48:05,182	[INFO]	383	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:48:08,629	[INFO]	384	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:48:09,681	[INFO]	385	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:48:10,701	[INFO]	386	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:48:11,738	[INFO]	387	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:48:12,801	[INFO]	388	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:48:16,321	[INFO]	389	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:48:17,355	[INFO]	390	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:48:18,402	[INFO]	391	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:48:19,451	[INFO]	392	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:48:20,496	[INFO]	393	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:48:21,589	[INFO]	394	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:48:22,612	[INFO]	395	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:48:23,663	[INFO]	396	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:48:24,754	[INFO]	397	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:48:25,805	[INFO]	398	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:48:26,866	[INFO]	399	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:48:26,867	[INFO]	400	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:48:27,886	[INFO]	401	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:48:27,887	[INFO]	402	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:48:28,954	[INFO]	403	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:48:30,012	[INFO]	404	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:48:30,014	[INFO]	405	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 06:48:30,014	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:48:30,015	[INFO]	406	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:48:30,016	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:48:31,042	[INFO]	407	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:48:32,109	[INFO]	408	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:48:33,124	[INFO]	409	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:48:34,171	[INFO]	410	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:48:35,248	[INFO]	411	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:48:35,250	[INFO]	412	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:48:35,250	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:48:36,280	[INFO]	413	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:48:36,283	[INFO]	414	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:48:36,284	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:48:39,848	[INFO]	415	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:48:39,849	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,49 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     rows.add(init);
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 06:48:43,366	[INFO]	416	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:48:44,429	[INFO]	417	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:48:44,431	[INFO]	418	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:48:44,431	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:48:48,025	[INFO]	419	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:48:48,026	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,40 ****
--- 33,56 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
+ 
+         int upleft, upright;
  
          return rows;
      }

2020-12-31 06:48:48,027	[INFO]	420	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:48:48,028	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:48:49,076	[INFO]	421	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:48:49,078	[INFO]	422	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:48:49,078	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:48:52,622	[INFO]	423	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:48:52,623	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,32 ****
--- 27,49 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;

2020-12-31 06:48:53,673	[INFO]	424	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:48:54,706	[INFO]	425	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:48:54,707	[INFO]	426	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:48:54,708	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:48:55,734	[INFO]	427	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:48:56,768	[INFO]	428	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 06:48:56,771	[INFO]	429	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:48:56,772	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:49:00,343	[INFO]	430	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:49:01,359	[INFO]	431	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:49:02,406	[INFO]	432	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:49:03,452	[INFO]	433	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:49:03,454	[INFO]	434	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:49:03,455	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:49:04,488	[INFO]	435	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:49:04,489	[INFO]	436	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:49:04,491	[INFO]	437	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:49:04,491	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:49:05,537	[INFO]	438	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:49:05,539	[INFO]	439	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:49:09,040	[INFO]	440	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:49:09,041	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,48 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     return rows;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 06:49:09,890	[INFO]	441	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:49:09,892	[INFO]	442	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:49:09,892	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,48 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     return rows;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 06:49:09,894	[INFO]	443	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:49:09,894	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,48 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     return rows;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 06:49:10,932	[INFO]	444	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 06:49:14,511	[INFO]	445	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '>'})
2020-12-31 06:49:15,543	[INFO]	446	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:49:16,583	[INFO]	447	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:49:16,585	[INFO]	448	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:49:16,585	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,48 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     return rows;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 06:49:16,587	[INFO]	449	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:49:16,588	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,48 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     return rows;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 06:49:16,589	[INFO]	450	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:49:16,589	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,48 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     return rows;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 06:49:17,606	[INFO]	451	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:49:17,609	[INFO]	452	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:49:17,610	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,48 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     return rows;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 06:49:21,211	[INFO]	453	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:49:22,042	[INFO]	454	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:49:22,044	[INFO]	455	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:49:22,045	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,48 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     return rows;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 06:49:23,065	[INFO]	456	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:49:24,101	[INFO]	457	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:49:24,102	[INFO]	458	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:49:24,103	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:49:25,156	[INFO]	459	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:49:25,157	[INFO]	460	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:49:25,158	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:49:25,158	[INFO]	461	SUCCESS	 4.0	
2020-12-31 06:49:26,150	[INFO]	462	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:49:26,152	[INFO]	463	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:49:27,174	[INFO]	464	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:49:30,630	[INFO]	465	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:49:31,668	[INFO]	466	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:49:31,670	[INFO]	467	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:49:31,672	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:49:31,673	[INFO]	468	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:49:31,674	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:49:32,698	[INFO]	469	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:49:33,702	[INFO]	470	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:49:33,703	[INFO]	471	SUCCESS	 4.0	
2020-12-31 06:49:34,737	[INFO]	472	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:49:35,787	[INFO]	473	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:49:36,833	[INFO]	474	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:49:37,821	[INFO]	475	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:49:38,866	[INFO]	476	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:49:39,889	[INFO]	477	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:49:40,909	[INFO]	478	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:49:41,993	[INFO]	479	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:49:43,045	[INFO]	480	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:49:44,102	[INFO]	481	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:49:45,137	[INFO]	482	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:49:46,195	[INFO]	483	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:49:49,648	[INFO]	484	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:49:49,650	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,42 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     rows.add(row);
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 06:49:53,210	[INFO]	485	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:49:54,245	[INFO]	486	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:49:55,045	[INFO]	487	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:49:55,047	[INFO]	488	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:49:55,048	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,42 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     rows.add(row);
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 06:49:55,950	[INFO]	489	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:49:55,954	[INFO]	490	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:49:55,955	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,42 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     rows.add(row);
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 06:49:56,991	[INFO]	491	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:49:58,028	[INFO]	492	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:49:58,030	[INFO]	493	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:49:58,031	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:49:58,031	[INFO]	494	SUCCESS	 4.0	
2020-12-31 06:49:59,066	[INFO]	495	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:49:59,069	[INFO]	496	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:49:59,069	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:49:59,071	[INFO]	497	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:49:59,071	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:50:00,100	[INFO]	498	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:50:00,102	[INFO]	499	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:50:00,102	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:50:00,103	[INFO]	500	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:50:00,104	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 06:50:00,104	[INFO]	==== END ====
2020-12-31 06:50:00,104	[INFO]	Reason: step budget
2020-12-31 06:50:00,105	[INFO]	
2020-12-31 06:50:00,105	[INFO]	========== EPOCH 20 ==========
2020-12-31 06:50:00,105	[INFO]	==== WARMUP ====
2020-12-31 06:50:03,629	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 06:50:03,629	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 06:50:07,105	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 06:50:07,106	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 06:50:10,550	[INFO]	WARM	SUCCESS	 4.0	
2020-12-31 06:50:10,550	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 06:50:14,114	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-31 06:50:14,114	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-31 06:50:14,114	[INFO]	==== START ====
2020-12-31 06:50:15,104	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:50:16,128	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:50:17,192	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:50:18,219	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:50:19,253	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:50:20,280	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:50:21,298	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:50:22,098	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:50:23,124	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:50:26,649	[INFO]	10	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:50:26,650	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,28 ****
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
--- 22,28 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
!                     return rows;
                  } else {
                      upleft = 0;
                  }

2020-12-31 06:50:30,184	[INFO]	11	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '<='})
2020-12-31 06:50:30,186	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,28 ****
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
--- 21,28 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c <= 0) {
!                     return rows;
                  } else {
                      upleft = 0;
                  }

2020-12-31 06:50:33,631	[INFO]	12	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:50:33,632	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,29 ****
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
                  if (c < r) {
--- 21,30 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c <= 0) {
!                     return rows;
                  } else {
+                     upright = rows.get(r-1).get(c);
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 06:50:34,618	[INFO]	13	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 06:50:35,979	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:50:37,516	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:50:41,505	[INFO]	16	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:50:41,506	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,29 ****
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
                  if (c < r) {
--- 22,30 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
!                     return rows;
                  } else {
+                     upright = rows.get(r-1).get(c);
                      upleft = 0;
                  }
                  if (c < r) {

2020-12-31 06:50:41,507	[INFO]	17	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:50:41,508	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,28 ****
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
--- 22,28 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
!                     return rows;
                  } else {
                      upleft = 0;
                  }

2020-12-31 06:50:41,508	[INFO]	18	SUCCESS	+4.0	
2020-12-31 06:50:41,508	[DEBUG]	
2020-12-31 06:50:42,561	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:50:43,601	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:50:47,054	[INFO]	21	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '>'})
2020-12-31 06:50:47,054	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,25 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c>r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);

2020-12-31 06:50:48,028	[INFO]	22	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:50:49,054	[INFO]	23	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:50:50,097	[INFO]	24	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '>'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:50:51,118	[INFO]	25	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:50:54,577	[INFO]	26	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:50:54,579	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,25 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c>r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
***************
*** 31,36 ****
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
+                 rows.add(init);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 06:50:54,580	[INFO]	27	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '>'})
2020-12-31 06:50:54,580	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,25 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c>r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);

2020-12-31 06:50:54,581	[INFO]	28	SUCCESS	+4.0	
2020-12-31 06:50:54,581	[DEBUG]	
2020-12-31 06:50:55,625	[INFO]	29	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:50:56,647	[INFO]	30	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:50:57,661	[INFO]	31	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:50:58,669	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:51:02,139	[INFO]	33	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:51:02,141	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,30 ****
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
--- 24,30 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     return rows;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);

2020-12-31 06:51:02,142	[INFO]	34	SUCCESS	+4.0	
2020-12-31 06:51:02,143	[DEBUG]	
2020-12-31 06:51:03,163	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:51:03,165	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:51:06,600	[INFO]	37	SUCCESS	 5.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '=='})
2020-12-31 06:51:10,101	[INFO]	38	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:51:10,103	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,39 ****
                  }
                  row.add(upleft+upright);
              }
!             rows.add(row);
          }
  
          return rows;
--- 33,39 ----
                  }
                  row.add(upleft+upright);
              }
!             init.add(1);
          }
  
          return rows;

2020-12-31 06:51:10,105	[INFO]	39	SUCCESS	+4.0	
2020-12-31 06:51:10,105	[DEBUG]	
2020-12-31 06:51:13,610	[INFO]	40	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:51:14,627	[INFO]	41	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:51:15,633	[INFO]	42	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:51:19,145	[INFO]	43	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:51:19,146	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             int upleft, upright;
              rows.add(row);
          }
  

2020-12-31 06:51:20,138	[INFO]	44	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:51:20,139	[INFO]	45	SUCCESS	+4.0	
2020-12-31 06:51:20,140	[DEBUG]	
2020-12-31 06:51:23,672	[INFO]	46	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:51:23,673	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,39 ****
                  }
                  row.add(upleft+upright);
              }
!             rows.add(row);
          }
  
          return rows;
--- 33,39 ----
                  }
                  row.add(upleft+upright);
              }
!             return rows;
          }
  
          return rows;

2020-12-31 06:51:27,185	[INFO]	47	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:51:27,186	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             init.add(1);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
***************
*** 33,39 ****
                  }
                  row.add(upleft+upright);
              }
!             rows.add(row);
          }
  
          return rows;
--- 34,40 ----
                  }
                  row.add(upleft+upright);
              }
!             return rows;
          }
  
          return rows;

2020-12-31 06:51:27,187	[INFO]	48	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:51:27,188	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,39 ****
                  }
                  row.add(upleft+upright);
              }
!             rows.add(row);
          }
  
          return rows;
--- 33,39 ----
                  }
                  row.add(upleft+upright);
              }
!             return rows;
          }
  
          return rows;

2020-12-31 06:51:27,188	[INFO]	49	SUCCESS	+4.0	
2020-12-31 06:51:27,188	[DEBUG]	
2020-12-31 06:51:30,761	[INFO]	50	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:51:30,762	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,31 ****
--- 26,32 ----
                  } else {
                      upleft = 0;
                  }
+                 rows.add(row);
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {

2020-12-31 06:51:30,763	[INFO]	51	SUCCESS	+4.0	
2020-12-31 06:51:30,763	[DEBUG]	
2020-12-31 06:51:31,770	[INFO]	52	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:51:32,797	[INFO]	53	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:51:33,835	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:51:34,833	[INFO]	55	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:51:38,335	[INFO]	56	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:51:38,336	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,36 ****
--- 31,39 ----
                  } else {
                      upright = 0;
                  }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 06:51:39,355	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:51:40,402	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:51:43,919	[INFO]	59	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:51:43,920	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 rows.add(init);
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
***************
*** 31,36 ****
--- 32,40 ----
                  } else {
                      upright = 0;
                  }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 06:51:44,946	[INFO]	60	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:51:46,001	[INFO]	61	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:51:49,495	[INFO]	62	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:51:49,497	[INFO]	63	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:51:49,497	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,36 ****
--- 31,39 ----
                  } else {
                      upright = 0;
                  }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 06:51:49,498	[INFO]	64	SUCCESS	+4.0	
2020-12-31 06:51:49,498	[DEBUG]	
2020-12-31 06:51:50,547	[INFO]	65	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:51:51,588	[INFO]	66	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:51:52,607	[INFO]	67	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:51:53,626	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:51:54,686	[INFO]	69	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:51:58,132	[INFO]	70	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '>='})
2020-12-31 06:51:58,133	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,27 ****
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
!                 if (c >= 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;

2020-12-31 06:51:58,134	[INFO]	71	SUCCESS	+4.0	
2020-12-31 06:51:58,134	[DEBUG]	
2020-12-31 06:52:01,636	[INFO]	72	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:52:01,637	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
+                 rows.add(row);
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);

2020-12-31 06:52:01,638	[INFO]	73	SUCCESS	+4.0	
2020-12-31 06:52:01,638	[DEBUG]	
2020-12-31 06:52:02,630	[INFO]	74	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:52:03,651	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:52:04,660	[INFO]	76	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:52:05,661	[INFO]	77	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:52:06,680	[INFO]	78	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:52:10,162	[INFO]	79	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:52:10,164	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(init);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 06:52:10,166	[INFO]	80	SUCCESS	+4.0	
2020-12-31 06:52:10,166	[DEBUG]	
2020-12-31 06:52:11,204	[INFO]	81	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:52:14,620	[INFO]	82	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:52:14,621	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
+                 }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }

2020-12-31 06:52:14,621	[INFO]	83	SUCCESS	+4.0	
2020-12-31 06:52:14,622	[DEBUG]	
2020-12-31 06:52:15,631	[INFO]	84	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:52:16,641	[INFO]	85	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:52:17,647	[INFO]	86	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:52:18,747	[INFO]	87	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:52:19,791	[INFO]	88	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:52:20,833	[INFO]	89	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:52:21,871	[INFO]	90	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:52:22,893	[INFO]	91	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:52:23,915	[INFO]	92	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:52:24,979	[INFO]	93	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:52:28,491	[INFO]	94	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:52:28,492	[INFO]	95	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:52:29,505	[INFO]	96	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:52:30,520	[INFO]	97	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:52:31,572	[INFO]	98	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:52:32,632	[INFO]	99	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:52:33,631	[INFO]	100	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:52:34,668	[INFO]	101	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:52:38,174	[INFO]	102	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:52:38,175	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,37 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 06:52:38,176	[INFO]	103	SUCCESS	+4.0	
2020-12-31 06:52:38,177	[DEBUG]	
2020-12-31 06:52:39,270	[INFO]	104	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:52:42,831	[INFO]	105	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:52:42,832	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 18,23 ****
--- 18,24 ----
          rows.add(init);
  
          for (int r=1; r<n; r++) {
+             rows.add(init);
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;

2020-12-31 06:52:42,832	[INFO]	106	SUCCESS	+4.0	
2020-12-31 06:52:42,833	[DEBUG]	
2020-12-31 06:52:43,870	[INFO]	107	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:52:44,913	[INFO]	108	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:52:45,950	[INFO]	109	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:52:46,977	[INFO]	110	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:52:50,475	[INFO]	111	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:52:50,476	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,39 ----
                  }
                  row.add(upleft+upright);
              }
+             init.add(1);
              rows.add(row);
          }
  

2020-12-31 06:52:51,372	[INFO]	112	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:52:54,842	[INFO]	113	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:52:54,843	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,38 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
!                 int upleft, upright;
!                 if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
!                 } else {
!                     upleft = 0;
!                 }
!                 if (c < r) {
!                     upright = rows.get(r-1).get(c);
!                 } else {
!                     upright = 0;
!                 }
!                 row.add(upleft+upright);
!             }
              rows.add(row);
          }
  
--- 19,26 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             rows.add(row);
!             init.add(1);
              rows.add(row);
          }
  

2020-12-31 06:52:54,844	[INFO]	114	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:52:54,845	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,39 ----
                  }
                  row.add(upleft+upright);
              }
+             init.add(1);
              rows.add(row);
          }
  

2020-12-31 06:52:54,845	[INFO]	115	SUCCESS	+4.0	
2020-12-31 06:52:54,845	[DEBUG]	
2020-12-31 06:52:55,857	[INFO]	116	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:52:56,850	[INFO]	117	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:52:57,867	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:52:58,862	[INFO]	119	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:52:59,902	[INFO]	120	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:53:00,939	[INFO]	121	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:53:01,970	[INFO]	122	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:53:03,012	[INFO]	123	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:53:03,013	[INFO]	124	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:53:03,014	[DEBUG]	
2020-12-31 06:53:03,014	[INFO]	125	SUCCESS	+4.0	
2020-12-31 06:53:03,014	[DEBUG]	
2020-12-31 06:53:04,042	[INFO]	126	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:53:04,043	[INFO]	127	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:53:04,044	[DEBUG]	
2020-12-31 06:53:04,044	[INFO]	128	SUCCESS	+4.0	
2020-12-31 06:53:04,044	[DEBUG]	
2020-12-31 06:53:05,057	[INFO]	129	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:53:06,088	[INFO]	130	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:53:07,104	[INFO]	131	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:53:10,846	[INFO]	132	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:53:10,847	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upleft = rows.get(r-1).get(c-1);
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {

2020-12-31 06:53:10,848	[INFO]	133	SUCCESS	+4.0	
2020-12-31 06:53:10,848	[DEBUG]	
2020-12-31 06:53:11,885	[INFO]	134	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:53:12,940	[INFO]	135	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:53:13,808	[INFO]	136	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:53:14,822	[INFO]	137	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:53:15,850	[INFO]	138	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:53:19,364	[INFO]	139	SUCCESS	+4.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:53:19,365	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
!                 
              }
              rows.add(row);
          }

2020-12-31 06:53:22,810	[INFO]	140	SUCCESS	 5.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:53:26,370	[INFO]	141	SUCCESS	+4.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:53:26,371	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,37 ****
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 29,38 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     upleft = 0;
                      upright = 0;
                  }
!                 
              }
              rows.add(row);
          }

2020-12-31 06:53:29,955	[INFO]	142	SUCCESS	+4.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:53:29,956	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     upright = rows.get(r-1).get(c);
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
***************
*** 29,37 ****
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 30,39 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     upleft = 0;
                      upright = 0;
                  }
!                 
              }
              rows.add(row);
          }

2020-12-31 06:53:33,476	[INFO]	143	SUCCESS	+4.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:53:33,478	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     upright = rows.get(r-1).get(c);
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 32,38 ----
                  } else {
                      upright = 0;
                  }
!                 
              }
              rows.add(row);
          }

2020-12-31 06:53:37,347	[INFO]	144	SUCCESS	+4.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:53:37,348	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,37 ****
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 22,38 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     upright = rows.get(r-1).get(c);
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     init.add(1);
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
!                 
              }
              rows.add(row);
          }

2020-12-31 06:53:38,661	[INFO]	145	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:53:40,039	[INFO]	146	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:53:41,692	[INFO]	147	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:53:43,088	[INFO]	148	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:53:45,034	[INFO]	149	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:53:50,995	[INFO]	150	SUCCESS	+4.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 18)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:53:50,996	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,37 ****
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 24,37 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
!                     init.add(1);
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
!                 
              }
              rows.add(row);
          }

2020-12-31 06:53:52,401	[INFO]	151	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 18)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:53:52,403	[INFO]	152	SUCCESS	+4.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:53:52,404	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
!                 
              }
              rows.add(row);
          }

2020-12-31 06:53:56,055	[INFO]	153	SUCCESS	+4.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 18)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:53:56,056	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,28 ****
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
--- 22,28 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
!                     rows.add(init);
                  } else {
                      upleft = 0;
                  }
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
!                 
              }
              rows.add(row);
          }

2020-12-31 06:53:57,086	[INFO]	154	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 18)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:53:58,172	[INFO]	155	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:53:59,303	[INFO]	156	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 18)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:54:00,358	[INFO]	157	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 18)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:54:00,359	[INFO]	158	SUCCESS	+4.0	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:54:00,360	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
!                 
              }
              rows.add(row);
          }

2020-12-31 06:54:00,360	[INFO]	159	SUCCESS	+4.0	
2020-12-31 06:54:00,361	[DEBUG]	
2020-12-31 06:54:01,416	[INFO]	160	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:54:02,497	[INFO]	161	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:54:03,522	[INFO]	162	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:54:04,551	[INFO]	163	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:54:08,325	[INFO]	164	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:54:08,326	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
+             rows.add(row);
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {

2020-12-31 06:54:08,327	[INFO]	165	SUCCESS	+4.0	
2020-12-31 06:54:08,328	[DEBUG]	
2020-12-31 06:54:09,392	[INFO]	166	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:54:13,135	[INFO]	167	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:54:13,138	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 13,18 ****
--- 13,36 ----
  public class PASCAL {
      public static ArrayList<ArrayList<Integer>> pascal(int n) {
          ArrayList<ArrayList<Integer>> rows = new ArrayList<ArrayList<Integer>>();
+         for (int r=1; r<n; r++) {
+             ArrayList<Integer> row = new ArrayList<Integer>();
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
+             rows.add(row);
+         }
          ArrayList<Integer> init = new ArrayList<Integer>();
          init.add(1);
          rows.add(init);

2020-12-31 06:54:14,007	[INFO]	168	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:54:14,008	[INFO]	169	SUCCESS	+4.0	
2020-12-31 06:54:14,008	[DEBUG]	
2020-12-31 06:54:15,048	[INFO]	170	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:54:16,088	[INFO]	171	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:54:19,641	[INFO]	172	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:54:20,678	[INFO]	173	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:54:24,230	[INFO]	174	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:54:24,231	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
+                 }
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }

2020-12-31 06:54:25,309	[INFO]	175	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:54:26,350	[INFO]	176	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:54:26,352	[INFO]	177	SUCCESS	+4.0	
2020-12-31 06:54:26,352	[DEBUG]	
2020-12-31 06:54:29,845	[INFO]	178	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:54:29,846	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,34 ****
--- 29,37 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                      upright = 0;
                  }
                  row.add(upleft+upright);

2020-12-31 06:54:29,846	[INFO]	179	SUCCESS	+4.0	
2020-12-31 06:54:29,847	[DEBUG]	
2020-12-31 06:54:30,854	[INFO]	180	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:54:31,875	[INFO]	181	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:54:32,933	[INFO]	182	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:54:33,979	[INFO]	183	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:54:35,014	[INFO]	184	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:54:38,502	[INFO]	185	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:54:38,503	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 31,37 ****
                  } else {
                      upright = 0;
                  }
!                 row.add(upleft+upright);
              }
              rows.add(row);
          }
--- 31,37 ----
                  } else {
                      upright = 0;
                  }
!                 rows.add(init);
              }
              rows.add(row);
          }

2020-12-31 06:54:39,540	[INFO]	186	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:54:40,598	[INFO]	187	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:54:40,599	[INFO]	188	SUCCESS	+4.0	
2020-12-31 06:54:40,600	[DEBUG]	
2020-12-31 06:54:41,661	[INFO]	189	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:54:42,677	[INFO]	190	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:54:46,049	[INFO]	191	SUCCESS	 5.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:54:47,091	[INFO]	192	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:54:48,091	[INFO]	193	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:54:49,129	[INFO]	194	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:54:50,221	[INFO]	195	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:54:51,227	[INFO]	196	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:54:51,229	[INFO]	197	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:54:54,746	[INFO]	198	SUCCESS	*3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:54:54,747	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 06:54:55,751	[INFO]	199	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:54:56,801	[INFO]	200	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:54:56,802	[INFO]	201	SUCCESS	 4.0	
2020-12-31 06:54:57,873	[INFO]	202	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:55:01,369	[INFO]	203	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:55:02,397	[INFO]	204	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:55:03,430	[INFO]	205	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:55:04,479	[INFO]	206	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:55:05,320	[INFO]	207	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:55:05,322	[INFO]	208	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:55:05,323	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 06:55:05,324	[INFO]	209	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:55:05,325	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 06:55:05,326	[INFO]	210	SUCCESS	 4.0	
2020-12-31 06:55:08,765	[INFO]	211	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:55:08,766	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 30,36 ****
--- 30,38 ----
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
+                     upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 06:55:08,767	[INFO]	212	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:55:08,767	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 06:55:08,768	[INFO]	213	SUCCESS	 4.0	
2020-12-31 06:55:09,787	[INFO]	214	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:55:10,769	[INFO]	215	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:55:11,825	[INFO]	216	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:55:12,854	[INFO]	217	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:55:16,318	[INFO]	218	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:55:17,332	[INFO]	219	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:55:18,378	[INFO]	220	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:55:21,877	[INFO]	221	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:55:25,343	[INFO]	222	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '!='})
2020-12-31 06:55:25,345	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 17,23 ****
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
--- 17,23 ----
          init.add(1);
          rows.add(init);
  
!         for (int r=1; r!=n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 06:55:25,346	[INFO]	223	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:55:25,346	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 06:55:25,347	[INFO]	224	SUCCESS	 4.0	
2020-12-31 06:55:28,885	[INFO]	225	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:55:29,927	[INFO]	226	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:55:30,938	[INFO]	227	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:55:30,940	[INFO]	228	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:55:30,941	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 06:55:30,942	[INFO]	229	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:55:30,942	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 06:55:32,000	[INFO]	230	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:55:33,031	[INFO]	231	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:55:33,032	[INFO]	232	SUCCESS	 4.0	
2020-12-31 06:55:36,903	[INFO]	233	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:55:40,393	[INFO]	234	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:55:41,449	[INFO]	235	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:55:42,476	[INFO]	236	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:55:46,011	[INFO]	237	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:55:47,053	[INFO]	238	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:55:48,084	[INFO]	239	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:55:51,590	[INFO]	240	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:55:51,591	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,36 ****
--- 29,38 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     init.add(1);
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 06:55:51,592	[INFO]	241	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:55:51,592	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 06:55:52,626	[INFO]	242	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:55:52,628	[INFO]	243	SUCCESS	 4.0	
2020-12-31 06:55:53,663	[INFO]	244	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:55:53,666	[INFO]	245	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:55:53,666	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 06:55:54,783	[INFO]	246	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:55:54,784	[INFO]	247	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:55:54,785	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 06:55:54,785	[INFO]	248	SUCCESS	 4.0	
2020-12-31 06:55:58,314	[INFO]	249	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:55:58,315	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,28 ****
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
--- 22,28 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
!                     return rows;
                  } else {
                      upleft = 0;
                  }
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 06:55:59,393	[INFO]	250	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:56:00,444	[INFO]	251	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:56:01,474	[INFO]	252	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:56:02,502	[INFO]	253	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:56:03,534	[INFO]	254	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:56:03,536	[INFO]	255	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:56:03,536	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 06:56:03,537	[INFO]	256	SUCCESS	 4.0	
2020-12-31 06:56:04,577	[INFO]	257	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:56:05,595	[INFO]	258	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:56:06,634	[INFO]	259	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:56:07,679	[INFO]	260	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:56:08,732	[INFO]	261	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:56:09,780	[INFO]	262	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:56:10,807	[INFO]	263	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:56:14,245	[INFO]	264	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:56:14,247	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,30 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     upright = rows.get(r-1).get(c);
                      upleft = 0;
                  }
                  if (c < r) {
***************
*** 32,37 ****
--- 33,39 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 06:56:17,807	[INFO]	265	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:56:18,969	[INFO]	266	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:56:23,081	[INFO]	267	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:56:24,373	[INFO]	268	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:56:24,375	[INFO]	269	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:56:24,376	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 06:56:25,800	[INFO]	270	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:56:25,802	[INFO]	271	SUCCESS	 4.0	
2020-12-31 06:56:27,101	[INFO]	272	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:56:27,103	[INFO]	273	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:56:31,757	[INFO]	274	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:56:33,071	[INFO]	275	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:56:34,343	[INFO]	276	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:56:38,595	[INFO]	277	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '>='})
2020-12-31 06:56:39,623	[INFO]	278	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:56:43,141	[INFO]	279	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:56:43,142	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upleft = 0;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
***************
*** 32,37 ****
--- 33,39 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 06:56:44,194	[INFO]	280	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:56:44,197	[INFO]	281	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:56:44,198	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 06:56:47,637	[INFO]	282	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 06:56:47,638	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,36 ****
--- 26,38 ----
                  } else {
                      upleft = 0;
                  }
+                 upright = 0;
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 06:56:48,688	[INFO]	283	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:56:52,319	[INFO]	284	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'})
2020-12-31 06:56:52,320	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,36 ****
--- 26,39 ----
                  } else {
                      upleft = 0;
                  }
+                 upright = 0;
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     init.add(1);
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 06:56:52,322	[INFO]	285	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:56:52,323	[INFO]	286	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:56:52,324	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,36 ****
--- 26,39 ----
                  } else {
                      upleft = 0;
                  }
+                 upright = 0;
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     init.add(1);
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 06:56:52,325	[INFO]	287	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:56:52,325	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 26,36 ****
--- 26,38 ----
                  } else {
                      upleft = 0;
                  }
+                 upright = 0;
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 06:56:55,821	[INFO]	288	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:56:55,823	[INFO]	289	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:56:55,824	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 06:56:55,825	[INFO]	290	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:56:55,826	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 06:56:56,874	[INFO]	291	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:56:56,875	[INFO]	292	SUCCESS	 4.0	
2020-12-31 06:56:57,898	[INFO]	293	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 06:56:58,921	[INFO]	294	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:56:59,943	[INFO]	295	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:57:00,971	[INFO]	296	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:57:02,017	[INFO]	297	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:57:03,058	[INFO]	298	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:57:04,107	[INFO]	299	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:57:05,134	[INFO]	300	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:57:06,191	[INFO]	301	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:57:07,196	[INFO]	302	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:57:08,206	[INFO]	303	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:57:09,242	[INFO]	304	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:57:10,296	[INFO]	305	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:57:13,799	[INFO]	306	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:57:14,859	[INFO]	307	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:57:15,949	[INFO]	308	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:57:19,454	[INFO]	309	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:57:22,928	[INFO]	310	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:57:23,939	[INFO]	311	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:57:25,063	[INFO]	312	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:57:26,127	[INFO]	313	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:57:27,175	[INFO]	314	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:57:28,204	[INFO]	315	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 06:57:29,244	[INFO]	316	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:57:30,293	[INFO]	317	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:57:31,323	[INFO]	318	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:57:34,846	[INFO]	319	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '<='})
2020-12-31 06:57:38,361	[INFO]	320	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:57:38,362	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,28 ****
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
!                     upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
--- 22,28 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
!                     return rows;
                  } else {
                      upleft = 0;
                  }
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 06:57:41,880	[INFO]	321	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:57:41,881	[INFO]	322	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:57:41,882	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 06:57:42,895	[INFO]	323	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:57:42,897	[INFO]	324	SUCCESS	 4.0	
2020-12-31 06:57:46,378	[INFO]	325	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:57:46,380	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 27,36 ****
--- 27,38 ----
                      upleft = 0;
                  }
                  if (c < r) {
+                     upleft = 0;
                      upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 06:57:49,839	[INFO]	326	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:57:49,843	[INFO]	327	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:57:49,844	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 06:57:50,889	[INFO]	328	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:57:50,890	[INFO]	329	SUCCESS	 4.0	
2020-12-31 06:57:51,912	[INFO]	330	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:57:55,388	[INFO]	331	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:57:55,389	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,36 ****
--- 29,38 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     upleft = rows.get(r-1).get(c-1);
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 06:57:56,420	[INFO]	332	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:57:57,460	[INFO]	333	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:57:58,456	[INFO]	334	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:57:59,504	[INFO]	335	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:58:02,958	[INFO]	336	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:58:02,959	[INFO]	337	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:58:02,960	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 06:58:06,475	[INFO]	338	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:58:09,961	[INFO]	339	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 06:58:09,962	[INFO]	340	SUCCESS	 4.0	
2020-12-31 06:58:13,430	[INFO]	341	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:58:16,963	[INFO]	342	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:58:16,965	[INFO]	343	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:58:16,966	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 06:58:17,987	[INFO]	344	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 19)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:58:17,989	[INFO]	345	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:58:17,990	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 06:58:19,040	[INFO]	346	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:58:19,041	[INFO]	347	SUCCESS	 4.0	
2020-12-31 06:58:20,082	[INFO]	348	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:58:21,120	[INFO]	349	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:58:22,156	[INFO]	350	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:58:22,158	[INFO]	351	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:58:22,159	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 06:58:23,187	[INFO]	352	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 16)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:58:23,189	[INFO]	353	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:58:23,190	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 06:58:23,192	[INFO]	354	SUCCESS	 4.0	
2020-12-31 06:58:26,721	[INFO]	355	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '!='})
2020-12-31 06:58:26,722	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,25 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c!=r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 06:58:26,723	[INFO]	356	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:58:26,724	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 06:58:26,724	[INFO]	357	SUCCESS	 4.0	
2020-12-31 06:58:27,743	[INFO]	358	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:58:28,787	[INFO]	359	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:58:29,858	[INFO]	360	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 6), 'direction': 'before'})
2020-12-31 06:58:30,888	[INFO]	361	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:58:31,886	[INFO]	362	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:58:32,927	[INFO]	363	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:58:32,929	[INFO]	364	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:58:32,929	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 06:58:33,982	[INFO]	365	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:58:33,984	[INFO]	366	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:58:37,477	[INFO]	367	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 15), 'value': '>='})
2020-12-31 06:58:38,495	[INFO]	368	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 06:58:39,863	[INFO]	369	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:58:39,866	[INFO]	370	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:58:39,867	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 06:58:41,155	[INFO]	371	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 06:58:41,157	[INFO]	372	SUCCESS	 4.0	
2020-12-31 06:58:42,290	[INFO]	373	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:58:45,922	[INFO]	374	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:58:49,520	[INFO]	375	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:58:50,526	[INFO]	376	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 06:58:51,580	[INFO]	377	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:58:52,612	[INFO]	378	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 06:58:53,691	[INFO]	379	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:58:54,736	[INFO]	380	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 06:58:55,739	[INFO]	381	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 6)})
2020-12-31 06:58:56,795	[INFO]	382	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:58:56,797	[INFO]	383	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:58:56,798	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 06:58:57,842	[INFO]	384	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:59:01,351	[INFO]	385	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 11), 'value': '>='})
2020-12-31 06:59:01,353	[INFO]	386	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:59:02,394	[INFO]	387	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 06:59:02,395	[INFO]	388	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:59:02,396	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 06:59:02,396	[INFO]	389	SUCCESS	 4.0	
2020-12-31 06:59:03,397	[INFO]	390	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 06:59:04,435	[INFO]	391	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:59:05,493	[INFO]	392	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 06:59:08,996	[INFO]	393	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:59:08,998	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,36 ****
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
!                     upright = 0;
                  }
                  row.add(upleft+upright);
              }
              rows.add(row);
--- 29,37 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
!                     return rows;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 06:59:10,011	[INFO]	394	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 06:59:11,056	[INFO]	395	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:59:12,083	[INFO]	396	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:59:15,530	[INFO]	397	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:59:16,571	[INFO]	398	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 20)})
2020-12-31 06:59:17,623	[INFO]	399	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 20)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:59:17,624	[INFO]	400	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:59:17,625	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 06:59:17,625	[INFO]	401	SUCCESS	 4.0	
2020-12-31 06:59:18,678	[INFO]	402	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:59:19,728	[INFO]	403	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:59:20,757	[INFO]	404	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:59:21,804	[INFO]	405	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 0), 'direction': 'before'})
2020-12-31 06:59:25,297	[INFO]	406	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '=='})
2020-12-31 06:59:26,335	[INFO]	407	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:59:27,346	[INFO]	408	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:59:28,394	[INFO]	409	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 06:59:31,933	[INFO]	410	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 06:59:31,935	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              ArrayList<Integer> row = new ArrayList<Integer>();
              for (int c=0; c<r; c++) {
                  int upleft, upright;
+                 upright = rows.get(r-1).get(c);
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
***************
*** 32,37 ****
--- 33,39 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 06:59:31,936	[INFO]	411	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:59:31,937	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 06:59:31,938	[INFO]	412	SUCCESS	 4.0	
2020-12-31 06:59:32,965	[INFO]	413	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 06:59:33,992	[INFO]	414	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 7)})
2020-12-31 06:59:35,012	[INFO]	415	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 13), 'direction': 'before'})
2020-12-31 06:59:36,055	[INFO]	416	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 06:59:37,103	[INFO]	417	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 19)})
2020-12-31 06:59:38,154	[INFO]	418	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 12), 'direction': 'before'})
2020-12-31 06:59:39,180	[INFO]	419	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 06:59:40,219	[INFO]	420	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 06:59:41,267	[INFO]	421	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 1), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 06:59:41,271	[INFO]	422	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:59:41,272	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 06:59:44,768	[INFO]	423	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 06:59:44,769	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 24,29 ****
--- 24,32 ----
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
                  } else {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                      upleft = 0;
                  }
                  if (c < r) {
***************
*** 32,37 ****
--- 35,41 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 06:59:44,770	[INFO]	424	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:59:44,771	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 06:59:45,779	[INFO]	425	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 06:59:46,829	[INFO]	426	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 06:59:46,831	[INFO]	427	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 2)})
2020-12-31 06:59:50,328	[INFO]	428	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 06:59:51,161	[INFO]	429	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 06:59:51,164	[INFO]	430	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 06:59:51,165	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 06:59:52,179	[INFO]	431	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 06:59:52,180	[INFO]	432	SUCCESS	 4.0	
2020-12-31 06:59:53,198	[INFO]	433	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 10)})
2020-12-31 06:59:54,264	[INFO]	434	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 4), 'direction': 'before'})
2020-12-31 06:59:55,316	[INFO]	435	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 06:59:56,179	[INFO]	436	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 06:59:57,224	[INFO]	437	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 07:00:00,680	[INFO]	438	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 07:00:00,681	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 28,36 ****
--- 28,40 ----
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 07:00:04,267	[INFO]	439	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 07:00:04,270	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,36 ****
--- 22,43 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
                  }
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
                  } else {
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 07:00:07,730	[INFO]	440	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 07:00:07,732	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,30 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
***************
*** 32,37 ****
--- 35,41 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 07:00:11,208	[INFO]	441	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 07:00:12,211	[INFO]	442	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 07:00:12,213	[INFO]	443	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 07:00:12,213	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 07:00:12,214	[INFO]	444	SUCCESS	 4.0	
2020-12-31 07:00:13,204	[INFO]	445	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 07:00:14,241	[INFO]	446	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 3), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 07:00:15,246	[INFO]	447	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 12)})
2020-12-31 07:00:18,825	[INFO]	448	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 07:00:22,306	[INFO]	449	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 07:00:23,320	[INFO]	450	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 07:00:24,344	[INFO]	451	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 07:00:27,888	[INFO]	452	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 07:00:27,889	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,41 ****
--- 32,44 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }
  
+         int upleft, upright;
+ 
          return rows;
      }
  }

2020-12-31 07:00:31,339	[INFO]	453	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 9), 'direction': 'before'})
2020-12-31 07:00:31,340	[INFO]	454	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 07:00:31,341	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 07:00:31,341	[INFO]	455	SUCCESS	 4.0	
2020-12-31 07:00:34,848	[INFO]	456	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 10), 'direction': 'before'})
2020-12-31 07:00:34,849	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,36 ****
--- 29,40 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 }
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 07:00:34,850	[INFO]	457	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 07:00:34,850	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 07:00:36,326	[INFO]	458	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 07:00:37,785	[INFO]	459	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 07:00:37,787	[INFO]	460	SUCCESS	 4.0	
2020-12-31 07:00:39,132	[INFO]	461	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 07:00:40,425	[INFO]	462	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 2), 'ingredient': ('java_programs/PASCAL.java.xml', 20), 'direction': 'before'})
2020-12-31 07:00:41,898	[INFO]	463	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 17), 'direction': 'before'})
2020-12-31 07:00:42,990	[INFO]	464	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 16)})
2020-12-31 07:00:47,239	[INFO]	465	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 17), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 07:00:47,240	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 29,36 ****
--- 29,38 ----
                  if (c < r) {
                      upright = rows.get(r-1).get(c);
                  } else {
+                     rows.add(row);
                      upright = 0;
                  }
+                 row.add(upleft+upright);
                  row.add(upleft+upright);
              }
              rows.add(row);

2020-12-31 07:00:47,241	[INFO]	466	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 07:00:47,241	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 07:00:48,276	[INFO]	467	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 07:00:48,277	[INFO]	468	SUCCESS	 4.0	
2020-12-31 07:00:49,329	[INFO]	469	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 16), 'direction': 'before'})
2020-12-31 07:00:52,856	[INFO]	470	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '=='})
2020-12-31 07:00:53,888	[INFO]	471	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 6), 'ingredient': ('java_programs/PASCAL.java.xml', 0)})
2020-12-31 07:00:54,918	[INFO]	472	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 07:00:55,780	[INFO]	473	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 18)})
2020-12-31 07:00:56,820	[INFO]	474	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 3)})
2020-12-31 07:00:57,637	[INFO]	475	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 07:01:01,107	[INFO]	476	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 9)})
2020-12-31 07:01:02,135	[INFO]	477	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 0), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 07:01:05,614	[INFO]	478	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 07:01:05,616	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,30 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
***************
*** 32,37 ****
--- 35,41 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 07:01:06,620	[INFO]	479	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 07:01:06,622	[INFO]	480	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 4), 'ingredient': ('java_programs/PASCAL.java.xml', 1), 'direction': 'before'})
2020-12-31 07:01:06,623	[INFO]	481	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 07:01:06,624	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,30 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
***************
*** 32,37 ****
--- 35,41 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 07:01:07,637	[INFO]	482	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 07:01:08,669	[INFO]	483	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 17)})
2020-12-31 07:01:08,670	[INFO]	484	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 07:01:08,671	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,30 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
***************
*** 32,37 ****
--- 35,41 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 07:01:12,168	[INFO]	485	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 07:01:12,172	[INFO]	486	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 4)})
2020-12-31 07:01:12,173	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,30 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
***************
*** 32,37 ****
--- 35,41 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 07:01:12,174	[INFO]	487	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 07:01:12,175	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 22,27 ****
--- 22,30 ----
              for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
+                     if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 }
                      upleft = rows.get(r-1).get(c-1);
                  } else {
                      upleft = 0;
***************
*** 32,37 ****
--- 35,41 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 07:01:12,176	[INFO]	488	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 12), 'ingredient': ('java_programs/PASCAL.java.xml', 14), 'direction': 'before'})
2020-12-31 07:01:12,177	[INFO]	489	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 07:01:12,177	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 07:01:15,597	[INFO]	490	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 13), 'ingredient': ('java_programs/PASCAL.java.xml', 19), 'direction': 'before'})
2020-12-31 07:01:16,638	[INFO]	491	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 16), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 07:01:16,640	[INFO]	492	SUCCESS	 4.0	
2020-12-31 07:01:20,098	[INFO]	493	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 9), 'ingredient': ('java_programs/PASCAL.java.xml', 3), 'direction': 'before'})
2020-12-31 07:01:21,137	[INFO]	494	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 20), 'ingredient': ('java_programs/PASCAL.java.xml', 13)})
2020-12-31 07:01:21,140	[INFO]	495	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 07:01:21,141	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 07:01:21,142	[INFO]	496	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 14), 'ingredient': ('java_programs/PASCAL.java.xml', 14)})
2020-12-31 07:01:21,144	[INFO]	497	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 07:01:21,145	[DEBUG]	*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 07:01:21,145	[INFO]	498	SUCCESS	 4.0	
2020-12-31 07:01:22,020	[INFO]	499	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/PASCAL.java.xml', 10), 'ingredient': ('java_programs/PASCAL.java.xml', 1)})
2020-12-31 07:01:25,575	[INFO]	500	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 5), 'value': '>'})
2020-12-31 07:01:25,576	[INFO]	==== END ====
2020-12-31 07:01:25,576	[INFO]	Reason: step budget
2020-12-31 07:01:25,579	[INFO]	
2020-12-31 07:01:25,579	[INFO]	========== REPORT ==========
2020-12-31 07:01:25,579	[INFO]	==== Epoch 1 ====
2020-12-31 07:01:25,579	[INFO]	Termination: step budget
2020-12-31 07:01:25,579	[INFO]	Number of interations: 500
2020-12-31 07:01:25,579	[INFO]	Best fitness: 3.0
2020-12-31 07:01:25,579	[INFO]	Best patch: MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 07:01:25,579	[INFO]	Diff:
*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 07:01:25,579	[INFO]	==== Epoch 2 ====
2020-12-31 07:01:25,579	[INFO]	Termination: target fitness reached
2020-12-31 07:01:25,579	[INFO]	Number of interations: 81
2020-12-31 07:01:25,579	[INFO]	Best fitness: 0.0
2020-12-31 07:01:25,580	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '<='})
2020-12-31 07:01:25,580	[INFO]	Diff:
*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,25 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<=r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);

2020-12-31 07:01:25,580	[INFO]	==== Epoch 3 ====
2020-12-31 07:01:25,580	[INFO]	Termination: step budget
2020-12-31 07:01:25,580	[INFO]	Number of interations: 500
2020-12-31 07:01:25,580	[INFO]	==== Epoch 4 ====
2020-12-31 07:01:25,580	[INFO]	Termination: step budget
2020-12-31 07:01:25,580	[INFO]	Number of interations: 500
2020-12-31 07:01:25,580	[INFO]	Best fitness: 3.0
2020-12-31 07:01:25,580	[INFO]	Best patch: MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 07:01:25,580	[INFO]	Diff:
*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 07:01:25,580	[INFO]	==== Epoch 5 ====
2020-12-31 07:01:25,580	[INFO]	Termination: target fitness reached
2020-12-31 07:01:25,580	[INFO]	Number of interations: 78
2020-12-31 07:01:25,580	[INFO]	Best fitness: 0.0
2020-12-31 07:01:25,581	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '<='})
2020-12-31 07:01:25,581	[INFO]	Diff:
*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,25 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<=r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);

2020-12-31 07:01:25,581	[INFO]	==== Epoch 6 ====
2020-12-31 07:01:25,581	[INFO]	Termination: step budget
2020-12-31 07:01:25,581	[INFO]	Number of interations: 500
2020-12-31 07:01:25,581	[INFO]	Best fitness: 3.0
2020-12-31 07:01:25,581	[INFO]	Best patch: MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 7), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 07:01:25,581	[INFO]	Diff:
*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 07:01:25,581	[INFO]	==== Epoch 7 ====
2020-12-31 07:01:25,581	[INFO]	Termination: step budget
2020-12-31 07:01:25,581	[INFO]	Number of interations: 500
2020-12-31 07:01:25,581	[INFO]	Best fitness: 3.0
2020-12-31 07:01:25,581	[INFO]	Best patch: MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 07:01:25,581	[INFO]	Diff:
*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 07:01:25,581	[INFO]	==== Epoch 8 ====
2020-12-31 07:01:25,582	[INFO]	Termination: step budget
2020-12-31 07:01:25,582	[INFO]	Number of interations: 500
2020-12-31 07:01:25,582	[INFO]	Best fitness: 3.0
2020-12-31 07:01:25,582	[INFO]	Best patch: MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 07:01:25,582	[INFO]	Diff:
*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 07:01:25,582	[INFO]	==== Epoch 9 ====
2020-12-31 07:01:25,582	[INFO]	Termination: step budget
2020-12-31 07:01:25,582	[INFO]	Number of interations: 500
2020-12-31 07:01:25,582	[INFO]	Best fitness: 3.0
2020-12-31 07:01:25,582	[INFO]	Best patch: MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 07:01:25,582	[INFO]	Diff:
*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 07:01:25,582	[INFO]	==== Epoch 10 ====
2020-12-31 07:01:25,582	[INFO]	Termination: target fitness reached
2020-12-31 07:01:25,582	[INFO]	Number of interations: 118
2020-12-31 07:01:25,582	[INFO]	Best fitness: 0.0
2020-12-31 07:01:25,583	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '<='})
2020-12-31 07:01:25,583	[INFO]	Diff:
*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,25 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<=r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);

2020-12-31 07:01:25,583	[INFO]	==== Epoch 11 ====
2020-12-31 07:01:25,583	[INFO]	Termination: step budget
2020-12-31 07:01:25,583	[INFO]	Number of interations: 500
2020-12-31 07:01:25,583	[INFO]	Best fitness: 3.0
2020-12-31 07:01:25,583	[INFO]	Best patch: MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 07:01:25,583	[INFO]	Diff:
*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 07:01:25,583	[INFO]	==== Epoch 12 ====
2020-12-31 07:01:25,583	[INFO]	Termination: target fitness reached
2020-12-31 07:01:25,583	[INFO]	Number of interations: 23
2020-12-31 07:01:25,583	[INFO]	Best fitness: 0.0
2020-12-31 07:01:25,583	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '<='})
2020-12-31 07:01:25,583	[INFO]	Diff:
*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,25 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<=r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);

2020-12-31 07:01:25,583	[INFO]	==== Epoch 13 ====
2020-12-31 07:01:25,584	[INFO]	Termination: step budget
2020-12-31 07:01:25,584	[INFO]	Number of interations: 500
2020-12-31 07:01:25,584	[INFO]	Best fitness: 3.0
2020-12-31 07:01:25,584	[INFO]	Best patch: MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 07:01:25,584	[INFO]	Diff:
*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 07:01:25,584	[INFO]	==== Epoch 14 ====
2020-12-31 07:01:25,584	[INFO]	Termination: step budget
2020-12-31 07:01:25,584	[INFO]	Number of interations: 500
2020-12-31 07:01:25,584	[INFO]	Best fitness: 3.0
2020-12-31 07:01:25,584	[INFO]	Best patch: MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 07:01:25,584	[INFO]	Diff:
*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 07:01:25,584	[INFO]	==== Epoch 15 ====
2020-12-31 07:01:25,584	[INFO]	Termination: step budget
2020-12-31 07:01:25,584	[INFO]	Number of interations: 500
2020-12-31 07:01:25,584	[INFO]	Best fitness: 3.0
2020-12-31 07:01:25,585	[INFO]	Best patch: MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 07:01:25,585	[INFO]	Diff:
*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 07:01:25,585	[INFO]	==== Epoch 16 ====
2020-12-31 07:01:25,585	[INFO]	Termination: step budget
2020-12-31 07:01:25,585	[INFO]	Number of interations: 500
2020-12-31 07:01:25,585	[INFO]	Best fitness: 3.0
2020-12-31 07:01:25,585	[INFO]	Best patch: MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 07:01:25,585	[INFO]	Diff:
*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 07:01:25,585	[INFO]	==== Epoch 17 ====
2020-12-31 07:01:25,585	[INFO]	Termination: step budget
2020-12-31 07:01:25,585	[INFO]	Number of interations: 500
2020-12-31 07:01:25,586	[INFO]	==== Epoch 18 ====
2020-12-31 07:01:25,586	[INFO]	Termination: target fitness reached
2020-12-31 07:01:25,586	[INFO]	Number of interations: 135
2020-12-31 07:01:25,586	[INFO]	Best fitness: 0.0
2020-12-31 07:01:25,586	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/PASCAL.java.xml', 8), 'value': '<='})
2020-12-31 07:01:25,586	[INFO]	Diff:
*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 19,25 ****
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);
--- 19,25 ----
  
          for (int r=1; r<n; r++) {
              ArrayList<Integer> row = new ArrayList<Integer>();
!             for (int c=0; c<=r; c++) {
                  int upleft, upright;
                  if (c > 0) {
                      upleft = rows.get(r-1).get(c-1);

2020-12-31 07:01:25,586	[INFO]	==== Epoch 19 ====
2020-12-31 07:01:25,586	[INFO]	Termination: step budget
2020-12-31 07:01:25,586	[INFO]	Number of interations: 500
2020-12-31 07:01:25,586	[INFO]	Best fitness: 3.0
2020-12-31 07:01:25,586	[INFO]	Best patch: MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 19), 'ingredient': ('java_programs/PASCAL.java.xml', 7), 'direction': 'before'})
2020-12-31 07:01:25,586	[INFO]	Diff:
*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 33,38 ****
--- 33,52 ----
                  }
                  row.add(upleft+upright);
              }
+             for (int c=0; c<r; c++) {
+                 int upleft, upright;
+                 if (c > 0) {
+                     upleft = rows.get(r-1).get(c-1);
+                 } else {
+                     upleft = 0;
+                 }
+                 if (c < r) {
+                     upright = rows.get(r-1).get(c);
+                 } else {
+                     upright = 0;
+                 }
+                 row.add(upleft+upright);
+             }
              rows.add(row);
          }
  

2020-12-31 07:01:25,586	[INFO]	==== Epoch 20 ====
2020-12-31 07:01:25,586	[INFO]	Termination: step budget
2020-12-31 07:01:25,586	[INFO]	Number of interations: 500
2020-12-31 07:01:25,587	[INFO]	Best fitness: 3.0
2020-12-31 07:01:25,587	[INFO]	Best patch: MyStmtInsertion({'target': ('java_programs/PASCAL.java.xml', 18), 'ingredient': ('java_programs/PASCAL.java.xml', 18), 'direction': 'before'})
2020-12-31 07:01:25,587	[INFO]	Diff:
*** before: java_programs/PASCAL.java.xml
--- after: java_programs/PASCAL.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                      upright = 0;
                  }
                  row.add(upleft+upright);
+                 row.add(upleft+upright);
              }
              rows.add(row);
          }

2020-12-31 07:01:25,593	[INFO]	Experiment duration: 10498.98972082138
