2020-12-11 06:54:13,641	[INFO]	Path to the temporal program variants: ./.pyggi/tmp_variants/QuixBugs/1607666053
2020-12-11 06:54:13,642	[INFO]	========== EXPERIMENT FOR ['java_programs/DEPTH_FIRST_SEARCH.java.xml']  ==========
2020-12-11 06:54:13,642	[INFO]	modification points:
 ['./decl_stmt[1]', './if[1]', './if[1]/return[1]', './if[2]', './if[2]/operator_comp[1]', './if[2]/return[1]', './for[1]', './for[1]/if[1]', './for[1]/if[1]/return[1]', './return[1]', './decl_stmt[2]', './return[2]']
2020-12-11 06:54:13,642	[INFO]	number of statements and comparisons: 11, 1
2020-12-11 06:54:13,642	[INFO]	========== EPOCH 1 ==========
2020-12-11 06:54:13,642	[INFO]	==== WARMUP ====
2020-12-11 06:54:16,757	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 06:54:16,758	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 06:54:19,825	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 06:54:19,826	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 06:54:22,934	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 06:54:22,934	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 06:54:26,013	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-11 06:54:26,013	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 06:54:26,013	[INFO]	==== START ====
2020-12-11 06:54:26,762	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 06:54:27,511	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 06:54:30,653	[INFO]	3	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 06:54:30,654	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-11 06:54:30,655	[INFO]	4	SUCCESS	+1.0	
2020-12-11 06:54:30,656	[DEBUG]	
2020-12-11 06:54:31,548	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 06:54:32,314	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 06:54:35,366	[INFO]	7	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 06:54:36,265	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 06:54:37,147	[INFO]	9	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-11 06:54:38,038	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 06:54:38,952	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 06:54:39,853	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 06:54:40,771	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 06:54:41,668	[INFO]	14	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 06:54:42,566	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 06:54:43,485	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 06:54:43,488	[INFO]	17	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 06:54:43,489	[DEBUG]	
2020-12-11 06:54:43,490	[INFO]	18	SUCCESS	+1.0	
2020-12-11 06:54:43,490	[DEBUG]	
2020-12-11 06:54:44,372	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 06:54:45,144	[INFO]	20	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 06:54:46,035	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 06:54:46,036	[INFO]	22	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 06:54:46,036	[DEBUG]	
2020-12-11 06:54:46,037	[INFO]	23	SUCCESS	+1.0	
2020-12-11 06:54:46,037	[DEBUG]	
2020-12-11 06:54:46,951	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 06:54:47,746	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 06:54:48,467	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 06:54:49,369	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 06:54:49,370	[INFO]	28	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 06:54:49,371	[INFO]	29	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 06:54:49,372	[DEBUG]	
2020-12-11 06:54:49,372	[INFO]	30	SUCCESS	+1.0	
2020-12-11 06:54:49,372	[DEBUG]	
2020-12-11 06:54:50,084	[INFO]	31	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 06:54:51,013	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 06:54:51,774	[INFO]	33	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 06:54:51,776	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 06:54:52,692	[INFO]	35	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-11 06:54:53,606	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 06:54:54,363	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 06:54:55,250	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 06:54:58,290	[INFO]	39	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 06:54:59,178	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 06:55:02,341	[INFO]	41	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 06:55:02,343	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-11 06:55:02,346	[INFO]	42	SUCCESS	+1.0	
2020-12-11 06:55:02,347	[DEBUG]	
2020-12-11 06:55:03,246	[INFO]	43	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 06:55:04,135	[INFO]	44	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 06:55:07,346	[INFO]	45	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 06:55:07,348	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Search s = new Search();
! return true; }
                      }
                  }
                  return false;

2020-12-11 06:55:08,226	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 06:55:08,228	[INFO]	47	SUCCESS	+1.0	
2020-12-11 06:55:08,229	[DEBUG]	
2020-12-11 06:55:11,317	[INFO]	48	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 06:55:12,184	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 06:55:13,091	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 06:55:13,093	[INFO]	51	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 06:55:16,217	[INFO]	52	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 06:55:17,121	[INFO]	53	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 06:55:20,272	[INFO]	54	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 06:55:20,274	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 21,26 ****
--- 21,27 ----
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+ 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;

2020-12-11 06:55:21,190	[INFO]	55	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 06:55:24,351	[INFO]	56	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 06:55:24,353	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 21,26 ****
--- 21,27 ----
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+ 	                    return true;
                      }
                  }
                  return false;

2020-12-11 06:55:27,428	[INFO]	57	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 06:55:27,429	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-11 06:55:27,430	[INFO]	==== END ====
2020-12-11 06:55:27,430	[INFO]	Reason: target fitness reached
2020-12-11 06:55:27,431	[INFO]	
2020-12-11 06:55:27,431	[INFO]	========== EPOCH 2 ==========
2020-12-11 06:55:27,432	[INFO]	==== WARMUP ====
2020-12-11 06:55:30,558	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 06:55:30,558	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 06:55:33,688	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 06:55:33,688	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 06:55:36,923	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 06:55:36,924	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 06:55:40,067	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-11 06:55:40,068	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 06:55:40,068	[INFO]	==== START ====
2020-12-11 06:55:40,813	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 06:55:41,868	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 06:55:45,023	[INFO]	3	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 06:55:45,906	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 06:55:46,651	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 06:55:49,802	[INFO]	6	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 06:55:49,804	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-11 06:55:52,897	[INFO]	7	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 06:55:52,899	[INFO]	8	SUCCESS	+1.0	
2020-12-11 06:55:52,900	[DEBUG]	
2020-12-11 06:55:56,004	[INFO]	9	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 06:55:56,004	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 06:55:56,005	[INFO]	10	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 06:55:56,006	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 06:55:59,099	[INFO]	11	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 06:55:59,100	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,24 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
!                     return true;
!                 } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
--- 16,22 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 }  else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 26,32 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 06:55:59,101	[INFO]	12	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 06:55:59,102	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,24 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
!                     return true;
!                 } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
--- 16,22 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 }  else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 26,32 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 06:55:59,982	[INFO]	13	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 06:56:03,110	[INFO]	14	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 06:56:03,822	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 06:56:03,824	[INFO]	16	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 06:56:06,953	[INFO]	17	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 06:56:06,955	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,24 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
!                     return true;
!                 } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
--- 16,25 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 }  else {
!                     if (nodesvisited.contains(node)) {
!                     return false;
!                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 29,35 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 06:56:10,021	[INFO]	18	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 06:56:10,023	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,24 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
!                     return true;
!                 } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
--- 16,28 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 }
!                 if (nodesvisited.contains(node)) {
!                     return false;
!                 }  else {
!                     if (nodesvisited.contains(node)) {
!                     return false;
!                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 32,38 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 06:56:10,908	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 06:56:10,911	[INFO]	20	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 06:56:10,912	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,24 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
!                     return true;
!                 } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
--- 16,28 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 }
!                 if (nodesvisited.contains(node)) {
!                     return false;
!                 }  else {
!                     if (nodesvisited.contains(node)) {
!                     return false;
!                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 32,38 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 06:56:10,913	[INFO]	21	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 06:56:10,914	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,24 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
!                     return true;
!                 } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
--- 16,25 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 }  else {
!                     if (nodesvisited.contains(node)) {
!                     return false;
!                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 29,35 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 06:56:10,916	[INFO]	22	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 06:56:10,916	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,24 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
!                     return true;
!                 } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
--- 16,25 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 }  else {
!                     if (nodesvisited.contains(node)) {
!                     return false;
!                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 29,35 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 06:56:14,108	[INFO]	23	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 06:56:14,110	[INFO]	24	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 06:56:14,111	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,24 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
!                     return true;
!                 } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
--- 16,25 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 }  else {
!                     if (nodesvisited.contains(node)) {
!                     return false;
!                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 29,35 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 06:56:14,826	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 06:56:14,828	[INFO]	26	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 06:56:14,829	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,24 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
!                     return true;
!                 } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
--- 16,25 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 }  else {
!                     if (nodesvisited.contains(node)) {
!                     return false;
!                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 29,35 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 06:56:15,682	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 06:56:15,683	[INFO]	28	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 06:56:15,684	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,24 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
!                     return true;
!                 } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
--- 16,25 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 }  else {
!                     if (nodesvisited.contains(node)) {
!                     return false;
!                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 29,35 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 06:56:15,685	[INFO]	29	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 06:56:15,686	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,24 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
!                     return true;
!                 } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
--- 16,22 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 }  else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 26,32 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 06:56:15,687	[INFO]	30	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 06:56:15,688	[INFO]	31	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 06:56:15,688	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,24 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
!                     return true;
!                 } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
--- 16,22 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 }  else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 26,32 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 06:56:15,689	[INFO]	32	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 06:56:16,565	[INFO]	33	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 06:56:17,417	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 06:56:18,163	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 06:56:18,164	[INFO]	36	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 06:56:18,165	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 06:56:18,900	[INFO]	37	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 06:56:19,661	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 06:56:19,662	[INFO]	39	SUCCESS	+1.0	
2020-12-11 06:56:19,662	[DEBUG]	
2020-12-11 06:56:22,717	[INFO]	40	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 06:56:22,718	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-11 06:56:22,718	[INFO]	41	SUCCESS	+1.0	
2020-12-11 06:56:22,719	[DEBUG]	
2020-12-11 06:56:25,832	[INFO]	42	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 06:56:25,834	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-11 06:56:29,020	[INFO]	43	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 06:56:29,021	[INFO]	44	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 06:56:29,022	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-11 06:56:29,893	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 06:56:30,639	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 06:56:31,554	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 06:56:32,433	[INFO]	48	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 06:56:33,327	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 06:56:34,238	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 06:56:35,153	[INFO]	51	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 06:56:38,222	[INFO]	52	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 06:56:38,223	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,26 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 15,30 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
! return true; }
                      }
                  }
                  return false;

2020-12-11 06:56:38,224	[INFO]	53	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 06:56:38,225	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-11 06:56:38,967	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 06:56:39,876	[INFO]	55	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 06:56:39,881	[INFO]	56	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 06:56:39,882	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-11 06:56:40,801	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 06:56:43,878	[INFO]	58	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 06:56:43,879	[INFO]	59	SUCCESS	+1.0	
2020-12-11 06:56:43,879	[DEBUG]	
2020-12-11 06:56:44,789	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 06:56:44,792	[INFO]	61	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 06:56:44,793	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 06:56:44,794	[INFO]	62	SUCCESS	+1.0	
2020-12-11 06:56:44,795	[DEBUG]	
2020-12-11 06:56:47,929	[INFO]	63	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 06:56:47,931	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Search s = new Search();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-11 06:56:51,040	[INFO]	64	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 06:56:51,041	[INFO]	65	SUCCESS	+1.0	
2020-12-11 06:56:51,041	[DEBUG]	
2020-12-11 06:56:51,792	[INFO]	66	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 06:56:52,489	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 06:56:55,705	[INFO]	68	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 06:56:58,827	[INFO]	69	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 06:56:58,827	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-11 06:56:58,828	[INFO]	70	SUCCESS	+1.0	
2020-12-11 06:56:58,828	[DEBUG]	
2020-12-11 06:56:59,686	[INFO]	71	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 06:57:02,804	[INFO]	72	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 06:57:03,695	[INFO]	73	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 06:57:03,696	[INFO]	74	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 06:57:03,697	[DEBUG]	
2020-12-11 06:57:03,698	[INFO]	75	SUCCESS	+1.0	
2020-12-11 06:57:03,698	[DEBUG]	
2020-12-11 06:57:04,581	[INFO]	76	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 06:57:05,523	[INFO]	77	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 06:57:08,620	[INFO]	78	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 06:57:08,621	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-11 06:57:09,522	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 06:57:10,409	[INFO]	80	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 06:57:13,562	[INFO]	81	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 06:57:14,459	[INFO]	82	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 06:57:14,460	[INFO]	83	SUCCESS	+1.0	
2020-12-11 06:57:14,461	[DEBUG]	
2020-12-11 06:57:15,332	[INFO]	84	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 06:57:18,426	[INFO]	85	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 06:57:18,426	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-11 06:57:21,455	[INFO]	86	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 06:57:22,227	[INFO]	87	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 06:57:23,109	[INFO]	88	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 06:57:24,007	[INFO]	89	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 06:57:24,008	[INFO]	90	SUCCESS	+1.0	
2020-12-11 06:57:24,008	[DEBUG]	
2020-12-11 06:57:24,924	[INFO]	91	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 06:57:24,926	[INFO]	92	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 06:57:24,927	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-11 06:57:24,928	[INFO]	93	SUCCESS	+1.0	
2020-12-11 06:57:24,928	[DEBUG]	
2020-12-11 06:57:28,045	[INFO]	94	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 06:57:28,046	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-11 06:57:28,047	[INFO]	95	SUCCESS	+1.0	
2020-12-11 06:57:28,047	[DEBUG]	
2020-12-11 06:57:28,906	[INFO]	96	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 06:57:32,033	[INFO]	97	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 06:57:32,034	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-11 06:57:32,037	[INFO]	98	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 06:57:32,038	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-11 06:57:32,963	[INFO]	99	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 06:57:33,839	[INFO]	100	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 06:57:34,725	[INFO]	101	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 06:57:34,726	[INFO]	102	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 06:57:34,726	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-11 06:57:34,727	[INFO]	103	SUCCESS	+1.0	
2020-12-11 06:57:34,727	[DEBUG]	
2020-12-11 06:57:35,615	[INFO]	104	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 06:57:35,616	[INFO]	105	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 06:57:35,616	[DEBUG]	
2020-12-11 06:57:38,805	[INFO]	106	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 06:57:39,513	[INFO]	107	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 06:57:39,516	[INFO]	108	SUCCESS	+1.0	
2020-12-11 06:57:39,517	[DEBUG]	
2020-12-11 06:57:39,520	[INFO]	109	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 06:57:42,610	[INFO]	110	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 06:57:43,333	[INFO]	111	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 06:57:43,336	[INFO]	112	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 06:57:43,337	[INFO]	113	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 06:57:43,338	[DEBUG]	
2020-12-11 06:57:46,353	[INFO]	114	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 06:57:47,286	[INFO]	115	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 06:57:48,196	[INFO]	116	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 06:57:51,296	[INFO]	117	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 06:57:51,298	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
! return true; }
                      }
                  }
                  return false;

2020-12-11 06:57:52,179	[INFO]	118	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 06:57:52,180	[INFO]	119	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 06:57:52,180	[DEBUG]	
2020-12-11 06:57:55,250	[INFO]	120	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 06:57:55,251	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-11 06:57:55,251	[INFO]	==== END ====
2020-12-11 06:57:55,251	[INFO]	Reason: target fitness reached
2020-12-11 06:57:55,252	[INFO]	
2020-12-11 06:57:55,252	[INFO]	========== EPOCH 3 ==========
2020-12-11 06:57:55,252	[INFO]	==== WARMUP ====
2020-12-11 06:57:58,303	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 06:57:58,303	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 06:58:01,418	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 06:58:01,419	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 06:58:04,560	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 06:58:04,560	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 06:58:07,751	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-11 06:58:07,751	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 06:58:07,751	[INFO]	==== START ====
2020-12-11 06:58:08,637	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 06:58:09,533	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 06:58:12,725	[INFO]	3	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 06:58:15,768	[INFO]	4	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 06:58:16,603	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 06:58:17,505	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 06:58:20,555	[INFO]	7	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 06:58:20,556	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; } }
                      }
                  }
                  return false;

2020-12-11 06:58:20,559	[INFO]	8	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 06:58:20,560	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; } }
                      }
                  }
                  return false;

2020-12-11 06:58:20,561	[INFO]	9	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 06:58:20,562	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; } }
                      }
                  }
                  return false;

2020-12-11 06:58:21,457	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 06:58:21,460	[INFO]	11	SUCCESS	+1.0	
2020-12-11 06:58:21,461	[DEBUG]	
2020-12-11 06:58:22,381	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 06:58:22,382	[INFO]	13	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 06:58:23,136	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 06:58:23,900	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 06:58:26,999	[INFO]	16	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 06:58:27,000	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,22 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 16,25 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-11 06:58:27,001	[INFO]	17	SUCCESS	+1.0	
2020-12-11 06:58:27,001	[DEBUG]	
2020-12-11 06:58:30,158	[INFO]	18	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 06:58:30,159	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-11 06:58:30,160	[INFO]	19	SUCCESS	+1.0	
2020-12-11 06:58:30,160	[DEBUG]	
2020-12-11 06:58:31,059	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 06:58:31,792	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 06:58:34,952	[INFO]	22	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 06:58:34,954	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-11 06:58:34,956	[INFO]	23	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 06:58:34,957	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-11 06:58:35,812	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 06:58:35,814	[INFO]	25	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 06:58:35,814	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-11 06:58:35,816	[INFO]	26	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 06:58:35,816	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-11 06:58:35,817	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 06:58:38,922	[INFO]	28	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 06:58:38,923	[INFO]	29	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 06:58:38,924	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-11 06:58:39,631	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 06:58:43,014	[INFO]	31	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 06:58:43,016	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,24 ****
--- 14,28 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-11 06:58:46,020	[INFO]	32	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 06:58:46,022	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
***************
*** 21,26 ****
--- 22,33 ----
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+                     }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
+                     return false;
+                 }
+ return true; }
                      }
                  }
                  return false;

2020-12-11 06:58:49,118	[INFO]	33	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 06:58:49,120	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,33 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
+                     return false;
+                 }
+ return true; }
+                     }
                  }
                  return false;
              }

2020-12-11 06:58:52,230	[INFO]	34	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 06:58:52,232	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-11 06:58:55,268	[INFO]	35	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 06:58:58,358	[INFO]	36	SUCCESS	*0.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 06:58:58,359	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-11 06:58:58,359	[INFO]	==== END ====
2020-12-11 06:58:58,359	[INFO]	Reason: target fitness reached
2020-12-11 06:58:58,360	[INFO]	
2020-12-11 06:58:58,360	[INFO]	========== EPOCH 4 ==========
2020-12-11 06:58:58,361	[INFO]	==== WARMUP ====
2020-12-11 06:59:01,563	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 06:59:01,563	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 06:59:04,584	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 06:59:04,584	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 06:59:07,734	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 06:59:07,735	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 06:59:10,881	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-11 06:59:10,882	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 06:59:10,882	[INFO]	==== START ====
2020-12-11 06:59:10,884	[INFO]	1	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 06:59:10,885	[DEBUG]	
2020-12-11 06:59:11,781	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 06:59:11,784	[INFO]	3	SUCCESS	+1.0	
2020-12-11 06:59:11,785	[DEBUG]	
2020-12-11 06:59:12,695	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 06:59:13,564	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 06:59:14,300	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 06:59:14,301	[INFO]	7	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 06:59:14,301	[DEBUG]	
2020-12-11 06:59:15,017	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 06:59:15,891	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 06:59:18,903	[INFO]	10	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 06:59:18,904	[INFO]	11	SUCCESS	+1.0	
2020-12-11 06:59:18,904	[DEBUG]	
2020-12-11 06:59:22,031	[INFO]	12	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 06:59:22,032	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,28 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (nodesvisited.contains(node)) {
+                     return false;
+                 }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-11 06:59:25,151	[INFO]	13	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 06:59:25,152	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,25 ****
--- 15,31 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (nodesvisited.contains(node)) {
+                     return false;
+                 }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-11 06:59:25,153	[INFO]	14	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 06:59:25,154	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,25 ****
--- 15,31 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (nodesvisited.contains(node)) {
+                     return false;
+                 }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-11 06:59:25,155	[INFO]	15	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 06:59:25,156	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,25 ****
--- 15,31 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (nodesvisited.contains(node)) {
+                     return false;
+                 }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-11 06:59:25,156	[INFO]	16	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 06:59:25,157	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,28 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (nodesvisited.contains(node)) {
+                     return false;
+                 }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-11 06:59:25,157	[INFO]	17	SUCCESS	+1.0	
2020-12-11 06:59:25,158	[DEBUG]	
2020-12-11 06:59:28,283	[INFO]	18	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 06:59:28,286	[INFO]	19	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 06:59:28,287	[DEBUG]	
2020-12-11 06:59:28,288	[INFO]	20	SUCCESS	+1.0	
2020-12-11 06:59:28,288	[DEBUG]	
2020-12-11 06:59:29,192	[INFO]	21	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 06:59:29,957	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 06:59:30,819	[INFO]	23	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 06:59:31,727	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 06:59:34,845	[INFO]	25	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 06:59:34,846	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-11 06:59:34,847	[INFO]	26	SUCCESS	+1.0	
2020-12-11 06:59:34,847	[DEBUG]	
2020-12-11 06:59:35,577	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 06:59:36,446	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 06:59:39,537	[INFO]	29	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 06:59:40,405	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 06:59:43,566	[INFO]	31	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 06:59:43,568	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-11 06:59:43,570	[INFO]	32	SUCCESS	+1.0	
2020-12-11 06:59:43,571	[DEBUG]	
2020-12-11 06:59:44,291	[INFO]	33	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 06:59:45,175	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 06:59:45,179	[INFO]	35	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 06:59:46,085	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 06:59:46,088	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 06:59:49,213	[INFO]	38	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 06:59:49,215	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-11 06:59:52,273	[INFO]	39	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 06:59:52,275	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-11 06:59:52,277	[INFO]	40	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 06:59:52,277	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-11 06:59:52,279	[INFO]	41	SUCCESS	+1.0	
2020-12-11 06:59:52,279	[DEBUG]	
2020-12-11 06:59:53,192	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 06:59:56,240	[INFO]	43	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 06:59:59,407	[INFO]	44	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 06:59:59,409	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Set<Node> nodesvisited = new HashSet<>();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-11 06:59:59,410	[INFO]	45	SUCCESS	+1.0	
2020-12-11 06:59:59,411	[DEBUG]	
2020-12-11 07:00:00,258	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:00:01,159	[INFO]	47	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:00:01,918	[INFO]	48	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:00:01,922	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:00:02,675	[INFO]	50	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:00:02,677	[INFO]	51	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:00:03,564	[INFO]	52	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:00:04,427	[INFO]	53	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:00:07,623	[INFO]	54	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:00:07,625	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,23 ****
--- 18,26 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }

2020-12-11 07:00:07,627	[INFO]	55	SUCCESS	+1.0	
2020-12-11 07:00:07,627	[DEBUG]	
2020-12-11 07:00:10,694	[INFO]	56	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:00:10,694	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Search s = new Search();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-11 07:00:10,695	[INFO]	57	SUCCESS	+1.0	
2020-12-11 07:00:10,696	[DEBUG]	
2020-12-11 07:00:11,592	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:00:11,594	[INFO]	59	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:00:11,594	[DEBUG]	
2020-12-11 07:00:11,595	[INFO]	60	SUCCESS	+1.0	
2020-12-11 07:00:11,595	[DEBUG]	
2020-12-11 07:00:12,462	[INFO]	61	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:00:13,234	[INFO]	62	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:00:14,131	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:00:15,024	[INFO]	64	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:00:15,027	[INFO]	65	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-11 07:00:15,027	[DEBUG]	
2020-12-11 07:00:15,029	[INFO]	66	SUCCESS	+1.0	
2020-12-11 07:00:15,029	[DEBUG]	
2020-12-11 07:00:15,914	[INFO]	67	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:00:16,793	[INFO]	68	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:00:17,685	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:00:20,775	[INFO]	70	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:00:20,776	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-11 07:00:20,776	[INFO]	==== END ====
2020-12-11 07:00:20,776	[INFO]	Reason: target fitness reached
2020-12-11 07:00:20,777	[INFO]	
2020-12-11 07:00:20,777	[INFO]	========== EPOCH 5 ==========
2020-12-11 07:00:20,778	[INFO]	==== WARMUP ====
2020-12-11 07:00:23,881	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 07:00:23,882	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:00:26,949	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 07:00:26,949	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:00:30,189	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 07:00:30,190	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:00:33,284	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-11 07:00:33,284	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:00:33,285	[INFO]	==== START ====
2020-12-11 07:00:34,050	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:00:37,719	[INFO]	2	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:00:38,838	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:00:39,951	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:00:43,689	[INFO]	5	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:00:44,593	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:00:44,595	[INFO]	7	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:00:44,596	[DEBUG]	
2020-12-11 07:00:44,596	[INFO]	8	SUCCESS	+1.0	
2020-12-11 07:00:44,597	[DEBUG]	
2020-12-11 07:00:47,704	[INFO]	9	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:00:50,820	[INFO]	10	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:00:50,821	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-11 07:00:50,821	[INFO]	==== END ====
2020-12-11 07:00:50,822	[INFO]	Reason: target fitness reached
2020-12-11 07:00:50,822	[INFO]	
2020-12-11 07:00:50,822	[INFO]	========== EPOCH 6 ==========
2020-12-11 07:00:50,823	[INFO]	==== WARMUP ====
2020-12-11 07:00:53,950	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 07:00:53,951	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:00:57,028	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 07:00:57,028	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:01:00,156	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 07:01:00,156	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:01:03,515	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-11 07:01:03,516	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:01:03,516	[INFO]	==== START ====
2020-12-11 07:01:04,359	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:01:05,338	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:01:06,200	[INFO]	3	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:01:09,292	[INFO]	4	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:01:12,360	[INFO]	5	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:01:12,362	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-11 07:01:15,609	[INFO]	6	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:01:18,760	[INFO]	7	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:01:18,761	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,27 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
              }
--- 20,33 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
+                 }
+                 if (nodesvisited.contains(node)) {
+                     return false;
                  }
                  return false;
              }

2020-12-11 07:01:18,762	[INFO]	8	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:01:18,762	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-11 07:01:18,763	[INFO]	9	SUCCESS	+1.0	
2020-12-11 07:01:18,763	[DEBUG]	
2020-12-11 07:01:19,641	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:01:20,518	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:01:23,859	[INFO]	12	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:01:24,753	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:01:24,755	[INFO]	14	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:01:27,843	[INFO]	15	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:01:30,962	[INFO]	16	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:01:30,963	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-11 07:01:30,964	[INFO]	17	SUCCESS	+1.0	
2020-12-11 07:01:30,965	[DEBUG]	
2020-12-11 07:01:34,037	[INFO]	18	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:01:34,039	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-11 07:01:34,040	[INFO]	19	SUCCESS	+1.0	
2020-12-11 07:01:34,041	[DEBUG]	
2020-12-11 07:01:37,193	[INFO]	20	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:01:37,195	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-11 07:01:40,256	[INFO]	21	SUCCESS	 2.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:01:41,153	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:01:41,894	[INFO]	23	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:01:41,895	[INFO]	24	SUCCESS	+1.0	
2020-12-11 07:01:41,896	[DEBUG]	
2020-12-11 07:01:42,793	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:01:45,947	[INFO]	26	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:01:45,948	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 21,26 ****
--- 21,27 ----
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+ 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;

2020-12-11 07:01:46,704	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:01:46,705	[INFO]	28	SUCCESS	+1.0	
2020-12-11 07:01:46,705	[DEBUG]	
2020-12-11 07:01:47,438	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:01:50,560	[INFO]	30	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:01:50,561	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-11 07:01:53,738	[INFO]	31	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:01:53,739	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
***************
*** 23,28 ****
--- 26,32 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-11 07:01:53,740	[INFO]	32	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:01:53,741	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-11 07:01:53,741	[INFO]	33	SUCCESS	+1.0	
2020-12-11 07:01:53,741	[DEBUG]	
2020-12-11 07:01:54,651	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:01:55,392	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:01:56,283	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:01:57,159	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:01:57,162	[INFO]	38	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:01:57,163	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 21,26 ****
--- 21,27 ----
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+ 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;

2020-12-11 07:01:58,086	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:01:58,089	[INFO]	40	SUCCESS	+1.0	
2020-12-11 07:01:58,090	[DEBUG]	
2020-12-11 07:01:58,997	[INFO]	41	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:01:58,998	[INFO]	42	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:01:59,756	[INFO]	43	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:02:00,647	[INFO]	44	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:02:01,403	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:02:01,404	[INFO]	46	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:02:01,404	[DEBUG]	
2020-12-11 07:02:01,405	[INFO]	47	SUCCESS	+1.0	
2020-12-11 07:02:01,405	[DEBUG]	
2020-12-11 07:02:04,607	[INFO]	48	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:02:05,320	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:02:05,322	[INFO]	50	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:02:05,322	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 21,26 ****
--- 21,27 ----
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+ 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;

2020-12-11 07:02:06,073	[INFO]	51	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:02:06,074	[INFO]	52	SUCCESS	+1.0	
2020-12-11 07:02:06,074	[DEBUG]	
2020-12-11 07:02:06,814	[INFO]	53	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:02:06,819	[INFO]	54	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:02:07,744	[INFO]	55	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:02:10,854	[INFO]	56	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:02:11,611	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:02:11,615	[INFO]	58	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:02:11,616	[DEBUG]	
2020-12-11 07:02:11,618	[INFO]	59	SUCCESS	+1.0	
2020-12-11 07:02:11,619	[DEBUG]	
2020-12-11 07:02:12,510	[INFO]	60	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:02:15,678	[INFO]	61	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:02:16,552	[INFO]	62	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:02:17,279	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:02:20,409	[INFO]	64	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:02:20,411	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-11 07:02:20,412	[INFO]	==== END ====
2020-12-11 07:02:20,412	[INFO]	Reason: target fitness reached
2020-12-11 07:02:20,415	[INFO]	
2020-12-11 07:02:20,415	[INFO]	========== EPOCH 7 ==========
2020-12-11 07:02:20,416	[INFO]	==== WARMUP ====
2020-12-11 07:02:23,534	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 07:02:23,534	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:02:26,595	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 07:02:26,596	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:02:29,745	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 07:02:29,745	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:02:32,929	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-11 07:02:32,929	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:02:32,929	[INFO]	==== START ====
2020-12-11 07:02:33,644	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:02:34,534	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:02:37,626	[INFO]	3	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-11 07:02:40,818	[INFO]	4	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:02:41,674	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:02:44,787	[INFO]	6	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:02:44,790	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
                  return false;
              }

2020-12-11 07:02:44,791	[INFO]	7	SUCCESS	+1.0	
2020-12-11 07:02:44,792	[DEBUG]	
2020-12-11 07:02:44,794	[INFO]	8	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:02:44,794	[DEBUG]	
2020-12-11 07:02:45,712	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:02:48,847	[INFO]	10	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:02:48,848	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 07:02:49,751	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:02:49,752	[INFO]	12	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:02:49,752	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 07:02:50,640	[INFO]	13	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:02:50,641	[INFO]	14	SUCCESS	+1.0	
2020-12-11 07:02:50,642	[DEBUG]	
2020-12-11 07:02:50,643	[INFO]	15	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-11 07:02:50,643	[DEBUG]	
2020-12-11 07:02:50,644	[INFO]	16	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:02:53,726	[INFO]	17	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:02:53,728	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-11 07:02:54,627	[INFO]	18	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:02:55,374	[INFO]	19	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:02:55,375	[INFO]	20	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-11 07:02:55,376	[DEBUG]	
2020-12-11 07:02:55,376	[INFO]	21	SUCCESS	+1.0	
2020-12-11 07:02:55,376	[DEBUG]	
2020-12-11 07:02:58,599	[INFO]	22	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:02:58,601	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 21,26 ****
--- 21,27 ----
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+ 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;

2020-12-11 07:02:59,443	[INFO]	23	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:03:00,348	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:03:00,349	[INFO]	25	SUCCESS	+1.0	
2020-12-11 07:03:00,350	[DEBUG]	
2020-12-11 07:03:00,351	[INFO]	26	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:03:00,351	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
                  return false;
              }

2020-12-11 07:03:03,470	[INFO]	27	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:03:03,473	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,31 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
                  return false;
              }

2020-12-11 07:03:03,476	[INFO]	28	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:03:03,477	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,31 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
                  return false;
              }

2020-12-11 07:03:04,364	[INFO]	29	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:03:04,366	[INFO]	30	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:03:04,367	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
                  return false;
              }

2020-12-11 07:03:04,368	[INFO]	31	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:03:04,368	[DEBUG]	
2020-12-11 07:03:05,301	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:03:08,521	[INFO]	33	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:03:08,522	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-11 07:03:08,523	[INFO]	34	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:03:08,524	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-11 07:03:08,525	[INFO]	35	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:03:08,525	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-11 07:03:11,717	[INFO]	36	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:03:11,719	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;
***************
*** 23,28 ****
--- 26,32 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-11 07:03:11,723	[INFO]	37	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:03:11,724	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;
***************
*** 23,28 ****
--- 26,32 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-11 07:03:14,859	[INFO]	38	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:03:14,862	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-11 07:03:17,958	[INFO]	39	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:03:17,963	[INFO]	40	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:03:17,964	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-11 07:03:17,966	[INFO]	41	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:03:17,968	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-11 07:03:21,106	[INFO]	42	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:03:21,107	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 07:03:21,109	[INFO]	43	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:03:21,109	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 07:03:21,110	[INFO]	44	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:03:21,111	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 07:03:24,113	[INFO]	45	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:03:24,114	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 31,37 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 07:03:27,274	[INFO]	46	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:03:27,276	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,26 ****
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 18,32 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 34,40 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 07:03:27,277	[INFO]	47	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:03:27,278	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,26 ****
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 18,32 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 34,40 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 07:03:28,130	[INFO]	48	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:03:28,132	[INFO]	49	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:03:28,133	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 31,37 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 07:03:29,070	[INFO]	50	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:03:29,075	[INFO]	51	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:03:29,077	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 31,37 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 07:03:29,079	[INFO]	52	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:03:29,080	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 31,37 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 07:03:32,350	[INFO]	53	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:03:32,351	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-11 07:03:32,352	[INFO]	54	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:03:32,353	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-11 07:03:32,354	[INFO]	55	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:03:32,355	[DEBUG]	
2020-12-11 07:03:33,215	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:03:33,216	[INFO]	57	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:03:33,217	[DEBUG]	
2020-12-11 07:03:33,218	[INFO]	58	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:03:33,218	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-11 07:03:34,117	[INFO]	59	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:03:34,118	[INFO]	60	SUCCESS	+1.0	
2020-12-11 07:03:34,118	[DEBUG]	
2020-12-11 07:03:35,044	[INFO]	61	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:03:35,971	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:03:39,169	[INFO]	63	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:03:40,015	[INFO]	64	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 07:03:40,016	[INFO]	65	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:03:40,017	[INFO]	66	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-11 07:03:40,940	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:03:40,943	[INFO]	68	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:03:40,944	[DEBUG]	
2020-12-11 07:03:41,847	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:03:42,731	[INFO]	70	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:03:45,904	[INFO]	71	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:03:45,905	[INFO]	72	SUCCESS	+1.0	
2020-12-11 07:03:45,905	[DEBUG]	
2020-12-11 07:03:49,023	[INFO]	73	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:03:49,024	[INFO]	74	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:03:52,114	[INFO]	75	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:03:52,117	[INFO]	76	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:03:52,118	[DEBUG]	
2020-12-11 07:03:52,119	[INFO]	77	SUCCESS	+1.0	
2020-12-11 07:03:52,119	[DEBUG]	
2020-12-11 07:03:52,882	[INFO]	78	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:03:53,767	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:03:56,903	[INFO]	80	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:03:56,904	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-11 07:03:56,905	[INFO]	81	SUCCESS	+1.0	
2020-12-11 07:03:56,905	[DEBUG]	
2020-12-11 07:03:56,906	[INFO]	82	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:03:57,789	[INFO]	83	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:03:58,679	[INFO]	84	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:04:01,886	[INFO]	85	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:04:02,721	[INFO]	86	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:04:03,610	[INFO]	87	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:04:06,713	[INFO]	88	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:04:06,714	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-11 07:04:06,715	[INFO]	89	SUCCESS	+1.0	
2020-12-11 07:04:06,715	[DEBUG]	
2020-12-11 07:04:09,796	[INFO]	90	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:04:10,689	[INFO]	91	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:04:11,579	[INFO]	92	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 07:04:12,370	[INFO]	93	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:04:13,251	[INFO]	94	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:04:13,979	[INFO]	95	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:04:17,078	[INFO]	96	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:04:17,080	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-11 07:04:17,081	[INFO]	97	SUCCESS	+1.0	
2020-12-11 07:04:17,082	[DEBUG]	
2020-12-11 07:04:17,845	[INFO]	98	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:04:20,873	[INFO]	99	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:04:20,874	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-11 07:04:20,875	[INFO]	==== END ====
2020-12-11 07:04:20,875	[INFO]	Reason: target fitness reached
2020-12-11 07:04:20,876	[INFO]	
2020-12-11 07:04:20,876	[INFO]	========== EPOCH 8 ==========
2020-12-11 07:04:20,876	[INFO]	==== WARMUP ====
2020-12-11 07:04:23,959	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 07:04:23,959	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:04:27,100	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 07:04:27,100	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:04:30,225	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 07:04:30,225	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:04:33,430	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-11 07:04:33,431	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:04:33,431	[INFO]	==== START ====
2020-12-11 07:04:36,568	[INFO]	1	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:04:36,570	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-11 07:04:36,573	[INFO]	2	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:04:36,573	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-11 07:04:36,575	[INFO]	3	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:04:36,576	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-11 07:04:36,577	[INFO]	4	SUCCESS	+1.0	
2020-12-11 07:04:36,578	[DEBUG]	
2020-12-11 07:04:37,350	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:04:38,193	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:04:39,079	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:04:42,127	[INFO]	8	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:04:43,042	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:04:43,905	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:04:44,790	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:04:47,960	[INFO]	12	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:04:48,844	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:04:49,770	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:04:50,684	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:04:53,802	[INFO]	16	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:04:53,804	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,22 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 16,25 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-11 07:04:53,806	[INFO]	17	SUCCESS	+1.0	
2020-12-11 07:04:53,806	[DEBUG]	
2020-12-11 07:04:54,695	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:04:55,613	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:04:58,805	[INFO]	20	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:05:01,901	[INFO]	21	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:05:01,902	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; } }
                      }
                  }
                  return false;

2020-12-11 07:05:05,123	[INFO]	22	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:05:05,126	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,28 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
              }
          };
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; } }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-11 07:05:05,127	[INFO]	23	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:05:05,128	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; } }
                      }
                  }
                  return false;

2020-12-11 07:05:05,129	[INFO]	24	SUCCESS	+1.0	
2020-12-11 07:05:05,130	[DEBUG]	
2020-12-11 07:05:06,029	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:05:06,908	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 07:05:10,091	[INFO]	27	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:05:10,092	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-11 07:05:10,093	[INFO]	28	SUCCESS	+1.0	
2020-12-11 07:05:10,094	[DEBUG]	
2020-12-11 07:05:10,990	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:05:14,064	[INFO]	30	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:05:17,149	[INFO]	31	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:05:17,151	[INFO]	32	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:05:18,057	[INFO]	33	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:05:21,397	[INFO]	34	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:05:21,398	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-11 07:05:21,399	[INFO]	35	SUCCESS	+1.0	
2020-12-11 07:05:21,400	[DEBUG]	
2020-12-11 07:05:22,164	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:05:23,075	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:05:23,985	[INFO]	38	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:05:24,776	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:05:25,679	[INFO]	40	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:05:28,929	[INFO]	41	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:05:28,932	[INFO]	42	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:05:29,837	[INFO]	43	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:05:30,717	[INFO]	44	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:05:30,719	[INFO]	45	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:05:30,719	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,22 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 16,25 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-11 07:05:31,636	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:05:31,637	[INFO]	47	SUCCESS	+1.0	
2020-12-11 07:05:31,637	[DEBUG]	
2020-12-11 07:05:34,763	[INFO]	48	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:05:34,764	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-11 07:05:37,946	[INFO]	49	SUCCESS	*0.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:05:37,947	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,28 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
              }
          };
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-11 07:05:37,948	[INFO]	==== END ====
2020-12-11 07:05:37,948	[INFO]	Reason: target fitness reached
2020-12-11 07:05:37,949	[INFO]	
2020-12-11 07:05:37,949	[INFO]	========== EPOCH 9 ==========
2020-12-11 07:05:37,949	[INFO]	==== WARMUP ====
2020-12-11 07:05:41,052	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 07:05:41,053	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:05:44,212	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 07:05:44,212	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:05:47,302	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 07:05:47,303	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:05:50,455	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-11 07:05:50,455	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:05:50,455	[INFO]	==== START ====
2020-12-11 07:05:51,311	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:05:51,312	[INFO]	2	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:05:51,313	[DEBUG]	
2020-12-11 07:05:54,409	[INFO]	3	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:05:54,410	[INFO]	4	SUCCESS	+1.0	
2020-12-11 07:05:54,410	[DEBUG]	
2020-12-11 07:05:55,277	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 07:05:58,396	[INFO]	6	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:06:01,501	[INFO]	7	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:06:01,502	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-11 07:06:02,403	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:06:02,404	[INFO]	9	SUCCESS	+1.0	
2020-12-11 07:06:02,404	[DEBUG]	
2020-12-11 07:06:03,320	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:06:04,099	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:06:07,280	[INFO]	12	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:06:10,302	[INFO]	13	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:06:10,304	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-11 07:06:10,305	[INFO]	14	SUCCESS	+1.0	
2020-12-11 07:06:10,306	[DEBUG]	
2020-12-11 07:06:11,067	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:06:11,817	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:06:12,707	[INFO]	17	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:06:13,468	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:06:16,661	[INFO]	19	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:06:19,741	[INFO]	20	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:06:19,742	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-11 07:06:20,602	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:06:20,603	[INFO]	22	SUCCESS	+1.0	
2020-12-11 07:06:20,604	[DEBUG]	
2020-12-11 07:06:21,353	[INFO]	23	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:06:22,247	[INFO]	24	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:06:22,994	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:06:23,883	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:06:24,787	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:06:27,917	[INFO]	28	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:06:27,919	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
                      return false;
+                 }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-11 07:06:28,663	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:06:29,542	[INFO]	30	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:06:29,543	[INFO]	31	SUCCESS	+1.0	
2020-12-11 07:06:29,544	[DEBUG]	
2020-12-11 07:06:30,441	[INFO]	32	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:06:31,352	[INFO]	33	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:06:32,268	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:06:32,271	[INFO]	35	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:06:33,047	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:06:36,080	[INFO]	37	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:06:36,978	[INFO]	38	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:06:37,873	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:06:41,026	[INFO]	40	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:06:41,027	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-11 07:06:41,028	[INFO]	41	SUCCESS	+1.0	
2020-12-11 07:06:41,028	[DEBUG]	
2020-12-11 07:06:42,010	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:06:42,012	[INFO]	43	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:06:42,013	[INFO]	44	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:06:45,270	[INFO]	45	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:06:46,140	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:06:47,034	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:06:47,954	[INFO]	48	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:06:47,958	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:06:48,877	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:06:51,984	[INFO]	51	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:06:51,986	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-11 07:06:51,988	[INFO]	52	SUCCESS	+1.0	
2020-12-11 07:06:51,989	[DEBUG]	
2020-12-11 07:06:55,132	[INFO]	53	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:06:55,133	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Set<Node> nodesvisited = new HashSet<>();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-11 07:06:55,856	[INFO]	54	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:06:55,857	[INFO]	55	SUCCESS	+1.0	
2020-12-11 07:06:55,858	[DEBUG]	
2020-12-11 07:06:55,859	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:06:56,584	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:06:57,457	[INFO]	58	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:06:58,366	[INFO]	59	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:06:59,293	[INFO]	60	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-11 07:07:00,204	[INFO]	61	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:07:03,358	[INFO]	62	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:07:06,484	[INFO]	63	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:07:06,485	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,22 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 16,25 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-11 07:07:06,486	[INFO]	64	SUCCESS	+1.0	
2020-12-11 07:07:06,486	[DEBUG]	
2020-12-11 07:07:09,559	[INFO]	65	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:07:12,672	[INFO]	66	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:07:12,674	[INFO]	67	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:07:12,674	[DEBUG]	
2020-12-11 07:07:12,675	[INFO]	68	SUCCESS	+1.0	
2020-12-11 07:07:12,675	[DEBUG]	
2020-12-11 07:07:15,799	[INFO]	69	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:07:15,801	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-11 07:07:15,803	[INFO]	70	SUCCESS	+1.0	
2020-12-11 07:07:15,803	[DEBUG]	
2020-12-11 07:07:16,694	[INFO]	71	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:07:16,696	[INFO]	72	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:07:16,696	[DEBUG]	
2020-12-11 07:07:16,697	[INFO]	73	SUCCESS	+1.0	
2020-12-11 07:07:16,697	[DEBUG]	
2020-12-11 07:07:17,578	[INFO]	74	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:07:18,494	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:07:21,668	[INFO]	76	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:07:21,669	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-11 07:07:21,670	[INFO]	==== END ====
2020-12-11 07:07:21,670	[INFO]	Reason: target fitness reached
2020-12-11 07:07:21,671	[INFO]	
2020-12-11 07:07:21,671	[INFO]	========== EPOCH 10 ==========
2020-12-11 07:07:21,672	[INFO]	==== WARMUP ====
2020-12-11 07:07:24,690	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 07:07:24,691	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:07:27,820	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 07:07:27,820	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:07:30,927	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 07:07:30,927	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:07:34,047	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-11 07:07:34,048	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:07:34,048	[INFO]	==== START ====
2020-12-11 07:07:34,926	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:07:35,858	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:07:35,860	[INFO]	3	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:07:35,861	[DEBUG]	
2020-12-11 07:07:35,863	[INFO]	4	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:07:35,863	[DEBUG]	
2020-12-11 07:07:35,865	[INFO]	5	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:07:35,865	[DEBUG]	
2020-12-11 07:07:35,867	[INFO]	6	SUCCESS	+1.0	
2020-12-11 07:07:35,867	[DEBUG]	
2020-12-11 07:07:36,756	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:07:37,528	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:07:38,434	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:07:39,306	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:07:42,422	[INFO]	11	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:07:42,424	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-11 07:07:42,427	[INFO]	12	SUCCESS	+1.0	
2020-12-11 07:07:42,427	[DEBUG]	
2020-12-11 07:07:43,312	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:07:44,192	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:07:45,087	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:07:45,831	[INFO]	16	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:07:45,836	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:07:46,588	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:07:49,674	[INFO]	19	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:07:49,674	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-11 07:07:50,424	[INFO]	20	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:07:50,427	[INFO]	21	SUCCESS	+1.0	
2020-12-11 07:07:50,428	[DEBUG]	
2020-12-11 07:07:51,342	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:07:52,214	[INFO]	23	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:07:53,139	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 07:07:54,061	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 07:07:54,989	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:07:55,904	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:07:59,046	[INFO]	28	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:07:59,047	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-11 07:07:59,048	[INFO]	29	SUCCESS	+1.0	
2020-12-11 07:07:59,048	[DEBUG]	
2020-12-11 07:07:59,943	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:08:03,097	[INFO]	31	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:08:03,099	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-11 07:08:03,100	[INFO]	32	SUCCESS	+1.0	
2020-12-11 07:08:03,101	[DEBUG]	
2020-12-11 07:08:03,972	[INFO]	33	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:08:07,308	[INFO]	34	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:08:08,223	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:08:08,224	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:08:09,129	[INFO]	37	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:08:12,211	[INFO]	38	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:08:12,214	[INFO]	39	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:08:12,216	[INFO]	40	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:08:12,216	[DEBUG]	
2020-12-11 07:08:15,305	[INFO]	41	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:08:15,308	[INFO]	42	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:08:18,458	[INFO]	43	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:08:21,526	[INFO]	44	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:08:21,527	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  return false;
              }
          };

2020-12-11 07:08:22,412	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:08:25,524	[INFO]	46	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:08:25,526	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,27 ****
--- 17,33 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                 }
+                 if (nodesvisited.contains(node)) {
+                     return false;
                  }
                  return false;
              }

2020-12-11 07:08:26,459	[INFO]	47	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-11 07:08:26,463	[INFO]	48	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:08:26,464	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  return false;
              }
          };

2020-12-11 07:08:27,365	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:08:27,366	[INFO]	50	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:08:27,366	[DEBUG]	
2020-12-11 07:08:27,367	[INFO]	51	SUCCESS	+1.0	
2020-12-11 07:08:27,368	[DEBUG]	
2020-12-11 07:08:30,500	[INFO]	52	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:08:30,501	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-11 07:08:31,418	[INFO]	53	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:08:31,419	[INFO]	54	SUCCESS	+1.0	
2020-12-11 07:08:31,420	[DEBUG]	
2020-12-11 07:08:32,327	[INFO]	55	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:08:33,255	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:08:34,150	[INFO]	57	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:08:37,265	[INFO]	58	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:08:38,160	[INFO]	59	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:08:41,282	[INFO]	60	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:08:41,283	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-11 07:08:41,284	[INFO]	61	SUCCESS	+1.0	
2020-12-11 07:08:41,284	[DEBUG]	
2020-12-11 07:08:41,285	[INFO]	62	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:08:41,286	[INFO]	63	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:08:41,286	[DEBUG]	
2020-12-11 07:08:41,287	[INFO]	64	SUCCESS	+1.0	
2020-12-11 07:08:41,288	[DEBUG]	
2020-12-11 07:08:44,362	[INFO]	65	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:08:45,292	[INFO]	66	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:08:48,463	[INFO]	67	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:08:51,568	[INFO]	68	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:08:51,570	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-11 07:08:51,571	[INFO]	69	SUCCESS	+1.0	
2020-12-11 07:08:51,572	[DEBUG]	
2020-12-11 07:08:52,306	[INFO]	70	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:08:53,203	[INFO]	71	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:08:54,113	[INFO]	72	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:08:57,317	[INFO]	73	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:08:57,319	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-11 07:08:57,320	[INFO]	74	SUCCESS	+1.0	
2020-12-11 07:08:57,321	[DEBUG]	
2020-12-11 07:08:58,192	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:08:58,195	[INFO]	76	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:08:58,196	[DEBUG]	
2020-12-11 07:08:58,198	[INFO]	77	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:08:58,199	[DEBUG]	
2020-12-11 07:08:58,202	[INFO]	78	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:08:58,203	[DEBUG]	
2020-12-11 07:08:58,968	[INFO]	79	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:08:58,969	[INFO]	80	SUCCESS	+1.0	
2020-12-11 07:08:58,969	[DEBUG]	
2020-12-11 07:08:58,970	[INFO]	81	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 07:08:59,853	[INFO]	82	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-11 07:09:03,021	[INFO]	83	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:09:03,899	[INFO]	84	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:09:03,901	[INFO]	85	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:09:04,780	[INFO]	86	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:09:04,783	[INFO]	87	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:09:05,703	[INFO]	88	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:09:05,704	[INFO]	89	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:09:06,454	[INFO]	90	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:09:09,595	[INFO]	91	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:09:09,596	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-11 07:09:09,597	[INFO]	92	SUCCESS	+1.0	
2020-12-11 07:09:09,597	[DEBUG]	
2020-12-11 07:09:10,442	[INFO]	93	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:09:11,354	[INFO]	94	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:09:12,269	[INFO]	95	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:09:12,273	[INFO]	96	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:09:13,035	[INFO]	97	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:09:13,039	[INFO]	98	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:09:16,111	[INFO]	99	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:09:16,112	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-11 07:09:16,112	[INFO]	==== END ====
2020-12-11 07:09:16,113	[INFO]	Reason: target fitness reached
2020-12-11 07:09:16,113	[INFO]	
2020-12-11 07:09:16,113	[INFO]	========== EPOCH 11 ==========
2020-12-11 07:09:16,114	[INFO]	==== WARMUP ====
2020-12-11 07:09:19,222	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 07:09:19,222	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:09:22,304	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 07:09:22,304	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:09:25,462	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 07:09:25,462	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:09:28,526	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-11 07:09:28,526	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:09:28,527	[INFO]	==== START ====
2020-12-11 07:09:29,273	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:09:30,023	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:09:31,142	[INFO]	3	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:09:32,030	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:09:35,137	[INFO]	5	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-11 07:09:36,015	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:09:36,905	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:09:40,055	[INFO]	8	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:09:40,907	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:09:41,791	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:09:42,689	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:09:43,592	[INFO]	12	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:09:44,447	[INFO]	13	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:09:45,208	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:09:48,332	[INFO]	15	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:09:48,333	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-11 07:09:49,238	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:09:52,403	[INFO]	17	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:09:52,404	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 29,35 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 07:09:55,475	[INFO]	18	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:09:55,475	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 07:09:58,560	[INFO]	19	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-11 07:09:58,562	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,22 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 16,22 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node != goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 07:09:58,564	[INFO]	20	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:09:58,566	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 07:09:59,465	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:09:59,468	[INFO]	22	SUCCESS	+1.0	
2020-12-11 07:09:59,468	[DEBUG]	
2020-12-11 07:10:00,356	[INFO]	23	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:10:03,510	[INFO]	24	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:10:04,259	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 07:10:04,987	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:10:08,084	[INFO]	27	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:10:11,132	[INFO]	28	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:10:11,133	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; } }
                      }
                  }
                  return false;

2020-12-11 07:10:11,134	[INFO]	29	SUCCESS	+1.0	
2020-12-11 07:10:11,134	[DEBUG]	
2020-12-11 07:10:11,135	[INFO]	30	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:10:11,896	[INFO]	31	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:10:12,787	[INFO]	32	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:10:15,864	[INFO]	33	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:10:16,794	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:10:20,008	[INFO]	35	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:10:20,009	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-11 07:10:20,009	[INFO]	36	SUCCESS	+1.0	
2020-12-11 07:10:20,010	[DEBUG]	
2020-12-11 07:10:20,867	[INFO]	37	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:10:20,870	[INFO]	38	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:10:21,628	[INFO]	39	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:10:22,526	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:10:25,711	[INFO]	41	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:10:26,425	[INFO]	42	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:10:29,601	[INFO]	43	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:10:30,343	[INFO]	44	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:10:30,345	[INFO]	45	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:10:33,495	[INFO]	46	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:10:33,496	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,28 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (nodesvisited.contains(node)) {
+                     return false;
+                 }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-11 07:10:33,498	[INFO]	47	SUCCESS	+1.0	
2020-12-11 07:10:33,498	[DEBUG]	
2020-12-11 07:10:34,458	[INFO]	48	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:10:35,548	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:10:36,851	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:10:40,941	[INFO]	51	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:10:40,942	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-11 07:10:42,223	[INFO]	52	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:10:42,225	[INFO]	53	SUCCESS	+1.0	
2020-12-11 07:10:42,226	[DEBUG]	
2020-12-11 07:10:45,919	[INFO]	54	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:10:45,920	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,23 ****
--- 18,26 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }

2020-12-11 07:10:47,162	[INFO]	55	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 07:10:50,563	[INFO]	56	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:10:50,567	[INFO]	57	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:10:50,569	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,23 ****
--- 18,26 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }

2020-12-11 07:10:51,533	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:10:51,536	[INFO]	59	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:10:51,538	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,23 ****
--- 18,26 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }

2020-12-11 07:10:52,495	[INFO]	60	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:10:52,498	[INFO]	61	SUCCESS	+1.0	
2020-12-11 07:10:52,498	[DEBUG]	
2020-12-11 07:10:53,267	[INFO]	62	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:10:53,271	[INFO]	63	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:10:53,272	[DEBUG]	
2020-12-11 07:10:53,978	[INFO]	64	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:10:53,979	[INFO]	65	SUCCESS	+1.0	
2020-12-11 07:10:53,979	[DEBUG]	
2020-12-11 07:10:57,126	[INFO]	66	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:10:57,127	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-11 07:10:57,128	[INFO]	==== END ====
2020-12-11 07:10:57,128	[INFO]	Reason: target fitness reached
2020-12-11 07:10:57,128	[INFO]	
2020-12-11 07:10:57,128	[INFO]	========== EPOCH 12 ==========
2020-12-11 07:10:57,129	[INFO]	==== WARMUP ====
2020-12-11 07:11:00,212	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 07:11:00,212	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:11:03,327	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 07:11:03,327	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:11:06,402	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 07:11:06,402	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:11:09,477	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-11 07:11:09,477	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:11:09,478	[INFO]	==== START ====
2020-12-11 07:11:12,613	[INFO]	1	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:11:12,616	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-11 07:11:13,341	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:11:13,344	[INFO]	3	SUCCESS	+1.0	
2020-12-11 07:11:13,345	[DEBUG]	
2020-12-11 07:11:14,219	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:11:15,148	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:11:18,343	[INFO]	6	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:11:18,344	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-11 07:11:18,346	[INFO]	7	SUCCESS	+1.0	
2020-12-11 07:11:18,346	[DEBUG]	
2020-12-11 07:11:19,177	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:11:20,052	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:11:20,917	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:11:20,918	[INFO]	11	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:11:20,918	[DEBUG]	
2020-12-11 07:11:21,650	[INFO]	12	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:11:21,651	[INFO]	13	SUCCESS	+1.0	
2020-12-11 07:11:21,651	[DEBUG]	
2020-12-11 07:11:22,410	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:11:23,234	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:11:24,136	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 07:11:24,876	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:11:25,619	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:11:26,517	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:11:29,728	[INFO]	20	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:11:29,729	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-11 07:11:29,731	[INFO]	21	SUCCESS	+1.0	
2020-12-11 07:11:29,731	[DEBUG]	
2020-12-11 07:11:30,609	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:11:31,363	[INFO]	23	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:11:32,242	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:11:35,313	[INFO]	25	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:11:38,439	[INFO]	26	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:11:41,583	[INFO]	27	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:11:41,584	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  return false;
              }
          };

2020-12-11 07:11:44,693	[INFO]	28	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:11:44,694	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,27 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
              }
--- 20,31 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
+                 }
+                 if (nodesvisited.contains(node)) {
+                     return false;
                  }
                  return false;
              }

2020-12-11 07:11:44,695	[INFO]	29	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:11:44,695	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  return false;
              }
          };

2020-12-11 07:11:44,696	[INFO]	30	SUCCESS	+1.0	
2020-12-11 07:11:44,696	[DEBUG]	
2020-12-11 07:11:47,785	[INFO]	31	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:11:47,786	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 07:11:48,676	[INFO]	32	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:11:49,579	[INFO]	33	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:11:49,582	[INFO]	34	SUCCESS	+1.0	
2020-12-11 07:11:49,582	[DEBUG]	
2020-12-11 07:11:50,521	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:11:51,258	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 07:11:52,171	[INFO]	37	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-11 07:11:53,069	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:11:56,311	[INFO]	39	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:11:56,313	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,28 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (nodesvisited.contains(node)) {
+                     return false;
+                 }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-11 07:11:57,177	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:11:57,178	[INFO]	41	SUCCESS	+1.0	
2020-12-11 07:11:57,178	[DEBUG]	
2020-12-11 07:11:57,179	[INFO]	42	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:11:58,099	[INFO]	43	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:11:59,004	[INFO]	44	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:11:59,743	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:12:02,919	[INFO]	46	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:12:03,806	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:12:04,712	[INFO]	48	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:12:04,716	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:12:05,660	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:12:06,412	[INFO]	51	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:12:07,326	[INFO]	52	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:12:10,454	[INFO]	53	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:12:10,456	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; } }
                      }
                  }
                  return false;

2020-12-11 07:12:10,457	[INFO]	54	SUCCESS	+1.0	
2020-12-11 07:12:10,458	[DEBUG]	
2020-12-11 07:12:13,576	[INFO]	55	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:12:16,669	[INFO]	56	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:12:16,671	[INFO]	57	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:12:19,797	[INFO]	58	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:12:20,535	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:12:21,436	[INFO]	60	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:12:22,304	[INFO]	61	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:12:25,503	[INFO]	62	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:12:25,504	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-11 07:12:28,519	[INFO]	63	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:12:28,520	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,26 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 15,30 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
! return true; }
                      }
                  }
                  return false;

2020-12-11 07:12:28,521	[INFO]	64	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:12:28,521	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-11 07:12:28,522	[INFO]	65	SUCCESS	+1.0	
2020-12-11 07:12:28,522	[DEBUG]	
2020-12-11 07:12:29,423	[INFO]	66	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:12:30,356	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:12:33,499	[INFO]	68	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:12:33,500	[INFO]	69	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:12:33,501	[DEBUG]	
2020-12-11 07:12:33,501	[INFO]	70	SUCCESS	+1.0	
2020-12-11 07:12:33,501	[DEBUG]	
2020-12-11 07:12:36,615	[INFO]	71	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:12:39,771	[INFO]	72	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:12:39,773	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Search s = new Search();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-11 07:12:42,994	[INFO]	73	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:12:42,997	[INFO]	74	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:12:42,999	[INFO]	75	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:12:43,000	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Search s = new Search();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-11 07:12:43,002	[INFO]	76	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:12:43,002	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Search s = new Search();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-11 07:12:43,871	[INFO]	77	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:12:43,872	[INFO]	78	SUCCESS	+1.0	
2020-12-11 07:12:43,872	[DEBUG]	
2020-12-11 07:12:44,751	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:12:45,691	[INFO]	80	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:12:45,695	[INFO]	81	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:12:46,549	[INFO]	82	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:12:46,551	[INFO]	83	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:12:46,551	[DEBUG]	
2020-12-11 07:12:47,465	[INFO]	84	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:12:48,362	[INFO]	85	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 07:12:49,248	[INFO]	86	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:12:50,168	[INFO]	87	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:12:50,171	[INFO]	88	SUCCESS	+1.0	
2020-12-11 07:12:50,172	[DEBUG]	
2020-12-11 07:12:51,083	[INFO]	89	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:12:51,084	[INFO]	90	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:12:51,085	[DEBUG]	
2020-12-11 07:12:54,137	[INFO]	91	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:12:54,138	[INFO]	92	SUCCESS	+1.0	
2020-12-11 07:12:54,139	[DEBUG]	
2020-12-11 07:12:57,336	[INFO]	93	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:12:57,338	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-11 07:12:57,340	[INFO]	94	SUCCESS	+1.0	
2020-12-11 07:12:57,340	[DEBUG]	
2020-12-11 07:13:00,479	[INFO]	95	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:13:01,211	[INFO]	96	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:13:01,970	[INFO]	97	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:13:02,878	[INFO]	98	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 07:13:03,789	[INFO]	99	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-11 07:13:03,793	[INFO]	100	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:13:04,577	[INFO]	101	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:13:05,478	[INFO]	102	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 07:13:06,389	[INFO]	103	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:13:07,325	[INFO]	104	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:13:07,326	[INFO]	105	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:13:07,327	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-11 07:13:07,327	[INFO]	106	SUCCESS	+1.0	
2020-12-11 07:13:07,328	[DEBUG]	
2020-12-11 07:13:08,094	[INFO]	107	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:13:09,019	[INFO]	108	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:13:12,119	[INFO]	109	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:13:12,120	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-11 07:13:12,121	[INFO]	==== END ====
2020-12-11 07:13:12,121	[INFO]	Reason: target fitness reached
2020-12-11 07:13:12,121	[INFO]	
2020-12-11 07:13:12,121	[INFO]	========== EPOCH 13 ==========
2020-12-11 07:13:12,122	[INFO]	==== WARMUP ====
2020-12-11 07:13:15,258	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 07:13:15,259	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:13:18,339	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 07:13:18,339	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:13:21,446	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 07:13:21,446	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:13:24,548	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-11 07:13:24,548	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:13:24,548	[INFO]	==== START ====
2020-12-11 07:13:25,449	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:13:28,635	[INFO]	2	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:13:31,670	[INFO]	3	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:13:31,672	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,28 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (nodesvisited.contains(node)) {
+                     return false;
+                 }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-11 07:13:31,673	[INFO]	4	SUCCESS	+1.0	
2020-12-11 07:13:31,673	[DEBUG]	
2020-12-11 07:13:32,563	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:13:33,489	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:13:34,388	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 07:13:35,144	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:13:38,240	[INFO]	9	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:13:39,113	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 07:13:42,259	[INFO]	11	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:13:42,260	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-11 07:13:43,157	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:13:43,158	[INFO]	13	SUCCESS	+1.0	
2020-12-11 07:13:43,159	[DEBUG]	
2020-12-11 07:13:44,262	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 07:13:45,171	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 07:13:46,111	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:13:46,994	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:13:47,757	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:13:48,494	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:13:49,397	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:13:50,327	[INFO]	21	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:13:51,108	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:13:51,995	[INFO]	23	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:13:52,733	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:13:55,891	[INFO]	25	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:13:55,894	[INFO]	26	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:13:55,895	[DEBUG]	
2020-12-11 07:13:56,631	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:13:56,634	[INFO]	28	SUCCESS	+1.0	
2020-12-11 07:13:56,635	[DEBUG]	
2020-12-11 07:13:57,514	[INFO]	29	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:14:00,652	[INFO]	30	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:14:00,654	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-11 07:14:01,577	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:14:01,580	[INFO]	32	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:14:01,581	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-11 07:14:04,654	[INFO]	33	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:14:05,586	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 07:14:06,485	[INFO]	35	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:14:06,487	[INFO]	36	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:14:06,487	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-11 07:14:06,488	[INFO]	37	SUCCESS	+1.0	
2020-12-11 07:14:06,489	[DEBUG]	
2020-12-11 07:14:06,490	[INFO]	38	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:14:06,490	[DEBUG]	
2020-12-11 07:14:06,492	[INFO]	39	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:14:06,492	[INFO]	40	SUCCESS	+1.0	
2020-12-11 07:14:06,493	[DEBUG]	
2020-12-11 07:14:09,720	[INFO]	41	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:14:09,723	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-11 07:14:09,724	[INFO]	42	SUCCESS	+1.0	
2020-12-11 07:14:09,725	[DEBUG]	
2020-12-11 07:14:12,839	[INFO]	43	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:14:12,841	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-11 07:14:12,843	[INFO]	44	SUCCESS	+1.0	
2020-12-11 07:14:12,843	[DEBUG]	
2020-12-11 07:14:13,726	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:14:13,728	[INFO]	46	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:14:13,728	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-11 07:14:13,729	[INFO]	47	SUCCESS	+1.0	
2020-12-11 07:14:13,729	[DEBUG]	
2020-12-11 07:14:14,480	[INFO]	48	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:14:17,611	[INFO]	49	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:14:18,500	[INFO]	50	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:14:19,395	[INFO]	51	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:14:19,397	[INFO]	52	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:14:19,398	[INFO]	53	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:14:20,320	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:14:21,255	[INFO]	55	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:14:22,175	[INFO]	56	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:14:25,186	[INFO]	57	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:14:25,187	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-11 07:14:25,188	[INFO]	58	SUCCESS	+1.0	
2020-12-11 07:14:25,188	[DEBUG]	
2020-12-11 07:14:25,952	[INFO]	59	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:14:29,013	[INFO]	60	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:14:32,074	[INFO]	61	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:14:32,075	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 07:14:32,940	[INFO]	62	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:14:33,833	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:14:33,836	[INFO]	64	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:14:33,837	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 07:14:33,839	[INFO]	65	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:14:33,840	[DEBUG]	
2020-12-11 07:14:33,841	[INFO]	66	SUCCESS	+1.0	
2020-12-11 07:14:33,842	[DEBUG]	
2020-12-11 07:14:34,572	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:14:35,472	[INFO]	68	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:14:36,219	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:14:37,093	[INFO]	70	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:14:37,999	[INFO]	71	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:14:38,927	[INFO]	72	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:14:38,930	[INFO]	73	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:14:39,689	[INFO]	74	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:14:39,690	[INFO]	75	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:14:39,690	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 07:14:40,561	[INFO]	76	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:14:40,563	[INFO]	77	SUCCESS	+1.0	
2020-12-11 07:14:40,563	[DEBUG]	
2020-12-11 07:14:41,483	[INFO]	78	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:14:42,410	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:14:43,181	[INFO]	80	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 07:14:44,060	[INFO]	81	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:14:44,061	[INFO]	82	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:14:44,062	[DEBUG]	
2020-12-11 07:14:44,799	[INFO]	83	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:14:44,800	[INFO]	84	SUCCESS	+1.0	
2020-12-11 07:14:44,800	[DEBUG]	
2020-12-11 07:14:45,523	[INFO]	85	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:14:48,675	[INFO]	86	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:14:48,676	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-11 07:14:51,779	[INFO]	87	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:14:51,780	[INFO]	88	SUCCESS	+1.0	
2020-12-11 07:14:51,780	[DEBUG]	
2020-12-11 07:14:52,671	[INFO]	89	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:14:52,672	[INFO]	90	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:14:52,673	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-11 07:14:52,674	[INFO]	91	SUCCESS	+1.0	
2020-12-11 07:14:52,674	[DEBUG]	
2020-12-11 07:14:55,759	[INFO]	92	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:14:55,761	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-11 07:14:55,764	[INFO]	93	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:14:55,765	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-11 07:14:55,768	[INFO]	94	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:14:55,769	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-11 07:14:55,771	[INFO]	95	SUCCESS	+1.0	
2020-12-11 07:14:55,772	[DEBUG]	
2020-12-11 07:14:58,895	[INFO]	96	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:15:02,034	[INFO]	97	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:15:02,035	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-11 07:15:02,901	[INFO]	98	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:15:02,902	[INFO]	99	SUCCESS	+1.0	
2020-12-11 07:15:02,902	[DEBUG]	
2020-12-11 07:15:03,648	[INFO]	100	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:15:04,371	[INFO]	101	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:15:05,147	[INFO]	102	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:15:05,148	[INFO]	103	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:15:05,148	[DEBUG]	
2020-12-11 07:15:05,149	[INFO]	104	SUCCESS	+1.0	
2020-12-11 07:15:05,149	[DEBUG]	
2020-12-11 07:15:08,299	[INFO]	105	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:15:08,299	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-11 07:15:08,300	[INFO]	106	SUCCESS	+1.0	
2020-12-11 07:15:08,300	[DEBUG]	
2020-12-11 07:15:11,293	[INFO]	107	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:15:11,294	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-11 07:15:11,295	[INFO]	108	SUCCESS	+1.0	
2020-12-11 07:15:11,295	[DEBUG]	
2020-12-11 07:15:14,421	[INFO]	109	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:15:15,315	[INFO]	110	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:15:16,220	[INFO]	111	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:15:16,998	[INFO]	112	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:15:20,109	[INFO]	113	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:15:20,111	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-11 07:15:20,113	[INFO]	114	SUCCESS	+1.0	
2020-12-11 07:15:20,114	[DEBUG]	
2020-12-11 07:15:20,115	[INFO]	115	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:15:20,116	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-11 07:15:21,007	[INFO]	116	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:15:21,010	[INFO]	117	SUCCESS	+1.0	
2020-12-11 07:15:21,010	[DEBUG]	
2020-12-11 07:15:21,947	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:15:22,848	[INFO]	119	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:15:23,566	[INFO]	120	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:15:26,725	[INFO]	121	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:15:26,726	[INFO]	122	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:15:29,812	[INFO]	123	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:15:29,814	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-11 07:15:29,815	[INFO]	124	SUCCESS	+1.0	
2020-12-11 07:15:29,816	[DEBUG]	
2020-12-11 07:15:30,715	[INFO]	125	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:15:30,717	[INFO]	126	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:15:33,820	[INFO]	127	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:15:37,258	[INFO]	128	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:15:37,261	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-11 07:15:37,263	[INFO]	129	SUCCESS	+1.0	
2020-12-11 07:15:37,264	[DEBUG]	
2020-12-11 07:15:38,161	[INFO]	130	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 07:15:38,928	[INFO]	131	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:15:38,931	[INFO]	132	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:15:38,931	[DEBUG]	
2020-12-11 07:15:38,933	[INFO]	133	SUCCESS	+1.0	
2020-12-11 07:15:38,934	[DEBUG]	
2020-12-11 07:15:39,847	[INFO]	134	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:15:40,748	[INFO]	135	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:15:40,751	[INFO]	136	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:15:41,537	[INFO]	137	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:15:42,372	[INFO]	138	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:15:45,492	[INFO]	139	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:15:45,494	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  return false;
              }
          };

2020-12-11 07:15:45,496	[INFO]	140	SUCCESS	+1.0	
2020-12-11 07:15:45,497	[DEBUG]	
2020-12-11 07:15:46,378	[INFO]	141	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:15:47,257	[INFO]	142	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:15:50,440	[INFO]	143	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:15:50,442	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,23 ****
--- 18,26 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }

2020-12-11 07:15:50,443	[INFO]	144	SUCCESS	+1.0	
2020-12-11 07:15:50,443	[DEBUG]	
2020-12-11 07:15:50,444	[INFO]	145	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:15:51,303	[INFO]	146	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:15:51,304	[INFO]	147	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:15:51,305	[DEBUG]	
2020-12-11 07:15:51,306	[INFO]	148	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:15:51,308	[INFO]	149	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 07:15:51,309	[INFO]	150	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:15:52,155	[INFO]	151	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:15:53,051	[INFO]	152	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:15:56,278	[INFO]	153	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:15:56,279	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-11 07:15:56,280	[INFO]	154	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:15:56,281	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-11 07:15:59,320	[INFO]	155	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:15:59,321	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 29,35 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 07:15:59,322	[INFO]	156	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:15:59,322	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 07:15:59,323	[INFO]	157	SUCCESS	+1.0	
2020-12-11 07:15:59,323	[DEBUG]	
2020-12-11 07:16:00,207	[INFO]	158	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:16:01,094	[INFO]	159	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:16:01,887	[INFO]	160	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:16:02,802	[INFO]	161	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:16:03,691	[INFO]	162	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:16:04,583	[INFO]	163	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:16:07,752	[INFO]	164	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:16:07,754	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-11 07:16:10,840	[INFO]	165	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:16:11,757	[INFO]	166	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:16:11,758	[INFO]	167	SUCCESS	+1.0	
2020-12-11 07:16:11,758	[DEBUG]	
2020-12-11 07:16:14,842	[INFO]	168	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:16:14,844	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-11 07:16:14,845	[INFO]	==== END ====
2020-12-11 07:16:14,845	[INFO]	Reason: target fitness reached
2020-12-11 07:16:14,846	[INFO]	
2020-12-11 07:16:14,847	[INFO]	========== EPOCH 14 ==========
2020-12-11 07:16:14,847	[INFO]	==== WARMUP ====
2020-12-11 07:16:17,997	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 07:16:17,998	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:16:21,120	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 07:16:21,120	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:16:24,251	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 07:16:24,252	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:16:27,401	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-11 07:16:27,401	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:16:27,401	[INFO]	==== START ====
2020-12-11 07:16:28,263	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:16:31,397	[INFO]	2	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:16:31,399	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-11 07:16:31,402	[INFO]	3	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:16:31,403	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-11 07:16:32,164	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:16:32,167	[INFO]	5	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:16:32,169	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-11 07:16:32,171	[INFO]	6	SUCCESS	+1.0	
2020-12-11 07:16:32,171	[DEBUG]	
2020-12-11 07:16:35,271	[INFO]	7	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:16:35,271	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-11 07:16:35,272	[INFO]	8	SUCCESS	+1.0	
2020-12-11 07:16:35,272	[DEBUG]	
2020-12-11 07:16:38,339	[INFO]	9	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:16:41,405	[INFO]	10	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:16:42,281	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:16:43,013	[INFO]	12	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:16:43,917	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:16:44,674	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:16:45,409	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:16:46,329	[INFO]	16	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:16:47,209	[INFO]	17	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:16:50,400	[INFO]	18	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:16:50,402	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:16:53,405	[INFO]	20	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:16:54,334	[INFO]	21	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:16:57,439	[INFO]	22	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:16:57,441	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-11 07:16:58,371	[INFO]	23	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:16:58,373	[INFO]	24	SUCCESS	+1.0	
2020-12-11 07:16:58,374	[DEBUG]	
2020-12-11 07:16:59,501	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:17:00,438	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:17:01,355	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:17:04,556	[INFO]	28	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:17:07,645	[INFO]	29	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:17:07,649	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-11 07:17:07,651	[INFO]	30	SUCCESS	+1.0	
2020-12-11 07:17:07,652	[DEBUG]	
2020-12-11 07:17:08,559	[INFO]	31	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:17:09,306	[INFO]	32	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:17:12,386	[INFO]	33	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:17:12,387	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  return false;
              }
          };

2020-12-11 07:17:15,476	[INFO]	34	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:17:15,479	[INFO]	35	SUCCESS	+1.0	
2020-12-11 07:17:15,480	[DEBUG]	
2020-12-11 07:17:16,380	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:17:17,293	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:17:18,213	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:17:19,129	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:17:22,471	[INFO]	40	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:17:22,473	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-11 07:17:22,474	[INFO]	41	SUCCESS	+1.0	
2020-12-11 07:17:22,475	[DEBUG]	
2020-12-11 07:17:23,223	[INFO]	42	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:17:26,416	[INFO]	43	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:17:26,418	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-11 07:17:29,527	[INFO]	44	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:17:29,528	[INFO]	45	SUCCESS	+1.0	
2020-12-11 07:17:29,528	[DEBUG]	
2020-12-11 07:17:30,244	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:17:31,143	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:17:34,274	[INFO]	48	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:17:34,276	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-11 07:17:35,014	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:17:35,015	[INFO]	50	SUCCESS	+1.0	
2020-12-11 07:17:35,015	[DEBUG]	
2020-12-11 07:17:35,928	[INFO]	51	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:17:36,661	[INFO]	52	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 07:17:37,556	[INFO]	53	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:17:38,364	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:17:41,492	[INFO]	55	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:17:41,494	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-11 07:17:44,838	[INFO]	56	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:17:44,839	[INFO]	57	SUCCESS	+1.0	
2020-12-11 07:17:44,839	[DEBUG]	
2020-12-11 07:17:45,583	[INFO]	58	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:17:46,464	[INFO]	59	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:17:49,605	[INFO]	60	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:17:49,606	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,23 ****
--- 18,26 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }

2020-12-11 07:17:52,652	[INFO]	61	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:17:52,653	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,22 ****
--- 14,26 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     return true;
+                 }
+ else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-11 07:17:52,654	[INFO]	62	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:17:52,655	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,23 ****
--- 18,26 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }

2020-12-11 07:17:55,742	[INFO]	63	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:17:55,743	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,22 ****
--- 15,26 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return false;
                  } else if (node == goalnode) {
+                     return true;
+                 }
+ else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-11 07:17:55,744	[INFO]	64	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:17:55,744	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,23 ****
--- 18,26 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }

2020-12-11 07:17:55,745	[INFO]	65	SUCCESS	+1.0	
2020-12-11 07:17:55,745	[DEBUG]	
2020-12-11 07:17:58,834	[INFO]	66	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:17:59,692	[INFO]	67	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:17:59,694	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:18:00,606	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:18:01,496	[INFO]	70	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:18:02,421	[INFO]	71	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:18:03,354	[INFO]	72	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:18:04,275	[INFO]	73	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:18:07,494	[INFO]	74	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:18:07,496	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,22 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 16,25 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-11 07:18:07,498	[INFO]	75	SUCCESS	+1.0	
2020-12-11 07:18:07,499	[DEBUG]	
2020-12-11 07:18:08,454	[INFO]	76	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:18:09,369	[INFO]	77	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:18:10,250	[INFO]	78	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:18:11,145	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:18:14,304	[INFO]	80	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:18:14,307	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-11 07:18:17,401	[INFO]	81	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:18:17,403	[INFO]	82	SUCCESS	+1.0	
2020-12-11 07:18:17,404	[DEBUG]	
2020-12-11 07:18:20,490	[INFO]	83	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:18:20,491	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-11 07:18:23,553	[INFO]	84	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:18:23,554	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,28 ****
--- 17,32 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-11 07:18:24,429	[INFO]	85	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:18:25,208	[INFO]	86	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:18:25,212	[INFO]	87	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:18:25,213	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-11 07:18:25,215	[INFO]	88	SUCCESS	+1.0	
2020-12-11 07:18:25,216	[DEBUG]	
2020-12-11 07:18:25,219	[INFO]	89	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:18:26,114	[INFO]	90	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:18:27,004	[INFO]	91	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 07:18:27,914	[INFO]	92	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:18:28,646	[INFO]	93	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:18:29,392	[INFO]	94	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:18:30,172	[INFO]	95	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:18:30,934	[INFO]	96	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:18:31,686	[INFO]	97	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:18:32,562	[INFO]	98	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:18:33,337	[INFO]	99	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:18:36,427	[INFO]	100	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:18:36,428	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-11 07:18:36,429	[INFO]	101	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:18:36,430	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-11 07:18:36,431	[INFO]	102	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:18:36,431	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-11 07:18:37,361	[INFO]	103	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 07:18:38,241	[INFO]	104	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:18:38,985	[INFO]	105	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:18:38,986	[INFO]	106	SUCCESS	+1.0	
2020-12-11 07:18:38,986	[DEBUG]	
2020-12-11 07:18:39,899	[INFO]	107	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:18:40,834	[INFO]	108	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:18:40,837	[INFO]	109	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:18:40,838	[DEBUG]	
2020-12-11 07:18:41,711	[INFO]	110	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:18:42,474	[INFO]	111	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:18:42,475	[INFO]	112	SUCCESS	+1.0	
2020-12-11 07:18:42,476	[DEBUG]	
2020-12-11 07:18:43,359	[INFO]	113	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:18:44,105	[INFO]	114	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:18:44,845	[INFO]	115	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:18:45,558	[INFO]	116	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:18:48,619	[INFO]	117	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:18:48,621	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Search s = new Search();
! return true; }
                      }
                  }
                  return false;

2020-12-11 07:18:48,622	[INFO]	118	SUCCESS	+1.0	
2020-12-11 07:18:48,623	[DEBUG]	
2020-12-11 07:18:51,857	[INFO]	119	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:18:51,859	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-11 07:18:51,860	[INFO]	120	SUCCESS	+1.0	
2020-12-11 07:18:51,860	[DEBUG]	
2020-12-11 07:18:52,696	[INFO]	121	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:18:53,575	[INFO]	122	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:18:54,483	[INFO]	123	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:18:55,409	[INFO]	124	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:18:56,160	[INFO]	125	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:18:57,033	[INFO]	126	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:18:57,942	[INFO]	127	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:19:00,996	[INFO]	128	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:19:00,997	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 07:19:00,997	[INFO]	129	SUCCESS	+1.0	
2020-12-11 07:19:00,998	[DEBUG]	
2020-12-11 07:19:01,743	[INFO]	130	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:19:05,020	[INFO]	131	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:19:05,022	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-11 07:19:05,891	[INFO]	132	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:19:05,892	[INFO]	133	SUCCESS	+1.0	
2020-12-11 07:19:05,893	[DEBUG]	
2020-12-11 07:19:05,894	[INFO]	134	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:19:06,742	[INFO]	135	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:19:07,502	[INFO]	136	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:19:08,406	[INFO]	137	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:19:09,167	[INFO]	138	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:19:10,083	[INFO]	139	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 07:19:11,006	[INFO]	140	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:19:11,750	[INFO]	141	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:19:14,865	[INFO]	142	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:19:15,797	[INFO]	143	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:19:16,694	[INFO]	144	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:19:17,470	[INFO]	145	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 07:19:20,596	[INFO]	146	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:19:20,597	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
! return true; }
                      }
                  }
                  return false;

2020-12-11 07:19:20,598	[INFO]	147	SUCCESS	+1.0	
2020-12-11 07:19:20,599	[DEBUG]	
2020-12-11 07:19:21,484	[INFO]	148	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:19:21,487	[INFO]	149	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:19:21,488	[DEBUG]	
2020-12-11 07:19:21,491	[INFO]	150	SUCCESS	+1.0	
2020-12-11 07:19:21,492	[DEBUG]	
2020-12-11 07:19:24,636	[INFO]	151	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:19:25,352	[INFO]	152	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:19:25,355	[INFO]	153	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:19:26,241	[INFO]	154	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 07:19:29,309	[INFO]	155	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:19:30,231	[INFO]	156	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:19:30,971	[INFO]	157	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:19:31,853	[INFO]	158	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:19:34,982	[INFO]	159	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:19:35,876	[INFO]	160	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 07:19:39,061	[INFO]	161	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:19:39,063	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-11 07:19:39,917	[INFO]	162	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:19:40,844	[INFO]	163	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-11 07:19:40,845	[INFO]	164	SUCCESS	+1.0	
2020-12-11 07:19:40,845	[DEBUG]	
2020-12-11 07:19:41,586	[INFO]	165	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:19:41,588	[INFO]	166	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:19:44,718	[INFO]	167	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:19:45,580	[INFO]	168	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:19:46,474	[INFO]	169	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:19:47,216	[INFO]	170	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:19:48,127	[INFO]	171	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:19:48,882	[INFO]	172	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:19:48,883	[INFO]	173	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:19:48,884	[DEBUG]	
2020-12-11 07:19:48,884	[INFO]	174	SUCCESS	+1.0	
2020-12-11 07:19:48,885	[DEBUG]	
2020-12-11 07:19:52,057	[INFO]	175	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:19:52,059	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
+                 }
+                 if (nodesvisited.contains(node)) {
+                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-11 07:19:52,927	[INFO]	176	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:19:52,928	[INFO]	177	SUCCESS	+1.0	
2020-12-11 07:19:52,929	[DEBUG]	
2020-12-11 07:19:53,836	[INFO]	178	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:19:54,598	[INFO]	179	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:19:57,739	[INFO]	180	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:19:57,741	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-11 07:19:57,745	[INFO]	181	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:19:57,748	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-11 07:19:57,761	[INFO]	182	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:19:57,763	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-11 07:19:58,578	[INFO]	183	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:19:59,511	[INFO]	184	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 07:20:00,404	[INFO]	185	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:20:00,405	[INFO]	186	SUCCESS	+1.0	
2020-12-11 07:20:00,405	[DEBUG]	
2020-12-11 07:20:00,406	[INFO]	187	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:20:01,300	[INFO]	188	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:20:02,225	[INFO]	189	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:20:03,085	[INFO]	190	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:20:03,086	[INFO]	191	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:20:03,086	[DEBUG]	
2020-12-11 07:20:06,206	[INFO]	192	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:20:06,209	[INFO]	193	SUCCESS	+1.0	
2020-12-11 07:20:06,210	[DEBUG]	
2020-12-11 07:20:06,980	[INFO]	194	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:20:10,181	[INFO]	195	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:20:11,060	[INFO]	196	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:20:14,172	[INFO]	197	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:20:17,335	[INFO]	198	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:20:17,336	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-11 07:20:18,245	[INFO]	199	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:20:19,147	[INFO]	200	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:20:19,148	[INFO]	201	SUCCESS	+1.0	
2020-12-11 07:20:19,148	[DEBUG]	
2020-12-11 07:20:19,897	[INFO]	202	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:20:19,898	[INFO]	203	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:20:20,800	[INFO]	204	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:20:21,699	[INFO]	205	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:20:22,597	[INFO]	206	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:20:25,642	[INFO]	207	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:20:28,747	[INFO]	208	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:20:29,676	[INFO]	209	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:20:30,577	[INFO]	210	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:20:31,488	[INFO]	211	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:20:34,594	[INFO]	212	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:20:38,358	[INFO]	213	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:20:38,359	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-11 07:20:39,388	[INFO]	214	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:20:39,389	[INFO]	215	SUCCESS	+1.0	
2020-12-11 07:20:39,389	[DEBUG]	
2020-12-11 07:20:40,332	[INFO]	216	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:20:41,281	[INFO]	217	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:20:42,182	[INFO]	218	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:20:43,069	[INFO]	219	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:20:46,185	[INFO]	220	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:20:46,186	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,22 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 16,25 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-11 07:20:49,323	[INFO]	221	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:20:49,324	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,22 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 16,25 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 31,37 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 07:20:49,325	[INFO]	222	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:20:49,326	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,22 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 16,25 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-11 07:20:50,156	[INFO]	223	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:20:50,157	[INFO]	224	SUCCESS	+1.0	
2020-12-11 07:20:50,158	[DEBUG]	
2020-12-11 07:20:50,159	[INFO]	225	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:20:50,906	[INFO]	226	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:20:53,990	[INFO]	227	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:20:53,991	[INFO]	228	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:20:53,992	[DEBUG]	
2020-12-11 07:20:53,992	[INFO]	229	SUCCESS	+1.0	
2020-12-11 07:20:53,992	[DEBUG]	
2020-12-11 07:20:53,993	[INFO]	230	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:20:57,214	[INFO]	231	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:20:57,935	[INFO]	232	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:20:58,808	[INFO]	233	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:20:59,715	[INFO]	234	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:21:02,823	[INFO]	235	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:21:05,948	[INFO]	236	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:21:05,950	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-11 07:21:05,951	[INFO]	237	SUCCESS	+1.0	
2020-12-11 07:21:05,951	[DEBUG]	
2020-12-11 07:21:06,717	[INFO]	238	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:21:09,993	[INFO]	239	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:21:09,993	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-11 07:21:10,761	[INFO]	240	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:21:10,762	[INFO]	241	SUCCESS	+1.0	
2020-12-11 07:21:10,763	[DEBUG]	
2020-12-11 07:21:10,764	[INFO]	242	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:21:10,764	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-11 07:21:10,765	[INFO]	243	SUCCESS	+1.0	
2020-12-11 07:21:10,765	[DEBUG]	
2020-12-11 07:21:11,664	[INFO]	244	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:21:12,532	[INFO]	245	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:21:15,633	[INFO]	246	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:21:16,529	[INFO]	247	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:21:17,270	[INFO]	248	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:21:17,272	[INFO]	249	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:21:17,272	[DEBUG]	
2020-12-11 07:21:18,154	[INFO]	250	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 07:21:18,155	[INFO]	251	SUCCESS	+1.0	
2020-12-11 07:21:18,155	[DEBUG]	
2020-12-11 07:21:18,924	[INFO]	252	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:21:19,872	[INFO]	253	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:21:22,960	[INFO]	254	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:21:26,082	[INFO]	255	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:21:26,084	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-11 07:21:26,086	[INFO]	256	SUCCESS	+1.0	
2020-12-11 07:21:26,086	[DEBUG]	
2020-12-11 07:21:29,234	[INFO]	257	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:21:29,236	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  return false;
              }
          };

2020-12-11 07:21:32,432	[INFO]	258	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:21:32,433	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,27 ****
--- 15,32 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
                      return false;
+                 }
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                 }
+                 if (nodesvisited.contains(node)) {
+                     return false;
                  }
                  return false;
              }

2020-12-11 07:21:32,434	[INFO]	259	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:21:32,434	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  return false;
              }
          };

2020-12-11 07:21:32,435	[INFO]	260	SUCCESS	+1.0	
2020-12-11 07:21:32,435	[DEBUG]	
2020-12-11 07:21:33,315	[INFO]	261	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-11 07:21:36,412	[INFO]	262	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:21:36,414	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-11 07:21:36,416	[INFO]	263	SUCCESS	+1.0	
2020-12-11 07:21:36,416	[DEBUG]	
2020-12-11 07:21:37,331	[INFO]	264	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:21:38,091	[INFO]	265	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 07:21:38,094	[INFO]	266	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:21:38,832	[INFO]	267	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:21:39,719	[INFO]	268	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:21:40,619	[INFO]	269	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:21:40,620	[INFO]	270	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:21:43,773	[INFO]	271	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:21:46,940	[INFO]	272	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:21:46,942	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 21,26 ****
--- 21,27 ----
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+ 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;

2020-12-11 07:21:46,943	[INFO]	273	SUCCESS	+1.0	
2020-12-11 07:21:46,943	[DEBUG]	
2020-12-11 07:21:47,673	[INFO]	274	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:21:48,414	[INFO]	275	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:21:51,513	[INFO]	276	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:21:52,243	[INFO]	277	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:21:55,370	[INFO]	278	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:21:55,371	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-11 07:21:55,373	[INFO]	279	SUCCESS	+1.0	
2020-12-11 07:21:55,373	[DEBUG]	
2020-12-11 07:21:56,284	[INFO]	280	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:21:57,168	[INFO]	281	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:21:57,944	[INFO]	282	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:22:01,052	[INFO]	283	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:22:01,053	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
                      return false;
+                 }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-11 07:22:01,054	[INFO]	284	SUCCESS	+1.0	
2020-12-11 07:22:01,054	[DEBUG]	
2020-12-11 07:22:01,928	[INFO]	285	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:22:02,821	[INFO]	286	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:22:03,594	[INFO]	287	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:22:06,766	[INFO]	288	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:22:06,768	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-11 07:22:07,686	[INFO]	289	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:22:07,687	[INFO]	290	SUCCESS	+1.0	
2020-12-11 07:22:07,687	[DEBUG]	
2020-12-11 07:22:08,431	[INFO]	291	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:22:09,178	[INFO]	292	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:22:09,182	[INFO]	293	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:22:09,183	[INFO]	294	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:22:09,184	[DEBUG]	
2020-12-11 07:22:10,084	[INFO]	295	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:22:10,819	[INFO]	296	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:22:11,571	[INFO]	297	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:22:11,574	[INFO]	298	SUCCESS	+1.0	
2020-12-11 07:22:11,575	[DEBUG]	
2020-12-11 07:22:14,636	[INFO]	299	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:22:14,637	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-11 07:22:14,639	[INFO]	300	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:22:14,639	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-11 07:22:15,394	[INFO]	301	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:22:15,398	[INFO]	302	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:22:15,399	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-11 07:22:16,276	[INFO]	303	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:22:17,033	[INFO]	304	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:22:17,929	[INFO]	305	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:22:18,815	[INFO]	306	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:22:19,598	[INFO]	307	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:22:19,604	[INFO]	308	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:22:19,605	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-11 07:22:22,726	[INFO]	309	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:22:23,618	[INFO]	310	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:22:24,545	[INFO]	311	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:22:27,655	[INFO]	312	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:22:27,656	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,28 ****
--- 17,32 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-11 07:22:27,658	[INFO]	313	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:22:27,659	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,28 ****
--- 17,32 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-11 07:22:30,788	[INFO]	314	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:22:30,791	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,28 ****
--- 17,35 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-11 07:22:31,690	[INFO]	315	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:22:34,809	[INFO]	316	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:22:34,812	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,28 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
              }
          };
--- 15,35 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     return true;
+                 } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
                      return false;
!                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-11 07:22:35,706	[INFO]	317	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:22:35,708	[INFO]	318	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:22:35,708	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,28 ****
--- 17,35 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-11 07:22:36,601	[INFO]	319	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:22:37,357	[INFO]	320	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:22:37,359	[INFO]	321	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:22:37,360	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,28 ****
--- 17,35 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-11 07:22:37,361	[INFO]	322	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:22:37,362	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,28 ****
--- 17,35 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-11 07:22:38,123	[INFO]	323	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:22:39,086	[INFO]	324	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:22:39,088	[INFO]	325	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:22:39,088	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,28 ****
--- 17,32 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-11 07:22:39,089	[INFO]	326	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:22:39,090	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,28 ****
--- 17,32 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-11 07:22:39,091	[INFO]	327	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:22:39,091	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,28 ****
--- 17,32 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-11 07:22:39,985	[INFO]	328	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:22:39,986	[INFO]	329	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:22:39,987	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,28 ****
--- 17,32 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-11 07:22:39,988	[INFO]	330	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:22:39,989	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,28 ****
--- 17,32 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-11 07:22:39,990	[INFO]	331	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:22:39,990	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-11 07:22:43,081	[INFO]	332	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:22:43,992	[INFO]	333	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:22:44,893	[INFO]	334	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:22:44,895	[INFO]	335	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:22:44,895	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-11 07:22:44,896	[INFO]	336	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:22:44,897	[INFO]	337	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:22:44,897	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-11 07:22:44,898	[INFO]	338	SUCCESS	+1.0	
2020-12-11 07:22:44,898	[DEBUG]	
2020-12-11 07:22:45,644	[INFO]	339	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:22:46,537	[INFO]	340	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 07:22:47,422	[INFO]	341	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:22:48,207	[INFO]	342	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:22:49,106	[INFO]	343	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:22:52,361	[INFO]	344	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:22:53,246	[INFO]	345	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:22:54,139	[INFO]	346	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:22:55,025	[INFO]	347	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 07:22:55,934	[INFO]	348	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:22:56,842	[INFO]	349	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:22:57,747	[INFO]	350	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:22:58,662	[INFO]	351	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:22:58,666	[INFO]	352	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:22:59,598	[INFO]	353	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:22:59,601	[INFO]	354	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:23:02,808	[INFO]	355	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:23:02,810	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-11 07:23:02,812	[INFO]	356	SUCCESS	+1.0	
2020-12-11 07:23:02,812	[DEBUG]	
2020-12-11 07:23:03,707	[INFO]	357	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 07:23:04,617	[INFO]	358	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:23:07,844	[INFO]	359	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:23:08,546	[INFO]	360	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:23:09,408	[INFO]	361	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:23:10,304	[INFO]	362	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:23:11,073	[INFO]	363	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:23:11,970	[INFO]	364	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:23:15,137	[INFO]	365	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:23:18,350	[INFO]	366	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:23:18,351	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-11 07:23:19,206	[INFO]	367	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:23:22,248	[INFO]	368	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:23:22,249	[INFO]	369	SUCCESS	+1.0	
2020-12-11 07:23:22,249	[DEBUG]	
2020-12-11 07:23:22,990	[INFO]	370	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:23:23,736	[INFO]	371	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:23:24,509	[INFO]	372	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:23:25,405	[INFO]	373	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:23:26,321	[INFO]	374	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:23:26,323	[INFO]	375	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:23:27,067	[INFO]	376	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:23:27,954	[INFO]	377	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:23:27,955	[INFO]	378	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:23:27,956	[DEBUG]	
2020-12-11 07:23:27,956	[INFO]	379	SUCCESS	+1.0	
2020-12-11 07:23:27,957	[DEBUG]	
2020-12-11 07:23:28,859	[INFO]	380	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:23:29,802	[INFO]	381	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:23:30,559	[INFO]	382	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:23:31,458	[INFO]	383	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:23:32,234	[INFO]	384	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:23:35,354	[INFO]	385	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:23:35,355	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-11 07:23:35,357	[INFO]	386	SUCCESS	+1.0	
2020-12-11 07:23:35,358	[DEBUG]	
2020-12-11 07:23:38,489	[INFO]	387	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:23:38,491	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,28 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (nodesvisited.contains(node)) {
+                     return false;
+                 }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-11 07:23:39,253	[INFO]	388	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:23:39,255	[INFO]	389	SUCCESS	+1.0	
2020-12-11 07:23:39,256	[DEBUG]	
2020-12-11 07:23:40,140	[INFO]	390	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:23:40,143	[INFO]	391	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:23:40,144	[DEBUG]	
2020-12-11 07:23:41,038	[INFO]	392	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:23:41,039	[INFO]	393	SUCCESS	+1.0	
2020-12-11 07:23:41,039	[DEBUG]	
2020-12-11 07:23:41,944	[INFO]	394	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:23:45,187	[INFO]	395	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:23:45,190	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-11 07:23:45,192	[INFO]	396	SUCCESS	+1.0	
2020-12-11 07:23:45,193	[DEBUG]	
2020-12-11 07:23:46,047	[INFO]	397	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:23:46,958	[INFO]	398	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:23:47,710	[INFO]	399	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:23:50,843	[INFO]	400	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:23:50,845	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-11 07:23:51,747	[INFO]	401	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:23:52,627	[INFO]	402	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:23:52,628	[INFO]	403	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:23:52,629	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-11 07:23:53,554	[INFO]	404	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:23:56,675	[INFO]	405	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:23:57,571	[INFO]	406	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:23:57,573	[INFO]	407	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:23:57,573	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-11 07:23:58,501	[INFO]	408	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:23:59,392	[INFO]	409	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 07:24:00,168	[INFO]	410	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:24:00,172	[INFO]	411	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:24:01,083	[INFO]	412	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:24:04,298	[INFO]	413	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:24:07,469	[INFO]	414	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:24:10,658	[INFO]	415	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:24:10,664	[INFO]	416	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:24:10,666	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-11 07:24:11,403	[INFO]	417	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:24:11,408	[INFO]	418	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:24:11,410	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-11 07:24:14,429	[INFO]	419	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:24:14,430	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,24 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
--- 15,25 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-11 07:24:14,432	[INFO]	420	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:24:14,432	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,24 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
--- 15,25 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-11 07:24:14,434	[INFO]	421	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:24:14,434	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-11 07:24:14,435	[INFO]	422	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:24:15,360	[INFO]	423	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:24:15,364	[INFO]	424	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:24:15,365	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-11 07:24:15,367	[INFO]	425	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:24:15,368	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-11 07:24:16,272	[INFO]	426	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:24:17,170	[INFO]	427	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:24:20,317	[INFO]	428	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:24:21,201	[INFO]	429	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:24:21,202	[INFO]	430	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:24:21,202	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-11 07:24:21,203	[INFO]	431	SUCCESS	+1.0	
2020-12-11 07:24:21,203	[DEBUG]	
2020-12-11 07:24:24,310	[INFO]	432	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:24:24,312	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-11 07:24:24,314	[INFO]	433	SUCCESS	+1.0	
2020-12-11 07:24:24,315	[DEBUG]	
2020-12-11 07:24:27,394	[INFO]	434	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:24:28,309	[INFO]	435	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:24:29,046	[INFO]	436	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:24:30,004	[INFO]	437	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:24:33,106	[INFO]	438	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:24:33,107	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-11 07:24:33,109	[INFO]	439	SUCCESS	+1.0	
2020-12-11 07:24:33,109	[DEBUG]	
2020-12-11 07:24:36,245	[INFO]	440	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:24:39,307	[INFO]	441	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:24:39,308	[INFO]	442	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:24:39,309	[INFO]	443	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:24:40,235	[INFO]	444	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:24:41,149	[INFO]	445	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:24:42,024	[INFO]	446	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:24:42,890	[INFO]	447	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:24:43,796	[INFO]	448	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:24:46,961	[INFO]	449	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:24:46,963	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  return false;
              }
          };

2020-12-11 07:24:46,964	[INFO]	450	SUCCESS	+1.0	
2020-12-11 07:24:46,965	[DEBUG]	
2020-12-11 07:24:47,860	[INFO]	451	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:24:48,772	[INFO]	452	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:24:51,903	[INFO]	453	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:24:51,905	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-11 07:24:52,616	[INFO]	454	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:24:52,617	[INFO]	455	SUCCESS	+1.0	
2020-12-11 07:24:52,617	[DEBUG]	
2020-12-11 07:24:55,676	[INFO]	456	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:24:55,679	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; } }
                      }
                  }
                  return false;

2020-12-11 07:24:55,681	[INFO]	457	SUCCESS	+1.0	
2020-12-11 07:24:55,682	[DEBUG]	
2020-12-11 07:24:56,434	[INFO]	458	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:24:57,314	[INFO]	459	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:24:57,315	[INFO]	460	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:24:58,225	[INFO]	461	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:24:58,968	[INFO]	462	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:25:02,094	[INFO]	463	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:25:02,095	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-11 07:25:02,096	[INFO]	464	SUCCESS	+1.0	
2020-12-11 07:25:02,097	[DEBUG]	
2020-12-11 07:25:05,250	[INFO]	465	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:25:05,251	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,23 ****
--- 18,26 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }

2020-12-11 07:25:05,253	[INFO]	466	SUCCESS	+1.0	
2020-12-11 07:25:05,253	[DEBUG]	
2020-12-11 07:25:05,254	[INFO]	467	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:25:05,255	[DEBUG]	
2020-12-11 07:25:05,256	[INFO]	468	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:25:05,257	[INFO]	469	SUCCESS	+1.0	
2020-12-11 07:25:05,257	[DEBUG]	
2020-12-11 07:25:08,330	[INFO]	470	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:25:08,331	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 07:25:11,469	[INFO]	471	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:25:11,470	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 07:25:12,333	[INFO]	472	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:25:12,334	[INFO]	473	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:25:12,334	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 07:25:12,335	[INFO]	474	SUCCESS	+1.0	
2020-12-11 07:25:12,335	[DEBUG]	
2020-12-11 07:25:13,222	[INFO]	475	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:25:14,304	[INFO]	476	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:25:15,066	[INFO]	477	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:25:15,069	[INFO]	478	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:25:15,071	[DEBUG]	
2020-12-11 07:25:18,258	[INFO]	479	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:25:19,196	[INFO]	480	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:25:19,199	[INFO]	481	SUCCESS	+1.0	
2020-12-11 07:25:19,200	[DEBUG]	
2020-12-11 07:25:19,962	[INFO]	482	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:25:20,856	[INFO]	483	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:25:23,924	[INFO]	484	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:25:23,925	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
! return true; }
                      }
                  }
                  return false;

2020-12-11 07:25:24,837	[INFO]	485	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:25:25,744	[INFO]	486	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:25:25,747	[INFO]	487	SUCCESS	+1.0	
2020-12-11 07:25:25,747	[DEBUG]	
2020-12-11 07:25:26,647	[INFO]	488	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:25:29,821	[INFO]	489	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:25:30,723	[INFO]	490	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:25:30,724	[INFO]	491	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:25:30,724	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 07:25:31,445	[INFO]	492	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:25:34,573	[INFO]	493	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:25:34,574	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,28 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (nodesvisited.contains(node)) {
!                     return false;
!                 }
                      }
                  }
                  return false;
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 30,36 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 07:25:35,539	[INFO]	494	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:25:38,705	[INFO]	495	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:25:38,705	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,34 ****
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  }
                  return false;
              }
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 19,32 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     Search s = new Search();
                  }
                  return false;
              }
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 07:25:41,758	[INFO]	496	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:25:42,678	[INFO]	497	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:25:43,419	[INFO]	498	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:25:43,420	[INFO]	499	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:25:43,421	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,28 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (nodesvisited.contains(node)) {
!                     return false;
!                 }
                      }
                  }
                  return false;
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 30,36 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 07:25:43,421	[INFO]	500	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:25:43,422	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 07:25:43,422	[INFO]	==== END ====
2020-12-11 07:25:43,422	[INFO]	Reason: step budget
2020-12-11 07:25:43,423	[INFO]	
2020-12-11 07:25:43,423	[INFO]	========== EPOCH 15 ==========
2020-12-11 07:25:43,423	[INFO]	==== WARMUP ====
2020-12-11 07:25:46,580	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 07:25:46,580	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:25:49,699	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 07:25:49,699	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:25:52,854	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 07:25:52,854	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:25:55,979	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-11 07:25:55,980	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:25:55,981	[INFO]	==== START ====
2020-12-11 07:25:56,766	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:25:57,511	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:25:58,256	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:25:59,150	[INFO]	4	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-11 07:26:00,145	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:26:00,979	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:26:01,888	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:26:05,033	[INFO]	8	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:26:05,807	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:26:06,691	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:26:07,619	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:26:07,620	[INFO]	12	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:26:07,621	[DEBUG]	
2020-12-11 07:26:07,621	[INFO]	13	SUCCESS	+1.0	
2020-12-11 07:26:07,622	[DEBUG]	
2020-12-11 07:26:08,614	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:26:09,573	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:26:12,892	[INFO]	16	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:26:13,724	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:26:14,449	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:26:15,214	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:26:16,090	[INFO]	20	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:26:16,964	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:26:17,885	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 07:26:18,830	[INFO]	23	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:26:22,006	[INFO]	24	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:26:22,008	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,22 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 16,25 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-11 07:26:22,010	[INFO]	25	SUCCESS	+1.0	
2020-12-11 07:26:22,011	[DEBUG]	
2020-12-11 07:26:25,119	[INFO]	26	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:26:25,119	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-11 07:26:28,227	[INFO]	27	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:26:28,228	[INFO]	28	SUCCESS	+1.0	
2020-12-11 07:26:28,229	[DEBUG]	
2020-12-11 07:26:28,230	[INFO]	29	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 07:26:28,230	[INFO]	30	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:26:29,107	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 07:26:29,109	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:26:29,110	[INFO]	33	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:26:30,076	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:26:30,990	[INFO]	35	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:26:30,992	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:26:34,085	[INFO]	37	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:26:34,983	[INFO]	38	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:26:34,985	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:26:38,138	[INFO]	40	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:26:38,139	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-11 07:26:38,140	[INFO]	41	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:26:38,141	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-11 07:26:38,854	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:26:42,002	[INFO]	43	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:26:42,004	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,22 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 15,25 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     return true;
+                 } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
                      return false;
!                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-11 07:26:45,097	[INFO]	44	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:26:45,870	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:26:45,874	[INFO]	46	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:26:45,876	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-11 07:26:46,770	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:26:46,771	[INFO]	48	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:26:47,520	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:26:47,523	[INFO]	50	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:26:47,524	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-11 07:26:48,419	[INFO]	51	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:26:49,317	[INFO]	52	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:26:52,430	[INFO]	53	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:26:52,432	[INFO]	54	SUCCESS	+1.0	
2020-12-11 07:26:52,433	[DEBUG]	
2020-12-11 07:26:53,336	[INFO]	55	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:26:56,487	[INFO]	56	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:26:56,488	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,23 ****
--- 18,26 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }

2020-12-11 07:26:56,489	[INFO]	57	SUCCESS	+1.0	
2020-12-11 07:26:56,489	[DEBUG]	
2020-12-11 07:26:57,187	[INFO]	58	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:26:57,954	[INFO]	59	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:26:58,838	[INFO]	60	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:27:01,964	[INFO]	61	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:27:01,965	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-11 07:27:02,839	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:27:03,586	[INFO]	63	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:27:06,789	[INFO]	64	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:27:06,791	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,26 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 14,29 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    
                      }
                  }
                  return false;

2020-12-11 07:27:06,793	[INFO]	65	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:27:06,794	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-11 07:27:09,985	[INFO]	66	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:27:09,987	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,25 ****
--- 14,31 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (nodesvisited.contains(node)) {
+                     return false;
+                 }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-11 07:27:13,155	[INFO]	67	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:27:13,156	[INFO]	68	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:27:13,157	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,25 ****
--- 14,31 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (nodesvisited.contains(node)) {
+                     return false;
+                 }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-11 07:27:14,051	[INFO]	69	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:27:17,195	[INFO]	70	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:27:17,196	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,26 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 14,32 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! 	                    if (search(successornodes)) {  }
                      }
                  }
                  return false;

2020-12-11 07:27:17,197	[INFO]	71	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:27:17,197	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,25 ****
--- 14,31 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (nodesvisited.contains(node)) {
+                     return false;
+                 }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-11 07:27:17,926	[INFO]	72	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:27:17,930	[INFO]	73	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:27:17,931	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-11 07:27:18,799	[INFO]	74	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:27:19,694	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:27:19,696	[INFO]	76	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:27:19,697	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-11 07:27:19,698	[INFO]	77	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:27:19,698	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-11 07:27:19,699	[INFO]	78	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:27:19,699	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-11 07:27:20,436	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:27:21,348	[INFO]	80	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:27:21,349	[INFO]	81	SUCCESS	+1.0	
2020-12-11 07:27:21,350	[DEBUG]	
2020-12-11 07:27:24,582	[INFO]	82	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:27:25,296	[INFO]	83	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:27:26,152	[INFO]	84	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:27:29,194	[INFO]	85	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:27:29,195	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 07:27:29,196	[INFO]	86	SUCCESS	+1.0	
2020-12-11 07:27:29,196	[DEBUG]	
2020-12-11 07:27:32,332	[INFO]	87	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:27:32,332	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Set<Node> nodesvisited = new HashSet<>();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-11 07:27:35,480	[INFO]	88	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:27:35,482	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,24 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
--- 15,27 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Set<Node> nodesvisited = new HashSet<>();
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-11 07:27:36,377	[INFO]	89	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:27:36,378	[INFO]	90	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:27:36,379	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Set<Node> nodesvisited = new HashSet<>();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-11 07:27:36,379	[INFO]	91	SUCCESS	+1.0	
2020-12-11 07:27:36,380	[DEBUG]	
2020-12-11 07:27:37,284	[INFO]	92	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:27:37,285	[INFO]	93	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:27:38,199	[INFO]	94	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:27:39,001	[INFO]	95	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:27:42,270	[INFO]	96	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:27:42,271	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-11 07:27:43,003	[INFO]	97	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:27:43,006	[INFO]	98	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:27:43,006	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-11 07:27:43,873	[INFO]	99	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:27:47,205	[INFO]	100	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:27:47,208	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,28 ****
--- 19,30 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-11 07:27:48,091	[INFO]	101	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:27:48,092	[INFO]	102	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:27:48,093	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-11 07:27:49,006	[INFO]	103	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:27:49,008	[INFO]	104	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:27:49,009	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-11 07:27:52,214	[INFO]	105	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:27:53,050	[INFO]	106	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:27:53,052	[INFO]	107	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:27:53,052	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-11 07:27:53,053	[INFO]	108	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:27:53,054	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-11 07:27:56,111	[INFO]	109	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:27:56,112	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,26 ****
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 19,29 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-11 07:27:56,112	[INFO]	==== END ====
2020-12-11 07:27:56,113	[INFO]	Reason: target fitness reached
2020-12-11 07:27:56,113	[INFO]	
2020-12-11 07:27:56,114	[INFO]	========== EPOCH 16 ==========
2020-12-11 07:27:56,114	[INFO]	==== WARMUP ====
2020-12-11 07:27:59,208	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 07:27:59,209	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:28:02,293	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 07:28:02,293	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:28:05,417	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 07:28:05,417	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:28:08,530	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-11 07:28:08,531	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:28:08,531	[INFO]	==== START ====
2020-12-11 07:28:08,534	[INFO]	1	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:28:08,535	[DEBUG]	
2020-12-11 07:28:09,298	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:28:10,184	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 07:28:10,186	[INFO]	4	SUCCESS	+1.0	
2020-12-11 07:28:10,187	[DEBUG]	
2020-12-11 07:28:10,188	[INFO]	5	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:28:10,189	[DEBUG]	
2020-12-11 07:28:10,191	[INFO]	6	SUCCESS	+1.0	
2020-12-11 07:28:10,192	[DEBUG]	
2020-12-11 07:28:13,355	[INFO]	7	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:28:13,356	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Search s = new Search();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-11 07:28:14,248	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:28:14,250	[INFO]	9	SUCCESS	+1.0	
2020-12-11 07:28:14,251	[DEBUG]	
2020-12-11 07:28:15,155	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:28:16,040	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:28:16,940	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:28:16,942	[INFO]	13	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:28:16,942	[DEBUG]	
2020-12-11 07:28:20,141	[INFO]	14	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:28:20,143	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-11 07:28:21,014	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:28:21,909	[INFO]	16	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:28:21,913	[INFO]	17	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:28:21,915	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-11 07:28:21,916	[INFO]	18	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:28:21,918	[DEBUG]	
2020-12-11 07:28:22,849	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:28:22,850	[INFO]	20	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:28:22,851	[DEBUG]	
2020-12-11 07:28:22,851	[INFO]	21	SUCCESS	+1.0	
2020-12-11 07:28:22,852	[DEBUG]	
2020-12-11 07:28:25,928	[INFO]	22	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:28:25,929	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-11 07:28:25,930	[INFO]	23	SUCCESS	+1.0	
2020-12-11 07:28:25,930	[DEBUG]	
2020-12-11 07:28:28,997	[INFO]	24	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:28:28,998	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
                  return false;
              }

2020-12-11 07:28:29,936	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:28:33,154	[INFO]	26	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:28:33,155	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,24 ****
--- 17,28 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-11 07:28:33,156	[INFO]	27	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:28:33,156	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
                  return false;
              }

2020-12-11 07:28:33,157	[INFO]	28	SUCCESS	+1.0	
2020-12-11 07:28:33,157	[DEBUG]	
2020-12-11 07:28:34,022	[INFO]	29	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:28:37,281	[INFO]	30	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:28:37,283	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Search s = new Search();
! return true; }
                      }
                  }
                  return false;

2020-12-11 07:28:38,145	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:28:38,146	[INFO]	32	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:28:38,147	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Search s = new Search();
! return true; }
                      }
                  }
                  return false;

2020-12-11 07:28:41,227	[INFO]	33	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:28:41,228	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; } }
                      }
                  }
                  return false;

2020-12-11 07:28:41,230	[INFO]	34	SUCCESS	+1.0	
2020-12-11 07:28:41,230	[DEBUG]	
2020-12-11 07:28:42,107	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:28:43,011	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:28:43,920	[INFO]	37	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:28:47,086	[INFO]	38	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:28:50,224	[INFO]	39	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:28:51,087	[INFO]	40	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:28:54,260	[INFO]	41	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:28:54,262	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-11 07:28:55,148	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:28:55,149	[INFO]	43	SUCCESS	+1.0	
2020-12-11 07:28:55,149	[DEBUG]	
2020-12-11 07:28:55,889	[INFO]	44	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:28:56,648	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:28:56,654	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:28:56,656	[INFO]	47	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:28:56,658	[DEBUG]	
2020-12-11 07:28:57,530	[INFO]	48	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:28:58,400	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:28:58,401	[INFO]	50	SUCCESS	+1.0	
2020-12-11 07:28:58,402	[DEBUG]	
2020-12-11 07:29:01,510	[INFO]	51	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:29:02,385	[INFO]	52	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:29:03,299	[INFO]	53	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:29:04,201	[INFO]	54	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:29:07,398	[INFO]	55	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:29:07,398	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 07:29:10,458	[INFO]	56	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:29:10,459	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,34 ****
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  }
                  return false;
              }
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 19,32 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     Search s = new Search();
                  }
                  return false;
              }
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 07:29:11,335	[INFO]	57	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:29:14,554	[INFO]	58	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:29:15,416	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:29:16,300	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-11 07:29:19,461	[INFO]	61	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:29:19,463	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 07:29:22,469	[INFO]	62	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:29:22,470	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 07:29:25,562	[INFO]	63	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:29:25,562	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-11 07:29:25,563	[INFO]	==== END ====
2020-12-11 07:29:25,563	[INFO]	Reason: target fitness reached
2020-12-11 07:29:25,563	[INFO]	
2020-12-11 07:29:25,564	[INFO]	========== EPOCH 17 ==========
2020-12-11 07:29:25,564	[INFO]	==== WARMUP ====
2020-12-11 07:29:28,677	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 07:29:28,677	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:29:31,746	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 07:29:31,746	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:29:34,856	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 07:29:34,857	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:29:37,922	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-11 07:29:37,922	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:29:37,922	[INFO]	==== START ====
2020-12-11 07:29:38,827	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:29:42,162	[INFO]	2	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:29:42,164	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,23 ****
--- 18,26 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }

2020-12-11 07:29:42,166	[INFO]	3	SUCCESS	+1.0	
2020-12-11 07:29:42,166	[DEBUG]	
2020-12-11 07:29:45,218	[INFO]	4	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:29:45,219	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; } }
                      }
                  }
                  return false;

2020-12-11 07:29:45,220	[INFO]	5	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:29:45,221	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; } }
                      }
                  }
                  return false;

2020-12-11 07:29:46,083	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:29:46,085	[INFO]	7	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:29:46,086	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; } }
                      }
                  }
                  return false;

2020-12-11 07:29:46,970	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:29:46,971	[INFO]	9	SUCCESS	+1.0	
2020-12-11 07:29:46,971	[DEBUG]	
2020-12-11 07:29:47,895	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:29:48,766	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:29:49,525	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:29:50,443	[INFO]	13	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:29:50,445	[INFO]	14	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:29:50,446	[DEBUG]	
2020-12-11 07:29:51,340	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:29:54,516	[INFO]	16	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:29:54,517	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-11 07:29:55,371	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 07:29:55,372	[INFO]	18	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:29:55,373	[DEBUG]	
2020-12-11 07:29:56,255	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:29:56,256	[INFO]	20	SUCCESS	+1.0	
2020-12-11 07:29:56,256	[DEBUG]	
2020-12-11 07:29:59,372	[INFO]	21	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:29:59,373	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-11 07:30:00,279	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:30:01,183	[INFO]	23	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:30:01,184	[INFO]	24	SUCCESS	+1.0	
2020-12-11 07:30:01,185	[DEBUG]	
2020-12-11 07:30:02,088	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:30:03,027	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:30:03,782	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:30:06,891	[INFO]	28	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:30:06,893	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
                      return false;
+                 }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-11 07:30:07,761	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:30:10,972	[INFO]	30	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:30:10,974	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,26 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 15,29 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
                      return false;
+                 }
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
! return true; }
                      }
                  }
                  return false;

2020-12-11 07:30:10,975	[INFO]	31	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:30:10,976	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
                      return false;
+                 }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-11 07:30:10,976	[INFO]	32	SUCCESS	+1.0	
2020-12-11 07:30:10,977	[DEBUG]	
2020-12-11 07:30:14,049	[INFO]	33	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:30:14,927	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:30:15,809	[INFO]	35	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:30:18,811	[INFO]	36	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:30:18,812	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-11 07:30:18,812	[INFO]	==== END ====
2020-12-11 07:30:18,812	[INFO]	Reason: target fitness reached
2020-12-11 07:30:18,813	[INFO]	
2020-12-11 07:30:18,813	[INFO]	========== EPOCH 18 ==========
2020-12-11 07:30:18,814	[INFO]	==== WARMUP ====
2020-12-11 07:30:22,039	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 07:30:22,039	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:30:25,072	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 07:30:25,072	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:30:28,292	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 07:30:28,293	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:30:31,411	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-11 07:30:31,411	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:30:31,411	[INFO]	==== START ====
2020-12-11 07:30:32,147	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:30:35,302	[INFO]	2	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:30:36,497	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:30:40,484	[INFO]	4	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:30:40,487	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
                  return false;
              }

2020-12-11 07:30:40,489	[INFO]	5	SUCCESS	+1.0	
2020-12-11 07:30:40,490	[DEBUG]	
2020-12-11 07:30:44,306	[INFO]	6	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:30:44,308	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  return false;
              }
          };

2020-12-11 07:30:45,060	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 07:30:45,063	[INFO]	8	SUCCESS	+1.0	
2020-12-11 07:30:45,064	[DEBUG]	
2020-12-11 07:30:46,274	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:30:47,377	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:30:48,178	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:30:49,086	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:30:49,990	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:30:50,849	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:30:51,739	[INFO]	15	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-11 07:30:52,655	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:30:55,844	[INFO]	17	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:30:55,846	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-11 07:30:58,962	[INFO]	18	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:30:58,963	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,26 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 15,30 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
! return true; }
                      }
                  }
                  return false;

2020-12-11 07:31:02,209	[INFO]	19	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:31:02,211	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
! return true; }
                      }
                  }
                  return false;

2020-12-11 07:31:05,265	[INFO]	20	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:31:05,267	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 21,26 ****
--- 21,28 ----
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+ 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
+ return true; }
                      }
                  }
                  return false;

2020-12-11 07:31:06,048	[INFO]	21	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:31:06,050	[INFO]	22	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:31:06,050	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
! return true; }
                      }
                  }
                  return false;

2020-12-11 07:31:06,051	[INFO]	23	SUCCESS	+1.0	
2020-12-11 07:31:06,051	[DEBUG]	
2020-12-11 07:31:09,199	[INFO]	24	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:31:09,951	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:31:10,843	[INFO]	26	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-11 07:31:11,744	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:31:12,663	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:31:15,840	[INFO]	29	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:31:15,841	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-11 07:31:16,733	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:31:16,734	[INFO]	31	SUCCESS	+1.0	
2020-12-11 07:31:16,734	[DEBUG]	
2020-12-11 07:31:17,504	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:31:18,384	[INFO]	33	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:31:19,285	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:31:20,212	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:31:21,118	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:31:21,121	[INFO]	37	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:31:21,121	[DEBUG]	
2020-12-11 07:31:21,123	[INFO]	38	SUCCESS	+1.0	
2020-12-11 07:31:21,123	[DEBUG]	
2020-12-11 07:31:22,037	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:31:25,143	[INFO]	40	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:31:25,144	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-11 07:31:26,057	[INFO]	41	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:31:26,058	[INFO]	42	SUCCESS	+1.0	
2020-12-11 07:31:26,058	[DEBUG]	
2020-12-11 07:31:27,064	[INFO]	43	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:31:27,882	[INFO]	44	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:31:28,800	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:31:29,575	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:31:30,506	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:31:31,535	[INFO]	48	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:31:31,536	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:31:34,831	[INFO]	50	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:31:34,833	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Search s = new Search();
! return true; }
                      }
                  }
                  return false;

2020-12-11 07:31:34,835	[INFO]	51	SUCCESS	+1.0	
2020-12-11 07:31:34,835	[DEBUG]	
2020-12-11 07:31:37,918	[INFO]	52	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:31:37,919	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-11 07:31:38,820	[INFO]	53	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:31:38,822	[INFO]	54	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:31:38,822	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-11 07:31:39,733	[INFO]	55	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:31:39,735	[INFO]	56	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:31:39,735	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-11 07:31:40,497	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:31:41,396	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:31:41,398	[INFO]	59	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:31:41,398	[DEBUG]	
2020-12-11 07:31:42,319	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:31:43,248	[INFO]	61	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:31:43,250	[INFO]	62	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:31:43,251	[DEBUG]	
2020-12-11 07:31:43,252	[INFO]	63	SUCCESS	+1.0	
2020-12-11 07:31:43,253	[DEBUG]	
2020-12-11 07:31:44,148	[INFO]	64	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:31:44,149	[INFO]	65	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:31:45,076	[INFO]	66	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:31:48,234	[INFO]	67	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:31:49,118	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:31:49,862	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:31:50,750	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 07:31:51,474	[INFO]	71	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:31:51,477	[INFO]	72	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:31:52,360	[INFO]	73	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:31:55,485	[INFO]	74	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:31:55,487	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,23 ****
--- 18,26 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }

2020-12-11 07:31:55,490	[INFO]	75	SUCCESS	+1.0	
2020-12-11 07:31:55,491	[DEBUG]	
2020-12-11 07:31:58,714	[INFO]	76	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:31:59,381	[INFO]	77	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:31:59,383	[INFO]	78	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:31:59,383	[DEBUG]	
2020-12-11 07:31:59,384	[INFO]	79	SUCCESS	+1.0	
2020-12-11 07:31:59,384	[DEBUG]	
2020-12-11 07:32:00,292	[INFO]	80	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:32:00,295	[INFO]	81	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:32:01,033	[INFO]	82	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:32:01,932	[INFO]	83	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:32:05,122	[INFO]	84	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:32:05,125	[INFO]	85	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:32:05,125	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-11 07:32:05,999	[INFO]	86	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:32:06,000	[INFO]	87	SUCCESS	+1.0	
2020-12-11 07:32:06,000	[DEBUG]	
2020-12-11 07:32:06,894	[INFO]	88	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:32:07,830	[INFO]	89	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:32:08,754	[INFO]	90	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:32:08,755	[INFO]	91	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:32:08,756	[DEBUG]	
2020-12-11 07:32:08,756	[INFO]	92	SUCCESS	+1.0	
2020-12-11 07:32:08,757	[DEBUG]	
2020-12-11 07:32:08,757	[INFO]	93	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:32:08,758	[DEBUG]	
2020-12-11 07:32:09,653	[INFO]	94	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:32:10,561	[INFO]	95	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:32:10,565	[INFO]	96	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:32:10,566	[DEBUG]	
2020-12-11 07:32:10,568	[INFO]	97	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:32:10,569	[DEBUG]	
2020-12-11 07:32:10,571	[INFO]	98	SUCCESS	+1.0	
2020-12-11 07:32:10,572	[DEBUG]	
2020-12-11 07:32:11,498	[INFO]	99	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:32:12,428	[INFO]	100	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:32:12,429	[INFO]	101	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:32:13,344	[INFO]	102	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:32:16,432	[INFO]	103	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:32:16,433	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-11 07:32:16,433	[INFO]	==== END ====
2020-12-11 07:32:16,433	[INFO]	Reason: target fitness reached
2020-12-11 07:32:16,434	[INFO]	
2020-12-11 07:32:16,434	[INFO]	========== EPOCH 19 ==========
2020-12-11 07:32:16,434	[INFO]	==== WARMUP ====
2020-12-11 07:32:19,554	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 07:32:19,555	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:32:22,667	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 07:32:22,668	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:32:25,801	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 07:32:25,801	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:32:28,915	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-11 07:32:28,915	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:32:28,915	[INFO]	==== START ====
2020-12-11 07:32:29,797	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:32:30,701	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:32:33,836	[INFO]	3	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:32:33,837	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 07:32:36,913	[INFO]	4	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:32:36,914	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,23 ****
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
!                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
!                     Search s = new Search();
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 07:32:39,997	[INFO]	5	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:32:39,999	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,24 ****
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
!                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
!                     Search s = new Search();
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 29,35 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 07:32:40,909	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:32:40,913	[INFO]	7	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:32:40,915	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,23 ****
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
!                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
!                     Search s = new Search();
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 07:32:41,665	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:32:44,749	[INFO]	9	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:32:45,641	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:32:46,561	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:32:47,482	[INFO]	12	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-11 07:32:48,395	[INFO]	13	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:32:48,397	[INFO]	14	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:32:48,397	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 07:32:48,398	[INFO]	15	SUCCESS	+1.0	
2020-12-11 07:32:48,398	[DEBUG]	
2020-12-11 07:32:51,606	[INFO]	16	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:32:51,608	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
! return true; }
                      }
                  }
                  return false;

2020-12-11 07:32:51,610	[INFO]	17	SUCCESS	+1.0	
2020-12-11 07:32:51,611	[DEBUG]	
2020-12-11 07:32:54,730	[INFO]	18	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:32:54,732	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-11 07:32:54,734	[INFO]	19	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:32:54,735	[DEBUG]	
2020-12-11 07:32:57,806	[INFO]	20	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:32:57,808	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-11 07:32:57,810	[INFO]	21	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:32:57,811	[DEBUG]	
2020-12-11 07:33:01,003	[INFO]	22	SUCCESS	*0.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:33:01,004	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-11 07:33:01,004	[INFO]	==== END ====
2020-12-11 07:33:01,004	[INFO]	Reason: target fitness reached
2020-12-11 07:33:01,005	[INFO]	
2020-12-11 07:33:01,005	[INFO]	========== EPOCH 20 ==========
2020-12-11 07:33:01,006	[INFO]	==== WARMUP ====
2020-12-11 07:33:04,063	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 07:33:04,063	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:33:07,267	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 07:33:07,267	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:33:10,379	[INFO]	WARM	SUCCESS	 1.0	
2020-12-11 07:33:10,380	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:33:13,500	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-11 07:33:13,500	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-11 07:33:13,500	[INFO]	==== START ====
2020-12-11 07:33:14,338	[INFO]	1	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:33:15,239	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:33:16,128	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:33:19,322	[INFO]	4	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:33:20,190	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:33:23,330	[INFO]	6	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:33:23,332	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-11 07:33:26,459	[INFO]	7	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:33:26,461	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,22 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 15,25 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-11 07:33:29,665	[INFO]	8	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:33:29,668	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,22 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 14,26 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-11 07:33:30,522	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:33:33,694	[INFO]	10	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:33:33,697	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,21 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 14,24 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-11 07:33:34,777	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:33:34,779	[INFO]	12	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:33:34,779	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,21 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 14,24 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-11 07:33:35,541	[INFO]	13	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:33:35,542	[INFO]	14	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:33:35,543	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,21 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 14,24 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-11 07:33:36,465	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:33:39,588	[INFO]	16	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:33:42,743	[INFO]	17	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:33:42,744	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-11 07:33:42,745	[INFO]	18	SUCCESS	+1.0	
2020-12-11 07:33:42,745	[DEBUG]	
2020-12-11 07:33:43,611	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:33:43,612	[INFO]	20	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:33:43,612	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-11 07:33:43,613	[INFO]	21	SUCCESS	+1.0	
2020-12-11 07:33:43,614	[DEBUG]	
2020-12-11 07:33:44,349	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:33:45,111	[INFO]	23	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:33:45,113	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:33:48,256	[INFO]	25	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:33:48,258	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-11 07:33:48,995	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:33:48,996	[INFO]	27	SUCCESS	+1.0	
2020-12-11 07:33:48,996	[DEBUG]	
2020-12-11 07:33:49,907	[INFO]	28	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:33:52,975	[INFO]	29	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:33:56,045	[INFO]	30	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:33:59,154	[INFO]	31	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:33:59,157	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-11 07:33:59,159	[INFO]	32	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:33:59,160	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-11 07:34:00,081	[INFO]	33	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:34:00,084	[INFO]	34	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:34:00,085	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-11 07:34:00,086	[INFO]	35	SUCCESS	+1.0	
2020-12-11 07:34:00,087	[DEBUG]	
2020-12-11 07:34:03,245	[INFO]	36	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:34:04,129	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:34:05,016	[INFO]	38	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-11 07:34:08,131	[INFO]	39	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:34:08,132	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; } }
                      }
                  }
                  return false;

2020-12-11 07:34:08,133	[INFO]	40	SUCCESS	+1.0	
2020-12-11 07:34:08,133	[DEBUG]	
2020-12-11 07:34:11,261	[INFO]	41	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:34:12,126	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:34:12,130	[INFO]	43	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:34:12,896	[INFO]	44	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:34:12,899	[INFO]	45	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:34:12,900	[DEBUG]	
2020-12-11 07:34:13,759	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:34:13,760	[INFO]	47	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:34:13,760	[DEBUG]	
2020-12-11 07:34:14,500	[INFO]	48	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:34:14,503	[INFO]	49	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:34:14,504	[DEBUG]	
2020-12-11 07:34:14,506	[INFO]	50	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:34:14,507	[DEBUG]	
2020-12-11 07:34:14,508	[INFO]	51	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:34:14,508	[DEBUG]	
2020-12-11 07:34:14,509	[INFO]	52	SUCCESS	+1.0	
2020-12-11 07:34:14,510	[DEBUG]	
2020-12-11 07:34:17,698	[INFO]	53	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:34:17,700	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  return false;
              }
          };

2020-12-11 07:34:20,731	[INFO]	54	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:34:20,732	[INFO]	55	SUCCESS	+1.0	
2020-12-11 07:34:20,732	[DEBUG]	
2020-12-11 07:34:21,654	[INFO]	56	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-11 07:34:21,655	[INFO]	57	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:34:22,407	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:34:23,332	[INFO]	59	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:34:26,409	[INFO]	60	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:34:26,411	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 21,26 ****
--- 21,27 ----
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+ 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;

2020-12-11 07:34:26,413	[INFO]	61	SUCCESS	+1.0	
2020-12-11 07:34:26,414	[DEBUG]	
2020-12-11 07:34:26,416	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:34:27,346	[INFO]	63	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:34:28,098	[INFO]	64	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:34:28,953	[INFO]	65	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:34:29,730	[INFO]	66	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:34:30,617	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:34:33,788	[INFO]	68	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:34:33,790	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
+                 }
+                 if (nodesvisited.contains(node)) {
+                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-11 07:34:33,792	[INFO]	69	SUCCESS	+1.0	
2020-12-11 07:34:33,793	[DEBUG]	
2020-12-11 07:34:34,706	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:34:35,588	[INFO]	71	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:34:36,479	[INFO]	72	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:34:37,384	[INFO]	73	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:34:38,314	[INFO]	74	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:34:39,118	[INFO]	75	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:34:42,198	[INFO]	76	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:34:42,198	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-11 07:34:42,199	[INFO]	77	SUCCESS	+1.0	
2020-12-11 07:34:42,199	[DEBUG]	
2020-12-11 07:34:42,200	[INFO]	78	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:34:42,201	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:34:43,085	[INFO]	80	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:34:43,982	[INFO]	81	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 07:34:47,181	[INFO]	82	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:34:47,183	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,23 ****
--- 18,26 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }

2020-12-11 07:34:47,184	[INFO]	83	SUCCESS	+1.0	
2020-12-11 07:34:47,185	[DEBUG]	
2020-12-11 07:34:48,046	[INFO]	84	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:34:51,137	[INFO]	85	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:34:54,396	[INFO]	86	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:34:54,398	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Search s = new Search();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-11 07:34:54,399	[INFO]	87	SUCCESS	+1.0	
2020-12-11 07:34:54,400	[DEBUG]	
2020-12-11 07:34:54,402	[INFO]	88	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:34:55,268	[INFO]	89	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 07:34:58,348	[INFO]	90	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:34:59,252	[INFO]	91	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:34:59,995	[INFO]	92	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 07:35:00,904	[INFO]	93	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:35:01,795	[INFO]	94	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:35:04,907	[INFO]	95	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:35:05,676	[INFO]	96	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:35:06,427	[INFO]	97	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:35:06,431	[INFO]	98	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:35:07,330	[INFO]	99	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:35:08,229	[INFO]	100	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:35:08,230	[INFO]	101	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:35:08,231	[DEBUG]	
2020-12-11 07:35:08,232	[INFO]	102	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 07:35:08,232	[INFO]	103	SUCCESS	+1.0	
2020-12-11 07:35:08,233	[DEBUG]	
2020-12-11 07:35:09,161	[INFO]	104	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 07:35:09,165	[INFO]	105	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:35:09,167	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-11 07:35:09,169	[INFO]	106	SUCCESS	+1.0	
2020-12-11 07:35:09,170	[DEBUG]	
2020-12-11 07:35:09,172	[INFO]	107	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:35:12,306	[INFO]	108	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:35:12,307	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-11 07:35:12,308	[INFO]	109	SUCCESS	+1.0	
2020-12-11 07:35:12,308	[DEBUG]	
2020-12-11 07:35:15,444	[INFO]	110	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-11 07:35:16,268	[INFO]	111	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:35:19,334	[INFO]	112	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:35:22,518	[INFO]	113	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:35:22,519	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Search s = new Search();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-11 07:35:22,520	[INFO]	114	SUCCESS	+1.0	
2020-12-11 07:35:22,520	[DEBUG]	
2020-12-11 07:35:25,609	[INFO]	115	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:35:28,709	[INFO]	116	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:35:28,710	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-11 07:35:28,710	[INFO]	117	SUCCESS	+1.0	
2020-12-11 07:35:28,711	[DEBUG]	
2020-12-11 07:35:29,632	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:35:30,564	[INFO]	119	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:35:33,629	[INFO]	120	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:35:33,630	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-11 07:35:34,548	[INFO]	121	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:35:34,549	[INFO]	122	SUCCESS	+1.0	
2020-12-11 07:35:34,549	[DEBUG]	
2020-12-11 07:35:35,417	[INFO]	123	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:35:35,419	[INFO]	124	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:35:35,420	[DEBUG]	
2020-12-11 07:35:35,422	[INFO]	125	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:35:35,423	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Search s = new Search();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-11 07:35:35,425	[INFO]	126	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-11 07:35:35,426	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Search s = new Search();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-11 07:35:38,529	[INFO]	127	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:35:38,530	[INFO]	128	SUCCESS	+1.0	
2020-12-11 07:35:38,530	[DEBUG]	
2020-12-11 07:35:41,738	[INFO]	129	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:35:41,741	[INFO]	130	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:35:41,741	[DEBUG]	
2020-12-11 07:35:41,742	[INFO]	131	SUCCESS	+1.0	
2020-12-11 07:35:41,742	[DEBUG]	
2020-12-11 07:35:42,611	[INFO]	132	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:35:43,376	[INFO]	133	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:35:46,477	[INFO]	134	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:35:46,478	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 07:35:49,555	[INFO]	135	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:35:49,556	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,24 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
!                     return true;
!                 } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
--- 16,22 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 }  else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 26,32 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 07:35:52,665	[INFO]	136	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:35:52,666	[INFO]	137	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:35:52,667	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,24 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
!                     return true;
!                 } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
--- 16,22 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 }  else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 26,32 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 07:35:52,667	[INFO]	138	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:35:52,668	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 07:35:55,730	[INFO]	139	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:35:55,731	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 31,37 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 07:35:55,733	[INFO]	140	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:35:55,733	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-11 07:35:55,734	[INFO]	141	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:35:55,734	[DEBUG]	
2020-12-11 07:35:55,735	[INFO]	142	SUCCESS	+1.0	
2020-12-11 07:35:55,735	[DEBUG]	
2020-12-11 07:35:56,636	[INFO]	143	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:35:56,638	[INFO]	144	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:35:57,576	[INFO]	145	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:36:00,767	[INFO]	146	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:36:00,769	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-11 07:36:00,771	[INFO]	147	SUCCESS	+1.0	
2020-12-11 07:36:00,772	[DEBUG]	
2020-12-11 07:36:03,826	[INFO]	148	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:36:03,829	[INFO]	149	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:36:04,544	[INFO]	150	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:36:05,469	[INFO]	151	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:36:06,347	[INFO]	152	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:36:06,350	[INFO]	153	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:36:06,352	[INFO]	154	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:36:07,107	[INFO]	155	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:36:08,008	[INFO]	156	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:36:08,896	[INFO]	157	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:36:11,985	[INFO]	158	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:36:11,986	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-11 07:36:15,092	[INFO]	159	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:36:15,093	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
                      return false;
+                 }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-11 07:36:18,245	[INFO]	160	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-11 07:36:19,132	[INFO]	161	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:36:22,213	[INFO]	162	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:36:22,979	[INFO]	163	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:36:23,869	[INFO]	164	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:36:23,870	[INFO]	165	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:36:27,038	[INFO]	166	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:36:27,039	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-11 07:36:27,904	[INFO]	167	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:36:27,905	[INFO]	168	SUCCESS	+1.0	
2020-12-11 07:36:27,905	[DEBUG]	
2020-12-11 07:36:28,664	[INFO]	169	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:36:28,668	[INFO]	170	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:36:29,558	[INFO]	171	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:36:30,478	[INFO]	172	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:36:31,362	[INFO]	173	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:36:32,265	[INFO]	174	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:36:32,266	[INFO]	175	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:36:32,267	[DEBUG]	
2020-12-11 07:36:32,268	[INFO]	176	SUCCESS	+1.0	
2020-12-11 07:36:32,268	[DEBUG]	
2020-12-11 07:36:33,370	[INFO]	177	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:36:36,535	[INFO]	178	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-11 07:36:36,537	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-11 07:36:36,539	[INFO]	179	SUCCESS	+1.0	
2020-12-11 07:36:36,539	[DEBUG]	
2020-12-11 07:36:39,575	[INFO]	180	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:36:40,476	[INFO]	181	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:36:43,783	[INFO]	182	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:36:43,785	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-11 07:36:43,786	[INFO]	183	SUCCESS	+1.0	
2020-12-11 07:36:43,786	[DEBUG]	
2020-12-11 07:36:44,616	[INFO]	184	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:36:45,393	[INFO]	185	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:36:48,475	[INFO]	186	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:36:49,235	[INFO]	187	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:36:52,407	[INFO]	188	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-11 07:36:53,301	[INFO]	189	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-11 07:36:54,196	[INFO]	190	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:36:57,317	[INFO]	191	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-11 07:36:58,199	[INFO]	192	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:36:59,104	[INFO]	193	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:37:02,315	[INFO]	194	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-11 07:37:03,038	[INFO]	195	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-11 07:37:06,118	[INFO]	196	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-11 07:37:09,375	[INFO]	197	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:37:09,377	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-11 07:37:09,379	[INFO]	198	SUCCESS	+1.0	
2020-12-11 07:37:09,380	[DEBUG]	
2020-12-11 07:37:12,446	[INFO]	199	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:37:12,449	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-11 07:37:13,379	[INFO]	200	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:37:13,381	[INFO]	201	SUCCESS	+1.0	
2020-12-11 07:37:13,382	[DEBUG]	
2020-12-11 07:37:14,299	[INFO]	202	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-11 07:37:15,214	[INFO]	203	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:37:16,122	[INFO]	204	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-11 07:37:17,026	[INFO]	205	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:37:17,925	[INFO]	206	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:37:18,825	[INFO]	207	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-11 07:37:19,719	[INFO]	208	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:37:19,722	[INFO]	209	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:37:19,723	[DEBUG]	
2020-12-11 07:37:20,478	[INFO]	210	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-11 07:37:21,371	[INFO]	211	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:37:24,534	[INFO]	212	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-11 07:37:24,535	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-11 07:37:25,434	[INFO]	213	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:37:26,330	[INFO]	214	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:37:26,332	[INFO]	215	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-11 07:37:26,332	[DEBUG]	
2020-12-11 07:37:26,333	[INFO]	216	SUCCESS	+1.0	
2020-12-11 07:37:26,333	[DEBUG]	
2020-12-11 07:37:27,103	[INFO]	217	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-11 07:37:28,013	[INFO]	218	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-11 07:37:28,893	[INFO]	219	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-11 07:37:29,831	[INFO]	220	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-11 07:37:30,779	[INFO]	221	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-11 07:37:33,888	[INFO]	222	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:37:33,889	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-11 07:37:33,890	[INFO]	==== END ====
2020-12-11 07:37:33,890	[INFO]	Reason: target fitness reached
2020-12-11 07:37:33,891	[INFO]	
2020-12-11 07:37:33,891	[INFO]	========== REPORT ==========
2020-12-11 07:37:33,891	[INFO]	==== Epoch 1 ====
2020-12-11 07:37:33,891	[INFO]	Termination: target fitness reached
2020-12-11 07:37:33,891	[INFO]	Number of interations: 57
2020-12-11 07:37:33,891	[INFO]	Best fitness: 0.0
2020-12-11 07:37:33,891	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:37:33,891	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-11 07:37:33,891	[INFO]	==== Epoch 2 ====
2020-12-11 07:37:33,892	[INFO]	Termination: target fitness reached
2020-12-11 07:37:33,892	[INFO]	Number of interations: 120
2020-12-11 07:37:33,892	[INFO]	Best fitness: 0.0
2020-12-11 07:37:33,892	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:37:33,892	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-11 07:37:33,892	[INFO]	==== Epoch 3 ====
2020-12-11 07:37:33,892	[INFO]	Termination: target fitness reached
2020-12-11 07:37:33,892	[INFO]	Number of interations: 36
2020-12-11 07:37:33,892	[INFO]	Best fitness: 0.0
2020-12-11 07:37:33,893	[INFO]	Best patch: MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:37:33,893	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-11 07:37:33,893	[INFO]	==== Epoch 4 ====
2020-12-11 07:37:33,893	[INFO]	Termination: target fitness reached
2020-12-11 07:37:33,893	[INFO]	Number of interations: 70
2020-12-11 07:37:33,893	[INFO]	Best fitness: 0.0
2020-12-11 07:37:33,893	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:37:33,893	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-11 07:37:33,893	[INFO]	==== Epoch 5 ====
2020-12-11 07:37:33,893	[INFO]	Termination: target fitness reached
2020-12-11 07:37:33,894	[INFO]	Number of interations: 10
2020-12-11 07:37:33,894	[INFO]	Best fitness: 0.0
2020-12-11 07:37:33,894	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:37:33,894	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-11 07:37:33,894	[INFO]	==== Epoch 6 ====
2020-12-11 07:37:33,894	[INFO]	Termination: target fitness reached
2020-12-11 07:37:33,894	[INFO]	Number of interations: 64
2020-12-11 07:37:33,894	[INFO]	Best fitness: 0.0
2020-12-11 07:37:33,894	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:37:33,895	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-11 07:37:33,895	[INFO]	==== Epoch 7 ====
2020-12-11 07:37:33,895	[INFO]	Termination: target fitness reached
2020-12-11 07:37:33,895	[INFO]	Number of interations: 99
2020-12-11 07:37:33,895	[INFO]	Best fitness: 0.0
2020-12-11 07:37:33,895	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:37:33,895	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-11 07:37:33,895	[INFO]	==== Epoch 8 ====
2020-12-11 07:37:33,895	[INFO]	Termination: target fitness reached
2020-12-11 07:37:33,895	[INFO]	Number of interations: 49
2020-12-11 07:37:33,896	[INFO]	Best fitness: 0.0
2020-12-11 07:37:33,896	[INFO]	Best patch: MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:37:33,896	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,28 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
              }
          };
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-11 07:37:33,896	[INFO]	==== Epoch 9 ====
2020-12-11 07:37:33,896	[INFO]	Termination: target fitness reached
2020-12-11 07:37:33,896	[INFO]	Number of interations: 76
2020-12-11 07:37:33,896	[INFO]	Best fitness: 0.0
2020-12-11 07:37:33,896	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:37:33,896	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-11 07:37:33,897	[INFO]	==== Epoch 10 ====
2020-12-11 07:37:33,897	[INFO]	Termination: target fitness reached
2020-12-11 07:37:33,897	[INFO]	Number of interations: 99
2020-12-11 07:37:33,897	[INFO]	Best fitness: 0.0
2020-12-11 07:37:33,897	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:37:33,897	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-11 07:37:33,897	[INFO]	==== Epoch 11 ====
2020-12-11 07:37:33,897	[INFO]	Termination: target fitness reached
2020-12-11 07:37:33,897	[INFO]	Number of interations: 66
2020-12-11 07:37:33,897	[INFO]	Best fitness: 0.0
2020-12-11 07:37:33,898	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:37:33,898	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-11 07:37:33,898	[INFO]	==== Epoch 12 ====
2020-12-11 07:37:33,898	[INFO]	Termination: target fitness reached
2020-12-11 07:37:33,898	[INFO]	Number of interations: 109
2020-12-11 07:37:33,898	[INFO]	Best fitness: 0.0
2020-12-11 07:37:33,898	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:37:33,898	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-11 07:37:33,898	[INFO]	==== Epoch 13 ====
2020-12-11 07:37:33,898	[INFO]	Termination: target fitness reached
2020-12-11 07:37:33,899	[INFO]	Number of interations: 168
2020-12-11 07:37:33,899	[INFO]	Best fitness: 0.0
2020-12-11 07:37:33,899	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:37:33,899	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-11 07:37:33,899	[INFO]	==== Epoch 14 ====
2020-12-11 07:37:33,899	[INFO]	Termination: step budget
2020-12-11 07:37:33,899	[INFO]	Number of interations: 500
2020-12-11 07:37:33,899	[INFO]	==== Epoch 15 ====
2020-12-11 07:37:33,899	[INFO]	Termination: target fitness reached
2020-12-11 07:37:33,899	[INFO]	Number of interations: 109
2020-12-11 07:37:33,899	[INFO]	Best fitness: 0.0
2020-12-11 07:37:33,900	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-11 07:37:33,900	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,26 ****
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 19,29 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-11 07:37:33,900	[INFO]	==== Epoch 16 ====
2020-12-11 07:37:33,900	[INFO]	Termination: target fitness reached
2020-12-11 07:37:33,900	[INFO]	Number of interations: 63
2020-12-11 07:37:33,900	[INFO]	Best fitness: 0.0
2020-12-11 07:37:33,900	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:37:33,900	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-11 07:37:33,900	[INFO]	==== Epoch 17 ====
2020-12-11 07:37:33,901	[INFO]	Termination: target fitness reached
2020-12-11 07:37:33,901	[INFO]	Number of interations: 36
2020-12-11 07:37:33,901	[INFO]	Best fitness: 0.0
2020-12-11 07:37:33,901	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-11 07:37:33,901	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-11 07:37:33,901	[INFO]	==== Epoch 18 ====
2020-12-11 07:37:33,901	[INFO]	Termination: target fitness reached
2020-12-11 07:37:33,901	[INFO]	Number of interations: 103
2020-12-11 07:37:33,901	[INFO]	Best fitness: 0.0
2020-12-11 07:37:33,902	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:37:33,902	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-11 07:37:33,902	[INFO]	==== Epoch 19 ====
2020-12-11 07:37:33,902	[INFO]	Termination: target fitness reached
2020-12-11 07:37:33,902	[INFO]	Number of interations: 22
2020-12-11 07:37:33,902	[INFO]	Best fitness: 0.0
2020-12-11 07:37:33,902	[INFO]	Best patch: MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:37:33,902	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-11 07:37:33,902	[INFO]	==== Epoch 20 ====
2020-12-11 07:37:33,903	[INFO]	Termination: target fitness reached
2020-12-11 07:37:33,903	[INFO]	Number of interations: 222
2020-12-11 07:37:33,903	[INFO]	Best fitness: 0.0
2020-12-11 07:37:33,903	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-11 07:37:33,903	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-11 07:37:33,909	[INFO]	Experiment duration: 2600.266864299774
