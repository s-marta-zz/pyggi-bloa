2020-12-11 12:16:45,639	[INFO]	Path to the temporal program variants: ./.pyggi/tmp_variants/QuixBugs/1607685405
2020-12-11 12:16:45,639	[INFO]	========== EXPERIMENT FOR ['java_programs/FIND_FIRST_IN_SORTED.java.xml']  ==========
2020-12-11 12:16:45,639	[INFO]	modification points:
 ['./decl_stmt[1]', './decl_stmt[2]', './while[1]', './while[1]/operator_comp[1]', './while[1]/decl_stmt[1]', './while[1]/if[1]', './while[1]/if[1]/operator_comp[1]', './while[1]/if[1]/operator_comp[2]', './while[1]/if[1]/operator_comp[3]', './while[1]/if[1]/return[1]', './while[1]/if[2]', './while[1]/if[2]/operator_comp[1]', './while[1]/if[2]/expr_stmt[1]', './while[1]/expr_stmt[1]', './return[1]']
2020-12-11 12:16:45,639	[INFO]	number of statements and comparisons: 10, 5
2020-12-11 12:16:45,639	[INFO]	========== EPOCH 1 ==========
2020-12-11 12:16:45,640	[INFO]	==== WARMUP ====
2020-12-11 12:17:01,189	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 12:17:01,189	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 12:17:16,764	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 12:17:16,764	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 12:17:32,497	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 12:17:32,497	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 12:17:48,308	[INFO]	INITIAL	SUCCESS	 3.0	
2020-12-11 12:17:48,308	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 12:17:48,308	[INFO]	==== START ====
2020-12-11 12:17:49,232	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 12:17:50,167	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 12:17:50,169	[INFO]	3	SUCCESS	+3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<='})
2020-12-11 12:17:50,169	[DEBUG]	
2020-12-11 12:17:50,170	[INFO]	4	SUCCESS	+3.0	
2020-12-11 12:17:50,171	[DEBUG]	
2020-12-11 12:17:50,988	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 12:17:52,024	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 12:17:52,913	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 12:17:52,914	[INFO]	8	SUCCESS	+3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:17:52,914	[DEBUG]	
2020-12-11 12:17:52,915	[INFO]	9	SUCCESS	+3.0	
2020-12-11 12:17:52,915	[DEBUG]	
2020-12-11 12:17:53,709	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:17:54,564	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 12:17:55,339	[INFO]	12	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 12:17:58,150	[INFO]	13	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '!='})
2020-12-11 12:17:58,151	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,22 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
--- 16,22 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo != hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {

2020-12-11 12:17:58,151	[INFO]	==== END ====
2020-12-11 12:17:58,151	[INFO]	Reason: target fitness reached
2020-12-11 12:17:58,152	[INFO]	
2020-12-11 12:17:58,152	[INFO]	========== EPOCH 2 ==========
2020-12-11 12:17:58,153	[INFO]	==== WARMUP ====
2020-12-11 12:18:13,923	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 12:18:13,923	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 12:18:29,693	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 12:18:29,693	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 12:18:45,503	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 12:18:45,503	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 12:19:01,279	[INFO]	INITIAL	SUCCESS	 3.0	
2020-12-11 12:19:01,279	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 12:19:01,279	[INFO]	==== START ====
2020-12-11 12:19:02,011	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 12:19:04,816	[INFO]	2	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '!='})
2020-12-11 12:19:04,817	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,22 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
--- 16,22 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo != hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {

2020-12-11 12:19:04,817	[INFO]	==== END ====
2020-12-11 12:19:04,817	[INFO]	Reason: target fitness reached
2020-12-11 12:19:04,818	[INFO]	
2020-12-11 12:19:04,818	[INFO]	========== EPOCH 3 ==========
2020-12-11 12:19:04,818	[INFO]	==== WARMUP ====
2020-12-11 12:19:20,615	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 12:19:20,616	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 12:19:36,413	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 12:19:36,413	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 12:19:52,202	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 12:19:52,202	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 12:20:07,983	[INFO]	INITIAL	SUCCESS	 3.0	
2020-12-11 12:20:07,984	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 12:20:07,984	[INFO]	==== START ====
2020-12-11 12:20:08,805	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:20:24,622	[INFO]	2	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:20:24,623	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 25,30 ****
--- 25,31 ----
                  hi = mid;
              } else {
                  lo = mid + 1;
+                 lo = mid + 1;
              }
          }
  

2020-12-11 12:20:39,764	[INFO]	3	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<'})
2020-12-11 12:20:39,765	[INFO]	4	SUCCESS	+3.0	
2020-12-11 12:20:39,766	[DEBUG]	
2020-12-11 12:20:55,072	[INFO]	5	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:20:56,229	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:20:57,014	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 12:21:12,928	[INFO]	8	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 12:21:12,929	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 28,33 ****
--- 28,35 ----
              }
          }
  
+         int mid = (lo + hi) / 2;
+ 
          return -1;
      }
  

2020-12-11 12:21:13,667	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 12:21:13,671	[INFO]	10	SUCCESS	+3.0	
2020-12-11 12:21:13,672	[DEBUG]	
2020-12-11 12:21:14,718	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 12:21:15,566	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 12:21:16,432	[INFO]	13	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:21:32,223	[INFO]	14	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='})
2020-12-11 12:21:33,069	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 12:21:33,829	[INFO]	16	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:21:34,560	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 12:21:35,388	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 12:21:38,231	[INFO]	19	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '!='})
2020-12-11 12:21:38,233	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,22 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
--- 16,22 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo != hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {

2020-12-11 12:21:38,233	[INFO]	==== END ====
2020-12-11 12:21:38,234	[INFO]	Reason: target fitness reached
2020-12-11 12:21:38,235	[INFO]	
2020-12-11 12:21:38,235	[INFO]	========== EPOCH 4 ==========
2020-12-11 12:21:38,236	[INFO]	==== WARMUP ====
2020-12-11 12:21:54,064	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 12:21:54,064	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 12:22:09,814	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 12:22:09,815	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 12:22:25,569	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 12:22:25,569	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 12:22:41,330	[INFO]	INITIAL	SUCCESS	 3.0	
2020-12-11 12:22:41,330	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 12:22:41,330	[INFO]	==== START ====
2020-12-11 12:22:42,176	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 12:22:42,995	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 12:22:43,844	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 12:22:59,617	[INFO]	4	SUCCESS	+3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>'})
2020-12-11 12:22:59,617	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,25 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
--- 19,25 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x > arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;

2020-12-11 12:22:59,618	[INFO]	5	SUCCESS	+3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 12:22:59,619	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,25 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
--- 19,25 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x > arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;

2020-12-11 12:22:59,619	[INFO]	6	SUCCESS	+3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 12:22:59,620	[DEBUG]	
2020-12-11 12:22:59,620	[INFO]	7	SUCCESS	+3.0	
2020-12-11 12:22:59,620	[DEBUG]	
2020-12-11 12:23:00,553	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 12:23:01,302	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:23:02,171	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:23:02,904	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 12:23:18,810	[INFO]	12	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 12:23:18,811	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 21,26 ****
--- 21,30 ----
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
+             }
+ 
+             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {

2020-12-11 12:23:19,560	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 12:23:20,296	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 12:23:20,299	[INFO]	15	SUCCESS	+3.0	
2020-12-11 12:23:20,300	[DEBUG]	
2020-12-11 12:23:23,127	[INFO]	16	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:23:23,871	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 12:23:39,636	[INFO]	18	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 12:23:39,638	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 17,22 ****
--- 17,33 ----
          int hi = arr.length;
  
          while (lo <= hi) {
+             while (lo <= hi) {
+             int mid = (lo + hi) / 2; // check if this is floor division
+ 
+             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
+             } else if (x <= arr[mid]) {
+                 hi = mid;
+             } else {
+                 lo = mid + 1;
+             }
+         }
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {

2020-12-11 12:23:39,639	[INFO]	19	SUCCESS	+3.0	
2020-12-11 12:23:39,639	[DEBUG]	
2020-12-11 12:23:40,462	[INFO]	20	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:23:55,517	[INFO]	21	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '>='})
2020-12-11 12:23:56,354	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 12:23:59,173	[INFO]	23	SUCCESS	 7.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '!='})
2020-12-11 12:24:00,008	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 12:24:00,010	[INFO]	25	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 12:24:00,010	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 21,26 ****
--- 21,30 ----
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
+             }
+ 
+             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {

2020-12-11 12:24:00,011	[INFO]	26	SUCCESS	+3.0	
2020-12-11 12:24:00,011	[DEBUG]	
2020-12-11 12:24:00,877	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 12:24:01,719	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 12:24:02,464	[INFO]	29	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 12:24:18,281	[INFO]	30	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 12:24:18,282	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 20,25 ****
--- 20,28 ----
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
+             }
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;

2020-12-11 12:24:34,063	[INFO]	31	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:24:34,064	[INFO]	32	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 12:24:34,065	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 20,25 ****
--- 20,28 ----
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
+             }
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;

2020-12-11 12:24:34,065	[INFO]	33	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:24:34,066	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 20,25 ****
--- 20,28 ----
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
+             }
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;

2020-12-11 12:24:49,607	[INFO]	34	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 12:24:49,608	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 20,25 ****
--- 20,28 ----
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
+             }
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
***************
*** 28,33 ****
--- 31,38 ----
              }
          }
  
+         int mid = (lo + hi) / 2;
+ 
          return -1;
      }
  

2020-12-11 12:24:49,609	[INFO]	35	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:24:49,610	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 20,25 ****
--- 20,28 ----
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
+             }
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;

2020-12-11 12:25:04,663	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:25:04,665	[INFO]	37	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 12:25:04,665	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 20,25 ****
--- 20,28 ----
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
+             }
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;

2020-12-11 12:25:20,585	[INFO]	38	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='})
2020-12-11 12:25:21,410	[INFO]	39	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 12:25:24,331	[INFO]	40	SUCCESS	 7.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '!='})
2020-12-11 12:25:24,334	[INFO]	41	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 12:25:24,335	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 20,25 ****
--- 20,28 ----
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
+             }
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;

2020-12-11 12:25:24,336	[INFO]	42	SUCCESS	+3.0	
2020-12-11 12:25:24,337	[DEBUG]	
2020-12-11 12:25:25,258	[INFO]	43	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 12:25:26,108	[INFO]	44	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 12:25:26,110	[INFO]	45	SUCCESS	+3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '=='})
2020-12-11 12:25:26,110	[DEBUG]	
2020-12-11 12:25:26,110	[INFO]	46	SUCCESS	+3.0	
2020-12-11 12:25:26,111	[DEBUG]	
2020-12-11 12:25:26,879	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 12:25:27,749	[INFO]	48	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 12:25:28,633	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 12:25:29,492	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 12:25:30,219	[INFO]	51	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:25:33,052	[INFO]	52	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 12:25:48,967	[INFO]	53	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 12:25:48,969	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:25:49,736	[INFO]	55	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:26:04,797	[INFO]	56	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 12:26:05,570	[INFO]	57	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 12:26:06,315	[INFO]	58	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 12:26:09,136	[INFO]	59	SUCCESS	*2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:26:09,137	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:26:09,138	[INFO]	60	SUCCESS	 3.0	
2020-12-11 12:26:09,884	[INFO]	61	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 12:26:10,739	[INFO]	62	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 12:26:13,674	[INFO]	63	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 12:26:13,675	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,39 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 return -1;
+             } else {
+                 lo = mid + 1;
+             }
+         }
+ 
+         while (lo <= hi) {
+             int mid = (lo + hi) / 2; // check if this is floor division
+ 
+             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
+             } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 12:26:14,461	[INFO]	64	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 12:26:15,310	[INFO]	65	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:26:16,171	[INFO]	66	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 12:26:16,174	[INFO]	67	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:26:16,176	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:26:16,178	[INFO]	68	SUCCESS	 3.0	
2020-12-11 12:26:17,044	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:26:17,924	[INFO]	70	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 12:26:20,733	[INFO]	71	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 12:26:20,734	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,29 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
          }
--- 22,32 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
+                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
+             }
                  lo = mid + 1;
              }
          }

2020-12-11 12:26:21,588	[INFO]	72	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 12:26:21,590	[INFO]	73	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '=='})
2020-12-11 12:26:21,590	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,29 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
          }
--- 22,32 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
+                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
+             }
                  lo = mid + 1;
              }
          }

2020-12-11 12:26:21,591	[INFO]	74	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 12:26:21,592	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,29 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
          }
--- 22,32 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
+                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
+             }
                  lo = mid + 1;
              }
          }

2020-12-11 12:26:22,413	[INFO]	75	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:26:23,161	[INFO]	76	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:26:38,942	[INFO]	77	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 12:26:38,943	[INFO]	78	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:26:38,944	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:26:38,945	[INFO]	79	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<='})
2020-12-11 12:26:38,945	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:26:54,792	[INFO]	80	SUCCESS	 5.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 12:26:55,660	[INFO]	81	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 12:26:55,665	[INFO]	82	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:26:55,667	[INFO]	83	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:26:55,669	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:26:55,671	[INFO]	84	SUCCESS	 3.0	
2020-12-11 12:26:56,501	[INFO]	85	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 12:26:57,376	[INFO]	86	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:26:58,135	[INFO]	87	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 12:26:58,960	[INFO]	88	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 12:27:01,787	[INFO]	89	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 12:27:01,789	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 21,28 ****
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 21,31 ----
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
!                 return mid;
!             }
! else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:27:17,568	[INFO]	90	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 12:27:17,569	[INFO]	91	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:27:17,570	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:27:18,382	[INFO]	92	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 12:27:18,383	[INFO]	93	SUCCESS	 3.0	
2020-12-11 12:27:19,235	[INFO]	94	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:27:20,059	[INFO]	95	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:27:20,827	[INFO]	96	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:27:21,699	[INFO]	97	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 12:27:24,470	[INFO]	98	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'})
2020-12-11 12:27:24,472	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,28 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid < 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:27:27,242	[INFO]	99	SUCCESS	 5.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:27:30,016	[INFO]	100	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '>'})
2020-12-11 12:27:30,900	[INFO]	101	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:27:46,745	[INFO]	102	SUCCESS	 3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'})
2020-12-11 12:27:47,554	[INFO]	103	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 12:27:47,557	[INFO]	104	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:27:47,557	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:27:50,423	[INFO]	105	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:27:50,425	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,29 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 lo = mid + 1;
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:27:51,338	[INFO]	106	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:27:51,339	[INFO]	107	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:27:51,340	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:27:51,340	[INFO]	108	SUCCESS	 3.0	
2020-12-11 12:27:54,270	[INFO]	109	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 12:27:55,144	[INFO]	110	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 12:27:56,017	[INFO]	111	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:27:56,019	[INFO]	112	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 12:27:56,019	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:27:56,020	[INFO]	113	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:27:56,021	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:27:56,900	[INFO]	114	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 12:27:57,818	[INFO]	115	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:27:58,600	[INFO]	116	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:27:59,463	[INFO]	117	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 12:28:00,367	[INFO]	118	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 12:28:01,173	[INFO]	119	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 12:28:01,174	[INFO]	120	SUCCESS	 3.0	
2020-12-11 12:28:02,077	[INFO]	121	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 12:28:02,809	[INFO]	122	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 12:28:03,666	[INFO]	123	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 12:28:04,520	[INFO]	124	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 12:28:05,427	[INFO]	125	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 12:28:06,270	[INFO]	126	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 12:28:07,170	[INFO]	127	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 12:28:08,021	[INFO]	128	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 12:28:10,838	[INFO]	129	SUCCESS	 5.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '>='})
2020-12-11 12:28:11,687	[INFO]	130	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 12:28:12,536	[INFO]	131	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 12:28:13,396	[INFO]	132	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:28:14,157	[INFO]	133	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 12:28:14,908	[INFO]	134	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 12:28:14,914	[INFO]	135	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 12:28:14,917	[INFO]	136	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:28:15,773	[INFO]	137	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 12:28:18,640	[INFO]	138	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '<='})
2020-12-11 12:28:19,449	[INFO]	139	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 12:28:20,163	[INFO]	140	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:28:21,037	[INFO]	141	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 12:28:23,825	[INFO]	142	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>='})
2020-12-11 12:28:23,826	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,28 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x >= arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:28:24,541	[INFO]	143	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 12:28:24,543	[INFO]	144	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:28:24,543	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:28:25,398	[INFO]	145	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 12:28:25,401	[INFO]	146	SUCCESS	 3.0	
2020-12-11 12:28:26,242	[INFO]	147	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 12:28:26,245	[INFO]	148	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 12:28:27,088	[INFO]	149	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:28:27,933	[INFO]	150	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 12:28:28,687	[INFO]	151	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 12:28:28,690	[INFO]	152	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<='})
2020-12-11 12:28:28,690	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:28:31,573	[INFO]	153	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 12:28:32,374	[INFO]	154	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:28:32,375	[INFO]	155	SUCCESS	 3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<='})
2020-12-11 12:28:32,376	[INFO]	156	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:28:32,377	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:28:33,243	[INFO]	157	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 12:28:36,126	[INFO]	158	SUCCESS	 7.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '!='})
2020-12-11 12:28:36,127	[INFO]	159	SUCCESS	 3.0	
2020-12-11 12:28:36,128	[INFO]	160	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:28:36,129	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:28:36,931	[INFO]	161	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 12:28:36,933	[INFO]	162	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:28:36,934	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:28:36,934	[INFO]	163	SUCCESS	 3.0	
2020-12-11 12:28:36,936	[INFO]	164	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 12:28:51,993	[INFO]	165	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:28:52,824	[INFO]	166	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 12:28:52,826	[INFO]	167	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 12:28:53,686	[INFO]	168	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:28:54,526	[INFO]	169	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 12:29:10,325	[INFO]	170	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 12:29:11,147	[INFO]	171	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 12:29:12,016	[INFO]	172	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:29:12,877	[INFO]	173	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:29:13,760	[INFO]	174	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 12:29:14,599	[INFO]	175	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 12:29:14,600	[INFO]	176	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 12:29:17,474	[INFO]	177	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:29:17,475	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 20,28 ****
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 20,29 ----
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 lo = mid + 1;
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:29:18,175	[INFO]	178	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 12:29:19,030	[INFO]	179	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:29:21,830	[INFO]	180	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 12:29:37,664	[INFO]	181	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:29:37,665	[INFO]	182	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:29:37,665	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:29:37,666	[INFO]	183	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '!='})
2020-12-11 12:29:37,667	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:29:37,668	[INFO]	184	SUCCESS	 3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '!='})
2020-12-11 12:29:40,538	[INFO]	185	SUCCESS	 5.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '!='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:29:40,539	[INFO]	186	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:29:40,539	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:29:41,276	[INFO]	187	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 12:29:41,279	[INFO]	188	SUCCESS	 3.0	
2020-12-11 12:29:42,177	[INFO]	189	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 12:29:43,043	[INFO]	190	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 12:29:43,841	[INFO]	191	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:29:46,761	[INFO]	192	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '<='})
2020-12-11 12:29:47,623	[INFO]	193	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 12:29:48,418	[INFO]	194	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 12:29:49,278	[INFO]	195	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 12:29:52,209	[INFO]	196	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 12:29:52,210	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,31 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
!                 return mid;
!             }
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:29:52,211	[INFO]	197	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:29:52,212	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:29:53,133	[INFO]	198	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:29:53,135	[INFO]	199	SUCCESS	 3.0	
2020-12-11 12:29:56,042	[INFO]	200	SUCCESS	 6.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '>'})
2020-12-11 12:29:56,950	[INFO]	201	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 12:29:57,843	[INFO]	202	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 12:30:00,762	[INFO]	203	SUCCESS	 7.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '<'})
2020-12-11 12:30:01,625	[INFO]	204	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 12:30:02,528	[INFO]	205	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 12:30:03,415	[INFO]	206	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:30:04,278	[INFO]	207	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 12:30:04,280	[INFO]	208	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 12:30:07,146	[INFO]	209	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 12:30:07,147	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,33 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
          }
  
          return -1;
      }
  
--- 22,35 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }
          }
  
+         int mid = (lo + hi) / 2;
+ 
          return -1;
      }
  

2020-12-11 12:30:22,949	[INFO]	210	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 12:30:23,682	[INFO]	211	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 12:30:26,640	[INFO]	212	SUCCESS	 5.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '>'})
2020-12-11 12:30:26,642	[INFO]	213	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:30:26,643	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:30:26,643	[INFO]	214	SUCCESS	 3.0	
2020-12-11 12:30:27,525	[INFO]	215	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:30:28,442	[INFO]	216	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 12:30:31,523	[INFO]	217	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:30:31,524	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,29 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
          }
--- 22,30 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
+                 lo = mid + 1;
                  lo = mid + 1;
              }
          }

2020-12-11 12:30:32,366	[INFO]	218	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 12:30:33,368	[INFO]	219	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 12:30:48,747	[INFO]	220	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:30:51,592	[INFO]	221	SUCCESS	 7.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '<'})
2020-12-11 12:30:52,298	[INFO]	222	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 12:30:52,300	[INFO]	223	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:30:52,300	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:30:53,125	[INFO]	224	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:30:53,126	[INFO]	225	SUCCESS	 3.0	
2020-12-11 12:30:53,954	[INFO]	226	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 12:30:54,834	[INFO]	227	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 12:30:55,574	[INFO]	228	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:30:56,438	[INFO]	229	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 12:30:57,301	[INFO]	230	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 12:30:58,023	[INFO]	231	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 12:30:58,860	[INFO]	232	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 12:30:59,712	[INFO]	233	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 12:31:02,611	[INFO]	234	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<='})
2020-12-11 12:31:02,612	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,28 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid <= 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:31:02,613	[INFO]	235	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:31:02,613	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:31:05,373	[INFO]	236	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='})
2020-12-11 12:31:05,375	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,28 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid >= 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:31:06,221	[INFO]	237	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:31:22,100	[INFO]	238	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='})
2020-12-11 12:31:22,916	[INFO]	239	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 12:31:22,920	[INFO]	240	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:31:22,921	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:31:23,775	[INFO]	241	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:31:26,548	[INFO]	242	SUCCESS	*1.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '!='})
2020-12-11 12:31:26,549	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,28 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 16,28 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo != hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:31:29,487	[INFO]	243	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '!='})
2020-12-11 12:31:29,489	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,22 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
--- 16,22 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo != hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {

2020-12-11 12:31:29,490	[INFO]	==== END ====
2020-12-11 12:31:29,490	[INFO]	Reason: target fitness reached
2020-12-11 12:31:29,492	[INFO]	
2020-12-11 12:31:29,493	[INFO]	========== EPOCH 5 ==========
2020-12-11 12:31:29,494	[INFO]	==== WARMUP ====
2020-12-11 12:31:45,247	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 12:31:45,247	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 12:32:01,071	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 12:32:01,071	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 12:32:16,962	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 12:32:16,962	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 12:32:32,729	[INFO]	INITIAL	SUCCESS	 3.0	
2020-12-11 12:32:32,730	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 12:32:32,730	[INFO]	==== START ====
2020-12-11 12:32:48,596	[INFO]	1	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 12:32:48,596	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 20,25 ****
--- 20,26 ----
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 hi = mid;
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;

2020-12-11 12:32:48,597	[INFO]	2	SUCCESS	+3.0	
2020-12-11 12:32:48,597	[DEBUG]	
2020-12-11 12:32:49,439	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 12:32:49,441	[INFO]	4	SUCCESS	+3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:32:49,441	[DEBUG]	
2020-12-11 12:32:49,442	[INFO]	5	SUCCESS	+3.0	
2020-12-11 12:32:49,442	[DEBUG]	
2020-12-11 12:32:52,366	[INFO]	6	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:32:53,057	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:32:53,876	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 12:32:54,736	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 12:32:55,706	[INFO]	10	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:32:55,709	[INFO]	11	SUCCESS	+3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '=='})
2020-12-11 12:32:55,710	[DEBUG]	
2020-12-11 12:32:56,540	[INFO]	12	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 12:32:56,541	[INFO]	13	SUCCESS	+3.0	
2020-12-11 12:32:56,541	[DEBUG]	
2020-12-11 12:32:57,419	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 12:32:58,174	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:32:58,934	[INFO]	16	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 12:33:01,757	[INFO]	17	SUCCESS	*2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:33:01,758	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 12:33:01,759	[INFO]	18	SUCCESS	 3.0	
2020-12-11 12:33:02,574	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 12:33:05,398	[INFO]	20	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:33:05,401	[INFO]	21	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 12:33:05,401	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 12:33:08,235	[INFO]	22	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 12:33:08,236	[INFO]	23	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:33:08,237	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 12:33:08,237	[INFO]	24	SUCCESS	 3.0	
2020-12-11 12:33:08,239	[INFO]	25	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='})
2020-12-11 12:33:08,239	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 12:33:11,041	[INFO]	26	SUCCESS	 3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='})
2020-12-11 12:33:13,866	[INFO]	27	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '>='})
2020-12-11 12:33:14,695	[INFO]	28	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:33:14,697	[INFO]	29	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 12:33:14,698	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 12:33:14,698	[INFO]	30	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 12:33:14,699	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 12:33:30,530	[INFO]	31	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 12:33:31,281	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:33:31,285	[INFO]	33	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:33:31,287	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 12:33:31,290	[INFO]	34	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 12:33:31,292	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 12:33:31,295	[INFO]	35	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:33:31,296	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 12:33:31,298	[INFO]	36	SUCCESS	 3.0	
2020-12-11 12:33:34,421	[INFO]	37	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '>='})
2020-12-11 12:33:35,285	[INFO]	38	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:33:35,292	[INFO]	39	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:33:35,293	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 12:33:36,057	[INFO]	40	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:33:36,063	[INFO]	41	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:33:36,064	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 12:33:36,066	[INFO]	42	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:33:36,068	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 12:33:36,812	[INFO]	43	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:33:37,656	[INFO]	44	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 12:33:53,475	[INFO]	45	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:33:53,477	[INFO]	46	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:33:53,477	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 12:33:53,478	[INFO]	47	SUCCESS	 3.0	
2020-12-11 12:33:53,479	[INFO]	48	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 12:33:53,479	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 12:33:54,199	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 12:33:55,019	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 12:33:57,895	[INFO]	51	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 12:33:57,897	[INFO]	52	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 12:33:57,897	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 12:33:57,898	[INFO]	53	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 12:33:57,898	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 12:33:58,728	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:33:58,730	[INFO]	55	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 12:33:58,730	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 12:33:59,563	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:33:59,565	[INFO]	57	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:33:59,566	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 12:34:00,418	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 12:34:00,421	[INFO]	59	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 12:34:01,268	[INFO]	60	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 12:34:02,046	[INFO]	61	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:34:02,883	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 12:34:02,885	[INFO]	63	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 12:34:02,886	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 12:34:02,887	[INFO]	64	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 12:34:02,887	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 12:34:02,888	[INFO]	65	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 12:34:02,889	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 12:34:02,890	[INFO]	66	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 12:34:02,890	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 12:34:02,891	[INFO]	67	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:34:02,892	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 12:34:02,893	[INFO]	68	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:34:02,893	[INFO]	69	SUCCESS	 3.0	
2020-12-11 12:34:03,736	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 12:34:03,737	[INFO]	71	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 12:34:03,738	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 12:34:04,489	[INFO]	72	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:34:04,493	[INFO]	73	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:34:04,494	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 12:34:04,496	[INFO]	74	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:34:04,497	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 12:34:04,499	[INFO]	75	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:34:04,500	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 12:34:05,383	[INFO]	76	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 12:34:06,220	[INFO]	77	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 12:34:06,221	[INFO]	78	SUCCESS	 3.0	
2020-12-11 12:34:06,222	[INFO]	79	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:34:06,223	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 12:34:22,038	[INFO]	80	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:34:22,040	[INFO]	81	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:34:22,040	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 12:34:22,041	[INFO]	82	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:34:22,041	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 12:34:22,042	[INFO]	83	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:34:22,043	[INFO]	84	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:34:22,044	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 12:34:24,836	[INFO]	85	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:34:24,837	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:34:25,669	[INFO]	86	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 12:34:26,511	[INFO]	87	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 12:34:27,282	[INFO]	88	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 12:34:30,096	[INFO]	89	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:34:30,976	[INFO]	90	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 12:34:31,826	[INFO]	91	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 12:34:31,829	[INFO]	92	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:34:32,591	[INFO]	93	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:34:32,597	[INFO]	94	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 12:34:47,671	[INFO]	95	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:34:48,552	[INFO]	96	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 12:34:49,414	[INFO]	97	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 12:34:49,419	[INFO]	98	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:34:49,421	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:34:50,258	[INFO]	99	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:34:50,260	[INFO]	100	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:34:51,144	[INFO]	101	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:34:51,146	[INFO]	102	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:34:51,147	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:34:51,148	[INFO]	103	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 12:34:51,149	[INFO]	104	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:34:51,150	[INFO]	105	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:34:51,151	[INFO]	106	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 12:34:52,020	[INFO]	107	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 12:34:52,764	[INFO]	108	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 12:34:53,508	[INFO]	109	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 12:34:54,375	[INFO]	110	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 12:34:57,319	[INFO]	111	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='})
2020-12-11 12:34:57,320	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,31 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid >= 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:35:13,051	[INFO]	112	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='})
2020-12-11 12:35:13,873	[INFO]	113	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:35:14,708	[INFO]	114	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 12:35:15,572	[INFO]	115	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 12:35:15,573	[INFO]	116	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:35:15,574	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:35:16,517	[INFO]	117	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 12:35:16,518	[INFO]	118	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:35:16,520	[INFO]	119	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<='})
2020-12-11 12:35:16,520	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:35:16,521	[INFO]	120	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:35:16,522	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:35:19,319	[INFO]	121	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 12:35:19,320	[INFO]	122	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:35:19,321	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:35:20,161	[INFO]	123	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 12:35:20,163	[INFO]	124	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:35:20,164	[INFO]	125	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:35:35,216	[INFO]	126	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:35:36,273	[INFO]	127	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 12:35:36,275	[INFO]	128	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:35:36,275	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:35:36,276	[INFO]	129	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:35:36,277	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:35:52,182	[INFO]	130	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:35:52,184	[INFO]	131	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:35:52,185	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:35:52,186	[INFO]	132	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:35:52,188	[INFO]	133	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 12:35:53,004	[INFO]	134	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 12:35:53,006	[INFO]	135	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:35:53,856	[INFO]	136	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 12:35:54,714	[INFO]	137	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 12:35:55,568	[INFO]	138	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 12:35:56,424	[INFO]	139	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:35:57,291	[INFO]	140	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 12:35:57,293	[INFO]	141	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:35:57,294	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:35:58,056	[INFO]	142	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:35:58,918	[INFO]	143	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 12:35:59,753	[INFO]	144	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:35:59,754	[INFO]	145	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:35:59,756	[INFO]	146	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 12:35:59,757	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:35:59,758	[INFO]	147	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:35:59,758	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:35:59,759	[INFO]	148	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:36:00,625	[INFO]	149	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 12:36:00,626	[INFO]	150	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:36:00,627	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:36:01,451	[INFO]	151	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:36:01,452	[INFO]	152	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:36:04,281	[INFO]	153	SUCCESS	 7.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '!='})
2020-12-11 12:36:04,285	[INFO]	154	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:36:04,287	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:36:04,290	[INFO]	155	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:36:04,291	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:36:04,294	[INFO]	156	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:36:04,296	[INFO]	157	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:36:05,111	[INFO]	158	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 12:36:05,879	[INFO]	159	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 12:36:05,881	[INFO]	160	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:36:05,882	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:36:05,883	[INFO]	161	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:36:08,690	[INFO]	162	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '<='})
2020-12-11 12:36:08,691	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,31 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x <= arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:36:09,528	[INFO]	163	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 12:36:09,530	[INFO]	164	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='})
2020-12-11 12:36:09,530	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,31 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x <= arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:36:10,390	[INFO]	165	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 12:36:10,395	[INFO]	166	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='})
2020-12-11 12:36:10,397	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:36:26,280	[INFO]	167	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='})
2020-12-11 12:36:26,282	[INFO]	168	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:36:26,283	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:36:27,008	[INFO]	169	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:36:27,845	[INFO]	170	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:36:27,847	[INFO]	171	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='})
2020-12-11 12:36:27,848	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:36:27,849	[INFO]	172	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='})
2020-12-11 12:36:28,571	[INFO]	173	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 12:36:28,573	[INFO]	174	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='})
2020-12-11 12:36:29,321	[INFO]	175	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 12:36:30,074	[INFO]	176	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 12:36:30,964	[INFO]	177	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 12:36:30,969	[INFO]	178	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:36:30,971	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:36:30,974	[INFO]	179	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:36:30,975	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:36:30,978	[INFO]	180	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:36:30,979	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:36:31,822	[INFO]	181	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 12:36:32,578	[INFO]	182	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:36:32,581	[INFO]	183	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:36:33,420	[INFO]	184	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 12:36:34,262	[INFO]	185	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 12:36:34,264	[INFO]	186	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:36:34,265	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:36:34,266	[INFO]	187	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:36:35,132	[INFO]	188	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 12:36:37,951	[INFO]	189	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='})
2020-12-11 12:36:37,952	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,31 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid >= 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:36:38,797	[INFO]	190	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 12:36:39,621	[INFO]	191	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 12:36:42,435	[INFO]	192	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='})
2020-12-11 12:36:58,285	[INFO]	193	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='})
2020-12-11 12:36:58,287	[INFO]	194	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 12:36:58,287	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,31 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid >= 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:36:59,107	[INFO]	195	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 12:36:59,858	[INFO]	196	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 12:37:00,690	[INFO]	197	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 12:37:00,691	[INFO]	198	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 12:37:00,692	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:37:00,693	[INFO]	199	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 12:37:01,529	[INFO]	200	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 12:37:02,379	[INFO]	201	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 12:37:03,248	[INFO]	202	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 12:37:06,199	[INFO]	203	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 12:37:06,202	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,33 ****
--- 23,38 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }
          }
  
+         int mid = (lo + hi) / 2;
+ 
          return -1;
      }
  

2020-12-11 12:37:22,079	[INFO]	204	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 12:37:22,080	[INFO]	205	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 12:37:22,081	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,33 ****
--- 23,38 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }
          }
  
+         int mid = (lo + hi) / 2;
+ 
          return -1;
      }
  

2020-12-11 12:37:37,827	[INFO]	206	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 12:37:40,666	[INFO]	207	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 12:37:40,668	[INFO]	208	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:37:40,669	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,33 ****
--- 23,38 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }
          }
  
+         int mid = (lo + hi) / 2;
+ 
          return -1;
      }
  

2020-12-11 12:37:41,510	[INFO]	209	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 12:37:44,326	[INFO]	210	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '>'})
2020-12-11 12:37:45,169	[INFO]	211	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:37:45,172	[INFO]	212	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:37:46,162	[INFO]	213	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 12:37:47,014	[INFO]	214	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:37:47,016	[INFO]	215	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:37:47,017	[INFO]	216	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 12:37:47,018	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,33 ****
--- 23,38 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }
          }
  
+         int mid = (lo + hi) / 2;
+ 
          return -1;
      }
  

2020-12-11 12:37:47,019	[INFO]	217	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 12:37:47,021	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,33 ****
--- 23,38 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }
          }
  
+         int mid = (lo + hi) / 2;
+ 
          return -1;
      }
  

2020-12-11 12:37:47,022	[INFO]	218	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:37:47,023	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,33 ****
--- 23,38 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }
          }
  
+         int mid = (lo + hi) / 2;
+ 
          return -1;
      }
  

2020-12-11 12:37:47,024	[INFO]	219	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:37:47,025	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,33 ****
--- 23,38 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }
          }
  
+         int mid = (lo + hi) / 2;
+ 
          return -1;
      }
  

2020-12-11 12:37:47,781	[INFO]	220	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:37:50,605	[INFO]	221	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 12:37:50,608	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,32 ****
--- 23,40 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
+                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
+             }
                  lo = mid + 1;
              }
          }
+ 
+         int mid = (lo + hi) / 2;
  
          return -1;
      }

2020-12-11 12:37:50,611	[INFO]	222	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 12:37:50,612	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,32 ****
--- 23,40 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
+                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
+             }
                  lo = mid + 1;
              }
          }
+ 
+         int mid = (lo + hi) / 2;
  
          return -1;
      }

2020-12-11 12:37:51,478	[INFO]	223	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 12:37:51,482	[INFO]	224	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:37:51,484	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,33 ****
--- 23,38 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }
          }
  
+         int mid = (lo + hi) / 2;
+ 
          return -1;
      }
  

2020-12-11 12:37:51,486	[INFO]	225	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:37:51,489	[INFO]	226	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:37:51,492	[INFO]	227	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:37:51,494	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,33 ****
--- 23,38 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }
          }
  
+         int mid = (lo + hi) / 2;
+ 
          return -1;
      }
  

2020-12-11 12:37:51,496	[INFO]	228	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:37:51,499	[INFO]	229	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:37:51,500	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,33 ****
--- 23,38 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }
          }
  
+         int mid = (lo + hi) / 2;
+ 
          return -1;
      }
  

2020-12-11 12:37:51,503	[INFO]	230	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:37:51,508	[INFO]	231	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 12:37:51,513	[INFO]	232	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 12:37:51,515	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,33 ****
--- 23,38 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }
          }
  
+         int mid = (lo + hi) / 2;
+ 
          return -1;
      }
  

2020-12-11 12:37:52,260	[INFO]	233	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:37:55,013	[INFO]	234	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<='})
2020-12-11 12:37:55,014	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,33 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
              }
          }
  
          return -1;
      }
  
--- 19,38 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid <= 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }
          }
  
+         int mid = (lo + hi) / 2;
+ 
          return -1;
      }
  

2020-12-11 12:37:55,842	[INFO]	235	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 12:37:58,723	[INFO]	236	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:37:58,724	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,33 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
              }
          }
  
          return -1;
      }
  
--- 19,40 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid <= 0 || x != arr[mid-1])) {
!                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
+             }
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }
          }
  
+         int mid = (lo + hi) / 2;
+ 
          return -1;
      }
  

2020-12-11 12:37:59,427	[INFO]	237	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:37:59,432	[INFO]	238	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:37:59,434	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,33 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
              }
          }
  
          return -1;
      }
  
--- 19,40 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid <= 0 || x != arr[mid-1])) {
!                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
+             }
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }
          }
  
+         int mid = (lo + hi) / 2;
+ 
          return -1;
      }
  

2020-12-11 12:38:14,512	[INFO]	239	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 12:38:14,514	[INFO]	240	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:38:14,515	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,33 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
              }
          }
  
          return -1;
      }
  
--- 19,40 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid <= 0 || x != arr[mid-1])) {
!                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
+             }
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }
          }
  
+         int mid = (lo + hi) / 2;
+ 
          return -1;
      }
  

2020-12-11 12:38:14,516	[INFO]	241	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:38:14,517	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,33 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
              }
          }
  
          return -1;
      }
  
--- 19,40 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid <= 0 || x != arr[mid-1])) {
!                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
+             }
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }
          }
  
+         int mid = (lo + hi) / 2;
+ 
          return -1;
      }
  

2020-12-11 12:38:14,518	[INFO]	242	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:38:14,519	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,33 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
              }
          }
  
          return -1;
      }
  
--- 19,40 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid <= 0 || x != arr[mid-1])) {
!                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
+             }
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }
          }
  
+         int mid = (lo + hi) / 2;
+ 
          return -1;
      }
  

2020-12-11 12:38:17,355	[INFO]	243	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:38:17,356	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 20,33 ****
--- 20,40 ----
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
+             }
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }
          }
  
+         int mid = (lo + hi) / 2;
+ 
          return -1;
      }
  

2020-12-11 12:38:18,194	[INFO]	244	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 12:38:18,195	[INFO]	245	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 12:38:18,196	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,33 ****
--- 23,38 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }
          }
  
+         int mid = (lo + hi) / 2;
+ 
          return -1;
      }
  

2020-12-11 12:38:18,197	[INFO]	246	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 12:38:18,198	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:38:20,979	[INFO]	247	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:38:20,980	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,34 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ else if (x <= arr[mid]) {
+                 hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:38:21,743	[INFO]	248	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 12:38:21,747	[INFO]	249	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:38:21,749	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,34 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ else if (x <= arr[mid]) {
+                 hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:38:22,497	[INFO]	250	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:38:22,501	[INFO]	251	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:38:22,503	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:38:25,219	[INFO]	252	SUCCESS	 6.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '>'})
2020-12-11 12:38:25,220	[INFO]	253	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:38:25,221	[INFO]	254	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:38:28,008	[INFO]	255	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<'})
2020-12-11 12:38:28,853	[INFO]	256	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 12:38:28,855	[INFO]	257	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 12:38:28,856	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:38:28,857	[INFO]	258	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:38:28,858	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:38:28,859	[INFO]	259	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:38:29,707	[INFO]	260	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:38:30,556	[INFO]	261	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:38:31,558	[INFO]	262	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 12:38:31,560	[INFO]	263	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 12:38:31,561	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:38:31,562	[INFO]	264	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:38:31,563	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:38:47,372	[INFO]	265	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:38:48,184	[INFO]	266	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:38:48,917	[INFO]	267	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:38:51,727	[INFO]	268	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '=='})
2020-12-11 12:38:51,728	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,31 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x == arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:38:51,729	[INFO]	269	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:38:51,730	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:38:51,731	[INFO]	270	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:38:52,566	[INFO]	271	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 12:38:53,327	[INFO]	272	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 12:38:54,173	[INFO]	273	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:38:54,175	[INFO]	274	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:38:54,900	[INFO]	275	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 12:38:55,729	[INFO]	276	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 12:38:56,565	[INFO]	277	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:38:59,389	[INFO]	278	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '<='})
2020-12-11 12:39:02,259	[INFO]	279	SUCCESS	 6.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '>'})
2020-12-11 12:39:05,012	[INFO]	280	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 12:39:05,013	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 20,28 ****
--- 20,34 ----
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
+             }
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:39:20,180	[INFO]	281	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 12:39:22,915	[INFO]	282	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 12:39:23,896	[INFO]	283	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 12:39:24,638	[INFO]	284	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:39:24,640	[INFO]	285	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:39:24,640	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 20,28 ****
--- 20,34 ----
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
+             }
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:39:25,408	[INFO]	286	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:39:28,251	[INFO]	287	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:39:28,253	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 20,29 ****
--- 20,36 ----
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
+             }
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
+                 lo = mid + 1;
                  lo = mid + 1;
              }
          }

2020-12-11 12:39:29,088	[INFO]	288	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:39:29,951	[INFO]	289	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 12:39:29,953	[INFO]	290	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:39:29,953	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 20,28 ****
--- 20,34 ----
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
+             }
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:39:30,839	[INFO]	291	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 12:39:31,718	[INFO]	292	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 12:39:31,722	[INFO]	293	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:39:31,725	[INFO]	294	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:39:32,570	[INFO]	295	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:39:33,398	[INFO]	296	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 12:39:34,286	[INFO]	297	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:39:35,165	[INFO]	298	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 12:39:38,127	[INFO]	299	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:39:38,128	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 20,28 ****
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
!                 return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 20,31 ----
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
!                 lo = mid + 1;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:39:41,039	[INFO]	300	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:39:41,041	[INFO]	301	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:39:41,041	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:39:41,042	[INFO]	302	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:39:41,043	[INFO]	303	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:39:41,044	[INFO]	304	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 12:39:41,045	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:39:41,828	[INFO]	305	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:39:42,704	[INFO]	306	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 12:39:42,706	[INFO]	307	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 12:39:43,503	[INFO]	308	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:39:43,507	[INFO]	309	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='})
2020-12-11 12:39:43,508	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:39:44,381	[INFO]	310	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 12:39:44,383	[INFO]	311	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='})
2020-12-11 12:39:44,383	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:39:44,385	[INFO]	312	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 12:39:44,385	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:39:45,260	[INFO]	313	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 12:39:48,228	[INFO]	314	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:39:48,229	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
--- 19,33 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:39:49,112	[INFO]	315	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:39:49,999	[INFO]	316	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 12:39:51,094	[INFO]	317	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 12:39:51,096	[INFO]	318	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 12:39:51,097	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:39:52,045	[INFO]	319	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 12:39:52,848	[INFO]	320	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:39:53,978	[INFO]	321	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 12:39:53,981	[INFO]	322	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 12:39:53,981	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:39:53,982	[INFO]	323	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:39:53,983	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:39:54,962	[INFO]	324	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 12:39:55,992	[INFO]	325	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 12:39:59,065	[INFO]	326	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '>'})
2020-12-11 12:39:59,067	[INFO]	327	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 12:39:59,986	[INFO]	328	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:40:03,078	[INFO]	329	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='})
2020-12-11 12:40:03,079	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,31 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid >= 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:40:03,958	[INFO]	330	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:40:04,875	[INFO]	331	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 12:40:07,985	[INFO]	332	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:40:07,987	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,34 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid >= 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ else if (x <= arr[mid]) {
+                 hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:40:08,763	[INFO]	333	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 12:40:09,638	[INFO]	334	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 12:40:12,796	[INFO]	335	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 12:40:12,801	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
!                 return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,34 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid >= 0 || x != arr[mid-1])) {
!                 hi = mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ else if (x <= arr[mid]) {
+                 hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:40:12,805	[INFO]	336	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 12:40:12,808	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
!                 return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,34 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid >= 0 || x != arr[mid-1])) {
!                 hi = mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ else if (x <= arr[mid]) {
+                 hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:40:12,810	[INFO]	337	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 12:40:12,812	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
!                 return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,34 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid >= 0 || x != arr[mid-1])) {
!                 hi = mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ else if (x <= arr[mid]) {
+                 hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:40:27,876	[INFO]	338	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 12:40:42,933	[INFO]	339	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 12:40:43,977	[INFO]	340	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 12:40:43,980	[INFO]	341	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:40:43,982	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
!                 return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,34 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid >= 0 || x != arr[mid-1])) {
!                 hi = mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ else if (x <= arr[mid]) {
+                 hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:40:43,984	[INFO]	342	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:40:43,986	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
!                 return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,34 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid >= 0 || x != arr[mid-1])) {
!                 hi = mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ else if (x <= arr[mid]) {
+                 hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:40:44,914	[INFO]	343	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:40:46,186	[INFO]	344	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:40:49,594	[INFO]	345	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '=='})
2020-12-11 12:40:49,595	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 20,28 ****
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
!                 return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 20,34 ----
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
!                 hi = mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ else if (x <= arr[mid]) {
+                 hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:40:52,632	[INFO]	346	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '=='})
2020-12-11 12:40:52,634	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 20,28 ****
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
!                 return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 20,31 ----
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
!                 hi = mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:40:52,636	[INFO]	347	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '=='})
2020-12-11 12:40:52,637	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 20,28 ****
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
!                 return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 20,31 ----
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
!                 hi = mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:40:55,685	[INFO]	348	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 12:40:55,687	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 21,28 ****
--- 21,35 ----
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
+             }
+ 
+             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 hi = mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:40:56,610	[INFO]	349	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 12:40:57,410	[INFO]	350	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 12:40:57,412	[INFO]	351	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '=='})
2020-12-11 12:40:57,412	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 20,28 ****
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
!                 return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 20,31 ----
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
!                 hi = mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:40:57,413	[INFO]	352	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '=='})
2020-12-11 12:40:57,414	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:40:57,415	[INFO]	353	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '=='})
2020-12-11 12:40:57,416	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:40:58,296	[INFO]	354	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '=='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 12:40:58,298	[INFO]	355	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '=='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:40:58,299	[INFO]	356	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:40:58,300	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:40:58,301	[INFO]	357	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 12:40:58,301	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:40:58,302	[INFO]	358	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 12:40:59,188	[INFO]	359	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 12:41:02,142	[INFO]	360	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 12:41:02,143	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,29 ****
--- 23,35 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
+                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
+             }
                  lo = mid + 1;
              }
          }

2020-12-11 12:41:02,144	[INFO]	361	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '!='})
2020-12-11 12:41:02,145	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,29 ****
--- 23,35 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
+                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
+             }
                  lo = mid + 1;
              }
          }

2020-12-11 12:41:02,146	[INFO]	362	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '!='})
2020-12-11 12:41:02,147	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:41:03,017	[INFO]	363	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 12:41:03,019	[INFO]	364	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '!='})
2020-12-11 12:41:03,020	[INFO]	365	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '!='})
2020-12-11 12:41:03,020	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:41:03,021	[INFO]	366	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '!='})
2020-12-11 12:41:04,013	[INFO]	367	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 12:41:04,841	[INFO]	368	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '!='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:41:04,844	[INFO]	369	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 12:41:04,845	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:41:04,846	[INFO]	370	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:41:04,847	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:41:04,849	[INFO]	371	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 12:41:04,850	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:41:04,852	[INFO]	372	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:41:04,852	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:41:08,038	[INFO]	373	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:41:08,039	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 20,28 ****
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
!                 return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 20,31 ----
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
!                 lo = mid + 1;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:41:08,041	[INFO]	374	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:41:08,041	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:41:08,946	[INFO]	375	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 12:41:08,947	[INFO]	376	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:41:09,868	[INFO]	377	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:41:11,138	[INFO]	378	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 12:41:26,493	[INFO]	379	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:41:27,381	[INFO]	380	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 12:41:28,274	[INFO]	381	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 12:41:31,181	[INFO]	382	SUCCESS	 7.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '!='})
2020-12-11 12:41:31,185	[INFO]	383	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '=='})
2020-12-11 12:41:31,186	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:41:32,021	[INFO]	384	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '=='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:41:32,023	[INFO]	385	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:41:32,023	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:41:32,024	[INFO]	386	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:41:32,863	[INFO]	387	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 12:41:35,633	[INFO]	388	SUCCESS	 7.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 12:41:35,634	[INFO]	389	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:41:35,635	[INFO]	390	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:41:35,636	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:41:35,637	[INFO]	391	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:41:35,639	[INFO]	392	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:41:35,640	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:41:35,641	[INFO]	393	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<='})
2020-12-11 12:41:35,642	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:41:36,483	[INFO]	394	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:41:37,252	[INFO]	395	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 12:41:37,256	[INFO]	396	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 12:41:37,258	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:41:37,260	[INFO]	397	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<='})
2020-12-11 12:41:37,261	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:41:37,263	[INFO]	398	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:41:37,264	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:41:37,266	[INFO]	399	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:41:38,088	[INFO]	400	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:41:40,847	[INFO]	401	SUCCESS	*1.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<'})
2020-12-11 12:41:40,848	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,28 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 16,31 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo < hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:41:40,849	[INFO]	402	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:41:41,695	[INFO]	403	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 12:41:44,494	[INFO]	404	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<'})
2020-12-11 12:41:44,495	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,28 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 16,28 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo < hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
!                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:41:44,496	[INFO]	405	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 12:41:45,243	[INFO]	406	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:41:48,043	[INFO]	407	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'})
2020-12-11 12:41:48,044	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,28 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 16,28 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo < hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid < 0 || x != arr[mid-1])) {
                  return mid;
!             } if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
!                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:41:50,814	[INFO]	408	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:41:50,815	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,28 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 16,31 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo < hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid < 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:41:51,608	[INFO]	409	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 12:41:54,418	[INFO]	410	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:41:54,419	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,28 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 16,33 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo < hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid < 0 || x != arr[mid-1])) {
!                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
+             }
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:42:10,189	[INFO]	411	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 12:42:13,066	[INFO]	412	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:42:13,067	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,28 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 16,34 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo < hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid < 0 || x != arr[mid-1])) {
!                 lo = mid + 1;
!                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
+             }
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:42:13,751	[INFO]	413	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:42:14,590	[INFO]	414	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 12:42:14,593	[INFO]	415	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:42:14,595	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,28 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 16,33 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo < hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid < 0 || x != arr[mid-1])) {
!                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
+             }
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:42:17,402	[INFO]	416	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<='})
2020-12-11 12:42:18,216	[INFO]	417	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 12:42:21,015	[INFO]	418	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:42:21,017	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,27 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 16,32 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo < hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid < 0 || x != arr[mid-1])) {
!                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
+             }
              } else if (x <= arr[mid]) {
+                 hi = mid;
+             }
+ else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 12:42:21,017	[INFO]	==== END ====
2020-12-11 12:42:21,017	[INFO]	Reason: target fitness reached
2020-12-11 12:42:21,018	[INFO]	
2020-12-11 12:42:21,018	[INFO]	========== EPOCH 6 ==========
2020-12-11 12:42:21,018	[INFO]	==== WARMUP ====
2020-12-11 12:42:36,832	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 12:42:36,832	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 12:42:52,584	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 12:42:52,584	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 12:43:08,335	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 12:43:08,335	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 12:43:24,129	[INFO]	INITIAL	SUCCESS	 3.0	
2020-12-11 12:43:24,129	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 12:43:24,129	[INFO]	==== START ====
2020-12-11 12:43:24,931	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 12:43:25,759	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:43:26,579	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 12:43:27,331	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:43:28,189	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:43:44,078	[INFO]	6	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:43:44,079	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 25,30 ****
--- 25,31 ----
                  hi = mid;
              } else {
                  lo = mid + 1;
+                 lo = mid + 1;
              }
          }
  

2020-12-11 12:43:44,080	[INFO]	7	SUCCESS	+3.0	
2020-12-11 12:43:44,080	[DEBUG]	
2020-12-11 12:43:59,375	[INFO]	8	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 12:43:59,376	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 21,26 ****
--- 21,30 ----
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
+             }
+ 
+             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {

2020-12-11 12:43:59,377	[INFO]	9	SUCCESS	+3.0	
2020-12-11 12:43:59,377	[DEBUG]	
2020-12-11 12:44:00,360	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:44:00,362	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:44:15,589	[INFO]	12	SUCCESS	+3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:44:15,590	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 20,26 ****
--- 20,28 ----
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
+             }
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {

2020-12-11 12:44:30,740	[INFO]	13	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>'})
2020-12-11 12:44:45,872	[INFO]	14	SUCCESS	+3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 12:44:45,874	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 20,27 ****
--- 20,30 ----
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
+             }
              } else if (x <= arr[mid]) {
+                 hi = mid;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 12:44:47,188	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:45:02,456	[INFO]	16	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 12:45:02,457	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,29 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+                 hi = mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:45:03,289	[INFO]	17	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:45:04,141	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 12:45:04,143	[INFO]	19	SUCCESS	+3.0	
2020-12-11 12:45:04,144	[DEBUG]	
2020-12-11 12:45:04,146	[INFO]	20	SUCCESS	+3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:45:04,147	[DEBUG]	
2020-12-11 12:45:05,039	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 12:45:05,040	[INFO]	22	SUCCESS	+3.0	
2020-12-11 12:45:05,040	[DEBUG]	
2020-12-11 12:45:06,072	[INFO]	23	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 12:45:06,905	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 12:45:07,794	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 12:45:08,737	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 12:45:08,741	[INFO]	27	SUCCESS	+3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:45:08,743	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 20,26 ****
--- 20,28 ----
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
+             }
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {

2020-12-11 12:45:09,657	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 12:45:09,658	[INFO]	29	SUCCESS	+3.0	
2020-12-11 12:45:09,659	[DEBUG]	
2020-12-11 12:45:10,573	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 12:45:11,674	[INFO]	31	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:45:11,676	[INFO]	32	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:45:12,625	[INFO]	33	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 12:45:13,800	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 12:45:28,953	[INFO]	35	SUCCESS	 7.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:45:44,967	[INFO]	36	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 12:45:44,968	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 28,33 ****
--- 28,35 ----
              }
          }
  
+         int mid = (lo + hi) / 2;
+ 
          return -1;
      }
  

2020-12-11 12:45:45,939	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 12:45:45,941	[INFO]	38	SUCCESS	+3.0	
2020-12-11 12:45:45,942	[DEBUG]	
2020-12-11 12:45:46,876	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 12:45:46,878	[INFO]	40	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 12:45:47,815	[INFO]	41	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 12:45:48,733	[INFO]	42	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:46:04,263	[INFO]	43	SUCCESS	 5.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:46:05,006	[INFO]	44	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 12:46:20,056	[INFO]	45	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '!='})
2020-12-11 12:46:20,873	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:46:21,741	[INFO]	47	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:46:22,614	[INFO]	48	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 12:46:23,413	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 12:46:24,285	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 12:46:25,174	[INFO]	51	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 12:46:25,175	[INFO]	52	SUCCESS	+3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:46:25,175	[DEBUG]	
2020-12-11 12:46:26,033	[INFO]	53	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 12:46:26,036	[INFO]	54	SUCCESS	+3.0	
2020-12-11 12:46:26,037	[DEBUG]	
2020-12-11 12:46:26,921	[INFO]	55	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:46:26,924	[INFO]	56	SUCCESS	+3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 12:46:26,925	[DEBUG]	
2020-12-11 12:46:26,926	[INFO]	57	SUCCESS	+3.0	
2020-12-11 12:46:26,927	[DEBUG]	
2020-12-11 12:46:27,823	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 12:46:28,736	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:46:29,668	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:46:32,738	[INFO]	61	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 12:46:33,602	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 12:46:49,528	[INFO]	63	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 12:46:49,529	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 28,33 ****
--- 28,35 ----
              }
          }
  
+         int mid = (lo + hi) / 2;
+ 
          return -1;
      }
  

2020-12-11 12:46:49,529	[INFO]	64	SUCCESS	+3.0	
2020-12-11 12:46:49,530	[DEBUG]	
2020-12-11 12:46:50,429	[INFO]	65	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 12:47:05,487	[INFO]	66	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '<'})
2020-12-11 12:47:06,414	[INFO]	67	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:47:07,429	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 12:47:08,773	[INFO]	69	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 12:47:23,855	[INFO]	70	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:47:24,907	[INFO]	71	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 12:47:25,845	[INFO]	72	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 12:47:25,846	[INFO]	73	SUCCESS	+3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:47:25,847	[DEBUG]	
2020-12-11 12:47:41,067	[INFO]	74	SUCCESS	 7.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '>'})
2020-12-11 12:47:41,068	[INFO]	75	SUCCESS	+3.0	
2020-12-11 12:47:41,069	[DEBUG]	
2020-12-11 12:47:42,190	[INFO]	76	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 12:47:43,967	[INFO]	77	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 12:47:49,788	[INFO]	78	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '!='})
2020-12-11 12:47:49,789	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,22 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
--- 16,22 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo != hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {

2020-12-11 12:47:49,790	[INFO]	==== END ====
2020-12-11 12:47:49,790	[INFO]	Reason: target fitness reached
2020-12-11 12:47:49,792	[INFO]	
2020-12-11 12:47:49,793	[INFO]	========== EPOCH 7 ==========
2020-12-11 12:47:49,793	[INFO]	==== WARMUP ====
2020-12-11 12:48:05,671	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 12:48:05,672	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 12:48:21,619	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 12:48:21,620	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 12:48:37,429	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 12:48:37,429	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 12:48:52,612	[INFO]	INITIAL	SUCCESS	 3.0	
2020-12-11 12:48:52,613	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 12:48:52,613	[INFO]	==== START ====
2020-12-11 12:48:52,616	[INFO]	1	SUCCESS	+3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '!='})
2020-12-11 12:48:52,617	[DEBUG]	
2020-12-11 12:48:52,618	[INFO]	2	SUCCESS	+3.0	
2020-12-11 12:48:52,619	[DEBUG]	
2020-12-11 12:48:54,489	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 12:48:56,240	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 12:48:57,951	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 12:49:00,124	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 12:49:02,206	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 12:49:03,736	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 12:49:19,185	[INFO]	9	SUCCESS	+3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>'})
2020-12-11 12:49:19,185	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,25 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
--- 19,25 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x > arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;

2020-12-11 12:49:20,009	[INFO]	10	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:49:21,001	[INFO]	11	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 12:49:21,807	[INFO]	12	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 12:49:21,808	[INFO]	13	SUCCESS	+3.0	
2020-12-11 12:49:21,808	[DEBUG]	
2020-12-11 12:49:24,595	[INFO]	14	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 12:49:39,657	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 12:49:40,590	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 12:49:43,801	[INFO]	17	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:49:44,790	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 12:49:44,794	[INFO]	19	SUCCESS	+3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:49:44,795	[DEBUG]	
2020-12-11 12:49:44,797	[INFO]	20	SUCCESS	+3.0	
2020-12-11 12:49:44,798	[DEBUG]	
2020-12-11 12:49:47,832	[INFO]	21	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '=='})
2020-12-11 12:49:48,710	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 12:49:51,784	[INFO]	23	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '>'})
2020-12-11 12:49:52,741	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 12:50:07,955	[INFO]	25	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 12:50:07,956	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 24,29 ****
--- 24,32 ----
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
+                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
+             }
                  lo = mid + 1;
              }
          }

2020-12-11 12:50:07,956	[INFO]	26	SUCCESS	+3.0	
2020-12-11 12:50:07,957	[DEBUG]	
2020-12-11 12:50:08,784	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 12:50:09,712	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 12:50:11,275	[INFO]	29	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 12:50:12,428	[INFO]	30	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 12:50:13,275	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 12:50:14,245	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 12:50:15,298	[INFO]	33	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:50:16,219	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 12:50:17,063	[INFO]	35	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:50:18,000	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 12:50:18,001	[INFO]	37	SUCCESS	+3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 12:50:18,002	[DEBUG]	
2020-12-11 12:50:19,400	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 12:50:19,401	[INFO]	39	SUCCESS	+3.0	
2020-12-11 12:50:19,402	[DEBUG]	
2020-12-11 12:50:19,403	[INFO]	40	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 12:50:20,925	[INFO]	41	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 12:50:24,610	[INFO]	42	SUCCESS	*2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:50:24,610	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 12:50:24,611	[INFO]	43	SUCCESS	 3.0	
2020-12-11 12:50:25,448	[INFO]	44	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 12:50:26,387	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 12:50:29,436	[INFO]	46	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:50:32,393	[INFO]	47	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '>'})
2020-12-11 12:50:33,265	[INFO]	48	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 12:50:34,116	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 12:50:34,969	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 12:50:38,482	[INFO]	51	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '!='})
2020-12-11 12:50:38,484	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,27 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 19,28 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid != 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 12:50:41,607	[INFO]	52	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:50:41,608	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 12:50:42,440	[INFO]	53	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 12:50:42,441	[INFO]	54	SUCCESS	 3.0	
2020-12-11 12:50:45,263	[INFO]	55	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>'})
2020-12-11 12:50:45,266	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,27 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 19,28 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x > arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 12:50:46,104	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 12:50:46,106	[INFO]	57	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:50:46,107	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 12:51:01,812	[INFO]	58	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:51:01,814	[INFO]	59	SUCCESS	 3.0	
2020-12-11 12:51:03,467	[INFO]	60	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:51:18,562	[INFO]	61	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 12:51:20,145	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:51:24,722	[INFO]	63	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:51:25,834	[INFO]	64	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:51:27,095	[INFO]	65	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:51:27,932	[INFO]	66	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 12:51:27,936	[INFO]	67	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 12:51:28,824	[INFO]	68	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:51:28,826	[INFO]	69	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '!='})
2020-12-11 12:51:28,826	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 12:51:29,802	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '!='}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:51:29,804	[INFO]	71	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:51:29,804	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 12:51:29,805	[INFO]	72	SUCCESS	 3.0	
2020-12-11 12:51:30,735	[INFO]	73	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:51:31,624	[INFO]	74	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:51:32,535	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 12:51:35,608	[INFO]	76	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 12:51:35,609	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 20,27 ****
--- 20,29 ----
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 hi = mid;
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 12:51:35,610	[INFO]	77	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:51:35,611	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 12:51:35,611	[INFO]	78	SUCCESS	 3.0	
2020-12-11 12:51:36,624	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 12:51:37,415	[INFO]	80	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 12:51:38,284	[INFO]	81	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 12:51:41,218	[INFO]	82	SUCCESS	 7.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '<'})
2020-12-11 12:51:42,083	[INFO]	83	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:51:42,086	[INFO]	84	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:51:42,985	[INFO]	85	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 12:51:44,139	[INFO]	86	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 12:51:44,142	[INFO]	87	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:51:44,143	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 12:51:44,144	[INFO]	88	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:51:44,146	[INFO]	89	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 12:51:44,147	[INFO]	90	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:51:44,148	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 12:51:44,149	[INFO]	91	SUCCESS	 3.0	
2020-12-11 12:51:45,260	[INFO]	92	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 12:51:45,262	[INFO]	93	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '!='})
2020-12-11 12:51:45,262	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,27 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 19,28 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid != 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 12:51:46,335	[INFO]	94	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 12:51:47,469	[INFO]	95	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 12:51:50,843	[INFO]	96	SUCCESS	*1.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '!='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<'})
2020-12-11 12:51:50,844	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,27 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 16,28 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo < hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid != 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 12:51:51,585	[INFO]	97	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '!='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 12:51:51,589	[INFO]	98	SUCCESS	 2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '!='})
2020-12-11 12:51:52,400	[INFO]	99	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '!='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:51:55,198	[INFO]	100	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<'})
2020-12-11 12:51:55,199	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,27 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 16,28 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo < hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 12:51:55,200	[INFO]	101	SUCCESS	 2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:51:58,081	[INFO]	102	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<'})
2020-12-11 12:51:58,082	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,22 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
--- 16,22 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo < hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {

2020-12-11 12:51:58,082	[INFO]	==== END ====
2020-12-11 12:51:58,082	[INFO]	Reason: target fitness reached
2020-12-11 12:51:58,083	[INFO]	
2020-12-11 12:51:58,083	[INFO]	========== EPOCH 8 ==========
2020-12-11 12:51:58,083	[INFO]	==== WARMUP ====
2020-12-11 12:52:13,824	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 12:52:13,825	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 12:52:29,650	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 12:52:29,650	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 12:52:45,557	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 12:52:45,557	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 12:53:01,536	[INFO]	INITIAL	SUCCESS	 3.0	
2020-12-11 12:53:01,537	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 12:53:01,537	[INFO]	==== START ====
2020-12-11 12:53:17,569	[INFO]	1	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:53:18,705	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 12:53:33,835	[INFO]	3	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 12:53:34,698	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 12:53:35,561	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 12:53:36,421	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 12:53:37,261	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 12:53:40,214	[INFO]	8	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:53:41,038	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 12:53:41,905	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 12:53:42,764	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 12:53:58,729	[INFO]	12	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='})
2020-12-11 12:53:58,732	[INFO]	13	SUCCESS	+3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 12:53:58,733	[DEBUG]	
2020-12-11 12:53:58,735	[INFO]	14	SUCCESS	+3.0	
2020-12-11 12:53:58,736	[DEBUG]	
2020-12-11 12:53:59,777	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:53:59,778	[INFO]	16	SUCCESS	+3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<='})
2020-12-11 12:53:59,779	[DEBUG]	
2020-12-11 12:54:00,690	[INFO]	17	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:54:00,691	[INFO]	18	SUCCESS	+3.0	
2020-12-11 12:54:00,691	[DEBUG]	
2020-12-11 12:54:15,751	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:54:16,637	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:54:17,516	[INFO]	21	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 12:54:18,309	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 12:54:19,306	[INFO]	23	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 12:54:22,889	[INFO]	24	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:54:23,836	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 12:54:23,838	[INFO]	26	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:54:39,177	[INFO]	27	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 12:54:39,178	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 28,33 ****
--- 28,45 ----
              }
          }
  
+         while (lo <= hi) {
+             int mid = (lo + hi) / 2; // check if this is floor division
+ 
+             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
+             } else if (x <= arr[mid]) {
+                 hi = mid;
+             } else {
+                 lo = mid + 1;
+             }
+         }
+ 
          return -1;
      }
  

2020-12-11 12:54:39,179	[INFO]	28	SUCCESS	+3.0	
2020-12-11 12:54:39,179	[DEBUG]	
2020-12-11 12:54:40,143	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 12:54:41,128	[INFO]	30	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 12:54:42,250	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 12:54:57,311	[INFO]	32	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '>'})
2020-12-11 12:54:58,447	[INFO]	33	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 12:54:59,257	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:55:00,111	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 12:55:15,918	[INFO]	36	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 12:55:15,919	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 21,26 ****
--- 21,30 ----
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
+             }
+ 
+             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {

2020-12-11 12:55:16,788	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:55:16,789	[INFO]	38	SUCCESS	+3.0	
2020-12-11 12:55:16,789	[DEBUG]	
2020-12-11 12:55:17,675	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 12:55:18,587	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 12:55:33,691	[INFO]	41	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:55:33,692	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 20,25 ****
--- 20,26 ----
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 lo = mid + 1;
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;

2020-12-11 12:55:34,712	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 12:55:34,715	[INFO]	43	SUCCESS	+3.0	
2020-12-11 12:55:34,716	[DEBUG]	
2020-12-11 12:55:35,724	[INFO]	44	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 12:55:50,807	[INFO]	45	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 12:55:50,808	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,29 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+                 hi = mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:55:51,708	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 12:56:07,654	[INFO]	47	SUCCESS	 7.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '>'})
2020-12-11 12:56:08,428	[INFO]	48	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 12:56:09,176	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 12:56:09,960	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 12:56:09,961	[INFO]	51	SUCCESS	+3.0	
2020-12-11 12:56:09,962	[DEBUG]	
2020-12-11 12:56:10,905	[INFO]	52	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 12:56:11,771	[INFO]	53	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 12:56:12,692	[INFO]	54	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 12:56:13,540	[INFO]	55	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 12:56:29,173	[INFO]	56	SUCCESS	 7.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:56:44,290	[INFO]	57	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>'})
2020-12-11 12:56:45,373	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 12:56:46,675	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:56:46,677	[INFO]	60	SUCCESS	+3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:56:46,678	[DEBUG]	
2020-12-11 12:56:46,680	[INFO]	61	SUCCESS	+3.0	
2020-12-11 12:56:46,681	[DEBUG]	
2020-12-11 12:56:46,685	[INFO]	62	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 12:56:46,686	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,29 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+                 hi = mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:56:50,031	[INFO]	63	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '=='})
2020-12-11 12:57:05,637	[INFO]	64	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:57:05,638	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 20,27 ****
--- 20,30 ----
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
+             }
              } else if (x <= arr[mid]) {
+                 hi = mid;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 12:57:06,477	[INFO]	65	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 12:57:06,480	[INFO]	66	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 12:57:06,481	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,29 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+                 hi = mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 12:57:07,359	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 12:57:07,362	[INFO]	68	SUCCESS	+3.0	
2020-12-11 12:57:07,363	[DEBUG]	
2020-12-11 12:57:08,199	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 12:57:09,040	[INFO]	70	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 12:57:09,041	[INFO]	71	SUCCESS	+3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:57:09,042	[DEBUG]	
2020-12-11 12:57:09,042	[INFO]	72	SUCCESS	+3.0	
2020-12-11 12:57:09,043	[DEBUG]	
2020-12-11 12:57:09,878	[INFO]	73	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 12:57:10,749	[INFO]	74	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 12:57:11,587	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 12:57:12,482	[INFO]	76	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:57:28,358	[INFO]	77	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<'})
2020-12-11 12:57:28,359	[INFO]	78	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 12:57:29,206	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 12:57:29,996	[INFO]	80	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:57:30,891	[INFO]	81	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 12:57:30,893	[INFO]	82	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 12:57:45,984	[INFO]	83	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 12:57:45,985	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 28,33 ****
--- 28,35 ----
              }
          }
  
+         int mid = (lo + hi) / 2;
+ 
          return -1;
      }
  

2020-12-11 12:57:45,986	[INFO]	84	SUCCESS	+3.0	
2020-12-11 12:57:45,987	[DEBUG]	
2020-12-11 12:58:01,044	[INFO]	85	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:58:01,923	[INFO]	86	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 12:58:17,956	[INFO]	87	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 12:58:17,957	[INFO]	88	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 12:58:17,958	[INFO]	89	SUCCESS	 7.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:58:18,858	[INFO]	90	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 12:58:18,859	[INFO]	91	SUCCESS	+3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '!='})
2020-12-11 12:58:18,860	[DEBUG]	
2020-12-11 12:58:18,861	[INFO]	92	SUCCESS	+3.0	
2020-12-11 12:58:18,861	[DEBUG]	
2020-12-11 12:58:19,636	[INFO]	93	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 12:58:20,411	[INFO]	94	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:58:21,308	[INFO]	95	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 12:58:22,064	[INFO]	96	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 12:58:22,956	[INFO]	97	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 12:58:22,957	[INFO]	98	SUCCESS	+3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:58:22,957	[DEBUG]	
2020-12-11 12:58:22,958	[INFO]	99	SUCCESS	+3.0	
2020-12-11 12:58:22,959	[DEBUG]	
2020-12-11 12:58:23,835	[INFO]	100	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 12:58:24,706	[INFO]	101	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:58:25,568	[INFO]	102	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 12:58:26,470	[INFO]	103	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 12:58:27,245	[INFO]	104	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 12:58:30,177	[INFO]	105	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 12:58:33,208	[INFO]	106	SUCCESS	*2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:58:33,209	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 12:58:33,210	[INFO]	107	SUCCESS	 3.0	
2020-12-11 12:58:34,074	[INFO]	108	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 12:58:37,020	[INFO]	109	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='})
2020-12-11 12:58:37,021	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,27 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 19,28 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid >= 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 12:58:37,820	[INFO]	110	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 12:58:38,571	[INFO]	111	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 12:58:54,319	[INFO]	112	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='})
2020-12-11 12:58:55,044	[INFO]	113	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 12:58:57,941	[INFO]	114	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:58:58,781	[INFO]	115	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 12:58:59,617	[INFO]	116	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 12:59:00,497	[INFO]	117	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 12:59:15,551	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 12:59:16,384	[INFO]	119	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:59:16,386	[INFO]	120	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 12:59:17,278	[INFO]	121	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:59:17,282	[INFO]	122	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:59:17,284	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 12:59:33,137	[INFO]	123	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 12:59:33,855	[INFO]	124	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 12:59:34,676	[INFO]	125	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 12:59:35,521	[INFO]	126	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 12:59:35,523	[INFO]	127	SUCCESS	 3.0	
2020-12-11 12:59:36,404	[INFO]	128	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 12:59:37,238	[INFO]	129	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 12:59:40,121	[INFO]	130	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '>='})
2020-12-11 12:59:43,239	[INFO]	131	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 12:59:44,054	[INFO]	132	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 12:59:44,954	[INFO]	133	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 12:59:45,851	[INFO]	134	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 12:59:48,853	[INFO]	135	SUCCESS	*1.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<'})
2020-12-11 12:59:48,855	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,27 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 16,28 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo < hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 12:59:49,748	[INFO]	136	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 12:59:50,665	[INFO]	137	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 12:59:51,549	[INFO]	138	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:00:07,496	[INFO]	139	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:00:08,271	[INFO]	140	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<'}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:00:09,119	[INFO]	141	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:00:09,882	[INFO]	142	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:00:12,803	[INFO]	143	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<'})
2020-12-11 13:00:12,804	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,22 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
--- 16,22 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo < hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {

2020-12-11 13:00:12,804	[INFO]	==== END ====
2020-12-11 13:00:12,804	[INFO]	Reason: target fitness reached
2020-12-11 13:00:12,805	[INFO]	
2020-12-11 13:00:12,805	[INFO]	========== EPOCH 9 ==========
2020-12-11 13:00:12,806	[INFO]	==== WARMUP ====
2020-12-11 13:00:28,636	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 13:00:28,636	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 13:00:44,658	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 13:00:44,659	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 13:01:00,695	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 13:01:00,696	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 13:01:16,589	[INFO]	INITIAL	SUCCESS	 3.0	
2020-12-11 13:01:16,589	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 13:01:16,589	[INFO]	==== START ====
2020-12-11 13:01:19,663	[INFO]	1	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '>='})
2020-12-11 13:01:20,546	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:01:20,547	[INFO]	3	SUCCESS	+3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:01:20,548	[DEBUG]	
2020-12-11 13:01:35,597	[INFO]	4	SUCCESS	+3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 13:01:35,598	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 24,29 ****
--- 24,32 ----
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
+                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
+             }
                  lo = mid + 1;
              }
          }

2020-12-11 13:01:35,599	[INFO]	5	SUCCESS	+3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:01:35,599	[DEBUG]	
2020-12-11 13:01:36,312	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:01:36,314	[INFO]	7	SUCCESS	+3.0	
2020-12-11 13:01:36,314	[DEBUG]	
2020-12-11 13:01:37,179	[INFO]	8	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:01:38,050	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:01:38,927	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:01:39,818	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:01:40,557	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 13:01:41,395	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:01:42,247	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:01:43,125	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 13:01:44,014	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:01:59,065	[INFO]	17	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:01:59,065	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 28,33 ****
--- 28,35 ----
              }
          }
  
+         int mid = (lo + hi) / 2;
+ 
          return -1;
      }
  

2020-12-11 13:02:02,290	[INFO]	18	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '>='})
2020-12-11 13:02:02,294	[INFO]	19	SUCCESS	+3.0	
2020-12-11 13:02:02,295	[DEBUG]	
2020-12-11 13:02:03,317	[INFO]	20	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:02:18,377	[INFO]	21	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:02:18,378	[INFO]	22	SUCCESS	+3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:02:18,378	[DEBUG]	
2020-12-11 13:02:18,379	[INFO]	23	SUCCESS	+3.0	
2020-12-11 13:02:18,379	[DEBUG]	
2020-12-11 13:02:19,253	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 13:02:20,101	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:02:35,982	[INFO]	26	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 13:02:35,983	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,31 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+             }
+ else if (x <= arr[mid]) {
+                 hi = mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:02:35,983	[INFO]	27	SUCCESS	+3.0	
2020-12-11 13:02:35,984	[DEBUG]	
2020-12-11 13:02:36,714	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:02:37,447	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 13:02:37,448	[INFO]	30	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:02:38,190	[INFO]	31	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:02:38,916	[INFO]	32	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 13:02:39,633	[INFO]	33	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 13:02:40,454	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:02:43,432	[INFO]	35	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<'})
2020-12-11 13:02:43,434	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,22 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
--- 16,22 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo < hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {

2020-12-11 13:02:43,434	[INFO]	==== END ====
2020-12-11 13:02:43,435	[INFO]	Reason: target fitness reached
2020-12-11 13:02:43,437	[INFO]	
2020-12-11 13:02:43,437	[INFO]	========== EPOCH 10 ==========
2020-12-11 13:02:43,438	[INFO]	==== WARMUP ====
2020-12-11 13:02:59,214	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 13:02:59,214	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 13:03:15,021	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 13:03:15,021	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 13:03:30,850	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 13:03:30,850	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 13:03:46,600	[INFO]	INITIAL	SUCCESS	 3.0	
2020-12-11 13:03:46,600	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 13:03:46,600	[INFO]	==== START ====
2020-12-11 13:03:47,362	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:03:48,216	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:03:49,144	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:03:50,173	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 13:03:51,264	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:03:52,334	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 13:03:53,915	[INFO]	7	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:03:55,440	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:03:56,616	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:03:58,112	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:03:59,648	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 13:04:01,230	[INFO]	12	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:04:02,717	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:04:04,210	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:04:19,309	[INFO]	15	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '>'})
2020-12-11 13:04:34,611	[INFO]	16	SUCCESS	 7.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:04:35,906	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 13:04:51,536	[INFO]	18	SUCCESS	+3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:04:51,537	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 20,26 ****
--- 20,28 ----
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
+             }
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {

2020-12-11 13:04:51,539	[INFO]	19	SUCCESS	+3.0	
2020-12-11 13:04:51,539	[DEBUG]	
2020-12-11 13:04:55,820	[INFO]	20	SUCCESS	+3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '<='})
2020-12-11 13:04:55,821	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,25 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
--- 19,25 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x <= arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;

2020-12-11 13:04:55,822	[INFO]	21	SUCCESS	+3.0	
2020-12-11 13:04:55,823	[DEBUG]	
2020-12-11 13:05:11,144	[INFO]	22	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:05:11,145	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 20,25 ****
--- 20,26 ----
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 lo = mid + 1;
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;

2020-12-11 13:05:11,146	[INFO]	23	SUCCESS	+3.0	
2020-12-11 13:05:11,146	[DEBUG]	
2020-12-11 13:05:15,041	[INFO]	24	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:05:16,229	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 13:05:16,231	[INFO]	26	SUCCESS	+3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<='})
2020-12-11 13:05:16,232	[DEBUG]	
2020-12-11 13:05:18,192	[INFO]	27	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:05:18,195	[INFO]	28	SUCCESS	+3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '!='})
2020-12-11 13:05:18,195	[DEBUG]	
2020-12-11 13:05:18,196	[INFO]	29	SUCCESS	+3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '!='})
2020-12-11 13:05:18,197	[DEBUG]	
2020-12-11 13:05:18,199	[INFO]	30	SUCCESS	+3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '!='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 13:05:18,199	[DEBUG]	
2020-12-11 13:05:18,201	[INFO]	31	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '!='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 13:05:19,437	[INFO]	32	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '!='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:05:19,439	[INFO]	33	SUCCESS	+3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 13:05:19,440	[DEBUG]	
2020-12-11 13:05:20,699	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:05:20,701	[INFO]	35	SUCCESS	+3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 13:05:20,702	[DEBUG]	
2020-12-11 13:05:20,703	[INFO]	36	SUCCESS	+3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 13:05:20,704	[DEBUG]	
2020-12-11 13:05:24,960	[INFO]	37	SUCCESS	*2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:05:24,961	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:05:24,963	[INFO]	38	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:05:24,963	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:05:26,034	[INFO]	39	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:05:27,541	[INFO]	40	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:05:27,543	[INFO]	41	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:05:27,544	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:05:28,891	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:05:28,894	[INFO]	43	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:05:28,895	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:05:28,897	[INFO]	44	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 13:05:28,899	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:05:28,902	[INFO]	45	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 13:05:28,909	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:05:30,103	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 13:05:31,452	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 13:05:31,454	[INFO]	48	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:05:31,455	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:05:33,067	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:05:34,447	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:05:49,551	[INFO]	51	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '!='})
2020-12-11 13:05:49,553	[INFO]	52	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:05:49,553	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:05:53,321	[INFO]	53	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '=='})
2020-12-11 13:05:53,322	[INFO]	54	SUCCESS	 3.0	
2020-12-11 13:05:53,324	[INFO]	55	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '<'})
2020-12-11 13:05:53,325	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:06:08,388	[INFO]	56	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '<'})
2020-12-11 13:06:08,391	[INFO]	57	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:06:08,391	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:06:08,392	[INFO]	58	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:06:08,393	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:06:08,394	[INFO]	59	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:06:08,395	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:06:09,542	[INFO]	60	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:06:09,545	[INFO]	61	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 13:06:10,579	[INFO]	62	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:06:10,581	[INFO]	63	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:06:10,582	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:06:10,584	[INFO]	64	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:06:10,585	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:06:10,587	[INFO]	65	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:06:10,588	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:06:10,589	[INFO]	66	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:06:10,590	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:06:10,591	[INFO]	67	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:06:10,591	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:06:14,528	[INFO]	68	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:06:14,529	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:06:15,658	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 13:06:16,919	[INFO]	70	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:06:16,923	[INFO]	71	SUCCESS	 3.0	
2020-12-11 13:06:20,585	[INFO]	72	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:06:20,586	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,39 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 return -1;
+             } else {
+                 lo = mid + 1;
+             }
+         }
+ 
+         while (lo <= hi) {
+             int mid = (lo + hi) / 2; // check if this is floor division
+ 
+             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
+             } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:06:21,558	[INFO]	73	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:06:21,560	[INFO]	74	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:06:21,561	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:06:22,855	[INFO]	75	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 13:06:22,856	[INFO]	76	SUCCESS	 3.0	
2020-12-11 13:06:24,000	[INFO]	77	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:06:25,302	[INFO]	78	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:06:30,141	[INFO]	79	SUCCESS	 5.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:06:31,689	[INFO]	80	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 13:06:33,022	[INFO]	81	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:06:34,339	[INFO]	82	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 13:06:35,420	[INFO]	83	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:06:50,512	[INFO]	84	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:06:50,515	[INFO]	85	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:06:54,500	[INFO]	86	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:06:54,502	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,29 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 lo = mid + 1;
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:06:55,545	[INFO]	87	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 13:06:56,870	[INFO]	88	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:06:56,873	[INFO]	89	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<='})
2020-12-11 13:06:56,874	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,29 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 lo = mid + 1;
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:06:57,867	[INFO]	90	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:06:57,868	[INFO]	91	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:06:57,869	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,29 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 lo = mid + 1;
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:07:01,413	[INFO]	92	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:07:01,414	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:07:02,335	[INFO]	93	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:07:02,338	[INFO]	94	SUCCESS	 3.0	
2020-12-11 13:07:03,239	[INFO]	95	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:07:04,134	[INFO]	96	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:07:04,135	[INFO]	97	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:07:05,020	[INFO]	98	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:07:05,023	[INFO]	99	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:07:05,023	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:07:05,963	[INFO]	100	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 13:07:05,964	[INFO]	101	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:07:05,965	[INFO]	102	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:07:05,966	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:07:06,887	[INFO]	103	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 13:07:07,707	[INFO]	104	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:07:07,709	[INFO]	105	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<='})
2020-12-11 13:07:07,710	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:07:07,711	[INFO]	106	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:07:07,711	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:07:07,712	[INFO]	107	SUCCESS	 3.0	
2020-12-11 13:07:10,911	[INFO]	108	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:07:12,280	[INFO]	109	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:07:13,711	[INFO]	110	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 13:07:15,001	[INFO]	111	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:07:15,794	[INFO]	112	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:07:16,874	[INFO]	113	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 13:07:17,671	[INFO]	114	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:07:33,428	[INFO]	115	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:07:36,215	[INFO]	116	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:07:37,120	[INFO]	117	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:07:40,117	[INFO]	118	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<='})
2020-12-11 13:07:40,119	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,27 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 19,28 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid <= 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:07:42,912	[INFO]	119	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:07:42,915	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,29 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
              }
          }
--- 19,31 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid <= 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
+                 lo = mid + 1;
                  lo = mid + 1;
              }
          }

2020-12-11 13:07:42,918	[INFO]	120	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:07:42,920	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,29 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
              }
          }
--- 19,31 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid <= 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
+                 lo = mid + 1;
                  lo = mid + 1;
              }
          }

2020-12-11 13:07:42,922	[INFO]	121	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:07:42,923	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,27 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 19,28 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid <= 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:07:43,641	[INFO]	122	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:07:43,642	[INFO]	123	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:07:43,642	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:07:43,643	[INFO]	124	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 13:07:43,644	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:07:44,460	[INFO]	125	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:07:44,461	[INFO]	126	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 13:07:47,298	[INFO]	127	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 13:07:47,299	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 21,27 ****
--- 21,32 ----
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
+             }
+ 
+             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:07:48,059	[INFO]	128	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:07:48,064	[INFO]	129	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 13:07:48,066	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 21,27 ****
--- 21,32 ----
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
+             }
+ 
+             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:07:48,808	[INFO]	130	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:07:48,813	[INFO]	131	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 13:07:48,814	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 21,27 ****
--- 21,32 ----
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
+             }
+ 
+             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:07:48,816	[INFO]	132	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:07:48,817	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:07:49,627	[INFO]	133	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:07:49,628	[INFO]	134	SUCCESS	 3.0	
2020-12-11 13:07:50,402	[INFO]	135	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:07:50,407	[INFO]	136	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:07:51,139	[INFO]	137	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:07:51,971	[INFO]	138	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:07:52,808	[INFO]	139	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 13:07:54,178	[INFO]	140	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:07:55,285	[INFO]	141	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 13:07:56,277	[INFO]	142	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:07:59,181	[INFO]	143	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 13:07:59,182	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 21,27 ****
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 21,31 ----
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
!                 return mid;
!             }
! else if (x <= arr[mid]) {
!                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:08:00,054	[INFO]	144	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:08:03,039	[INFO]	145	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<'})
2020-12-11 13:08:03,041	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 21,27 ****
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 21,31 ----
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
!                 return mid;
!             }
! else if (x < arr[mid]) {
!                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:08:07,212	[INFO]	146	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<'})
2020-12-11 13:08:07,214	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 21,27 ****
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 21,28 ----
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x < arr[mid]) {
!                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:08:22,297	[INFO]	147	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:08:22,298	[INFO]	148	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:08:22,299	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:08:37,355	[INFO]	149	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:08:37,356	[INFO]	150	SUCCESS	 3.0	
2020-12-11 13:08:38,136	[INFO]	151	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 13:08:42,345	[INFO]	152	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:08:42,346	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,40 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
+                 hi = mid;
+             } else {
+                 lo = mid + 1;
+             }
+         }
+ 
+         while (lo <= hi) {
+             int mid = (lo + hi) / 2; // check if this is floor division
+ 
+             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
+             } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:08:42,347	[INFO]	153	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:08:42,348	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:08:42,348	[INFO]	154	SUCCESS	 3.0	
2020-12-11 13:08:42,351	[INFO]	155	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:08:46,565	[INFO]	156	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '!='})
2020-12-11 13:08:46,566	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,27 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 19,28 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid != 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:08:47,499	[INFO]	157	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 13:08:50,546	[INFO]	158	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:08:50,547	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,37 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             if (x == arr[mid] && (mid != 0 || x != arr[mid-1])) {
+                 return mid;
+             } else if (x <= arr[mid]) {
+                 lo = mid + 1;
+                 hi = mid;
+             } else {
+                 lo = mid + 1;
+             }
+         }
+ 
+         while (lo <= hi) {
+             int mid = (lo + hi) / 2; // check if this is floor division
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:08:50,549	[INFO]	159	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '!='})
2020-12-11 13:08:50,550	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,27 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 19,28 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid != 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:08:51,505	[INFO]	160	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:08:52,297	[INFO]	161	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '!='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:08:53,184	[INFO]	162	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:09:09,179	[INFO]	163	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '!='})
2020-12-11 13:09:10,114	[INFO]	164	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:09:10,116	[INFO]	165	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '!='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:09:10,117	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:09:10,118	[INFO]	166	SUCCESS	 3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '!='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:09:11,136	[INFO]	167	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '!='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:09:11,967	[INFO]	168	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '!='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 13:09:11,969	[INFO]	169	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:09:11,970	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:09:11,972	[INFO]	170	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:09:11,972	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:09:13,418	[INFO]	171	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:09:17,715	[INFO]	172	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:09:18,690	[INFO]	173	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 13:09:18,692	[INFO]	174	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:09:18,693	[INFO]	175	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<='})
2020-12-11 13:09:18,693	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,27 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 19,28 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid <= 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:09:18,694	[INFO]	176	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<='})
2020-12-11 13:09:18,695	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,27 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 19,28 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid <= 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:09:19,514	[INFO]	177	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:09:20,719	[INFO]	178	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 13:09:21,763	[INFO]	179	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:09:37,033	[INFO]	180	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<='})
2020-12-11 13:09:37,035	[INFO]	181	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:09:37,035	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:09:37,927	[INFO]	182	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:09:37,929	[INFO]	183	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 13:09:37,930	[INFO]	184	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:09:37,930	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:09:41,623	[INFO]	185	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:09:41,624	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 20,27 ****
--- 20,30 ----
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
+             }
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:09:42,523	[INFO]	186	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:09:58,086	[INFO]	187	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:09:58,945	[INFO]	188	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:09:58,947	[INFO]	189	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:09:58,947	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:09:58,948	[INFO]	190	SUCCESS	 3.0	
2020-12-11 13:10:01,965	[INFO]	191	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<'})
2020-12-11 13:10:01,966	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 21,27 ****
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 21,28 ----
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x < arr[mid]) {
!                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:10:04,973	[INFO]	192	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<'}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:10:20,965	[INFO]	193	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<'})
2020-12-11 13:10:20,967	[INFO]	194	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:10:20,967	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 21,27 ****
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 21,28 ----
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x < arr[mid]) {
!                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:10:20,968	[INFO]	195	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:10:20,969	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 21,27 ****
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 21,28 ----
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x < arr[mid]) {
!                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:10:20,970	[INFO]	196	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:10:20,970	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 21,27 ****
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 21,28 ----
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x < arr[mid]) {
!                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:10:25,156	[INFO]	197	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:10:40,234	[INFO]	198	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:10:40,236	[INFO]	199	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<'})
2020-12-11 13:10:40,239	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 21,27 ****
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 21,28 ----
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x < arr[mid]) {
!                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:10:40,241	[INFO]	200	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:10:40,242	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:10:41,961	[INFO]	201	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:10:41,962	[INFO]	202	SUCCESS	 3.0	
2020-12-11 13:10:43,241	[INFO]	203	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:10:46,443	[INFO]	204	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:10:46,444	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,33 ****
--- 22,36 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;
              }
          }
  
+         int mid = (lo + hi) / 2;
+ 
          return -1;
      }
  

2020-12-11 13:11:02,428	[INFO]	205	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:11:02,430	[INFO]	206	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:11:02,430	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:11:03,346	[INFO]	207	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:11:03,348	[INFO]	208	SUCCESS	 3.0	
2020-12-11 13:11:06,417	[INFO]	209	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:11:09,609	[INFO]	210	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:11:09,611	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,29 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 lo = mid + 1;
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:11:12,748	[INFO]	211	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:11:12,749	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:11:12,750	[INFO]	212	SUCCESS	 3.0	
2020-12-11 13:11:13,541	[INFO]	213	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 13:11:13,544	[INFO]	214	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:11:13,545	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:11:13,546	[INFO]	215	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:11:13,547	[INFO]	216	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:11:13,548	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:11:13,549	[INFO]	217	SUCCESS	 3.0	
2020-12-11 13:11:14,429	[INFO]	218	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 13:11:15,318	[INFO]	219	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:11:16,210	[INFO]	220	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:11:16,213	[INFO]	221	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '!='})
2020-12-11 13:11:16,214	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:11:19,339	[INFO]	222	SUCCESS	 7.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '!='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '<'})
2020-12-11 13:11:19,340	[INFO]	223	SUCCESS	 3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '!='})
2020-12-11 13:11:19,341	[INFO]	224	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:11:19,341	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:11:20,034	[INFO]	225	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:11:20,036	[INFO]	226	SUCCESS	 3.0	
2020-12-11 13:11:20,885	[INFO]	227	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:11:21,633	[INFO]	228	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:11:22,482	[INFO]	229	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:11:23,333	[INFO]	230	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:11:24,644	[INFO]	231	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:11:25,503	[INFO]	232	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:11:28,670	[INFO]	233	SUCCESS	 6.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '>='})
2020-12-11 13:11:29,506	[INFO]	234	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 13:11:30,402	[INFO]	235	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:11:31,313	[INFO]	236	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:11:34,295	[INFO]	237	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '>='})
2020-12-11 13:11:35,192	[INFO]	238	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:11:38,298	[INFO]	239	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:11:41,523	[INFO]	240	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:11:41,524	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,39 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 return -1;
+             } else {
+                 lo = mid + 1;
+             }
+         }
+ 
+         while (lo <= hi) {
+             int mid = (lo + hi) / 2; // check if this is floor division
+ 
+             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
+             } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:11:41,525	[INFO]	241	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:11:41,526	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:11:41,527	[INFO]	242	SUCCESS	 3.0	
2020-12-11 13:11:42,330	[INFO]	243	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:11:45,204	[INFO]	244	SUCCESS	 5.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '>='})
2020-12-11 13:11:48,079	[INFO]	245	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='})
2020-12-11 13:11:48,080	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,28 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid >= 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:12:03,898	[INFO]	246	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='})
2020-12-11 13:12:04,636	[INFO]	247	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:12:20,575	[INFO]	248	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:12:20,577	[INFO]	249	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:12:20,577	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:12:20,578	[INFO]	250	SUCCESS	 3.0	
2020-12-11 13:12:23,510	[INFO]	251	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>='})
2020-12-11 13:12:23,511	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,28 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x >= arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:12:23,512	[INFO]	252	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '=='})
2020-12-11 13:12:23,512	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,28 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x >= arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:12:23,513	[INFO]	253	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '=='})
2020-12-11 13:12:23,514	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:12:26,363	[INFO]	254	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>'})
2020-12-11 13:12:26,364	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,28 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x > arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:12:26,365	[INFO]	255	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>'})
2020-12-11 13:12:26,366	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,28 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x > arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:12:42,389	[INFO]	256	SUCCESS	 3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>'})
2020-12-11 13:12:42,390	[INFO]	257	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:12:42,390	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:12:42,391	[INFO]	258	SUCCESS	 3.0	
2020-12-11 13:12:45,274	[INFO]	259	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<='})
2020-12-11 13:12:45,276	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,28 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid <= 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:13:01,104	[INFO]	260	SUCCESS	 3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<='})
2020-12-11 13:13:01,940	[INFO]	261	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:13:01,942	[INFO]	262	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<='})
2020-12-11 13:13:01,942	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,28 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid <= 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:13:04,823	[INFO]	263	SUCCESS	 5.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '<='})
2020-12-11 13:13:05,702	[INFO]	264	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:13:05,704	[INFO]	265	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<='})
2020-12-11 13:13:05,704	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,28 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid <= 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:13:05,705	[INFO]	266	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:13:05,705	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:13:06,479	[INFO]	267	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:13:07,381	[INFO]	268	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:13:07,382	[INFO]	269	SUCCESS	 3.0	
2020-12-11 13:13:08,232	[INFO]	270	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:13:11,333	[INFO]	271	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '!='})
2020-12-11 13:13:11,334	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,28 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid != 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:13:11,335	[INFO]	272	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:13:11,335	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:13:11,336	[INFO]	273	SUCCESS	 3.0	
2020-12-11 13:13:12,106	[INFO]	274	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:13:12,868	[INFO]	275	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:13:15,682	[INFO]	276	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<'})
2020-12-11 13:13:15,683	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 21,28 ****
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 21,28 ----
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x < arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:13:30,824	[INFO]	277	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<'})
2020-12-11 13:13:30,825	[INFO]	278	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:13:30,826	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:13:30,826	[INFO]	279	SUCCESS	 3.0	
2020-12-11 13:13:31,560	[INFO]	280	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:13:32,313	[INFO]	281	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:13:33,168	[INFO]	282	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:13:34,025	[INFO]	283	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:13:36,856	[INFO]	284	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '!='})
2020-12-11 13:13:36,858	[INFO]	285	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:13:37,701	[INFO]	286	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:13:38,559	[INFO]	287	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:13:39,318	[INFO]	288	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 13:13:40,132	[INFO]	289	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:13:40,134	[INFO]	290	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<='})
2020-12-11 13:13:40,134	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:13:40,135	[INFO]	291	SUCCESS	 3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<='})
2020-12-11 13:13:40,136	[INFO]	292	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:13:40,136	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:13:40,137	[INFO]	293	SUCCESS	 3.0	
2020-12-11 13:13:41,010	[INFO]	294	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:13:41,013	[INFO]	295	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>'})
2020-12-11 13:13:41,014	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,28 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x > arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:13:56,861	[INFO]	296	SUCCESS	 3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>'})
2020-12-11 13:13:57,706	[INFO]	297	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:14:00,626	[INFO]	298	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:14:00,627	[INFO]	299	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:14:00,627	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:14:01,455	[INFO]	300	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:14:01,456	[INFO]	301	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<='})
2020-12-11 13:14:01,457	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,28 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid <= 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:14:02,218	[INFO]	302	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 13:14:18,021	[INFO]	303	SUCCESS	 3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<='})
2020-12-11 13:14:20,849	[INFO]	304	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:14:20,852	[INFO]	305	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:14:20,853	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:14:20,854	[INFO]	306	SUCCESS	 3.0	
2020-12-11 13:14:20,857	[INFO]	307	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:14:23,776	[INFO]	308	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:14:24,574	[INFO]	309	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:14:25,409	[INFO]	310	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:14:28,249	[INFO]	311	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:14:28,252	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,39 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 return -1;
+             } else {
+                 lo = mid + 1;
+             }
+         }
+ 
+         while (lo <= hi) {
+             int mid = (lo + hi) / 2; // check if this is floor division
+ 
+             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
+             } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:14:29,088	[INFO]	312	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:14:29,089	[INFO]	313	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:14:29,089	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:14:30,061	[INFO]	314	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:14:30,963	[INFO]	315	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:14:30,964	[INFO]	316	SUCCESS	 3.0	
2020-12-11 13:14:31,743	[INFO]	317	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 13:14:32,559	[INFO]	318	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:14:33,411	[INFO]	319	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:14:36,250	[INFO]	320	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:14:37,092	[INFO]	321	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:14:37,097	[INFO]	322	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>'})
2020-12-11 13:14:37,099	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,28 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x > arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:14:37,983	[INFO]	323	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:14:40,827	[INFO]	324	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 13:14:40,829	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 21,28 ****
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 21,32 ----
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
+             }
+ 
+             if (x == arr[mid] && (mid == 0 || x > arr[mid-1])) {
+                 return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:14:41,696	[INFO]	325	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:14:57,534	[INFO]	326	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:15:00,419	[INFO]	327	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 13:15:00,420	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 21,28 ****
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 21,32 ----
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
+             }
+ 
+             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:15:01,240	[INFO]	328	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:15:17,074	[INFO]	329	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 13:15:17,076	[INFO]	330	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:15:17,076	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:15:17,077	[INFO]	331	SUCCESS	 3.0	
2020-12-11 13:15:17,821	[INFO]	332	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:15:20,666	[INFO]	333	SUCCESS	 5.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '<'})
2020-12-11 13:15:20,668	[INFO]	334	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<='})
2020-12-11 13:15:20,668	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,28 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid <= 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:15:20,669	[INFO]	335	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:15:20,670	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:15:21,413	[INFO]	336	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:15:21,415	[INFO]	337	SUCCESS	 3.0	
2020-12-11 13:15:21,418	[INFO]	338	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:15:21,419	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:15:21,421	[INFO]	339	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:15:21,422	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:15:21,423	[INFO]	340	SUCCESS	 3.0	
2020-12-11 13:15:37,272	[INFO]	341	SUCCESS	 5.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:15:38,141	[INFO]	342	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 13:15:39,008	[INFO]	343	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:15:41,981	[INFO]	344	SUCCESS	*1.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<'})
2020-12-11 13:15:41,982	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,28 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 16,28 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo < hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:15:44,809	[INFO]	345	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<'})
2020-12-11 13:15:44,810	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,22 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
--- 16,22 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo < hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {

2020-12-11 13:15:44,810	[INFO]	==== END ====
2020-12-11 13:15:44,811	[INFO]	Reason: target fitness reached
2020-12-11 13:15:44,811	[INFO]	
2020-12-11 13:15:44,811	[INFO]	========== EPOCH 11 ==========
2020-12-11 13:15:44,812	[INFO]	==== WARMUP ====
2020-12-11 13:16:00,715	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 13:16:00,715	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 13:16:16,532	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 13:16:16,532	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 13:16:32,461	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 13:16:32,461	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 13:16:48,241	[INFO]	INITIAL	SUCCESS	 3.0	
2020-12-11 13:16:48,241	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 13:16:48,241	[INFO]	==== START ====
2020-12-11 13:16:51,021	[INFO]	1	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 13:17:06,073	[INFO]	2	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:17:06,958	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:17:07,801	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:17:07,803	[INFO]	5	SUCCESS	+3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:17:07,803	[DEBUG]	
2020-12-11 13:17:08,657	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:17:08,658	[INFO]	7	SUCCESS	+3.0	
2020-12-11 13:17:08,659	[DEBUG]	
2020-12-11 13:17:09,512	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:17:10,386	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:17:11,261	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:17:12,108	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 13:17:12,895	[INFO]	12	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:17:13,741	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 13:17:14,493	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:17:15,252	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:17:16,030	[INFO]	16	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:17:16,871	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 13:17:17,734	[INFO]	18	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:17:18,570	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:17:34,421	[INFO]	20	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:17:34,422	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 25,30 ****
--- 25,31 ----
                  hi = mid;
              } else {
                  lo = mid + 1;
+                 lo = mid + 1;
              }
          }
  

2020-12-11 13:17:35,228	[INFO]	21	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:17:36,074	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 13:17:36,075	[INFO]	23	SUCCESS	+3.0	
2020-12-11 13:17:36,075	[DEBUG]	
2020-12-11 13:17:36,827	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:17:37,680	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:17:52,734	[INFO]	26	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '>'})
2020-12-11 13:17:53,581	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 13:17:54,419	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:17:55,250	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:17:56,020	[INFO]	30	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 13:17:56,023	[INFO]	31	SUCCESS	+3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:17:56,024	[DEBUG]	
2020-12-11 13:17:56,025	[INFO]	32	SUCCESS	+3.0	
2020-12-11 13:17:56,026	[DEBUG]	
2020-12-11 13:17:56,864	[INFO]	33	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:17:57,641	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:17:58,390	[INFO]	35	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 13:17:59,261	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:18:00,105	[INFO]	37	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:18:00,978	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 13:18:00,979	[INFO]	39	SUCCESS	+3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<='})
2020-12-11 13:18:00,979	[DEBUG]	
2020-12-11 13:18:00,980	[INFO]	40	SUCCESS	+3.0	
2020-12-11 13:18:00,980	[DEBUG]	
2020-12-11 13:18:16,882	[INFO]	41	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:18:31,934	[INFO]	42	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '<'})
2020-12-11 13:18:31,935	[INFO]	43	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:18:34,769	[INFO]	44	SUCCESS	 7.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '!='})
2020-12-11 13:18:37,598	[INFO]	45	SUCCESS	*2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:18:37,599	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:18:38,311	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 13:18:38,312	[INFO]	47	SUCCESS	 3.0	
2020-12-11 13:18:39,160	[INFO]	48	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 13:18:40,010	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:18:40,851	[INFO]	50	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 13:18:41,730	[INFO]	51	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:18:42,591	[INFO]	52	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:18:43,444	[INFO]	53	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:18:44,221	[INFO]	54	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:18:45,072	[INFO]	55	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:18:46,202	[INFO]	56	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 13:18:47,067	[INFO]	57	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 13:18:47,069	[INFO]	58	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:18:47,070	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:18:47,071	[INFO]	59	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:18:47,071	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:18:47,072	[INFO]	60	SUCCESS	 3.0	
2020-12-11 13:18:49,928	[INFO]	61	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:18:49,929	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,29 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 lo = mid + 1;
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:18:50,773	[INFO]	62	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:18:50,774	[INFO]	63	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:18:50,775	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:18:50,775	[INFO]	64	SUCCESS	 3.0	
2020-12-11 13:18:51,626	[INFO]	65	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 13:18:54,448	[INFO]	66	SUCCESS	 5.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '>='})
2020-12-11 13:18:55,336	[INFO]	67	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:18:56,246	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:18:57,122	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:18:58,040	[INFO]	70	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:18:58,936	[INFO]	71	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:18:59,707	[INFO]	72	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 13:19:02,660	[INFO]	73	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>='})
2020-12-11 13:19:02,661	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,28 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x >= arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:19:02,662	[INFO]	74	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:19:02,663	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:19:02,663	[INFO]	75	SUCCESS	 3.0	
2020-12-11 13:19:03,438	[INFO]	76	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:19:04,209	[INFO]	77	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 13:19:04,993	[INFO]	78	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 13:19:05,888	[INFO]	79	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:19:08,820	[INFO]	80	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'})
2020-12-11 13:19:08,821	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,28 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid < 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:19:08,822	[INFO]	81	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:19:08,823	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:19:09,658	[INFO]	82	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:19:10,496	[INFO]	83	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:19:10,498	[INFO]	84	SUCCESS	 3.0	
2020-12-11 13:19:11,407	[INFO]	85	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:19:11,414	[INFO]	86	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 13:19:14,371	[INFO]	87	SUCCESS	 7.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '<'})
2020-12-11 13:19:15,158	[INFO]	88	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:19:18,398	[INFO]	89	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='})
2020-12-11 13:19:18,401	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,28 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid >= 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:19:34,272	[INFO]	90	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='})
2020-12-11 13:19:35,015	[INFO]	91	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:19:35,787	[INFO]	92	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:19:36,833	[INFO]	93	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:19:37,669	[INFO]	94	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:19:41,017	[INFO]	95	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '<'})
2020-12-11 13:19:41,018	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,28 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid >= 0 || x < arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:19:44,598	[INFO]	96	SUCCESS	 5.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '<'})
2020-12-11 13:19:45,793	[INFO]	97	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:20:00,968	[INFO]	98	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '<'})
2020-12-11 13:20:00,969	[INFO]	99	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:20:00,970	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,28 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid >= 0 || x < arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:20:02,109	[INFO]	100	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:20:03,301	[INFO]	101	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:20:06,610	[INFO]	102	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:20:07,448	[INFO]	103	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:20:07,449	[INFO]	104	SUCCESS	 5.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:20:07,450	[INFO]	105	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:20:07,451	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,28 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid >= 0 || x < arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:20:07,453	[INFO]	106	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<='})
2020-12-11 13:20:07,454	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,28 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid >= 0 || x < arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:20:08,317	[INFO]	107	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 13:20:08,318	[INFO]	108	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:20:08,319	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,28 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid >= 0 || x < arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:20:09,212	[INFO]	109	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:20:09,214	[INFO]	110	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:20:09,215	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,28 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid >= 0 || x < arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:20:24,257	[INFO]	111	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:20:24,257	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,30 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid >= 0 || x < arr[mid-1])) {
!                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
+             }
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:20:39,864	[INFO]	112	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:20:55,108	[INFO]	113	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:20:55,110	[INFO]	114	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:20:55,110	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,28 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid >= 0 || x < arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:20:55,111	[INFO]	115	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:20:55,112	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,28 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid >= 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:20:55,113	[INFO]	116	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='})
2020-12-11 13:20:55,113	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,28 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid >= 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:20:55,114	[INFO]	117	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:20:55,115	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:20:55,115	[INFO]	118	SUCCESS	 3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:20:56,016	[INFO]	119	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:20:59,022	[INFO]	120	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'})
2020-12-11 13:20:59,023	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,28 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid < 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:20:59,889	[INFO]	121	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:21:00,790	[INFO]	122	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 13:21:00,792	[INFO]	123	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<='})
2020-12-11 13:21:00,793	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,28 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid < 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:21:00,794	[INFO]	124	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<='})
2020-12-11 13:21:00,795	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,28 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid < 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:21:00,796	[INFO]	125	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<='})
2020-12-11 13:21:00,797	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,28 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid >= 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:21:01,685	[INFO]	126	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:21:02,446	[INFO]	127	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:21:03,304	[INFO]	128	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:21:03,305	[INFO]	129	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<='})
2020-12-11 13:21:04,180	[INFO]	130	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:21:04,182	[INFO]	131	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='})
2020-12-11 13:21:04,183	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,28 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid >= 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:21:05,256	[INFO]	132	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:21:05,258	[INFO]	133	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='})
2020-12-11 13:21:05,260	[INFO]	134	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:21:05,261	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:21:05,262	[INFO]	135	SUCCESS	 3.0	
2020-12-11 13:21:08,299	[INFO]	136	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 13:21:09,087	[INFO]	137	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:21:09,890	[INFO]	138	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 13:21:10,744	[INFO]	139	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:21:11,634	[INFO]	140	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 13:21:26,832	[INFO]	141	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:21:30,178	[INFO]	142	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:21:31,173	[INFO]	143	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:21:32,474	[INFO]	144	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:21:32,477	[INFO]	145	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 13:21:33,575	[INFO]	146	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:21:34,592	[INFO]	147	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 13:21:35,590	[INFO]	148	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 13:21:36,770	[INFO]	149	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:21:36,773	[INFO]	150	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 13:21:37,701	[INFO]	151	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 13:21:37,704	[INFO]	152	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:21:41,080	[INFO]	153	SUCCESS	 6.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '>'})
2020-12-11 13:21:42,133	[INFO]	154	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:21:43,093	[INFO]	155	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:21:44,068	[INFO]	156	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:21:44,892	[INFO]	157	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:21:45,712	[INFO]	158	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 13:21:46,609	[INFO]	159	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:21:49,911	[INFO]	160	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:21:52,939	[INFO]	161	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '<='})
2020-12-11 13:21:55,896	[INFO]	162	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:21:55,897	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,39 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 return -1;
+             } else {
+                 lo = mid + 1;
+             }
+         }
+ 
+         while (lo <= hi) {
+             int mid = (lo + hi) / 2; // check if this is floor division
+ 
+             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
+             } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:21:56,784	[INFO]	163	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:22:12,677	[INFO]	164	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:22:16,408	[INFO]	165	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<'})
2020-12-11 13:22:16,409	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,21 ****
--- 16,33 ----
          int lo = 0;
          int hi = arr.length;
  
+         while (lo < hi) {
+             int mid = (lo + hi) / 2; // check if this is floor division
+ 
+             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
+             } else if (x <= arr[mid]) {
+                 return -1;
+             } else {
+                 lo = mid + 1;
+             }
+         }
+ 
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  

2020-12-11 13:22:17,949	[INFO]	166	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<'}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:22:19,429	[INFO]	167	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:22:23,513	[INFO]	168	SUCCESS	*1.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<'})
2020-12-11 13:22:23,515	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,28 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 16,28 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo < hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:22:27,173	[INFO]	169	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<'})
2020-12-11 13:22:27,174	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,22 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
--- 16,22 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo < hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {

2020-12-11 13:22:27,174	[INFO]	==== END ====
2020-12-11 13:22:27,175	[INFO]	Reason: target fitness reached
2020-12-11 13:22:27,175	[INFO]	
2020-12-11 13:22:27,175	[INFO]	========== EPOCH 12 ==========
2020-12-11 13:22:27,176	[INFO]	==== WARMUP ====
2020-12-11 13:22:42,255	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 13:22:42,255	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 13:22:58,006	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 13:22:58,006	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 13:23:13,256	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 13:23:13,256	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 13:23:29,184	[INFO]	INITIAL	SUCCESS	 3.0	
2020-12-11 13:23:29,185	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 13:23:29,185	[INFO]	==== START ====
2020-12-11 13:23:29,877	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 13:23:30,652	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 13:23:31,503	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 13:23:34,349	[INFO]	4	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:23:34,351	[INFO]	5	SUCCESS	+3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:23:34,352	[DEBUG]	
2020-12-11 13:23:37,361	[INFO]	6	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '>'})
2020-12-11 13:23:38,235	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 13:23:39,071	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:23:54,801	[INFO]	9	SUCCESS	+3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 13:23:54,802	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 24,29 ****
--- 24,32 ----
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
+                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
+             }
                  lo = mid + 1;
              }
          }

2020-12-11 13:23:54,804	[INFO]	10	SUCCESS	+3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:23:54,805	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 24,29 ****
--- 24,32 ----
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
+                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
+             }
                  lo = mid + 1;
              }
          }

2020-12-11 13:23:55,577	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:23:56,562	[INFO]	12	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 13:23:57,479	[INFO]	13	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:23:58,474	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 13:23:59,436	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:24:00,508	[INFO]	16	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:24:01,616	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:24:02,556	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:24:03,542	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:24:03,543	[INFO]	20	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:24:03,545	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 24,29 ****
--- 24,32 ----
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
+                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
+             }
                  lo = mid + 1;
              }
          }

2020-12-11 13:24:03,547	[INFO]	21	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:24:03,548	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 24,29 ****
--- 24,32 ----
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
+                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
+             }
                  lo = mid + 1;
              }
          }

2020-12-11 13:24:03,549	[INFO]	22	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 13:24:03,550	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 24,29 ****
--- 24,32 ----
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
+                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
+             }
                  lo = mid + 1;
              }
          }

2020-12-11 13:24:03,551	[INFO]	23	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 13:24:03,552	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 24,29 ****
--- 24,32 ----
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
+                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
+             }
                  lo = mid + 1;
              }
          }

2020-12-11 13:24:03,552	[INFO]	24	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 13:24:03,553	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 24,29 ****
--- 24,32 ----
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
+                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
+             }
                  lo = mid + 1;
              }
          }

2020-12-11 13:24:03,554	[INFO]	25	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 13:24:03,555	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 24,29 ****
--- 24,32 ----
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
+                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
+             }
                  lo = mid + 1;
              }
          }

2020-12-11 13:24:03,556	[INFO]	26	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:24:03,557	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 24,29 ****
--- 24,32 ----
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
+                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
+             }
                  lo = mid + 1;
              }
          }

2020-12-11 13:24:04,590	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:24:04,591	[INFO]	28	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 13:24:04,592	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 24,29 ****
--- 24,32 ----
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
+                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
+             }
                  lo = mid + 1;
              }
          }

2020-12-11 13:24:05,710	[INFO]	29	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 13:24:06,721	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 13:24:07,802	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:24:07,804	[INFO]	32	SUCCESS	+3.0	
2020-12-11 13:24:07,804	[DEBUG]	
2020-12-11 13:24:23,115	[INFO]	33	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:24:23,117	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,29 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+                 hi = mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:24:23,118	[INFO]	34	SUCCESS	+3.0	
2020-12-11 13:24:23,118	[DEBUG]	
2020-12-11 13:24:23,119	[INFO]	35	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:24:24,151	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:24:27,699	[INFO]	37	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:24:28,744	[INFO]	38	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:24:29,992	[INFO]	39	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:24:31,491	[INFO]	40	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:24:32,915	[INFO]	41	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:24:48,941	[INFO]	42	SUCCESS	 7.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:25:04,199	[INFO]	43	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:25:05,195	[INFO]	44	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 13:25:06,454	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 13:25:21,543	[INFO]	46	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '>'})
2020-12-11 13:25:23,037	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:25:23,852	[INFO]	48	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:25:25,325	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:25:26,426	[INFO]	50	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:25:27,551	[INFO]	51	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:25:42,613	[INFO]	52	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:25:43,882	[INFO]	53	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:25:59,663	[INFO]	54	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 13:25:59,664	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 21,26 ****
--- 21,30 ----
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
+             }
+ 
+             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {

2020-12-11 13:25:59,665	[INFO]	55	SUCCESS	+3.0	
2020-12-11 13:25:59,665	[DEBUG]	
2020-12-11 13:26:00,536	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:26:01,408	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:26:02,280	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:26:02,282	[INFO]	59	SUCCESS	+3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:26:02,282	[DEBUG]	
2020-12-11 13:26:03,173	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:26:03,174	[INFO]	61	SUCCESS	+3.0	
2020-12-11 13:26:03,174	[DEBUG]	
2020-12-11 13:26:03,935	[INFO]	62	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 13:26:18,977	[INFO]	63	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:26:18,978	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 17,22 ****
--- 17,33 ----
          int hi = arr.length;
  
          while (lo <= hi) {
+             while (lo <= hi) {
+             int mid = (lo + hi) / 2; // check if this is floor division
+ 
+             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
+             } else if (x <= arr[mid]) {
+                 hi = mid;
+             } else {
+                 lo = mid + 1;
+             }
+         }
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {

2020-12-11 13:26:18,978	[INFO]	64	SUCCESS	+3.0	
2020-12-11 13:26:18,979	[DEBUG]	
2020-12-11 13:26:18,980	[INFO]	65	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:26:19,835	[INFO]	66	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:26:20,651	[INFO]	67	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:26:36,480	[INFO]	68	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:26:37,153	[INFO]	69	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:26:52,655	[INFO]	70	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>='})
2020-12-11 13:26:52,656	[INFO]	71	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:26:52,656	[INFO]	72	SUCCESS	+3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<='})
2020-12-11 13:26:52,657	[DEBUG]	
2020-12-11 13:26:52,657	[INFO]	73	SUCCESS	+3.0	
2020-12-11 13:26:52,657	[DEBUG]	
2020-12-11 13:26:53,403	[INFO]	74	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:26:54,137	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:26:54,919	[INFO]	76	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 13:26:57,411	[INFO]	77	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:26:58,178	[INFO]	78	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:27:13,232	[INFO]	79	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:27:14,073	[INFO]	80	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:27:14,858	[INFO]	81	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:27:30,825	[INFO]	82	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:27:30,827	[INFO]	83	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:27:31,727	[INFO]	84	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 13:27:31,728	[INFO]	85	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:27:32,505	[INFO]	86	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:27:33,400	[INFO]	87	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:27:34,294	[INFO]	88	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 13:27:34,298	[INFO]	89	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 13:27:35,156	[INFO]	90	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:27:36,400	[INFO]	91	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:27:51,825	[INFO]	92	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:27:54,733	[INFO]	93	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:27:55,589	[INFO]	94	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:27:56,452	[INFO]	95	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:27:57,333	[INFO]	96	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 13:27:58,237	[INFO]	97	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 13:28:01,144	[INFO]	98	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '=='})
2020-12-11 13:28:01,891	[INFO]	99	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:28:02,756	[INFO]	100	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:28:02,757	[INFO]	101	SUCCESS	+3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:28:02,758	[DEBUG]	
2020-12-11 13:28:03,624	[INFO]	102	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:28:03,625	[INFO]	103	SUCCESS	+3.0	
2020-12-11 13:28:03,626	[DEBUG]	
2020-12-11 13:28:06,613	[INFO]	104	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '!='})
2020-12-11 13:28:06,615	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,22 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
--- 16,22 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo != hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {

2020-12-11 13:28:06,615	[INFO]	==== END ====
2020-12-11 13:28:06,616	[INFO]	Reason: target fitness reached
2020-12-11 13:28:06,617	[INFO]	
2020-12-11 13:28:06,617	[INFO]	========== EPOCH 13 ==========
2020-12-11 13:28:06,618	[INFO]	==== WARMUP ====
2020-12-11 13:28:22,625	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 13:28:22,625	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 13:28:38,432	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 13:28:38,432	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 13:28:54,176	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 13:28:54,176	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 13:29:10,186	[INFO]	INITIAL	SUCCESS	 3.0	
2020-12-11 13:29:10,186	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 13:29:10,186	[INFO]	==== START ====
2020-12-11 13:29:10,984	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:29:11,708	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:29:12,442	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:29:27,591	[INFO]	4	SUCCESS	 5.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:29:28,361	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:29:29,194	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:29:29,196	[INFO]	7	SUCCESS	+3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '!='})
2020-12-11 13:29:29,196	[DEBUG]	
2020-12-11 13:29:29,956	[INFO]	8	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '!='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:29:29,959	[INFO]	9	SUCCESS	+3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '!='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 13:29:29,959	[DEBUG]	
2020-12-11 13:29:30,992	[INFO]	10	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '!='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:29:31,888	[INFO]	11	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '!='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:29:31,889	[INFO]	12	SUCCESS	+3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '!='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '!='})
2020-12-11 13:29:31,890	[DEBUG]	
2020-12-11 13:29:31,890	[INFO]	13	SUCCESS	+3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '!='})
2020-12-11 13:29:31,891	[DEBUG]	
2020-12-11 13:29:32,740	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '!='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:29:32,741	[INFO]	15	SUCCESS	+3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 13:29:32,742	[DEBUG]	
2020-12-11 13:29:32,742	[INFO]	16	SUCCESS	+3.0	
2020-12-11 13:29:32,743	[DEBUG]	
2020-12-11 13:29:33,502	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:29:34,216	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:29:35,007	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 13:29:35,871	[INFO]	20	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:29:36,858	[INFO]	21	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:29:37,787	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:29:39,020	[INFO]	23	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 13:29:40,563	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:29:41,572	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 13:29:42,544	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:29:42,545	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:29:57,605	[INFO]	28	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '>='})
2020-12-11 13:30:12,687	[INFO]	29	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:30:12,688	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 28,33 ****
--- 28,45 ----
              }
          }
  
+         while (lo <= hi) {
+             int mid = (lo + hi) / 2; // check if this is floor division
+ 
+             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
+             } else if (x <= arr[mid]) {
+                 hi = mid;
+             } else {
+                 lo = mid + 1;
+             }
+         }
+ 
          return -1;
      }
  

2020-12-11 13:30:12,689	[INFO]	30	SUCCESS	+3.0	
2020-12-11 13:30:12,689	[DEBUG]	
2020-12-11 13:30:12,690	[INFO]	31	SUCCESS	 5.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:30:27,792	[INFO]	32	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>'})
2020-12-11 13:30:42,833	[INFO]	33	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 13:30:42,835	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 24,29 ****
--- 24,32 ----
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
+                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
+             }
                  lo = mid + 1;
              }
          }

2020-12-11 13:30:42,837	[INFO]	34	SUCCESS	+3.0	
2020-12-11 13:30:42,838	[DEBUG]	
2020-12-11 13:30:42,840	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 13:30:44,270	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:30:45,163	[INFO]	37	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:30:45,918	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:31:01,290	[INFO]	39	SUCCESS	 7.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '>='})
2020-12-11 13:31:02,096	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 13:31:02,997	[INFO]	41	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:31:02,999	[INFO]	42	SUCCESS	 7.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '>='})
2020-12-11 13:31:03,000	[INFO]	43	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:31:18,828	[INFO]	44	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>='})
2020-12-11 13:31:33,889	[INFO]	45	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '>'})
2020-12-11 13:31:34,787	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:31:35,908	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:31:51,182	[INFO]	48	SUCCESS	 7.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '>'})
2020-12-11 13:31:52,027	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 13:31:52,874	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:31:54,096	[INFO]	51	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:32:09,623	[INFO]	52	SUCCESS	+3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>'})
2020-12-11 13:32:09,624	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,25 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
--- 19,25 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x > arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;

2020-12-11 13:32:10,652	[INFO]	53	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:32:10,653	[INFO]	54	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:32:14,530	[INFO]	55	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '>'})
2020-12-11 13:32:14,532	[INFO]	56	SUCCESS	+3.0	
2020-12-11 13:32:14,532	[DEBUG]	
2020-12-11 13:32:15,666	[INFO]	57	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:32:16,751	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:32:17,641	[INFO]	59	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:32:20,885	[INFO]	60	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 13:32:22,183	[INFO]	61	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:32:38,036	[INFO]	62	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '!='})
2020-12-11 13:32:38,786	[INFO]	63	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 13:32:42,255	[INFO]	64	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<'})
2020-12-11 13:32:42,256	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,22 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
--- 16,22 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo < hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {

2020-12-11 13:32:42,256	[INFO]	==== END ====
2020-12-11 13:32:42,256	[INFO]	Reason: target fitness reached
2020-12-11 13:32:42,257	[INFO]	
2020-12-11 13:32:42,257	[INFO]	========== EPOCH 14 ==========
2020-12-11 13:32:42,257	[INFO]	==== WARMUP ====
2020-12-11 13:32:58,053	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 13:32:58,053	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 13:33:13,390	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 13:33:13,390	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 13:33:29,227	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 13:33:29,227	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 13:33:44,268	[INFO]	INITIAL	SUCCESS	 3.0	
2020-12-11 13:33:44,268	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 13:33:44,268	[INFO]	==== START ====
2020-12-11 13:33:44,269	[INFO]	1	SUCCESS	+3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:33:44,269	[DEBUG]	
2020-12-11 13:33:44,270	[INFO]	2	SUCCESS	+3.0	
2020-12-11 13:33:44,270	[DEBUG]	
2020-12-11 13:33:45,324	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 13:33:46,320	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:33:47,183	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:33:48,061	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:33:49,010	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:33:52,728	[INFO]	8	SUCCESS	+3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='})
2020-12-11 13:33:52,729	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 21,27 ****
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 21,27 ----
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x == arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:33:53,904	[INFO]	9	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:34:09,534	[INFO]	10	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<'})
2020-12-11 13:34:09,535	[INFO]	11	SUCCESS	+3.0	
2020-12-11 13:34:09,536	[DEBUG]	
2020-12-11 13:34:09,537	[INFO]	12	SUCCESS	+3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:34:09,537	[DEBUG]	
2020-12-11 13:34:09,538	[INFO]	13	SUCCESS	+3.0	
2020-12-11 13:34:09,538	[DEBUG]	
2020-12-11 13:34:12,615	[INFO]	14	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '>='})
2020-12-11 13:34:27,769	[INFO]	15	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:34:27,770	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,29 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+                 hi = mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:34:27,771	[INFO]	16	SUCCESS	+3.0	
2020-12-11 13:34:27,772	[DEBUG]	
2020-12-11 13:34:31,957	[INFO]	17	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:34:32,917	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:34:34,054	[INFO]	19	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:34:35,012	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:34:36,149	[INFO]	21	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:34:37,231	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 13:34:38,481	[INFO]	23	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:34:53,557	[INFO]	24	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '=='})
2020-12-11 13:34:54,351	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:34:54,353	[INFO]	26	SUCCESS	+3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<='})
2020-12-11 13:34:54,353	[DEBUG]	
2020-12-11 13:34:54,355	[INFO]	27	SUCCESS	+3.0	
2020-12-11 13:34:54,355	[DEBUG]	
2020-12-11 13:34:55,241	[INFO]	28	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:34:55,975	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:34:55,977	[INFO]	30	SUCCESS	+3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:34:55,977	[DEBUG]	
2020-12-11 13:34:56,787	[INFO]	31	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 13:34:56,788	[INFO]	32	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:34:57,578	[INFO]	33	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 13:34:57,580	[INFO]	34	SUCCESS	+3.0	
2020-12-11 13:34:57,580	[DEBUG]	
2020-12-11 13:35:00,343	[INFO]	35	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '=='})
2020-12-11 13:35:16,216	[INFO]	36	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:35:16,216	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 20,25 ****
--- 20,26 ----
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 hi = mid;
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;

2020-12-11 13:35:31,270	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '=='})
2020-12-11 13:35:31,271	[INFO]	38	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:35:31,272	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 20,25 ****
--- 20,26 ----
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 hi = mid;
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;

2020-12-11 13:35:32,099	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:35:32,101	[INFO]	40	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:35:32,101	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 20,25 ****
--- 20,26 ----
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 hi = mid;
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;

2020-12-11 13:35:47,972	[INFO]	41	SUCCESS	+3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:35:47,973	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 20,26 ****
--- 20,28 ----
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
+             }
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {

2020-12-11 13:35:47,973	[INFO]	42	SUCCESS	+3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:35:47,974	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 20,26 ****
--- 20,28 ----
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
+             }
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {

2020-12-11 13:36:03,886	[INFO]	43	SUCCESS	+3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:36:03,887	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 20,29 ****
--- 20,32 ----
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
+             }
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
+                 lo = mid + 1;
                  lo = mid + 1;
              }
          }

2020-12-11 13:36:04,702	[INFO]	44	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:36:05,653	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:36:21,468	[INFO]	46	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:36:21,469	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 25,30 ****
--- 25,31 ----
                  hi = mid;
              } else {
                  lo = mid + 1;
+                 lo = mid + 1;
              }
          }
  

2020-12-11 13:36:21,469	[INFO]	47	SUCCESS	+3.0	
2020-12-11 13:36:21,470	[DEBUG]	
2020-12-11 13:36:22,363	[INFO]	48	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:36:23,233	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:36:26,159	[INFO]	50	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:36:42,089	[INFO]	51	SUCCESS	+3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<='})
2020-12-11 13:36:42,090	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,25 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
--- 19,25 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid <= 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;

2020-12-11 13:36:42,894	[INFO]	52	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:36:43,750	[INFO]	53	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:36:43,752	[INFO]	54	SUCCESS	+3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '!='})
2020-12-11 13:36:43,753	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,25 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
--- 19,25 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid <= 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;

2020-12-11 13:36:44,561	[INFO]	55	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:36:44,562	[INFO]	56	SUCCESS	+3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '!='})
2020-12-11 13:36:44,562	[DEBUG]	
2020-12-11 13:36:47,397	[INFO]	57	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '!='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:36:48,219	[INFO]	58	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '!='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:36:51,016	[INFO]	59	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '!='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:36:51,832	[INFO]	60	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:37:07,608	[INFO]	61	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '!='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='})
2020-12-11 13:37:07,608	[INFO]	62	SUCCESS	+3.0	
2020-12-11 13:37:07,609	[DEBUG]	
2020-12-11 13:37:23,618	[INFO]	63	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:37:23,618	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 20,25 ****
--- 20,26 ----
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 lo = mid + 1;
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;

2020-12-11 13:37:39,403	[INFO]	64	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:37:39,404	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 28,33 ****
--- 28,46 ----
              }
          }
  
+         while (lo <= hi) {
+             int mid = (lo + hi) / 2; // check if this is floor division
+ 
+             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 lo = mid + 1;
+                 return mid;
+             } else if (x <= arr[mid]) {
+                 hi = mid;
+             } else {
+                 lo = mid + 1;
+             }
+         }
+ 
          return -1;
      }
  

2020-12-11 13:37:55,193	[INFO]	65	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:37:55,194	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 28,33 ****
--- 28,45 ----
              }
          }
  
+         while (lo <= hi) {
+             int mid = (lo + hi) / 2; // check if this is floor division
+ 
+             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
+             } else if (x <= arr[mid]) {
+                 hi = mid;
+             } else {
+                 lo = mid + 1;
+             }
+         }
+ 
          return -1;
      }
  

2020-12-11 13:37:55,194	[INFO]	66	SUCCESS	+3.0	
2020-12-11 13:37:55,194	[DEBUG]	
2020-12-11 13:37:56,077	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:37:56,905	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:37:57,763	[INFO]	69	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:37:58,565	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:37:59,444	[INFO]	71	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:38:00,298	[INFO]	72	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:38:01,142	[INFO]	73	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:38:01,864	[INFO]	74	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 13:38:02,665	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 13:38:03,491	[INFO]	76	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:38:04,315	[INFO]	77	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:38:05,178	[INFO]	78	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 13:38:05,179	[INFO]	79	SUCCESS	+3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:38:05,179	[DEBUG]	
2020-12-11 13:38:05,180	[INFO]	80	SUCCESS	+3.0	
2020-12-11 13:38:05,180	[DEBUG]	
2020-12-11 13:38:06,060	[INFO]	81	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:38:06,062	[INFO]	82	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 13:38:06,925	[INFO]	83	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:38:07,739	[INFO]	84	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 13:38:08,459	[INFO]	85	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:38:24,256	[INFO]	86	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 13:38:24,257	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,30 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
+             }
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:38:24,257	[INFO]	87	SUCCESS	+3.0	
2020-12-11 13:38:24,258	[DEBUG]	
2020-12-11 13:38:25,057	[INFO]	88	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:38:40,852	[INFO]	89	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>='})
2020-12-11 13:38:40,853	[INFO]	90	SUCCESS	+3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:38:40,853	[DEBUG]	
2020-12-11 13:38:40,854	[INFO]	91	SUCCESS	+3.0	
2020-12-11 13:38:40,854	[DEBUG]	
2020-12-11 13:38:40,854	[INFO]	92	SUCCESS	+3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '!='})
2020-12-11 13:38:40,855	[DEBUG]	
2020-12-11 13:38:40,855	[INFO]	93	SUCCESS	+3.0	
2020-12-11 13:38:40,855	[DEBUG]	
2020-12-11 13:38:41,549	[INFO]	94	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:38:41,550	[INFO]	95	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:38:42,372	[INFO]	96	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:38:43,226	[INFO]	97	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:38:44,085	[INFO]	98	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:38:44,893	[INFO]	99	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:38:44,894	[INFO]	100	SUCCESS	+3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:38:44,894	[DEBUG]	
2020-12-11 13:38:45,835	[INFO]	101	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:38:45,836	[INFO]	102	SUCCESS	+3.0	
2020-12-11 13:38:45,836	[DEBUG]	
2020-12-11 13:38:46,726	[INFO]	103	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 13:38:47,593	[INFO]	104	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 13:38:48,337	[INFO]	105	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:38:49,139	[INFO]	106	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:39:04,188	[INFO]	107	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:39:05,018	[INFO]	108	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:39:05,921	[INFO]	109	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:39:06,730	[INFO]	110	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:39:22,716	[INFO]	111	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:39:22,716	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,29 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+                 hi = mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:39:23,479	[INFO]	112	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:39:24,303	[INFO]	113	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:39:25,132	[INFO]	114	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 13:39:25,936	[INFO]	115	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:39:28,793	[INFO]	116	SUCCESS	*2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:39:28,794	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,29 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:39:31,638	[INFO]	117	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:39:31,638	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:39:32,433	[INFO]	118	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:39:32,435	[INFO]	119	SUCCESS	 3.0	
2020-12-11 13:39:35,284	[INFO]	120	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:39:35,285	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 20,28 ****
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 20,29 ----
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 hi = mid;
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:39:36,101	[INFO]	121	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:39:36,102	[INFO]	122	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:39:36,102	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:39:36,103	[INFO]	123	SUCCESS	 3.0	
2020-12-11 13:39:36,104	[INFO]	124	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:39:36,104	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:39:36,951	[INFO]	125	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:39:37,804	[INFO]	126	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:39:37,806	[INFO]	127	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:39:37,806	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:39:40,678	[INFO]	128	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:39:40,679	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,33 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
          }
  
          return -1;
      }
  
--- 22,35 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }
          }
  
+         int mid = (lo + hi) / 2;
+ 
          return -1;
      }
  

2020-12-11 13:39:40,681	[INFO]	129	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:39:40,682	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:39:40,683	[INFO]	130	SUCCESS	 3.0	
2020-12-11 13:39:43,557	[INFO]	131	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>'})
2020-12-11 13:39:43,557	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,28 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x > arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:39:44,343	[INFO]	132	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:39:44,344	[INFO]	133	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:39:44,344	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:39:45,168	[INFO]	134	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:39:46,002	[INFO]	135	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:39:46,836	[INFO]	136	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:39:46,837	[INFO]	137	SUCCESS	 3.0	
2020-12-11 13:39:47,580	[INFO]	138	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:39:48,347	[INFO]	139	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:39:49,139	[INFO]	140	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:39:49,142	[INFO]	141	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:39:49,143	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:39:49,144	[INFO]	142	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:39:49,146	[INFO]	143	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:40:05,142	[INFO]	144	SUCCESS	 5.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:40:05,992	[INFO]	145	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:40:06,813	[INFO]	146	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 13:40:07,624	[INFO]	147	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:40:07,625	[INFO]	148	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:40:07,625	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:40:07,626	[INFO]	149	SUCCESS	 3.0	
2020-12-11 13:40:07,627	[INFO]	150	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:40:08,479	[INFO]	151	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:40:11,245	[INFO]	152	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:40:11,246	[INFO]	153	SUCCESS	 5.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:40:12,070	[INFO]	154	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 13:40:14,868	[INFO]	155	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:40:14,870	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,33 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
          }
  
          return -1;
      }
  
--- 22,35 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }
          }
  
+         int mid = (lo + hi) / 2;
+ 
          return -1;
      }
  

2020-12-11 13:40:17,711	[INFO]	156	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='})
2020-12-11 13:40:17,712	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,33 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
          }
  
          return -1;
      }
  
--- 19,35 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid >= 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }
          }
  
+         int mid = (lo + hi) / 2;
+ 
          return -1;
      }
  

2020-12-11 13:40:17,713	[INFO]	157	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:40:17,713	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,33 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
          }
  
          return -1;
      }
  
--- 22,35 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }
          }
  
+         int mid = (lo + hi) / 2;
+ 
          return -1;
      }
  

2020-12-11 13:40:17,714	[INFO]	158	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:40:17,714	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:40:17,715	[INFO]	159	SUCCESS	 3.0	
2020-12-11 13:40:18,493	[INFO]	160	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:40:19,327	[INFO]	161	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:40:19,328	[INFO]	162	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:40:20,522	[INFO]	163	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:40:20,524	[INFO]	164	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:40:21,602	[INFO]	165	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:40:22,359	[INFO]	166	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:40:23,189	[INFO]	167	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:40:26,026	[INFO]	168	SUCCESS	*1.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '!='})
2020-12-11 13:40:26,027	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,28 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 16,28 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo != hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:40:26,028	[INFO]	169	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:40:26,878	[INFO]	170	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '!='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:40:26,881	[INFO]	171	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '!='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '!='})
2020-12-11 13:40:26,882	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,28 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 16,28 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo != hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:40:26,883	[INFO]	172	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '!='})
2020-12-11 13:40:29,667	[INFO]	173	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '!='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '!='})
2020-12-11 13:40:29,668	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,22 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
--- 16,22 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo != hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {

2020-12-11 13:40:29,668	[INFO]	==== END ====
2020-12-11 13:40:29,668	[INFO]	Reason: target fitness reached
2020-12-11 13:40:29,669	[INFO]	
2020-12-11 13:40:29,669	[INFO]	========== EPOCH 15 ==========
2020-12-11 13:40:29,669	[INFO]	==== WARMUP ====
2020-12-11 13:40:45,484	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 13:40:45,485	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 13:41:01,410	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 13:41:01,410	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 13:41:17,128	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 13:41:17,128	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 13:41:32,872	[INFO]	INITIAL	SUCCESS	 3.0	
2020-12-11 13:41:32,872	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 13:41:32,872	[INFO]	==== START ====
2020-12-11 13:41:33,691	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:41:48,739	[INFO]	2	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '=='})
2020-12-11 13:41:48,740	[INFO]	3	SUCCESS	+3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:41:48,741	[DEBUG]	
2020-12-11 13:41:49,598	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:41:49,601	[INFO]	5	SUCCESS	+3.0	
2020-12-11 13:41:49,601	[DEBUG]	
2020-12-11 13:41:50,434	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 13:41:51,254	[INFO]	7	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:41:52,101	[INFO]	8	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:41:52,844	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:41:55,608	[INFO]	10	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 13:41:58,453	[INFO]	11	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<'})
2020-12-11 13:41:58,455	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,22 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
--- 16,22 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo < hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {

2020-12-11 13:41:58,455	[INFO]	==== END ====
2020-12-11 13:41:58,455	[INFO]	Reason: target fitness reached
2020-12-11 13:41:58,457	[INFO]	
2020-12-11 13:41:58,457	[INFO]	========== EPOCH 16 ==========
2020-12-11 13:41:58,458	[INFO]	==== WARMUP ====
2020-12-11 13:42:14,308	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 13:42:14,308	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 13:42:30,139	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 13:42:30,139	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 13:42:45,942	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 13:42:45,942	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 13:43:01,777	[INFO]	INITIAL	SUCCESS	 3.0	
2020-12-11 13:43:01,778	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 13:43:01,778	[INFO]	==== START ====
2020-12-11 13:43:02,619	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:43:17,685	[INFO]	2	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '>'})
2020-12-11 13:43:18,576	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:43:19,316	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:43:20,135	[INFO]	5	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 13:43:20,136	[INFO]	6	SUCCESS	+3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<='})
2020-12-11 13:43:20,136	[DEBUG]	
2020-12-11 13:43:20,988	[INFO]	7	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:43:20,989	[INFO]	8	SUCCESS	+3.0	
2020-12-11 13:43:20,990	[DEBUG]	
2020-12-11 13:43:21,832	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 13:43:22,652	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:43:23,480	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:43:24,216	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:43:25,037	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:43:25,851	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:43:25,853	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:43:26,662	[INFO]	16	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:43:27,491	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:43:28,347	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:43:29,075	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:43:29,921	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:43:30,690	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:43:31,404	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 13:43:47,227	[INFO]	23	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:43:47,228	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 28,33 ****
--- 28,45 ----
              }
          }
  
+         while (lo <= hi) {
+             int mid = (lo + hi) / 2; // check if this is floor division
+ 
+             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
+             } else if (x <= arr[mid]) {
+                 hi = mid;
+             } else {
+                 lo = mid + 1;
+             }
+         }
+ 
          return -1;
      }
  

2020-12-11 13:43:47,229	[INFO]	24	SUCCESS	+3.0	
2020-12-11 13:43:47,229	[DEBUG]	
2020-12-11 13:43:48,033	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:43:48,897	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 13:43:48,898	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:43:49,703	[INFO]	28	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:43:50,579	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 13:44:06,392	[INFO]	30	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:44:06,392	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 28,33 ****
--- 28,35 ----
              }
          }
  
+         int mid = (lo + hi) / 2;
+ 
          return -1;
      }
  

2020-12-11 13:44:06,393	[INFO]	31	SUCCESS	+3.0	
2020-12-11 13:44:06,393	[DEBUG]	
2020-12-11 13:44:07,243	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:44:23,225	[INFO]	33	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:44:23,970	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 13:44:24,628	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:44:24,631	[INFO]	36	SUCCESS	+3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:44:24,631	[DEBUG]	
2020-12-11 13:44:24,633	[INFO]	37	SUCCESS	+3.0	
2020-12-11 13:44:24,633	[DEBUG]	
2020-12-11 13:44:25,388	[INFO]	38	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:44:40,929	[INFO]	39	SUCCESS	 7.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '>'})
2020-12-11 13:44:40,930	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:44:40,931	[INFO]	41	SUCCESS	+3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<='})
2020-12-11 13:44:40,931	[DEBUG]	
2020-12-11 13:44:40,932	[INFO]	42	SUCCESS	+3.0	
2020-12-11 13:44:40,932	[DEBUG]	
2020-12-11 13:44:41,700	[INFO]	43	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:44:42,432	[INFO]	44	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:44:43,115	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 13:44:43,965	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:44:44,657	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:44:45,327	[INFO]	48	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:44:45,329	[INFO]	49	SUCCESS	+3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:44:45,330	[DEBUG]	
2020-12-11 13:45:00,885	[INFO]	50	SUCCESS	+3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:45:00,885	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,29 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+                 hi = mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:45:01,632	[INFO]	51	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:45:01,633	[INFO]	52	SUCCESS	+3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:45:01,634	[DEBUG]	
2020-12-11 13:45:02,284	[INFO]	53	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:45:02,286	[INFO]	54	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 13:45:02,286	[INFO]	55	SUCCESS	+3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:45:02,287	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,29 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+                 hi = mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:45:02,287	[INFO]	56	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:45:02,288	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,29 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+                 hi = mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:45:02,288	[INFO]	57	SUCCESS	+3.0	
2020-12-11 13:45:02,288	[DEBUG]	
2020-12-11 13:45:02,289	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:45:03,037	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:45:03,801	[INFO]	60	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:45:04,586	[INFO]	61	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 13:45:05,462	[INFO]	62	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 13:45:06,317	[INFO]	63	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 13:45:06,318	[INFO]	64	SUCCESS	+3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:45:06,318	[DEBUG]	
2020-12-11 13:45:06,319	[INFO]	65	SUCCESS	+3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:45:06,319	[DEBUG]	
2020-12-11 13:45:06,320	[INFO]	66	SUCCESS	+3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:45:06,320	[DEBUG]	
2020-12-11 13:45:06,321	[INFO]	67	SUCCESS	+3.0	
2020-12-11 13:45:06,321	[DEBUG]	
2020-12-11 13:45:07,171	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:45:07,912	[INFO]	69	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:45:08,613	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 13:45:09,469	[INFO]	71	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:45:10,299	[INFO]	72	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:45:10,300	[INFO]	73	SUCCESS	+3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 13:45:10,300	[DEBUG]	
2020-12-11 13:45:10,301	[INFO]	74	SUCCESS	+3.0	
2020-12-11 13:45:10,301	[DEBUG]	
2020-12-11 13:45:11,160	[INFO]	75	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:45:11,163	[INFO]	76	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:45:11,969	[INFO]	77	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:45:12,792	[INFO]	78	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 13:45:13,537	[INFO]	79	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 13:45:14,381	[INFO]	80	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:45:30,195	[INFO]	81	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:45:30,196	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 20,25 ****
--- 20,26 ----
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 hi = mid;
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;

2020-12-11 13:45:45,244	[INFO]	82	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '<'})
2020-12-11 13:45:45,995	[INFO]	83	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:45:45,998	[INFO]	84	SUCCESS	+3.0	
2020-12-11 13:45:45,999	[DEBUG]	
2020-12-11 13:46:01,749	[INFO]	85	SUCCESS	+3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<='})
2020-12-11 13:46:01,750	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,25 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
--- 19,25 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid <= 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;

2020-12-11 13:46:01,750	[INFO]	86	SUCCESS	+3.0	
2020-12-11 13:46:01,751	[DEBUG]	
2020-12-11 13:46:02,453	[INFO]	87	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:46:17,501	[INFO]	88	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:46:18,351	[INFO]	89	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:46:21,142	[INFO]	90	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '!='})
2020-12-11 13:46:21,142	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,22 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
--- 16,22 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo != hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {

2020-12-11 13:46:21,143	[INFO]	==== END ====
2020-12-11 13:46:21,143	[INFO]	Reason: target fitness reached
2020-12-11 13:46:21,143	[INFO]	
2020-12-11 13:46:21,144	[INFO]	========== EPOCH 17 ==========
2020-12-11 13:46:21,144	[INFO]	==== WARMUP ====
2020-12-11 13:46:36,886	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 13:46:36,887	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 13:46:52,637	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 13:46:52,637	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 13:47:08,387	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 13:47:08,387	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 13:47:24,248	[INFO]	INITIAL	SUCCESS	 3.0	
2020-12-11 13:47:24,248	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 13:47:24,248	[INFO]	==== START ====
2020-12-11 13:47:25,056	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:47:25,891	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:47:28,696	[INFO]	3	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '>='})
2020-12-11 13:47:29,509	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 13:47:30,330	[INFO]	5	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 13:47:31,122	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 13:47:31,123	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:47:31,943	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:47:32,789	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:47:33,594	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:47:34,426	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:47:37,240	[INFO]	12	SUCCESS	+3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='})
2020-12-11 13:47:37,240	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 21,27 ****
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 21,27 ----
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x == arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:47:37,241	[INFO]	13	SUCCESS	+3.0	
2020-12-11 13:47:37,241	[DEBUG]	
2020-12-11 13:47:37,960	[INFO]	14	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:47:38,783	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:47:39,489	[INFO]	16	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:47:39,490	[INFO]	17	SUCCESS	+3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<='})
2020-12-11 13:47:39,490	[DEBUG]	
2020-12-11 13:47:39,491	[INFO]	18	SUCCESS	+3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '=='})
2020-12-11 13:47:39,491	[DEBUG]	
2020-12-11 13:47:55,283	[INFO]	19	SUCCESS	+3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:47:55,284	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 23,28 ****
--- 23,29 ----
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+                 hi = mid;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:47:56,091	[INFO]	20	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:47:56,092	[INFO]	21	SUCCESS	+3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '=='})
2020-12-11 13:47:56,093	[DEBUG]	
2020-12-11 13:47:56,093	[INFO]	22	SUCCESS	+3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='})
2020-12-11 13:47:56,094	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 21,27 ****
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 21,27 ----
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x == arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:47:58,904	[INFO]	23	SUCCESS	+3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:47:58,905	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 20,27 ****
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 20,28 ----
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 hi = mid;
                  return mid;
!             } else if (x == arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:47:59,723	[INFO]	24	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:48:00,580	[INFO]	25	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:48:00,583	[INFO]	26	SUCCESS	+3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='})
2020-12-11 13:48:00,583	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 21,27 ****
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 21,27 ----
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x == arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:48:01,557	[INFO]	27	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 13:48:01,558	[INFO]	28	SUCCESS	+3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='})
2020-12-11 13:48:01,558	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 21,27 ****
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 21,27 ----
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x == arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:48:02,387	[INFO]	29	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:48:03,121	[INFO]	30	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:48:03,122	[INFO]	31	SUCCESS	+3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<='})
2020-12-11 13:48:03,123	[DEBUG]	
2020-12-11 13:48:03,835	[INFO]	32	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:48:03,836	[INFO]	33	SUCCESS	+3.0	
2020-12-11 13:48:03,836	[DEBUG]	
2020-12-11 13:48:04,631	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:48:05,397	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 13:48:06,223	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:48:22,023	[INFO]	37	SUCCESS	+3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:48:22,023	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 28,33 ****
--- 28,45 ----
              }
          }
  
+         while (lo <= hi) {
+             int mid = (lo + hi) / 2; // check if this is floor division
+ 
+             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
+             } else if (x <= arr[mid]) {
+                 hi = mid;
+             } else {
+                 lo = mid + 1;
+             }
+         }
+ 
          return -1;
      }
  

2020-12-11 13:48:22,024	[INFO]	38	SUCCESS	+3.0	
2020-12-11 13:48:22,024	[DEBUG]	
2020-12-11 13:48:22,706	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 13:48:23,449	[INFO]	40	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:48:24,182	[INFO]	41	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:48:25,012	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:48:25,842	[INFO]	43	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:48:26,669	[INFO]	44	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 13:48:26,670	[INFO]	45	SUCCESS	+3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '=='})
2020-12-11 13:48:26,670	[DEBUG]	
2020-12-11 13:48:26,671	[INFO]	46	SUCCESS	+3.0	
2020-12-11 13:48:26,671	[DEBUG]	
2020-12-11 13:48:41,720	[INFO]	47	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:48:42,551	[INFO]	48	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:48:43,411	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:48:44,223	[INFO]	50	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:48:45,077	[INFO]	51	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:48:45,080	[INFO]	52	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:48:45,081	[INFO]	53	SUCCESS	+3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='})
2020-12-11 13:48:45,082	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 21,27 ****
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 21,27 ----
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x == arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:48:45,939	[INFO]	54	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:48:46,803	[INFO]	55	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:48:49,577	[INFO]	56	SUCCESS	+3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 13:48:49,577	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 20,27 ****
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 20,30 ----
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             }
!                 return mid;
!             } else if (x == arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:48:49,578	[INFO]	57	SUCCESS	+3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='})
2020-12-11 13:48:49,579	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 21,27 ****
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 21,27 ----
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x == arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:48:50,408	[INFO]	58	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:48:51,163	[INFO]	59	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:48:51,164	[INFO]	60	SUCCESS	+3.0	
2020-12-11 13:48:51,164	[DEBUG]	
2020-12-11 13:48:51,977	[INFO]	61	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:48:52,745	[INFO]	62	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:48:53,465	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:48:54,161	[INFO]	64	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:48:54,878	[INFO]	65	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 13:48:55,697	[INFO]	66	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:48:56,512	[INFO]	67	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:48:56,514	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:48:57,368	[INFO]	69	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:48:57,370	[INFO]	70	SUCCESS	+3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '=='})
2020-12-11 13:48:57,370	[DEBUG]	
2020-12-11 13:49:13,177	[INFO]	71	SUCCESS	+3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>'})
2020-12-11 13:49:13,177	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,25 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
--- 19,25 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x > arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;

2020-12-11 13:49:13,178	[INFO]	72	SUCCESS	+3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '=='})
2020-12-11 13:49:13,178	[DEBUG]	
2020-12-11 13:49:13,996	[INFO]	73	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 13:49:13,998	[INFO]	74	SUCCESS	+3.0	
2020-12-11 13:49:13,999	[DEBUG]	
2020-12-11 13:49:14,001	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:49:16,826	[INFO]	76	SUCCESS	*2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:49:16,827	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:49:16,827	[INFO]	77	SUCCESS	 3.0	
2020-12-11 13:49:17,673	[INFO]	78	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 13:49:18,505	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 13:49:18,506	[INFO]	80	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:49:18,507	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:49:18,508	[INFO]	81	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:49:18,508	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:49:19,323	[INFO]	82	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:49:20,066	[INFO]	83	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:49:20,069	[INFO]	84	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 13:49:20,071	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:49:22,836	[INFO]	85	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 13:49:22,837	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,27 ****
--- 19,32 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 hi = mid;
+             }
+ else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:49:22,838	[INFO]	86	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'})
2020-12-11 13:49:22,839	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,27 ****
--- 19,32 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 hi = mid;
+             }
+ else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:49:22,840	[INFO]	87	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 13:49:22,841	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,27 ****
--- 19,32 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 hi = mid;
+             }
+ else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:49:23,630	[INFO]	88	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 13:49:23,632	[INFO]	89	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:49:23,633	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,27 ****
--- 19,32 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 hi = mid;
+             }
+ else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:49:24,503	[INFO]	90	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 13:49:25,235	[INFO]	91	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:49:25,238	[INFO]	92	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 13:49:25,240	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,27 ****
--- 19,32 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 hi = mid;
+             }
+ else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:49:25,242	[INFO]	93	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'})
2020-12-11 13:49:25,243	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,27 ****
--- 19,32 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 hi = mid;
+             }
+ else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:49:41,099	[INFO]	94	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '!='})
2020-12-11 13:49:41,959	[INFO]	95	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:49:41,963	[INFO]	96	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:49:41,964	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,27 ****
--- 19,32 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 hi = mid;
+             }
+ else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:49:41,967	[INFO]	97	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:49:41,968	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,27 ****
--- 19,32 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 hi = mid;
+             }
+ else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:49:41,971	[INFO]	98	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:49:41,973	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,27 ****
--- 19,32 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 hi = mid;
+             }
+ else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:49:42,714	[INFO]	99	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:49:42,715	[INFO]	100	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:49:42,716	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,27 ****
--- 19,32 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 hi = mid;
+             }
+ else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:49:42,717	[INFO]	101	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:49:42,718	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,27 ****
--- 19,32 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 hi = mid;
+             }
+ else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:49:43,455	[INFO]	102	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:49:44,281	[INFO]	103	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:49:44,284	[INFO]	104	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:49:44,286	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,27 ****
--- 19,32 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 hi = mid;
+             }
+ else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:49:44,288	[INFO]	105	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:49:44,289	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:49:45,128	[INFO]	106	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 13:49:45,130	[INFO]	107	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:49:45,130	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:49:45,131	[INFO]	108	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:49:45,132	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:49:45,995	[INFO]	109	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:49:46,857	[INFO]	110	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:50:02,688	[INFO]	111	SUCCESS	 3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:50:03,405	[INFO]	112	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:50:04,215	[INFO]	113	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:50:04,945	[INFO]	114	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:50:05,954	[INFO]	115	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 13:50:05,955	[INFO]	116	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:50:05,956	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:50:05,957	[INFO]	117	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:50:05,957	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:50:05,958	[INFO]	118	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'})
2020-12-11 13:50:05,959	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:50:06,788	[INFO]	119	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:50:06,789	[INFO]	120	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:50:06,790	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:50:07,658	[INFO]	121	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 13:50:07,660	[INFO]	122	SUCCESS	 3.0	
2020-12-11 13:50:08,421	[INFO]	123	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:50:09,143	[INFO]	124	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:50:09,864	[INFO]	125	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:50:10,790	[INFO]	126	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:50:10,794	[INFO]	127	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:50:10,795	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:50:11,517	[INFO]	128	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:50:11,519	[INFO]	129	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:50:11,519	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:50:12,228	[INFO]	130	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:50:12,229	[INFO]	131	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:50:12,230	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:50:13,045	[INFO]	132	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:50:13,046	[INFO]	133	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:50:13,046	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:50:13,876	[INFO]	134	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:50:13,877	[INFO]	135	SUCCESS	 3.0	
2020-12-11 13:50:14,704	[INFO]	136	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:50:14,706	[INFO]	137	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:50:14,706	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:50:15,550	[INFO]	138	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:50:15,551	[INFO]	139	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:50:15,551	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:50:15,552	[INFO]	140	SUCCESS	 3.0	
2020-12-11 13:50:15,553	[INFO]	141	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:50:15,553	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:50:16,267	[INFO]	142	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:50:17,102	[INFO]	143	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:50:17,103	[INFO]	144	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:50:17,104	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:50:17,940	[INFO]	145	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:50:17,942	[INFO]	146	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:50:17,943	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:50:17,944	[INFO]	147	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:50:17,944	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:50:17,945	[INFO]	148	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 13:50:17,946	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,27 ****
--- 19,32 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 hi = mid;
+             }
+ else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:50:17,947	[INFO]	149	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='})
2020-12-11 13:50:17,948	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,27 ****
--- 19,32 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 hi = mid;
+             }
+ else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:50:18,681	[INFO]	150	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>='})
2020-12-11 13:50:18,683	[INFO]	151	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 13:50:18,684	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,27 ****
--- 19,32 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 hi = mid;
+             }
+ else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:50:19,494	[INFO]	152	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 13:50:19,495	[INFO]	153	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:50:19,496	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:50:20,265	[INFO]	154	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:50:21,088	[INFO]	155	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 13:50:21,090	[INFO]	156	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:50:21,091	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:50:21,091	[INFO]	157	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:50:21,092	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:50:21,924	[INFO]	158	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:50:22,666	[INFO]	159	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:50:22,669	[INFO]	160	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:50:22,670	[INFO]	161	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:50:22,671	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:50:23,480	[INFO]	162	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:50:23,482	[INFO]	163	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:50:23,482	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:50:24,196	[INFO]	164	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:50:24,199	[INFO]	165	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:50:24,200	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:50:24,202	[INFO]	166	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:50:24,204	[INFO]	167	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:50:27,071	[INFO]	168	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 13:50:27,072	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,27 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 19,32 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
!                 return mid;
!             }
! else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:50:27,780	[INFO]	169	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 13:50:27,781	[INFO]	170	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 13:50:27,782	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,27 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 19,32 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
!                 return mid;
!             }
! else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:50:28,622	[INFO]	171	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:50:28,626	[INFO]	172	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:50:28,627	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,27 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 19,32 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
!                 return mid;
!             }
! else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:50:29,446	[INFO]	173	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:50:29,448	[INFO]	174	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<='})
2020-12-11 13:50:29,449	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,27 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 19,32 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
!                 return mid;
!             }
! else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:50:29,450	[INFO]	175	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<='})
2020-12-11 13:50:29,450	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,27 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 19,32 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
!                 return mid;
!             }
! else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:50:45,270	[INFO]	176	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<='})
2020-12-11 13:50:45,272	[INFO]	177	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<='})
2020-12-11 13:50:45,272	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:50:48,325	[INFO]	178	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<='}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:50:48,328	[INFO]	179	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:50:48,329	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:50:51,157	[INFO]	180	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:50:51,970	[INFO]	181	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 13:50:51,971	[INFO]	182	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:50:51,972	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:50:51,973	[INFO]	183	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:50:51,973	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:50:52,697	[INFO]	184	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:50:53,528	[INFO]	185	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:50:53,530	[INFO]	186	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:50:53,530	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:50:53,532	[INFO]	187	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 13:50:53,532	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:50:54,367	[INFO]	188	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:50:54,368	[INFO]	189	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'})
2020-12-11 13:50:54,369	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:50:54,370	[INFO]	190	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'})
2020-12-11 13:50:54,370	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:50:54,371	[INFO]	191	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:50:54,372	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:50:55,122	[INFO]	192	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:50:55,124	[INFO]	193	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 13:50:55,125	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:50:55,127	[INFO]	194	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 13:50:55,128	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:50:55,933	[INFO]	195	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:50:55,934	[INFO]	196	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 13:50:55,935	[INFO]	197	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 13:50:55,936	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:50:55,937	[INFO]	198	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:50:55,937	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:50:55,938	[INFO]	199	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:50:55,939	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:50:55,940	[INFO]	200	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 13:50:55,940	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:50:55,941	[INFO]	201	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 13:50:55,942	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:50:56,787	[INFO]	202	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:50:56,789	[INFO]	203	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 13:50:56,789	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:50:56,790	[INFO]	204	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:50:56,791	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:50:57,621	[INFO]	205	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:50:57,623	[INFO]	206	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:50:57,624	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:50:57,625	[INFO]	207	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:50:57,625	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:50:57,626	[INFO]	208	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:50:57,627	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:50:57,628	[INFO]	209	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:50:57,628	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:50:57,629	[INFO]	210	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:50:57,629	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:50:58,472	[INFO]	211	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:50:58,474	[INFO]	212	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:50:58,474	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:50:58,475	[INFO]	213	SUCCESS	 3.0	
2020-12-11 13:50:59,304	[INFO]	214	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:51:15,203	[INFO]	215	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:51:15,204	[INFO]	216	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 13:51:15,205	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:51:15,205	[INFO]	217	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:51:15,206	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:51:15,206	[INFO]	218	SUCCESS	 3.0	
2020-12-11 13:51:16,228	[INFO]	219	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:51:16,233	[INFO]	220	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:51:16,985	[INFO]	221	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:51:17,741	[INFO]	222	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:51:18,556	[INFO]	223	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:51:18,558	[INFO]	224	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:51:18,559	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:51:21,408	[INFO]	225	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '=='})
2020-12-11 13:51:24,164	[INFO]	226	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:51:25,007	[INFO]	227	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:51:25,009	[INFO]	228	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:51:25,010	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:51:25,831	[INFO]	229	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:51:26,566	[INFO]	230	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:51:26,567	[INFO]	231	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:51:26,567	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:51:26,569	[INFO]	232	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:51:26,569	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:51:27,418	[INFO]	233	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:51:27,420	[INFO]	234	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:51:27,420	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:51:28,234	[INFO]	235	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:51:28,236	[INFO]	236	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:51:28,236	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:51:28,237	[INFO]	237	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:51:28,238	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:51:28,239	[INFO]	238	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:51:28,239	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:51:28,240	[INFO]	239	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '=='})
2020-12-11 13:51:29,097	[INFO]	240	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:51:29,100	[INFO]	241	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:51:29,102	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:51:29,104	[INFO]	242	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>'})
2020-12-11 13:51:29,105	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:51:29,930	[INFO]	243	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>'})
2020-12-11 13:51:29,931	[INFO]	244	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:51:29,932	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:51:29,933	[INFO]	245	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:51:29,933	[INFO]	246	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 13:51:29,934	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:51:29,935	[INFO]	247	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:51:29,936	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:51:29,936	[INFO]	248	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:51:29,937	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:51:29,938	[INFO]	249	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:51:29,938	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:51:29,939	[INFO]	250	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='})
2020-12-11 13:51:29,940	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:51:29,940	[INFO]	251	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='})
2020-12-11 13:51:29,941	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:51:29,942	[INFO]	252	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:51:29,943	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:51:30,823	[INFO]	253	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:51:30,825	[INFO]	254	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='})
2020-12-11 13:51:30,827	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:51:31,554	[INFO]	255	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 13:51:32,396	[INFO]	256	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:51:32,398	[INFO]	257	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:51:32,399	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:51:32,400	[INFO]	258	SUCCESS	 3.0	
2020-12-11 13:51:32,402	[INFO]	259	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:51:32,403	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:51:32,405	[INFO]	260	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:51:32,406	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:51:32,407	[INFO]	261	SUCCESS	 3.0	
2020-12-11 13:51:32,409	[INFO]	262	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:51:32,410	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:51:32,411	[INFO]	263	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:51:33,170	[INFO]	264	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:51:33,173	[INFO]	265	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:51:33,174	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:51:33,176	[INFO]	266	SUCCESS	 3.0	
2020-12-11 13:51:33,932	[INFO]	267	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:51:34,637	[INFO]	268	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:51:34,640	[INFO]	269	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:51:34,641	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:51:34,643	[INFO]	270	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:51:34,644	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:51:34,650	[INFO]	271	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:51:34,652	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:51:35,465	[INFO]	272	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:51:35,467	[INFO]	273	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:51:35,468	[INFO]	274	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:51:35,469	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:51:35,470	[INFO]	275	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:51:35,470	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:51:35,472	[INFO]	276	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 13:51:35,472	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:51:36,321	[INFO]	277	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:51:37,168	[INFO]	278	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:51:38,008	[INFO]	279	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:51:38,011	[INFO]	280	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 13:51:38,011	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:51:38,012	[INFO]	281	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 13:51:38,013	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:51:40,862	[INFO]	282	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 13:51:40,863	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,27 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 19,32 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
!                 return mid;
!             }
! else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:51:41,544	[INFO]	283	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 13:51:41,549	[INFO]	284	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:51:41,551	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,27 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 19,32 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
!                 return mid;
!             }
! else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:51:41,554	[INFO]	285	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:51:41,555	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,27 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 19,32 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
!                 return mid;
!             }
! else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:51:41,558	[INFO]	286	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:51:41,559	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,27 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 19,32 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
!                 return mid;
!             }
! else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:51:42,348	[INFO]	287	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:51:42,350	[INFO]	288	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:51:42,351	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,27 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 19,32 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
!                 return mid;
!             }
! else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:51:43,095	[INFO]	289	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:51:43,920	[INFO]	290	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:51:43,922	[INFO]	291	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:51:43,923	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,27 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 19,32 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
!                 return mid;
!             }
! else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:51:44,754	[INFO]	292	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:51:45,471	[INFO]	293	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:51:45,473	[INFO]	294	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'})
2020-12-11 13:51:45,474	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,27 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 19,32 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
!                 return mid;
!             }
! else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:51:45,475	[INFO]	295	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'})
2020-12-11 13:51:45,476	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,27 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 19,32 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
!                 return mid;
!             }
! else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:51:45,477	[INFO]	296	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>'})
2020-12-11 13:51:45,478	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,27 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 19,32 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
!                 return mid;
!             }
! else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:51:48,334	[INFO]	297	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:51:48,337	[INFO]	298	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'})
2020-12-11 13:51:48,338	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,27 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 19,32 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
!                 return mid;
!             }
! else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:51:48,340	[INFO]	299	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:51:48,342	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,27 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 19,32 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
!                 return mid;
!             }
! else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:51:48,343	[INFO]	300	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:51:48,345	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,27 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 19,32 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
!                 return mid;
!             }
! else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:51:48,348	[INFO]	301	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:51:48,349	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,27 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 19,32 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
!                 return mid;
!             }
! else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:51:48,351	[INFO]	302	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:51:48,352	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:51:49,169	[INFO]	303	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:51:49,171	[INFO]	304	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:51:49,171	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:51:49,172	[INFO]	305	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:51:49,173	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:51:49,997	[INFO]	306	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:51:49,998	[INFO]	307	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:51:49,999	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:51:50,000	[INFO]	308	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:51:50,000	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:51:50,001	[INFO]	309	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:51:50,002	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:51:50,003	[INFO]	310	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:51:50,003	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:51:50,004	[INFO]	311	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:51:50,005	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:51:50,719	[INFO]	312	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:51:50,720	[INFO]	313	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:51:50,721	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:51:51,532	[INFO]	314	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:51:51,533	[INFO]	315	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:51:51,534	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:51:52,368	[INFO]	316	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 13:51:52,369	[INFO]	317	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:51:52,370	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:51:52,371	[INFO]	318	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:51:52,371	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:51:53,175	[INFO]	319	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:51:53,176	[INFO]	320	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:51:53,177	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:51:56,068	[INFO]	321	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '>='})
2020-12-11 13:51:56,071	[INFO]	322	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:51:56,072	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:51:56,075	[INFO]	323	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:51:56,076	[INFO]	324	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:51:56,077	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:51:56,079	[INFO]	325	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<'})
2020-12-11 13:51:56,080	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:51:56,784	[INFO]	326	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:52:12,522	[INFO]	327	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<'})
2020-12-11 13:52:13,396	[INFO]	328	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<'}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:52:14,282	[INFO]	329	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:52:14,284	[INFO]	330	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:52:14,284	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 13:52:15,049	[INFO]	331	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 13:52:18,171	[INFO]	332	SUCCESS	+2.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:52:18,172	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 21,28 ****
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 21,28 ----
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x < arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:52:21,246	[INFO]	333	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:52:21,247	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:52:22,138	[INFO]	334	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:52:22,139	[INFO]	335	SUCCESS	 3.0	
2020-12-11 13:52:22,141	[INFO]	336	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:52:23,029	[INFO]	337	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:52:23,802	[INFO]	338	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:52:23,803	[INFO]	339	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 13:52:23,804	[INFO]	340	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:52:23,805	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:52:24,564	[INFO]	341	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 13:52:25,407	[INFO]	342	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:52:25,408	[INFO]	343	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:52:26,172	[INFO]	344	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:52:26,174	[INFO]	345	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:52:26,175	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:52:26,176	[INFO]	346	SUCCESS	 3.0	
2020-12-11 13:52:26,908	[INFO]	347	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 13:52:27,738	[INFO]	348	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:52:28,558	[INFO]	349	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:52:29,388	[INFO]	350	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:52:30,217	[INFO]	351	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:52:33,104	[INFO]	352	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '!='})
2020-12-11 13:52:33,106	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,28 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid != 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:52:48,178	[INFO]	353	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '!='}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:52:48,983	[INFO]	354	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:53:04,814	[INFO]	355	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '!='})
2020-12-11 13:53:04,815	[INFO]	356	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:53:04,815	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:53:04,816	[INFO]	357	SUCCESS	 3.0	
2020-12-11 13:53:05,644	[INFO]	358	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:53:06,403	[INFO]	359	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:53:07,241	[INFO]	360	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:53:10,035	[INFO]	361	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 13:53:10,036	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,31 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
!                 return mid;
!             }
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:53:10,860	[INFO]	362	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:53:26,632	[INFO]	363	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 13:53:27,460	[INFO]	364	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:53:28,283	[INFO]	365	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:53:28,284	[INFO]	366	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:53:28,285	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:53:29,043	[INFO]	367	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:53:29,850	[INFO]	368	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:53:29,851	[INFO]	369	SUCCESS	 3.0	
2020-12-11 13:53:30,723	[INFO]	370	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 13:53:31,466	[INFO]	371	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 13:53:32,209	[INFO]	372	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:53:33,044	[INFO]	373	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:53:33,047	[INFO]	374	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:53:33,781	[INFO]	375	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:53:34,603	[INFO]	376	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:53:35,472	[INFO]	377	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:53:38,253	[INFO]	378	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:53:39,087	[INFO]	379	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:53:39,936	[INFO]	380	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:53:40,745	[INFO]	381	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:53:41,585	[INFO]	382	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:53:42,406	[INFO]	383	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:53:43,152	[INFO]	384	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:53:43,153	[INFO]	385	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:53:45,957	[INFO]	386	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 13:53:45,958	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,29 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
          }
--- 22,32 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
+                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
+             }
                  lo = mid + 1;
              }
          }

2020-12-11 13:53:45,958	[INFO]	387	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:53:45,959	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:53:46,786	[INFO]	388	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:53:46,787	[INFO]	389	SUCCESS	 3.0	
2020-12-11 13:53:46,788	[INFO]	390	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<='})
2020-12-11 13:53:46,788	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:53:47,614	[INFO]	391	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:53:47,615	[INFO]	392	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:53:47,615	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:53:50,473	[INFO]	393	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:53:51,196	[INFO]	394	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:53:51,198	[INFO]	395	SUCCESS	 3.0	
2020-12-11 13:53:52,028	[INFO]	396	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:53:52,890	[INFO]	397	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:53:55,673	[INFO]	398	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<='})
2020-12-11 13:53:55,674	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,28 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid <= 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:53:56,475	[INFO]	399	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:53:59,304	[INFO]	400	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:53:59,305	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,33 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
          }
  
          return -1;
      }
  
--- 19,35 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid <= 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }
          }
  
+         int mid = (lo + hi) / 2;
+ 
          return -1;
      }
  

2020-12-11 13:54:02,062	[INFO]	401	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:54:02,063	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,33 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
              }
          }
  
          return -1;
      }
  
--- 19,36 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid <= 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
+                 return -1;
              } else {
                  lo = mid + 1;
              }
          }
  
+         int mid = (lo + hi) / 2;
+ 
          return -1;
      }
  

2020-12-11 13:54:02,896	[INFO]	402	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:54:02,897	[INFO]	403	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:54:02,898	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,33 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
          }
  
          return -1;
      }
  
--- 19,35 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid <= 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }
          }
  
+         int mid = (lo + hi) / 2;
+ 
          return -1;
      }
  

2020-12-11 13:54:02,899	[INFO]	404	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<='})
2020-12-11 13:54:02,899	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,28 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid <= 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:54:02,900	[INFO]	405	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:54:02,901	[INFO]	406	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:54:02,901	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:54:03,734	[INFO]	407	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:54:03,736	[INFO]	408	SUCCESS	 3.0	
2020-12-11 13:54:04,462	[INFO]	409	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 13:54:05,296	[INFO]	410	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 13:54:06,160	[INFO]	411	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:54:07,000	[INFO]	412	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 13:54:07,771	[INFO]	413	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:54:08,546	[INFO]	414	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:54:09,373	[INFO]	415	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:54:10,225	[INFO]	416	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:54:11,067	[INFO]	417	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:54:11,807	[INFO]	418	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:54:12,630	[INFO]	419	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:54:13,664	[INFO]	420	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 13:54:13,666	[INFO]	421	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 13:54:14,483	[INFO]	422	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:54:15,235	[INFO]	423	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 13:54:16,034	[INFO]	424	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:54:16,885	[INFO]	425	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:54:17,726	[INFO]	426	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:54:18,556	[INFO]	427	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 13:54:19,343	[INFO]	428	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:54:20,159	[INFO]	429	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:54:35,999	[INFO]	430	SUCCESS	 5.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:54:36,835	[INFO]	431	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:54:37,654	[INFO]	432	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 13:54:37,657	[INFO]	433	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:54:37,657	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:54:37,658	[INFO]	434	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:54:37,658	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:54:37,659	[INFO]	435	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:54:37,660	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:54:38,393	[INFO]	436	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:54:41,186	[INFO]	437	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>'})
2020-12-11 13:54:41,187	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,28 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x > arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:54:42,001	[INFO]	438	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 13:54:42,002	[INFO]	439	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:54:42,003	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:54:42,004	[INFO]	440	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:54:42,004	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:54:42,005	[INFO]	441	SUCCESS	 5.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:54:42,840	[INFO]	442	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:54:42,842	[INFO]	443	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:54:42,842	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:54:43,580	[INFO]	444	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:54:44,420	[INFO]	445	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:54:44,422	[INFO]	446	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:54:44,423	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:54:45,234	[INFO]	447	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:54:46,067	[INFO]	448	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:54:46,068	[INFO]	449	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<='})
2020-12-11 13:54:46,068	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:54:46,816	[INFO]	450	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:54:47,643	[INFO]	451	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 13:54:48,457	[INFO]	452	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:54:49,287	[INFO]	453	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:54:50,032	[INFO]	454	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:54:52,828	[INFO]	455	SUCCESS	 5.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '<='})
2020-12-11 13:54:52,830	[INFO]	456	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:54:52,830	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:54:55,610	[INFO]	457	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 13:54:55,611	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 20,28 ****
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 20,31 ----
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
+             }
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:54:56,456	[INFO]	458	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:55:12,228	[INFO]	459	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 13:55:13,031	[INFO]	460	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:55:13,035	[INFO]	461	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:55:13,852	[INFO]	462	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:55:14,578	[INFO]	463	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 13:55:15,410	[INFO]	464	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:55:15,412	[INFO]	465	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '=='})
2020-12-11 13:55:15,412	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 20,28 ****
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 20,31 ----
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
+             }
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:55:16,234	[INFO]	466	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 13:55:17,099	[INFO]	467	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:55:17,929	[INFO]	468	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '=='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:55:18,785	[INFO]	469	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '=='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:55:18,786	[INFO]	470	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '=='})
2020-12-11 13:55:18,787	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:55:18,787	[INFO]	471	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:55:18,788	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:55:18,788	[INFO]	472	SUCCESS	 3.0	
2020-12-11 13:55:21,577	[INFO]	473	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:55:21,577	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,39 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 return -1;
+             } else {
+                 lo = mid + 1;
+             }
+         }
+ 
+         while (lo <= hi) {
+             int mid = (lo + hi) / 2; // check if this is floor division
+ 
+             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
+             } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:55:22,401	[INFO]	474	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:55:38,238	[INFO]	475	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:55:38,239	[INFO]	476	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:55:38,240	[INFO]	477	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:55:38,240	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:55:39,057	[INFO]	478	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:55:39,058	[INFO]	479	SUCCESS	 3.0	
2020-12-11 13:55:41,887	[INFO]	480	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:55:44,766	[INFO]	481	SUCCESS	 5.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '>='})
2020-12-11 13:55:45,561	[INFO]	482	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:55:46,312	[INFO]	483	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:55:49,154	[INFO]	484	SUCCESS	 5.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '=='})
2020-12-11 13:55:49,156	[INFO]	485	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:55:49,156	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:55:51,899	[INFO]	486	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:55:51,900	[INFO]	487	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:55:51,900	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 13:55:52,714	[INFO]	488	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:55:53,575	[INFO]	489	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:55:53,576	[INFO]	490	SUCCESS	 3.0	
2020-12-11 13:55:54,399	[INFO]	491	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 13:55:55,245	[INFO]	492	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:55:58,066	[INFO]	493	SUCCESS	 6.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:55:58,890	[INFO]	494	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 13:55:59,733	[INFO]	495	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:56:00,481	[INFO]	496	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 13:56:00,484	[INFO]	497	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:56:01,188	[INFO]	498	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:56:01,908	[INFO]	499	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 13:56:02,711	[INFO]	500	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:56:02,711	[INFO]	==== END ====
2020-12-11 13:56:02,711	[INFO]	Reason: step budget
2020-12-11 13:56:02,712	[INFO]	
2020-12-11 13:56:02,712	[INFO]	========== EPOCH 18 ==========
2020-12-11 13:56:02,713	[INFO]	==== WARMUP ====
2020-12-11 13:56:18,566	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 13:56:18,566	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 13:56:34,365	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 13:56:34,365	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 13:56:50,168	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 13:56:50,168	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 13:57:06,008	[INFO]	INITIAL	SUCCESS	 3.0	
2020-12-11 13:57:06,008	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 13:57:06,008	[INFO]	==== START ====
2020-12-11 13:57:06,707	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 13:57:07,535	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:57:08,375	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:57:09,214	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:57:10,044	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:57:25,873	[INFO]	6	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>'})
2020-12-11 13:57:26,680	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:57:27,512	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:57:28,318	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:57:29,137	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 13:57:32,135	[INFO]	11	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '!='})
2020-12-11 13:57:32,136	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,22 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
--- 16,22 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo != hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {

2020-12-11 13:57:32,136	[INFO]	==== END ====
2020-12-11 13:57:32,136	[INFO]	Reason: target fitness reached
2020-12-11 13:57:32,137	[INFO]	
2020-12-11 13:57:32,137	[INFO]	========== EPOCH 19 ==========
2020-12-11 13:57:32,137	[INFO]	==== WARMUP ====
2020-12-11 13:57:47,937	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 13:57:47,937	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 13:58:03,709	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 13:58:03,709	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 13:58:19,514	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 13:58:19,514	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 13:58:35,262	[INFO]	INITIAL	SUCCESS	 3.0	
2020-12-11 13:58:35,262	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 13:58:35,262	[INFO]	==== START ====
2020-12-11 13:58:36,048	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:58:36,797	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 13:58:37,625	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:58:38,478	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:58:39,224	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 13:58:39,939	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:58:40,722	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:58:41,556	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:58:42,281	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:58:45,106	[INFO]	10	SUCCESS	*2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:58:45,107	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:58:45,861	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:58:46,587	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:58:46,589	[INFO]	13	SUCCESS	 3.0	
2020-12-11 13:58:47,396	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 13:58:50,158	[INFO]	15	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '>='})
2020-12-11 13:58:50,879	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:58:53,660	[INFO]	17	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:58:54,469	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 13:59:10,310	[INFO]	19	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:59:10,311	[INFO]	20	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '=='})
2020-12-11 13:59:10,312	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:59:10,313	[INFO]	21	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:59:10,313	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:59:10,313	[INFO]	22	SUCCESS	 3.0	
2020-12-11 13:59:11,144	[INFO]	23	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 13:59:13,892	[INFO]	24	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:59:13,893	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,29 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
+                 hi = mid;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:59:13,894	[INFO]	25	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:59:13,895	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:59:14,727	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 13:59:14,728	[INFO]	27	SUCCESS	 3.0	
2020-12-11 13:59:15,572	[INFO]	28	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:59:18,371	[INFO]	29	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:59:18,372	[INFO]	30	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '=='})
2020-12-11 13:59:18,373	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:59:18,374	[INFO]	31	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<='})
2020-12-11 13:59:18,374	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:59:19,186	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 6), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:59:19,187	[INFO]	33	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<='})
2020-12-11 13:59:19,188	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:59:19,188	[INFO]	34	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:59:19,189	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:59:20,023	[INFO]	35	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:59:20,025	[INFO]	36	SUCCESS	 3.0	
2020-12-11 13:59:20,729	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 13:59:21,549	[INFO]	38	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 13:59:24,378	[INFO]	39	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:59:24,379	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,29 ****
--- 22,31 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
+                 lo = mid + 1;
                  lo = mid + 1;
              }
          }

2020-12-11 13:59:24,380	[INFO]	40	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:59:24,380	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:59:24,380	[INFO]	41	SUCCESS	 3.0	
2020-12-11 13:59:24,381	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:59:25,080	[INFO]	43	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 13:59:25,891	[INFO]	44	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:59:26,615	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:59:27,448	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:59:28,270	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:59:31,633	[INFO]	48	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<'})
2020-12-11 13:59:31,634	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 21,27 ****
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 21,28 ----
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x < arr[mid]) {
!                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:59:31,636	[INFO]	49	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:59:31,637	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 13:59:31,638	[INFO]	50	SUCCESS	 3.0	
2020-12-11 13:59:34,533	[INFO]	51	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:59:35,336	[INFO]	52	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 13:59:36,176	[INFO]	53	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:59:37,035	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:59:37,870	[INFO]	55	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 13:59:37,871	[INFO]	56	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:59:38,710	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:59:39,530	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 13:59:39,533	[INFO]	59	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:59:40,359	[INFO]	60	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 13:59:41,190	[INFO]	61	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:59:41,992	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 13:59:42,848	[INFO]	63	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 13:59:43,660	[INFO]	64	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 13:59:44,470	[INFO]	65	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:59:45,496	[INFO]	66	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 13:59:46,268	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:59:47,079	[INFO]	68	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 13:59:47,928	[INFO]	69	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 13:59:48,768	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 13:59:49,497	[INFO]	71	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 13:59:49,500	[INFO]	72	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 13:59:52,301	[INFO]	73	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<'})
2020-12-11 13:59:52,302	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 21,27 ****
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 21,28 ----
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x < arr[mid]) {
!                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 14:00:08,173	[INFO]	74	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<'})
2020-12-11 14:00:10,916	[INFO]	75	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 14:00:11,760	[INFO]	76	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 14:00:12,587	[INFO]	77	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 14:00:12,589	[INFO]	78	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 14:00:12,589	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 14:00:13,326	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 14:00:13,327	[INFO]	80	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 14:00:13,327	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 14:00:13,328	[INFO]	81	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 14:00:13,329	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 14:00:13,329	[INFO]	82	SUCCESS	 3.0	
2020-12-11 14:00:14,147	[INFO]	83	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 14:00:15,096	[INFO]	84	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 14:00:17,916	[INFO]	85	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 14:00:17,917	[INFO]	86	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 14:00:17,918	[INFO]	87	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 14:00:18,786	[INFO]	88	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 14:00:21,617	[INFO]	89	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 14:00:21,618	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,33 ****
--- 22,36 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;
              }
          }
  
+         int mid = (lo + hi) / 2;
+ 
          return -1;
      }
  

2020-12-11 14:00:37,410	[INFO]	90	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 14:00:38,311	[INFO]	91	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 14:00:38,313	[INFO]	92	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 14:00:39,511	[INFO]	93	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 14:00:40,590	[INFO]	94	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 14:00:44,102	[INFO]	95	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '=='})
2020-12-11 14:00:44,104	[INFO]	96	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 14:00:44,104	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 14:00:44,865	[INFO]	97	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 14:00:44,866	[INFO]	98	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 14:00:44,867	[INFO]	99	SUCCESS	 3.0	
2020-12-11 14:00:45,853	[INFO]	100	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 14:00:46,899	[INFO]	101	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 14:00:46,900	[INFO]	102	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 14:00:46,901	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 14:00:46,902	[INFO]	103	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 14:00:46,903	[INFO]	104	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 14:00:46,903	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 14:00:46,904	[INFO]	105	SUCCESS	 3.0	
2020-12-11 14:00:47,764	[INFO]	106	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 14:00:48,620	[INFO]	107	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 14:00:49,455	[INFO]	108	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 14:00:50,288	[INFO]	109	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 14:00:51,143	[INFO]	110	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 14:00:51,892	[INFO]	111	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 14:00:52,604	[INFO]	112	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 14:01:08,404	[INFO]	113	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 14:01:24,137	[INFO]	114	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 14:01:24,951	[INFO]	115	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 14:01:25,755	[INFO]	116	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 14:01:26,570	[INFO]	117	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 14:01:27,422	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 14:01:28,282	[INFO]	119	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 14:01:28,286	[INFO]	120	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 14:01:43,344	[INFO]	121	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 14:01:44,207	[INFO]	122	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 14:01:45,017	[INFO]	123	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 14:01:45,019	[INFO]	124	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 14:01:45,869	[INFO]	125	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 14:02:00,922	[INFO]	126	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 14:02:01,704	[INFO]	127	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 14:02:04,465	[INFO]	128	SUCCESS	 5.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '<='})
2020-12-11 14:02:05,315	[INFO]	129	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 14:02:05,317	[INFO]	130	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 14:02:06,171	[INFO]	131	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 14:02:09,038	[INFO]	132	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 14:02:09,811	[INFO]	133	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 14:02:10,532	[INFO]	134	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 14:02:10,534	[INFO]	135	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 14:02:11,275	[INFO]	136	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 14:02:12,097	[INFO]	137	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 14:02:12,858	[INFO]	138	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 14:02:15,664	[INFO]	139	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '!='})
2020-12-11 14:02:15,667	[INFO]	140	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 14:02:16,481	[INFO]	141	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 14:02:19,333	[INFO]	142	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>'})
2020-12-11 14:02:19,334	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,27 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 19,28 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid > 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 14:02:20,135	[INFO]	143	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '>'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 14:02:23,012	[INFO]	144	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 14:02:23,013	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 14:02:23,013	[INFO]	145	SUCCESS	 3.0	
2020-12-11 14:02:23,807	[INFO]	146	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 14:02:38,857	[INFO]	147	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 14:02:41,671	[INFO]	148	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 14:02:41,672	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,29 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
+                 hi = mid;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 14:02:57,484	[INFO]	149	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 14:02:58,400	[INFO]	150	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 14:02:59,218	[INFO]	151	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'direction': 'before'})
2020-12-11 14:02:59,220	[INFO]	152	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<='})
2020-12-11 14:02:59,221	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,29 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
+                 hi = mid;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 14:03:00,069	[INFO]	153	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 14:03:00,072	[INFO]	154	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<='})
2020-12-11 14:03:00,073	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 14:03:00,074	[INFO]	155	SUCCESS	 3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<='})
2020-12-11 14:03:00,076	[INFO]	156	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 11), 'value': '<='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 14:03:00,077	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 14:03:00,078	[INFO]	157	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 14:03:00,078	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 14:03:00,079	[INFO]	158	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 14:03:00,080	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,27 ****
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
+                 lo = mid + 1;
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 14:03:00,081	[INFO]	159	SUCCESS	 3.0	
2020-12-11 14:03:00,927	[INFO]	160	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 14:03:01,751	[INFO]	161	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 14:03:02,567	[INFO]	162	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 14:03:05,396	[INFO]	163	SUCCESS	+2.0	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 14:03:05,397	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,29 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 lo = mid + 1;
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 14:03:06,260	[INFO]	164	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 14:03:07,117	[INFO]	165	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 14:03:07,876	[INFO]	166	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 14:03:08,731	[INFO]	167	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 14:03:11,583	[INFO]	168	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 14:03:11,584	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 14:03:12,305	[INFO]	169	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 14:03:12,307	[INFO]	170	SUCCESS	 3.0	
2020-12-11 14:03:15,074	[INFO]	171	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>'})
2020-12-11 14:03:15,074	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,28 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x > arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 14:03:30,868	[INFO]	172	SUCCESS	 3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>'})
2020-12-11 14:03:31,686	[INFO]	173	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'direction': 'before'})
2020-12-11 14:03:32,507	[INFO]	174	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 14:03:33,389	[INFO]	175	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 14:03:34,203	[INFO]	176	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 14:03:34,205	[INFO]	177	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '!='})
2020-12-11 14:03:34,205	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 14:03:34,972	[INFO]	178	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 14:03:34,975	[INFO]	179	SUCCESS	 3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '!='})
2020-12-11 14:03:37,767	[INFO]	180	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '!='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 14:03:40,517	[INFO]	181	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '!='}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 14:03:41,269	[INFO]	182	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '!='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 14:03:41,271	[INFO]	183	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>'})
2020-12-11 14:03:41,272	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,28 ****
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 19,28 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x > arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 14:03:42,068	[INFO]	184	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 14:03:42,070	[INFO]	185	SUCCESS	 3.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>'})
2020-12-11 14:03:42,899	[INFO]	186	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'direction': 'before'})
2020-12-11 14:03:43,728	[INFO]	187	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 14:03:43,729	[INFO]	188	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 14:03:43,730	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 14:03:46,560	[INFO]	189	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 14:03:46,561	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 20,28 ****
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 20,31 ----
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
+                 return mid;
+             }
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 14:03:46,562	[INFO]	190	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 14:03:46,563	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 14:03:47,415	[INFO]	191	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 14:03:48,272	[INFO]	192	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 14:03:49,113	[INFO]	193	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 14:03:49,947	[INFO]	194	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'direction': 'before'})
2020-12-11 14:03:49,948	[INFO]	195	SUCCESS	 3.0	
2020-12-11 14:03:50,784	[INFO]	196	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 14:03:50,786	[INFO]	197	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 14:03:50,786	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 14:03:51,520	[INFO]	198	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 14:03:51,524	[INFO]	199	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 14:03:51,525	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 14:03:51,527	[INFO]	200	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 14:03:51,528	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 14:03:52,295	[INFO]	201	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12)})
2020-12-11 14:03:53,114	[INFO]	202	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0)})
2020-12-11 14:03:53,115	[INFO]	203	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 14:03:53,116	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 14:03:53,116	[INFO]	204	SUCCESS	 3.0	
2020-12-11 14:04:08,980	[INFO]	205	SUCCESS	 5.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtDeletion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 14:04:09,733	[INFO]	206	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 14:04:10,585	[INFO]	207	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'direction': 'before'})
2020-12-11 14:04:10,589	[INFO]	208	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1)})
2020-12-11 14:04:11,318	[INFO]	209	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'direction': 'before'})
2020-12-11 14:04:12,156	[INFO]	210	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 1), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 14:04:12,158	[INFO]	211	SUCCESS	+2.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)})
2020-12-11 14:04:12,158	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 22,28 ****
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 22,28 ----
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 14:04:14,963	[INFO]	212	SUCCESS	*1.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '!='})
2020-12-11 14:04:14,964	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,28 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 16,28 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo != hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 14:04:15,673	[INFO]	213	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'})
2020-12-11 14:04:16,502	[INFO]	214	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '!='}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)})
2020-12-11 14:04:19,275	[INFO]	215	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'direction': 'before'})
2020-12-11 14:04:19,277	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,28 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 16,31 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo != hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
!             } if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
!                 return mid;
!             }
! else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 14:04:19,279	[INFO]	216	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 12), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '!='})
2020-12-11 14:04:19,280	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,28 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 hi = mid;
              } else {
                  lo = mid + 1;
              }
--- 16,28 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo != hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
!                 return -1;
              } else {
                  lo = mid + 1;
              }

2020-12-11 14:04:22,069	[INFO]	217	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '!='})
2020-12-11 14:04:22,069	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,22 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
--- 16,22 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo != hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {

2020-12-11 14:04:22,070	[INFO]	==== END ====
2020-12-11 14:04:22,070	[INFO]	Reason: target fitness reached
2020-12-11 14:04:22,070	[INFO]	
2020-12-11 14:04:22,070	[INFO]	========== EPOCH 20 ==========
2020-12-11 14:04:22,071	[INFO]	==== WARMUP ====
2020-12-11 14:04:37,856	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 14:04:37,856	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 14:04:53,604	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 14:04:53,605	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 14:05:09,460	[INFO]	WARM	SUCCESS	 3.0	
2020-12-11 14:05:09,460	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 14:05:25,412	[INFO]	INITIAL	SUCCESS	 3.0	
2020-12-11 14:05:25,412	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 3.0>
2020-12-11 14:05:25,412	[INFO]	==== START ====
2020-12-11 14:05:26,224	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 14), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4)})
2020-12-11 14:05:26,959	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 14:05:27,779	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2), 'direction': 'before'})
2020-12-11 14:05:28,513	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 2)})
2020-12-11 14:05:29,255	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 0), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 14:05:30,085	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 4), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13)})
2020-12-11 14:05:30,830	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10)})
2020-12-11 14:05:33,649	[INFO]	8	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '!='})
2020-12-11 14:05:33,650	[DEBUG]	*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,22 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
--- 16,22 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo != hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {

2020-12-11 14:05:33,650	[INFO]	==== END ====
2020-12-11 14:05:33,650	[INFO]	Reason: target fitness reached
2020-12-11 14:05:33,651	[INFO]	
2020-12-11 14:05:33,651	[INFO]	========== REPORT ==========
2020-12-11 14:05:33,651	[INFO]	==== Epoch 1 ====
2020-12-11 14:05:33,651	[INFO]	Termination: target fitness reached
2020-12-11 14:05:33,651	[INFO]	Number of interations: 13
2020-12-11 14:05:33,652	[INFO]	Best fitness: 0.0
2020-12-11 14:05:33,652	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '!='})
2020-12-11 14:05:33,652	[INFO]	Diff:
*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,22 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
--- 16,22 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo != hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {

2020-12-11 14:05:33,652	[INFO]	==== Epoch 2 ====
2020-12-11 14:05:33,652	[INFO]	Termination: target fitness reached
2020-12-11 14:05:33,652	[INFO]	Number of interations: 2
2020-12-11 14:05:33,652	[INFO]	Best fitness: 0.0
2020-12-11 14:05:33,652	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '!='})
2020-12-11 14:05:33,652	[INFO]	Diff:
*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,22 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
--- 16,22 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo != hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {

2020-12-11 14:05:33,653	[INFO]	==== Epoch 3 ====
2020-12-11 14:05:33,653	[INFO]	Termination: target fitness reached
2020-12-11 14:05:33,653	[INFO]	Number of interations: 19
2020-12-11 14:05:33,653	[INFO]	Best fitness: 0.0
2020-12-11 14:05:33,653	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '!='})
2020-12-11 14:05:33,653	[INFO]	Diff:
*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,22 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
--- 16,22 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo != hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {

2020-12-11 14:05:33,653	[INFO]	==== Epoch 4 ====
2020-12-11 14:05:33,653	[INFO]	Termination: target fitness reached
2020-12-11 14:05:33,653	[INFO]	Number of interations: 243
2020-12-11 14:05:33,653	[INFO]	Best fitness: 0.0
2020-12-11 14:05:33,654	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '!='})
2020-12-11 14:05:33,654	[INFO]	Diff:
*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,22 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
--- 16,22 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo != hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {

2020-12-11 14:05:33,654	[INFO]	==== Epoch 5 ====
2020-12-11 14:05:33,654	[INFO]	Termination: target fitness reached
2020-12-11 14:05:33,654	[INFO]	Number of interations: 418
2020-12-11 14:05:33,654	[INFO]	Best fitness: 0.0
2020-12-11 14:05:33,654	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 7), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5)})
2020-12-11 14:05:33,654	[INFO]	Diff:
*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,27 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;
--- 16,32 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo < hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
!             if (x == arr[mid] && (mid < 0 || x != arr[mid-1])) {
!                 if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
+             }
              } else if (x <= arr[mid]) {
+                 hi = mid;
+             }
+ else if (x <= arr[mid]) {
                  hi = mid;
              } else {
                  lo = mid + 1;

2020-12-11 14:05:33,655	[INFO]	==== Epoch 6 ====
2020-12-11 14:05:33,655	[INFO]	Termination: target fitness reached
2020-12-11 14:05:33,655	[INFO]	Number of interations: 78
2020-12-11 14:05:33,655	[INFO]	Best fitness: 0.0
2020-12-11 14:05:33,655	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '!='})
2020-12-11 14:05:33,655	[INFO]	Diff:
*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,22 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
--- 16,22 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo != hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {

2020-12-11 14:05:33,655	[INFO]	==== Epoch 7 ====
2020-12-11 14:05:33,655	[INFO]	Termination: target fitness reached
2020-12-11 14:05:33,655	[INFO]	Number of interations: 102
2020-12-11 14:05:33,655	[INFO]	Best fitness: 0.0
2020-12-11 14:05:33,656	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<'})
2020-12-11 14:05:33,656	[INFO]	Diff:
*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,22 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
--- 16,22 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo < hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {

2020-12-11 14:05:33,656	[INFO]	==== Epoch 8 ====
2020-12-11 14:05:33,656	[INFO]	Termination: target fitness reached
2020-12-11 14:05:33,656	[INFO]	Number of interations: 143
2020-12-11 14:05:33,656	[INFO]	Best fitness: 0.0
2020-12-11 14:05:33,656	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<'})
2020-12-11 14:05:33,656	[INFO]	Diff:
*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,22 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
--- 16,22 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo < hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {

2020-12-11 14:05:33,656	[INFO]	==== Epoch 9 ====
2020-12-11 14:05:33,656	[INFO]	Termination: target fitness reached
2020-12-11 14:05:33,656	[INFO]	Number of interations: 35
2020-12-11 14:05:33,656	[INFO]	Best fitness: 0.0
2020-12-11 14:05:33,657	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<'})
2020-12-11 14:05:33,657	[INFO]	Diff:
*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,22 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
--- 16,22 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo < hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {

2020-12-11 14:05:33,657	[INFO]	==== Epoch 10 ====
2020-12-11 14:05:33,657	[INFO]	Termination: target fitness reached
2020-12-11 14:05:33,657	[INFO]	Number of interations: 345
2020-12-11 14:05:33,657	[INFO]	Best fitness: 0.0
2020-12-11 14:05:33,657	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<'})
2020-12-11 14:05:33,657	[INFO]	Diff:
*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,22 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
--- 16,22 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo < hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {

2020-12-11 14:05:33,657	[INFO]	==== Epoch 11 ====
2020-12-11 14:05:33,657	[INFO]	Termination: target fitness reached
2020-12-11 14:05:33,658	[INFO]	Number of interations: 169
2020-12-11 14:05:33,658	[INFO]	Best fitness: 0.0
2020-12-11 14:05:33,658	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<'})
2020-12-11 14:05:33,658	[INFO]	Diff:
*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,22 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
--- 16,22 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo < hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {

2020-12-11 14:05:33,658	[INFO]	==== Epoch 12 ====
2020-12-11 14:05:33,658	[INFO]	Termination: target fitness reached
2020-12-11 14:05:33,658	[INFO]	Number of interations: 104
2020-12-11 14:05:33,658	[INFO]	Best fitness: 0.0
2020-12-11 14:05:33,658	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '!='})
2020-12-11 14:05:33,658	[INFO]	Diff:
*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,22 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
--- 16,22 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo != hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {

2020-12-11 14:05:33,659	[INFO]	==== Epoch 13 ====
2020-12-11 14:05:33,659	[INFO]	Termination: target fitness reached
2020-12-11 14:05:33,659	[INFO]	Number of interations: 64
2020-12-11 14:05:33,659	[INFO]	Best fitness: 0.0
2020-12-11 14:05:33,659	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<'})
2020-12-11 14:05:33,659	[INFO]	Diff:
*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,22 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
--- 16,22 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo < hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {

2020-12-11 14:05:33,659	[INFO]	==== Epoch 14 ====
2020-12-11 14:05:33,659	[INFO]	Termination: target fitness reached
2020-12-11 14:05:33,659	[INFO]	Number of interations: 173
2020-12-11 14:05:33,659	[INFO]	Best fitness: 0.0
2020-12-11 14:05:33,660	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '!='}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 8), 'value': '!='})
2020-12-11 14:05:33,660	[INFO]	Diff:
*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,22 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
--- 16,22 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo != hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {

2020-12-11 14:05:33,660	[INFO]	==== Epoch 15 ====
2020-12-11 14:05:33,660	[INFO]	Termination: target fitness reached
2020-12-11 14:05:33,660	[INFO]	Number of interations: 11
2020-12-11 14:05:33,660	[INFO]	Best fitness: 0.0
2020-12-11 14:05:33,660	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '<'})
2020-12-11 14:05:33,660	[INFO]	Diff:
*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,22 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
--- 16,22 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo < hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {

2020-12-11 14:05:33,660	[INFO]	==== Epoch 16 ====
2020-12-11 14:05:33,660	[INFO]	Termination: target fitness reached
2020-12-11 14:05:33,660	[INFO]	Number of interations: 90
2020-12-11 14:05:33,660	[INFO]	Best fitness: 0.0
2020-12-11 14:05:33,660	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '!='})
2020-12-11 14:05:33,660	[INFO]	Diff:
*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,22 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
--- 16,22 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo != hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {

2020-12-11 14:05:33,660	[INFO]	==== Epoch 17 ====
2020-12-11 14:05:33,660	[INFO]	Termination: step budget
2020-12-11 14:05:33,661	[INFO]	Number of interations: 500
2020-12-11 14:05:33,661	[INFO]	Best fitness: 2.0
2020-12-11 14:05:33,661	[INFO]	Best patch: MyStmtInsertion({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 5), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 13), 'direction': 'before'})
2020-12-11 14:05:33,661	[INFO]	Diff:
*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 19,24 ****
--- 19,26 ----
          while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
+             lo = mid + 1;
+ 
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
                  return mid;
              } else if (x <= arr[mid]) {

2020-12-11 14:05:33,661	[INFO]	==== Epoch 18 ====
2020-12-11 14:05:33,661	[INFO]	Termination: target fitness reached
2020-12-11 14:05:33,661	[INFO]	Number of interations: 11
2020-12-11 14:05:33,661	[INFO]	Best fitness: 0.0
2020-12-11 14:05:33,661	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '!='})
2020-12-11 14:05:33,661	[INFO]	Diff:
*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,22 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
--- 16,22 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo != hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {

2020-12-11 14:05:33,661	[INFO]	==== Epoch 19 ====
2020-12-11 14:05:33,661	[INFO]	Termination: target fitness reached
2020-12-11 14:05:33,661	[INFO]	Number of interations: 217
2020-12-11 14:05:33,661	[INFO]	Best fitness: 0.0
2020-12-11 14:05:33,661	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9), 'ingredient': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 9)}) | ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '!='})
2020-12-11 14:05:33,662	[INFO]	Diff:
*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,22 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
--- 16,22 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo != hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {

2020-12-11 14:05:33,662	[INFO]	==== Epoch 20 ====
2020-12-11 14:05:33,662	[INFO]	Termination: target fitness reached
2020-12-11 14:05:33,662	[INFO]	Number of interations: 8
2020-12-11 14:05:33,662	[INFO]	Best fitness: 0.0
2020-12-11 14:05:33,662	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/FIND_FIRST_IN_SORTED.java.xml', 3), 'value': '!='})
2020-12-11 14:05:33,662	[INFO]	Diff:
*** before: java_programs/FIND_FIRST_IN_SORTED.java.xml
--- after: java_programs/FIND_FIRST_IN_SORTED.java.xml
***************
*** 16,22 ****
          int lo = 0;
          int hi = arr.length;
  
!         while (lo <= hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {
--- 16,22 ----
          int lo = 0;
          int hi = arr.length;
  
!         while (lo != hi) {
              int mid = (lo + hi) / 2; // check if this is floor division
  
              if (x == arr[mid] && (mid == 0 || x != arr[mid-1])) {

2020-12-11 14:05:33,666	[INFO]	Experiment duration: 6528.0264544487
