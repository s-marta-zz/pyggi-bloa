2020-12-11 04:07:54,182	[INFO]	Path to the temporal program variants: ./.pyggi/tmp_variants/QuixBugs/1607656074
2020-12-11 04:07:54,182	[INFO]	========== EXPERIMENT FOR ['java_programs/BUCKETSORT.java.xml']  ==========
2020-12-11 04:07:54,182	[INFO]	modification points:
 ['./decl_stmt[1]', './for[1]', './for[1]/expr_stmt[1]', './decl_stmt[2]', './decl_stmt[3]', './for[2]', './for[2]/expr_stmt[1]', './for[2]/expr_stmt[2]', './return[1]']
2020-12-11 04:07:54,182	[INFO]	number of statements and comparisons: 9, 0
2020-12-11 04:07:54,182	[INFO]	========== EPOCH 1 ==========
2020-12-11 04:07:54,183	[INFO]	==== WARMUP ====
2020-12-11 04:07:57,177	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 04:07:57,178	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 04:08:00,141	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 04:08:00,141	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 04:08:03,321	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 04:08:03,321	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 04:08:06,744	[INFO]	INITIAL	SUCCESS	 6.0	
2020-12-11 04:08:06,745	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 04:08:06,745	[INFO]	==== START ====
2020-12-11 04:08:09,935	[INFO]	1	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:08:09,936	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 04:08:09,938	[INFO]	2	SUCCESS	+6.0	
2020-12-11 04:08:09,938	[DEBUG]	
2020-12-11 04:08:10,934	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:08:14,272	[INFO]	4	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:08:14,273	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 04:08:14,273	[INFO]	5	SUCCESS	+6.0	
2020-12-11 04:08:14,274	[DEBUG]	
2020-12-11 04:08:15,319	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:08:18,718	[INFO]	7	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:08:18,719	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:08:22,074	[INFO]	8	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:08:22,075	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,28 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
      }
--- 21,30 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
+ 
+         i++;
  
          return sorted_arr;
      }

2020-12-11 04:08:23,270	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:08:24,518	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:08:24,519	[INFO]	11	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:08:24,519	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:08:25,687	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:08:26,967	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:08:26,968	[INFO]	14	SUCCESS	+6.0	
2020-12-11 04:08:26,968	[DEBUG]	
2020-12-11 04:08:28,421	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:08:29,856	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:08:34,755	[INFO]	17	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:08:34,756	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 04:08:36,062	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:08:36,063	[INFO]	19	SUCCESS	+6.0	
2020-12-11 04:08:36,064	[DEBUG]	
2020-12-11 04:08:37,421	[INFO]	20	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:08:38,725	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:08:40,050	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:08:40,051	[INFO]	23	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:08:40,052	[DEBUG]	
2020-12-11 04:08:41,356	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:08:41,358	[INFO]	25	SUCCESS	+6.0	
2020-12-11 04:08:41,358	[DEBUG]	
2020-12-11 04:08:42,668	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:08:43,984	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:08:48,420	[INFO]	28	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:08:48,421	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:08:49,786	[INFO]	29	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:08:49,788	[INFO]	30	SUCCESS	+6.0	
2020-12-11 04:08:49,788	[DEBUG]	
2020-12-11 04:08:51,154	[INFO]	31	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:08:52,472	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:08:52,474	[INFO]	33	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:08:52,474	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 04:08:53,792	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:08:53,794	[INFO]	35	SUCCESS	+6.0	
2020-12-11 04:08:53,794	[DEBUG]	
2020-12-11 04:08:55,091	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:08:56,400	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:08:57,746	[INFO]	38	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:09:02,192	[INFO]	39	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:09:02,193	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
          }
  
          return sorted_arr;

2020-12-11 04:09:02,194	[INFO]	40	SUCCESS	+6.0	
2020-12-11 04:09:02,194	[DEBUG]	
2020-12-11 04:09:02,195	[INFO]	41	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:09:06,662	[INFO]	42	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:09:06,663	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 04:09:06,664	[INFO]	43	SUCCESS	+6.0	
2020-12-11 04:09:06,664	[DEBUG]	
2020-12-11 04:09:11,207	[INFO]	44	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:09:11,208	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:09:11,208	[INFO]	45	SUCCESS	+6.0	
2020-12-11 04:09:11,209	[DEBUG]	
2020-12-11 04:09:12,136	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:09:13,065	[INFO]	47	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:09:14,186	[INFO]	48	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:09:15,131	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:09:16,080	[INFO]	50	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:09:19,407	[INFO]	51	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:09:19,408	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 04:09:19,409	[INFO]	52	SUCCESS	+6.0	
2020-12-11 04:09:19,409	[DEBUG]	
2020-12-11 04:09:19,410	[INFO]	53	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:09:19,410	[INFO]	54	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:09:19,411	[DEBUG]	
2020-12-11 04:09:20,297	[INFO]	55	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:09:20,298	[INFO]	56	SUCCESS	+6.0	
2020-12-11 04:09:20,299	[DEBUG]	
2020-12-11 04:09:21,256	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:09:22,348	[INFO]	58	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:09:23,511	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:09:24,437	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:09:25,381	[INFO]	61	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:09:26,346	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:09:27,297	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:09:27,298	[INFO]	64	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:09:27,299	[DEBUG]	
2020-12-11 04:09:27,299	[INFO]	65	SUCCESS	+6.0	
2020-12-11 04:09:27,300	[DEBUG]	
2020-12-11 04:09:28,243	[INFO]	66	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:09:29,212	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:09:30,183	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:09:31,129	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:09:34,348	[INFO]	70	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:09:34,349	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 04:09:35,285	[INFO]	71	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:09:38,490	[INFO]	72	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:09:38,490	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 04:09:39,384	[INFO]	73	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:09:39,386	[INFO]	74	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:09:39,386	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 04:09:39,387	[INFO]	75	SUCCESS	+6.0	
2020-12-11 04:09:39,388	[DEBUG]	
2020-12-11 04:09:40,348	[INFO]	76	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:09:41,294	[INFO]	77	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:09:41,297	[INFO]	78	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:09:41,299	[INFO]	79	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:09:41,300	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 04:09:41,301	[INFO]	80	SUCCESS	+6.0	
2020-12-11 04:09:41,302	[DEBUG]	
2020-12-11 04:09:42,274	[INFO]	81	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:09:45,513	[INFO]	82	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:09:45,513	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 04:09:46,448	[INFO]	83	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:09:47,410	[INFO]	84	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:09:47,412	[INFO]	85	SUCCESS	+6.0	
2020-12-11 04:09:47,413	[DEBUG]	
2020-12-11 04:09:48,376	[INFO]	86	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:09:49,330	[INFO]	87	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:09:52,548	[INFO]	88	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:09:52,549	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 04:09:52,549	[INFO]	89	SUCCESS	+6.0	
2020-12-11 04:09:52,550	[DEBUG]	
2020-12-11 04:09:53,471	[INFO]	90	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:09:54,404	[INFO]	91	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:09:54,405	[INFO]	92	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:09:54,405	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 04:09:54,406	[INFO]	93	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:09:55,332	[INFO]	94	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:09:55,333	[INFO]	95	SUCCESS	+6.0	
2020-12-11 04:09:55,333	[DEBUG]	
2020-12-11 04:09:58,508	[INFO]	96	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:09:58,509	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 04:09:58,510	[INFO]	97	SUCCESS	+6.0	
2020-12-11 04:09:58,510	[DEBUG]	
2020-12-11 04:09:59,489	[INFO]	98	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:10:00,444	[INFO]	99	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:10:00,445	[INFO]	100	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:10:00,445	[DEBUG]	
2020-12-11 04:10:01,367	[INFO]	101	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:10:02,303	[INFO]	102	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:10:02,304	[INFO]	103	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:10:02,304	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 04:10:02,305	[INFO]	104	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:10:02,306	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 04:10:03,254	[INFO]	105	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:10:03,255	[INFO]	106	SUCCESS	+6.0	
2020-12-11 04:10:03,255	[DEBUG]	
2020-12-11 04:10:04,211	[INFO]	107	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:10:05,209	[INFO]	108	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:10:08,453	[INFO]	109	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:10:08,454	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:10:08,455	[INFO]	110	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:10:08,456	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:10:09,394	[INFO]	111	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:10:09,396	[INFO]	112	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:10:09,396	[DEBUG]	
2020-12-11 04:10:10,341	[INFO]	113	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:10:11,284	[INFO]	114	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:10:12,217	[INFO]	115	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:10:13,189	[INFO]	116	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:10:13,190	[INFO]	117	SUCCESS	+6.0	
2020-12-11 04:10:13,190	[DEBUG]	
2020-12-11 04:10:14,471	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:10:17,784	[INFO]	119	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:10:17,785	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 04:10:18,646	[INFO]	120	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:10:19,571	[INFO]	121	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:10:19,572	[INFO]	122	SUCCESS	+6.0	
2020-12-11 04:10:19,573	[DEBUG]	
2020-12-11 04:10:20,558	[INFO]	123	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:10:21,506	[INFO]	124	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:10:22,448	[INFO]	125	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:10:22,450	[INFO]	126	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:10:23,368	[INFO]	127	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:10:24,333	[INFO]	128	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:10:25,296	[INFO]	129	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:10:26,276	[INFO]	130	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:10:27,236	[INFO]	131	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:10:28,191	[INFO]	132	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:10:31,547	[INFO]	133	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:10:31,549	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 04:10:32,429	[INFO]	134	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:10:33,333	[INFO]	135	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:10:33,334	[INFO]	136	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:10:33,335	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 04:10:36,952	[INFO]	137	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:10:36,953	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 04:10:36,954	[INFO]	138	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:10:36,955	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 04:10:36,955	[INFO]	139	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:10:36,956	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 04:10:38,110	[INFO]	140	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:10:38,111	[INFO]	141	SUCCESS	+6.0	
2020-12-11 04:10:38,111	[DEBUG]	
2020-12-11 04:10:38,113	[INFO]	142	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:10:39,383	[INFO]	143	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:10:40,383	[INFO]	144	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:10:41,541	[INFO]	145	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:10:41,542	[INFO]	146	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:10:42,814	[INFO]	147	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:10:44,125	[INFO]	148	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:10:44,128	[INFO]	149	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:10:48,126	[INFO]	150	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:10:48,127	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 04:10:49,046	[INFO]	151	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:10:49,994	[INFO]	152	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:10:50,978	[INFO]	153	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:10:50,981	[INFO]	154	SUCCESS	+6.0	
2020-12-11 04:10:50,982	[DEBUG]	
2020-12-11 04:10:51,939	[INFO]	155	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:10:52,848	[INFO]	156	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:10:52,849	[INFO]	157	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:10:52,849	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 04:10:53,781	[INFO]	158	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:10:54,713	[INFO]	159	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:10:55,657	[INFO]	160	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:10:55,658	[INFO]	161	SUCCESS	+6.0	
2020-12-11 04:10:55,659	[DEBUG]	
2020-12-11 04:10:55,659	[INFO]	162	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:10:56,605	[INFO]	163	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:10:57,586	[INFO]	164	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:10:58,538	[INFO]	165	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:10:59,499	[INFO]	166	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:11:00,464	[INFO]	167	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:11:01,415	[INFO]	168	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:11:02,417	[INFO]	169	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:11:02,419	[INFO]	170	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:11:03,367	[INFO]	171	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:11:03,368	[INFO]	172	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:11:04,341	[INFO]	173	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:11:04,344	[INFO]	174	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:11:05,331	[INFO]	175	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:11:05,332	[INFO]	176	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:11:05,333	[DEBUG]	
2020-12-11 04:11:05,334	[INFO]	177	SUCCESS	+6.0	
2020-12-11 04:11:05,334	[DEBUG]	
2020-12-11 04:11:06,306	[INFO]	178	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:11:09,545	[INFO]	179	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:11:09,546	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:11:09,548	[INFO]	180	SUCCESS	+6.0	
2020-12-11 04:11:09,548	[DEBUG]	
2020-12-11 04:11:10,482	[INFO]	181	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:11:11,412	[INFO]	182	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:11:12,343	[INFO]	183	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:11:13,314	[INFO]	184	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:11:16,565	[INFO]	185	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:11:16,566	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:11:16,567	[INFO]	186	SUCCESS	+6.0	
2020-12-11 04:11:16,567	[DEBUG]	
2020-12-11 04:11:16,568	[INFO]	187	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:11:17,499	[INFO]	188	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:11:18,462	[INFO]	189	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:11:19,419	[INFO]	190	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:11:22,627	[INFO]	191	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:11:22,628	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 04:11:22,629	[INFO]	192	SUCCESS	+6.0	
2020-12-11 04:11:22,629	[DEBUG]	
2020-12-11 04:11:25,825	[INFO]	193	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:11:25,826	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 04:11:25,827	[INFO]	194	SUCCESS	+6.0	
2020-12-11 04:11:25,827	[DEBUG]	
2020-12-11 04:11:25,827	[INFO]	195	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:11:25,828	[DEBUG]	
2020-12-11 04:11:26,758	[INFO]	196	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:11:26,759	[INFO]	197	SUCCESS	+6.0	
2020-12-11 04:11:26,759	[DEBUG]	
2020-12-11 04:11:27,700	[INFO]	198	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:11:27,702	[INFO]	199	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:11:30,880	[INFO]	200	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:11:30,881	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 04:11:31,823	[INFO]	201	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:11:31,823	[INFO]	202	SUCCESS	+6.0	
2020-12-11 04:11:31,824	[DEBUG]	
2020-12-11 04:11:32,812	[INFO]	203	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:11:33,742	[INFO]	204	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:11:34,691	[INFO]	205	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:11:37,938	[INFO]	206	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:11:37,939	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:11:37,940	[INFO]	207	SUCCESS	+6.0	
2020-12-11 04:11:37,940	[DEBUG]	
2020-12-11 04:11:38,866	[INFO]	208	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:11:42,138	[INFO]	209	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:11:42,139	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 04:11:43,058	[INFO]	210	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:11:46,313	[INFO]	211	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:11:46,314	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,21 ****
--- 16,25 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 04:11:46,315	[INFO]	212	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:11:46,315	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 04:11:46,316	[INFO]	213	SUCCESS	+6.0	
2020-12-11 04:11:46,316	[DEBUG]	
2020-12-11 04:11:47,261	[INFO]	214	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:11:50,514	[INFO]	215	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:11:50,516	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 04:11:51,450	[INFO]	216	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:11:52,399	[INFO]	217	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:11:52,400	[INFO]	218	SUCCESS	+6.0	
2020-12-11 04:11:52,400	[DEBUG]	
2020-12-11 04:11:53,335	[INFO]	219	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:11:53,337	[INFO]	220	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:11:54,301	[INFO]	221	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:11:55,273	[INFO]	222	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:11:56,229	[INFO]	223	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:11:57,161	[INFO]	224	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:11:57,163	[INFO]	225	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:11:58,103	[INFO]	226	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:11:59,053	[INFO]	227	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:12:00,029	[INFO]	228	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:12:00,989	[INFO]	229	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:12:01,933	[INFO]	230	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:12:02,916	[INFO]	231	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:12:06,212	[INFO]	232	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:12:06,212	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,34 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:12:07,151	[INFO]	233	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:12:07,154	[INFO]	234	SUCCESS	+6.0	
2020-12-11 04:12:07,154	[DEBUG]	
2020-12-11 04:12:07,156	[INFO]	235	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:12:07,157	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 04:12:07,159	[INFO]	236	SUCCESS	+6.0	
2020-12-11 04:12:07,159	[DEBUG]	
2020-12-11 04:12:08,095	[INFO]	237	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:12:11,365	[INFO]	238	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:12:11,367	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 04:12:12,294	[INFO]	239	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:12:15,537	[INFO]	240	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:12:15,538	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,30 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 04:12:16,446	[INFO]	241	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:12:17,396	[INFO]	242	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:12:20,682	[INFO]	243	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:12:20,683	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 04:12:21,582	[INFO]	244	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:12:22,561	[INFO]	245	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:12:22,563	[INFO]	246	SUCCESS	+6.0	
2020-12-11 04:12:22,564	[DEBUG]	
2020-12-11 04:12:23,482	[INFO]	247	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:12:23,483	[INFO]	248	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:12:23,484	[DEBUG]	
2020-12-11 04:12:23,484	[INFO]	249	SUCCESS	+6.0	
2020-12-11 04:12:23,484	[DEBUG]	
2020-12-11 04:12:24,468	[INFO]	250	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:12:25,418	[INFO]	251	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:12:26,344	[INFO]	252	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:12:29,523	[INFO]	253	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:12:29,525	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 04:12:32,824	[INFO]	254	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:12:32,825	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,28 ****
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 15,26 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 04:12:32,826	[INFO]	255	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:12:32,827	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 04:12:32,827	[INFO]	256	SUCCESS	+6.0	
2020-12-11 04:12:32,827	[DEBUG]	
2020-12-11 04:12:33,722	[INFO]	257	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:12:34,668	[INFO]	258	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:12:35,587	[INFO]	259	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:12:36,549	[INFO]	260	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:12:37,477	[INFO]	261	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:12:38,459	[INFO]	262	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:12:39,437	[INFO]	263	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:12:40,389	[INFO]	264	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:12:43,686	[INFO]	265	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:12:43,687	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 04:12:43,687	[INFO]	266	SUCCESS	+6.0	
2020-12-11 04:12:43,687	[DEBUG]	
2020-12-11 04:12:46,854	[INFO]	267	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:12:46,855	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 04:12:46,855	[INFO]	268	SUCCESS	+6.0	
2020-12-11 04:12:46,856	[DEBUG]	
2020-12-11 04:12:47,808	[INFO]	269	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:12:51,087	[INFO]	270	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:12:51,087	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:12:51,088	[INFO]	271	SUCCESS	+6.0	
2020-12-11 04:12:51,088	[DEBUG]	
2020-12-11 04:12:52,034	[INFO]	272	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:12:52,969	[INFO]	273	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:12:56,170	[INFO]	274	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:12:56,170	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 04:12:56,171	[INFO]	275	SUCCESS	+6.0	
2020-12-11 04:12:56,172	[DEBUG]	
2020-12-11 04:12:57,125	[INFO]	276	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:12:58,077	[INFO]	277	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:12:59,050	[INFO]	278	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:13:00,010	[INFO]	279	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:13:00,989	[INFO]	280	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:13:01,984	[INFO]	281	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:13:02,935	[INFO]	282	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:13:02,939	[INFO]	283	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:13:02,939	[DEBUG]	
2020-12-11 04:13:02,941	[INFO]	284	SUCCESS	+6.0	
2020-12-11 04:13:02,942	[DEBUG]	
2020-12-11 04:13:06,300	[INFO]	285	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:13:06,301	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,34 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:13:07,230	[INFO]	286	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:13:08,145	[INFO]	287	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:13:08,146	[INFO]	288	SUCCESS	+6.0	
2020-12-11 04:13:08,146	[DEBUG]	
2020-12-11 04:13:09,077	[INFO]	289	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:13:10,034	[INFO]	290	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:13:13,228	[INFO]	291	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:13:13,230	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 04:13:14,172	[INFO]	292	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:13:15,128	[INFO]	293	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:13:15,129	[INFO]	294	SUCCESS	+6.0	
2020-12-11 04:13:15,130	[DEBUG]	
2020-12-11 04:13:16,065	[INFO]	295	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:13:17,060	[INFO]	296	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:13:18,030	[INFO]	297	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:13:21,298	[INFO]	298	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:13:21,299	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 04:13:22,126	[INFO]	299	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:13:23,049	[INFO]	300	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:13:23,050	[INFO]	301	SUCCESS	+6.0	
2020-12-11 04:13:23,050	[DEBUG]	
2020-12-11 04:13:23,998	[INFO]	302	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:13:24,931	[INFO]	303	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:13:28,174	[INFO]	304	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:13:28,176	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:13:29,086	[INFO]	305	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:13:29,087	[INFO]	306	SUCCESS	+6.0	
2020-12-11 04:13:29,087	[DEBUG]	
2020-12-11 04:13:30,065	[INFO]	307	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:13:30,066	[INFO]	308	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:13:30,067	[DEBUG]	
2020-12-11 04:13:30,067	[INFO]	309	SUCCESS	+6.0	
2020-12-11 04:13:30,068	[DEBUG]	
2020-12-11 04:13:33,256	[INFO]	310	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:13:33,258	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 04:13:34,204	[INFO]	311	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:13:35,138	[INFO]	312	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:13:35,139	[INFO]	313	SUCCESS	+6.0	
2020-12-11 04:13:35,139	[DEBUG]	
2020-12-11 04:13:35,140	[INFO]	314	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:13:36,061	[INFO]	315	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:13:39,404	[INFO]	316	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:13:39,406	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 04:13:40,299	[INFO]	317	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:13:40,300	[INFO]	318	SUCCESS	+6.0	
2020-12-11 04:13:40,300	[DEBUG]	
2020-12-11 04:13:40,301	[INFO]	319	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:13:40,302	[INFO]	320	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:13:40,302	[DEBUG]	
2020-12-11 04:13:40,302	[INFO]	321	SUCCESS	+6.0	
2020-12-11 04:13:40,303	[DEBUG]	
2020-12-11 04:13:41,237	[INFO]	322	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:13:42,189	[INFO]	323	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:13:42,190	[INFO]	324	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:13:42,191	[DEBUG]	
2020-12-11 04:13:43,135	[INFO]	325	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:13:43,138	[INFO]	326	SUCCESS	+6.0	
2020-12-11 04:13:43,138	[DEBUG]	
2020-12-11 04:13:44,141	[INFO]	327	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:13:45,085	[INFO]	328	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:13:46,029	[INFO]	329	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:13:46,978	[INFO]	330	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:13:46,980	[INFO]	331	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:13:46,981	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 04:13:47,965	[INFO]	332	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:13:47,966	[INFO]	333	SUCCESS	+6.0	
2020-12-11 04:13:47,966	[DEBUG]	
2020-12-11 04:13:47,967	[INFO]	334	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:13:51,180	[INFO]	335	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:13:51,181	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 04:13:54,529	[INFO]	336	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:13:54,531	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,24 ****
--- 18,30 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 04:13:54,534	[INFO]	337	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:13:54,535	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 04:13:55,468	[INFO]	338	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:13:55,470	[INFO]	339	SUCCESS	+6.0	
2020-12-11 04:13:55,471	[DEBUG]	
2020-12-11 04:13:56,424	[INFO]	340	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:13:57,383	[INFO]	341	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:13:58,312	[INFO]	342	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:13:59,257	[INFO]	343	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:14:00,272	[INFO]	344	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:14:01,242	[INFO]	345	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:14:01,243	[INFO]	346	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:14:01,244	[DEBUG]	
2020-12-11 04:14:02,200	[INFO]	347	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:14:03,177	[INFO]	348	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:14:03,178	[INFO]	349	SUCCESS	+6.0	
2020-12-11 04:14:03,179	[DEBUG]	
2020-12-11 04:14:04,177	[INFO]	350	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:14:07,475	[INFO]	351	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:14:07,476	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 04:14:07,478	[INFO]	352	SUCCESS	+6.0	
2020-12-11 04:14:07,478	[DEBUG]	
2020-12-11 04:14:08,405	[INFO]	353	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:14:09,334	[INFO]	354	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:14:10,313	[INFO]	355	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:14:13,524	[INFO]	356	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:14:13,525	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 04:14:14,445	[INFO]	357	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:14:14,446	[INFO]	358	SUCCESS	+6.0	
2020-12-11 04:14:14,447	[DEBUG]	
2020-12-11 04:14:15,405	[INFO]	359	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:14:15,407	[INFO]	360	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:14:15,408	[DEBUG]	
2020-12-11 04:14:16,559	[INFO]	361	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:14:17,505	[INFO]	362	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:14:18,455	[INFO]	363	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:14:21,668	[INFO]	364	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:14:21,669	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 04:14:21,669	[INFO]	365	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:14:21,670	[DEBUG]	
2020-12-11 04:14:22,608	[INFO]	366	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:14:22,609	[INFO]	367	SUCCESS	+6.0	
2020-12-11 04:14:22,609	[DEBUG]	
2020-12-11 04:14:23,547	[INFO]	368	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:14:24,521	[INFO]	369	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:14:25,447	[INFO]	370	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:14:26,421	[INFO]	371	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:14:27,396	[INFO]	372	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:14:28,344	[INFO]	373	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:14:29,330	[INFO]	374	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:14:29,332	[INFO]	375	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:14:29,332	[DEBUG]	
2020-12-11 04:14:29,333	[INFO]	376	SUCCESS	+6.0	
2020-12-11 04:14:29,333	[DEBUG]	
2020-12-11 04:14:29,335	[INFO]	377	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:14:30,291	[INFO]	378	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:14:30,293	[INFO]	379	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:14:30,293	[DEBUG]	
2020-12-11 04:14:30,294	[INFO]	380	SUCCESS	+6.0	
2020-12-11 04:14:30,294	[DEBUG]	
2020-12-11 04:14:31,211	[INFO]	381	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:14:32,160	[INFO]	382	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:14:33,124	[INFO]	383	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:14:36,456	[INFO]	384	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:14:36,458	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 04:14:39,636	[INFO]	385	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:14:39,637	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 04:14:40,568	[INFO]	386	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:14:40,570	[INFO]	387	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:14:40,571	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 04:14:41,548	[INFO]	388	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:14:41,549	[INFO]	389	SUCCESS	+6.0	
2020-12-11 04:14:41,549	[DEBUG]	
2020-12-11 04:14:42,499	[INFO]	390	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:14:43,466	[INFO]	391	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:14:44,417	[INFO]	392	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:14:44,418	[INFO]	393	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:14:45,361	[INFO]	394	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:14:45,364	[INFO]	395	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:14:46,350	[INFO]	396	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:14:49,553	[INFO]	397	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:14:49,554	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 04:14:49,555	[INFO]	398	SUCCESS	+6.0	
2020-12-11 04:14:49,555	[DEBUG]	
2020-12-11 04:14:50,525	[INFO]	399	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:14:51,466	[INFO]	400	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:14:51,467	[INFO]	401	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:14:52,419	[INFO]	402	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:14:52,420	[INFO]	403	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:14:53,357	[INFO]	404	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:14:54,289	[INFO]	405	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:14:55,240	[INFO]	406	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:14:56,190	[INFO]	407	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:14:57,118	[INFO]	408	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:14:58,089	[INFO]	409	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:14:59,047	[INFO]	410	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:14:59,049	[INFO]	411	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:15:00,015	[INFO]	412	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:15:01,000	[INFO]	413	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:15:01,979	[INFO]	414	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:15:02,925	[INFO]	415	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:15:03,863	[INFO]	416	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:15:03,865	[INFO]	417	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:15:03,866	[INFO]	418	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:15:03,866	[DEBUG]	
2020-12-11 04:15:04,796	[INFO]	419	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:15:05,807	[INFO]	420	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:15:05,809	[INFO]	421	SUCCESS	+6.0	
2020-12-11 04:15:05,810	[DEBUG]	
2020-12-11 04:15:08,997	[INFO]	422	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:15:08,999	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 04:15:09,953	[INFO]	423	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:15:10,878	[INFO]	424	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:15:10,879	[INFO]	425	SUCCESS	+6.0	
2020-12-11 04:15:10,879	[DEBUG]	
2020-12-11 04:15:11,810	[INFO]	426	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:15:15,065	[INFO]	427	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:15:15,066	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 04:15:15,068	[INFO]	428	SUCCESS	+6.0	
2020-12-11 04:15:15,068	[DEBUG]	
2020-12-11 04:15:16,001	[INFO]	429	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:15:16,960	[INFO]	430	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:15:17,906	[INFO]	431	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:15:21,182	[INFO]	432	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:15:21,183	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
          }
  
          return sorted_arr;

2020-12-11 04:15:21,184	[INFO]	433	SUCCESS	+6.0	
2020-12-11 04:15:21,184	[DEBUG]	
2020-12-11 04:15:22,107	[INFO]	434	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:15:23,048	[INFO]	435	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:15:23,996	[INFO]	436	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:15:24,951	[INFO]	437	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:15:25,921	[INFO]	438	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:15:26,898	[INFO]	439	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:15:27,864	[INFO]	440	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:15:28,852	[INFO]	441	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:15:28,856	[INFO]	442	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:15:32,159	[INFO]	443	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:15:32,161	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 04:15:32,162	[INFO]	444	SUCCESS	+6.0	
2020-12-11 04:15:32,163	[DEBUG]	
2020-12-11 04:15:35,364	[INFO]	445	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:15:35,365	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 04:15:35,366	[INFO]	446	SUCCESS	+6.0	
2020-12-11 04:15:35,366	[DEBUG]	
2020-12-11 04:15:36,319	[INFO]	447	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:15:37,269	[INFO]	448	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:15:37,272	[INFO]	449	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:15:37,273	[DEBUG]	
2020-12-11 04:15:37,275	[INFO]	450	SUCCESS	+6.0	
2020-12-11 04:15:37,276	[DEBUG]	
2020-12-11 04:15:37,277	[INFO]	451	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:15:37,278	[DEBUG]	
2020-12-11 04:15:37,279	[INFO]	452	SUCCESS	+6.0	
2020-12-11 04:15:37,279	[DEBUG]	
2020-12-11 04:15:38,262	[INFO]	453	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:15:39,209	[INFO]	454	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:15:40,148	[INFO]	455	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:15:41,087	[INFO]	456	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:15:41,088	[INFO]	457	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:15:42,020	[INFO]	458	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:15:43,006	[INFO]	459	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:15:43,009	[INFO]	460	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:15:43,009	[DEBUG]	
2020-12-11 04:15:43,977	[INFO]	461	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:15:43,979	[INFO]	462	SUCCESS	+6.0	
2020-12-11 04:15:43,980	[DEBUG]	
2020-12-11 04:15:44,945	[INFO]	463	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:15:45,905	[INFO]	464	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:15:49,172	[INFO]	465	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:15:49,174	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:15:50,063	[INFO]	466	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:15:51,015	[INFO]	467	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:15:51,017	[INFO]	468	SUCCESS	+6.0	
2020-12-11 04:15:51,017	[DEBUG]	
2020-12-11 04:15:54,472	[INFO]	469	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:15:54,473	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:15:55,356	[INFO]	470	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:15:56,314	[INFO]	471	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:15:56,316	[INFO]	472	SUCCESS	+6.0	
2020-12-11 04:15:56,317	[DEBUG]	
2020-12-11 04:15:57,235	[INFO]	473	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:15:58,183	[INFO]	474	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:15:59,110	[INFO]	475	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:16:00,052	[INFO]	476	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:16:01,028	[INFO]	477	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:16:01,981	[INFO]	478	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:16:05,346	[INFO]	479	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:16:05,347	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:16:05,348	[INFO]	480	SUCCESS	+6.0	
2020-12-11 04:16:05,348	[DEBUG]	
2020-12-11 04:16:06,279	[INFO]	481	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:16:09,584	[INFO]	482	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:16:09,585	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 04:16:09,586	[INFO]	483	SUCCESS	+6.0	
2020-12-11 04:16:09,586	[DEBUG]	
2020-12-11 04:16:10,500	[INFO]	484	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:16:11,454	[INFO]	485	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:16:12,394	[INFO]	486	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:16:13,356	[INFO]	487	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:16:16,648	[INFO]	488	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:16:16,649	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 04:16:16,650	[INFO]	489	SUCCESS	+6.0	
2020-12-11 04:16:16,650	[DEBUG]	
2020-12-11 04:16:19,890	[INFO]	490	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:16:19,891	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,21 ****
--- 16,24 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 04:16:20,813	[INFO]	491	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:16:24,042	[INFO]	492	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:16:24,043	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,25 ****
--- 16,29 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:16:25,006	[INFO]	493	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:16:25,010	[INFO]	494	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:16:25,011	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 04:16:28,334	[INFO]	495	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:16:28,335	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,28 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 04:16:29,263	[INFO]	496	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:16:29,264	[INFO]	497	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:16:29,265	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 04:16:29,265	[INFO]	498	SUCCESS	+6.0	
2020-12-11 04:16:29,265	[DEBUG]	
2020-12-11 04:16:30,203	[INFO]	499	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:16:31,185	[INFO]	500	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:16:31,186	[INFO]	==== END ====
2020-12-11 04:16:31,187	[INFO]	Reason: step budget
2020-12-11 04:16:31,188	[INFO]	
2020-12-11 04:16:31,188	[INFO]	========== EPOCH 2 ==========
2020-12-11 04:16:31,189	[INFO]	==== WARMUP ====
2020-12-11 04:16:34,397	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 04:16:34,397	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 04:16:37,586	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 04:16:37,587	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 04:16:40,790	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 04:16:40,790	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 04:16:44,060	[INFO]	INITIAL	SUCCESS	 6.0	
2020-12-11 04:16:44,061	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 04:16:44,061	[INFO]	==== START ====
2020-12-11 04:16:47,231	[INFO]	1	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:16:47,231	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 04:16:47,232	[INFO]	2	SUCCESS	+6.0	
2020-12-11 04:16:47,233	[DEBUG]	
2020-12-11 04:16:48,161	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:16:49,112	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:16:50,051	[INFO]	5	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:16:50,996	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:16:51,941	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:16:52,865	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:16:53,802	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:16:54,776	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:16:55,746	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:16:56,695	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:16:57,631	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:16:57,633	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:16:58,575	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:16:59,548	[INFO]	16	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:17:00,492	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:17:00,493	[INFO]	18	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:17:00,494	[DEBUG]	
2020-12-11 04:17:00,495	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:17:01,425	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:17:01,426	[INFO]	21	SUCCESS	+6.0	
2020-12-11 04:17:01,426	[DEBUG]	
2020-12-11 04:17:01,427	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:17:02,404	[INFO]	23	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:17:03,354	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:17:04,317	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:17:04,318	[INFO]	26	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:17:04,318	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 04:17:05,298	[INFO]	27	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:17:05,299	[INFO]	28	SUCCESS	+6.0	
2020-12-11 04:17:05,299	[DEBUG]	
2020-12-11 04:17:06,301	[INFO]	29	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:17:07,256	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:17:08,229	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:17:08,231	[INFO]	32	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:17:08,232	[DEBUG]	
2020-12-11 04:17:08,234	[INFO]	33	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:17:11,516	[INFO]	34	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:17:11,517	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:17:11,518	[INFO]	35	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:17:11,518	[DEBUG]	
2020-12-11 04:17:11,519	[INFO]	36	SUCCESS	+6.0	
2020-12-11 04:17:11,519	[DEBUG]	
2020-12-11 04:17:12,468	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:17:13,357	[INFO]	38	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:17:16,611	[INFO]	39	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:17:16,611	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 04:17:17,462	[INFO]	40	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:17:17,464	[INFO]	41	SUCCESS	+6.0	
2020-12-11 04:17:17,464	[DEBUG]	
2020-12-11 04:17:18,439	[INFO]	42	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:17:18,443	[INFO]	43	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:17:19,373	[INFO]	44	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:17:19,374	[INFO]	45	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:17:22,682	[INFO]	46	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:17:22,683	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 04:17:23,614	[INFO]	47	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:17:24,535	[INFO]	48	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:17:24,536	[INFO]	49	SUCCESS	+6.0	
2020-12-11 04:17:24,536	[DEBUG]	
2020-12-11 04:17:25,477	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:17:26,450	[INFO]	51	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:17:27,435	[INFO]	52	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:17:30,770	[INFO]	53	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:17:30,772	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 04:17:31,725	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:17:32,678	[INFO]	55	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:17:32,679	[INFO]	56	SUCCESS	+6.0	
2020-12-11 04:17:32,679	[DEBUG]	
2020-12-11 04:17:33,596	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:17:34,540	[INFO]	58	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:17:35,477	[INFO]	59	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:17:38,668	[INFO]	60	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:17:38,669	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 04:17:38,670	[INFO]	61	SUCCESS	+6.0	
2020-12-11 04:17:38,671	[DEBUG]	
2020-12-11 04:17:39,605	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:17:40,586	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:17:41,537	[INFO]	64	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:17:42,504	[INFO]	65	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:17:43,451	[INFO]	66	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:17:44,401	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:17:45,336	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:17:46,337	[INFO]	69	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:17:47,306	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:17:50,560	[INFO]	71	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:17:50,562	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 04:17:51,491	[INFO]	72	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:17:51,492	[INFO]	73	SUCCESS	+6.0	
2020-12-11 04:17:51,493	[DEBUG]	
2020-12-11 04:17:52,475	[INFO]	74	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:17:55,701	[INFO]	75	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:17:55,702	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 04:17:55,703	[INFO]	76	SUCCESS	+6.0	
2020-12-11 04:17:55,703	[DEBUG]	
2020-12-11 04:17:58,960	[INFO]	77	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:17:58,961	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 04:17:59,912	[INFO]	78	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:18:00,822	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:18:00,824	[INFO]	80	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:18:04,039	[INFO]	81	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:18:04,040	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 04:18:04,041	[INFO]	82	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:18:04,042	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 04:18:05,010	[INFO]	83	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:18:05,011	[INFO]	84	SUCCESS	+6.0	
2020-12-11 04:18:05,011	[DEBUG]	
2020-12-11 04:18:08,254	[INFO]	85	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:18:08,255	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 04:18:09,212	[INFO]	86	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:18:09,213	[INFO]	87	SUCCESS	+6.0	
2020-12-11 04:18:09,214	[DEBUG]	
2020-12-11 04:18:12,436	[INFO]	88	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:18:12,437	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
          }
  
          return sorted_arr;

2020-12-11 04:18:13,370	[INFO]	89	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:18:13,371	[INFO]	90	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:18:13,372	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
          }
  
          return sorted_arr;

2020-12-11 04:18:14,349	[INFO]	91	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:18:14,352	[INFO]	92	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:18:14,353	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
          }
  
          return sorted_arr;

2020-12-11 04:18:17,590	[INFO]	93	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:18:17,591	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,30 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
          }
  
          return sorted_arr;

2020-12-11 04:18:18,566	[INFO]	94	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:18:19,542	[INFO]	95	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:18:20,470	[INFO]	96	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:18:20,471	[INFO]	97	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:18:20,472	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
          }
  
          return sorted_arr;

2020-12-11 04:18:20,472	[INFO]	98	SUCCESS	+6.0	
2020-12-11 04:18:20,473	[DEBUG]	
2020-12-11 04:18:21,448	[INFO]	99	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:18:22,389	[INFO]	100	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:18:23,360	[INFO]	101	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:18:24,282	[INFO]	102	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:18:25,238	[INFO]	103	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:18:26,214	[INFO]	104	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:18:27,150	[INFO]	105	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:18:30,401	[INFO]	106	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:18:30,401	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 04:18:31,332	[INFO]	107	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:18:32,296	[INFO]	108	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:18:33,246	[INFO]	109	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:18:33,247	[INFO]	110	SUCCESS	+6.0	
2020-12-11 04:18:33,247	[DEBUG]	
2020-12-11 04:18:36,504	[INFO]	111	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:18:36,505	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 04:18:36,505	[INFO]	112	SUCCESS	+6.0	
2020-12-11 04:18:36,505	[DEBUG]	
2020-12-11 04:18:39,724	[INFO]	113	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:18:39,725	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 04:18:39,726	[INFO]	114	SUCCESS	+6.0	
2020-12-11 04:18:39,726	[DEBUG]	
2020-12-11 04:18:40,699	[INFO]	115	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:18:40,701	[INFO]	116	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:18:40,702	[DEBUG]	
2020-12-11 04:18:40,703	[INFO]	117	SUCCESS	+6.0	
2020-12-11 04:18:40,704	[DEBUG]	
2020-12-11 04:18:40,706	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:18:40,708	[INFO]	119	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:18:41,665	[INFO]	120	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:18:41,667	[INFO]	121	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:18:42,581	[INFO]	122	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:18:43,565	[INFO]	123	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:18:44,527	[INFO]	124	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:18:45,479	[INFO]	125	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:18:48,658	[INFO]	126	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:18:48,660	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 04:18:48,661	[INFO]	127	SUCCESS	+6.0	
2020-12-11 04:18:48,662	[DEBUG]	
2020-12-11 04:18:51,885	[INFO]	128	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:18:51,886	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:18:52,826	[INFO]	129	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:18:52,828	[INFO]	130	SUCCESS	+6.0	
2020-12-11 04:18:52,828	[DEBUG]	
2020-12-11 04:18:52,830	[INFO]	131	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:18:53,748	[INFO]	132	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:18:53,749	[INFO]	133	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:18:53,750	[INFO]	134	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:18:54,673	[INFO]	135	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:18:57,943	[INFO]	136	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:18:57,945	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 04:18:58,895	[INFO]	137	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:19:02,154	[INFO]	138	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:19:02,155	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,32 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 04:19:03,111	[INFO]	139	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:19:06,418	[INFO]	140	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:19:06,419	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,35 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 04:19:06,421	[INFO]	141	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:19:06,421	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,32 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 04:19:09,823	[INFO]	142	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:19:09,825	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,27 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 14,32 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 04:19:13,099	[INFO]	143	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:19:13,101	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,24 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
--- 14,27 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 04:19:14,006	[INFO]	144	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:19:17,330	[INFO]	145	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:19:17,332	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:19:17,334	[INFO]	146	SUCCESS	+6.0	
2020-12-11 04:19:17,334	[DEBUG]	
2020-12-11 04:19:18,238	[INFO]	147	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:19:19,172	[INFO]	148	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:19:20,112	[INFO]	149	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:19:21,035	[INFO]	150	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:19:22,000	[INFO]	151	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:19:22,971	[INFO]	152	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:19:23,942	[INFO]	153	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:19:24,935	[INFO]	154	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:19:25,870	[INFO]	155	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:19:25,872	[INFO]	156	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:19:29,131	[INFO]	157	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:19:29,132	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:19:30,091	[INFO]	158	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:19:33,307	[INFO]	159	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:19:33,308	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 04:19:33,310	[INFO]	160	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:19:33,311	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 04:19:34,260	[INFO]	161	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:19:34,263	[INFO]	162	SUCCESS	+6.0	
2020-12-11 04:19:34,264	[DEBUG]	
2020-12-11 04:19:35,189	[INFO]	163	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:19:35,190	[INFO]	164	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:19:36,145	[INFO]	165	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:19:36,146	[INFO]	166	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:19:37,097	[INFO]	167	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:19:40,385	[INFO]	168	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:19:40,386	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 04:19:41,310	[INFO]	169	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:19:42,284	[INFO]	170	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:19:42,287	[INFO]	171	SUCCESS	+6.0	
2020-12-11 04:19:42,287	[DEBUG]	
2020-12-11 04:19:43,229	[INFO]	172	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:19:44,169	[INFO]	173	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:19:45,125	[INFO]	174	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:19:46,040	[INFO]	175	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:19:47,021	[INFO]	176	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:19:47,990	[INFO]	177	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:19:48,931	[INFO]	178	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:19:49,943	[INFO]	179	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:19:53,351	[INFO]	180	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:19:53,352	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 04:19:56,564	[INFO]	181	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:19:56,565	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  
***************
*** 21,26 ****
--- 22,28 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 04:19:56,566	[INFO]	182	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:19:56,566	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 04:19:57,503	[INFO]	183	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:19:58,455	[INFO]	184	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:19:59,388	[INFO]	185	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:19:59,389	[INFO]	186	SUCCESS	+6.0	
2020-12-11 04:19:59,389	[DEBUG]	
2020-12-11 04:20:00,317	[INFO]	187	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:20:00,318	[INFO]	188	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:20:00,319	[INFO]	189	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:20:00,319	[DEBUG]	
2020-12-11 04:20:01,296	[INFO]	190	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:20:01,299	[INFO]	191	SUCCESS	+6.0	
2020-12-11 04:20:01,300	[DEBUG]	
2020-12-11 04:20:02,267	[INFO]	192	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:20:05,616	[INFO]	193	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:20:05,616	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:20:06,516	[INFO]	194	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:20:09,848	[INFO]	195	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:20:09,849	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
***************
*** 24,29 ****
--- 24,34 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:20:09,850	[INFO]	196	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:20:09,850	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:20:10,772	[INFO]	197	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:20:10,773	[INFO]	198	SUCCESS	+6.0	
2020-12-11 04:20:10,773	[DEBUG]	
2020-12-11 04:20:10,774	[INFO]	199	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:20:10,774	[DEBUG]	
2020-12-11 04:20:10,775	[INFO]	200	SUCCESS	+6.0	
2020-12-11 04:20:10,775	[DEBUG]	
2020-12-11 04:20:11,689	[INFO]	201	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:20:14,940	[INFO]	202	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:20:14,941	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 04:20:14,942	[INFO]	203	SUCCESS	+6.0	
2020-12-11 04:20:14,942	[DEBUG]	
2020-12-11 04:20:14,943	[INFO]	204	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:20:15,879	[INFO]	205	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:20:16,841	[INFO]	206	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:20:17,770	[INFO]	207	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:20:18,734	[INFO]	208	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:20:19,687	[INFO]	209	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:20:23,189	[INFO]	210	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:20:23,190	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:20:23,191	[INFO]	211	SUCCESS	+6.0	
2020-12-11 04:20:23,191	[DEBUG]	
2020-12-11 04:20:23,193	[INFO]	212	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:20:24,110	[INFO]	213	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:20:25,040	[INFO]	214	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:20:25,041	[INFO]	215	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:20:25,041	[DEBUG]	
2020-12-11 04:20:25,042	[INFO]	216	SUCCESS	+6.0	
2020-12-11 04:20:25,042	[DEBUG]	
2020-12-11 04:20:26,015	[INFO]	217	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:20:29,422	[INFO]	218	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:20:29,423	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 04:20:29,423	[INFO]	219	SUCCESS	+6.0	
2020-12-11 04:20:29,423	[DEBUG]	
2020-12-11 04:20:30,301	[INFO]	220	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:20:31,271	[INFO]	221	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:20:32,219	[INFO]	222	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:20:32,223	[INFO]	223	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:20:35,725	[INFO]	224	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:20:35,725	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 04:20:37,043	[INFO]	225	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:20:38,083	[INFO]	226	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:20:38,085	[INFO]	227	SUCCESS	+6.0	
2020-12-11 04:20:38,086	[DEBUG]	
2020-12-11 04:20:39,344	[INFO]	228	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:20:39,347	[INFO]	229	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:20:39,348	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 04:20:39,349	[INFO]	230	SUCCESS	+6.0	
2020-12-11 04:20:39,350	[DEBUG]	
2020-12-11 04:20:40,353	[INFO]	231	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:20:41,319	[INFO]	232	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:20:42,300	[INFO]	233	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:20:43,269	[INFO]	234	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:20:44,221	[INFO]	235	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:20:45,187	[INFO]	236	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:20:45,191	[INFO]	237	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:20:46,154	[INFO]	238	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:20:47,098	[INFO]	239	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:20:48,057	[INFO]	240	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:20:49,031	[INFO]	241	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:20:49,979	[INFO]	242	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:20:50,949	[INFO]	243	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:20:51,934	[INFO]	244	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:20:52,902	[INFO]	245	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:20:53,865	[INFO]	246	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:20:53,866	[INFO]	247	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:20:53,867	[DEBUG]	
2020-12-11 04:20:53,867	[INFO]	248	SUCCESS	+6.0	
2020-12-11 04:20:53,867	[DEBUG]	
2020-12-11 04:20:54,832	[INFO]	249	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:20:55,817	[INFO]	250	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:20:55,821	[INFO]	251	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:20:56,774	[INFO]	252	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:20:57,756	[INFO]	253	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:20:58,705	[INFO]	254	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:20:59,651	[INFO]	255	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:21:00,651	[INFO]	256	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:21:01,584	[INFO]	257	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:21:02,559	[INFO]	258	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:21:05,835	[INFO]	259	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:21:05,836	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
          }
  
          return sorted_arr;

2020-12-11 04:21:05,836	[INFO]	260	SUCCESS	+6.0	
2020-12-11 04:21:05,837	[DEBUG]	
2020-12-11 04:21:06,742	[INFO]	261	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:21:07,667	[INFO]	262	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:21:08,641	[INFO]	263	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:21:09,794	[INFO]	264	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:21:10,758	[INFO]	265	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:21:10,759	[INFO]	266	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:21:10,759	[DEBUG]	
2020-12-11 04:21:10,760	[INFO]	267	SUCCESS	+6.0	
2020-12-11 04:21:10,760	[DEBUG]	
2020-12-11 04:21:11,688	[INFO]	268	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:21:12,635	[INFO]	269	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:21:13,570	[INFO]	270	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:21:13,571	[INFO]	271	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:21:14,502	[INFO]	272	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:21:17,774	[INFO]	273	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:21:17,775	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 04:21:21,067	[INFO]	274	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:21:21,068	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,26 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 13,27 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 04:21:22,006	[INFO]	275	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:21:22,010	[INFO]	276	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:21:22,011	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,26 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 13,27 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 04:21:25,290	[INFO]	277	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:21:25,291	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,18 ****
--- 13,20 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
+         
+ 
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
***************
*** 21,26 ****
--- 23,31 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 04:21:28,587	[INFO]	278	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:21:28,589	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,26 ****
--- 13,34 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
+         
+ 
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 04:21:31,883	[INFO]	279	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:21:31,884	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,24 ****
--- 13,29 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
+         
+ 
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 04:21:31,886	[INFO]	280	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:21:31,886	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,24 ****
--- 13,29 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
+         
+ 
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 04:21:32,843	[INFO]	281	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:21:32,847	[INFO]	282	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:21:32,849	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,24 ****
--- 13,29 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
+         
+ 
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 04:21:36,157	[INFO]	283	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:21:36,159	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,26 ****
--- 13,32 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
+         
+ 
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
  	    i++;
          }
  

2020-12-11 04:21:36,160	[INFO]	284	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:21:36,161	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,26 ****
--- 13,32 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
+         
+ 
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
  	    i++;
          }
  

2020-12-11 04:21:36,162	[INFO]	285	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:21:36,163	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,26 ****
--- 13,32 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
+         
+ 
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
  	    i++;
          }
  

2020-12-11 04:21:37,058	[INFO]	286	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:21:40,296	[INFO]	287	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:21:40,297	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,18 ****
--- 13,20 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
+         
+ 
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
***************
*** 22,27 ****
--- 24,30 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 04:21:40,299	[INFO]	288	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:21:40,299	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,18 ****
--- 13,20 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
+         
+ 
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
***************
*** 22,27 ****
--- 24,30 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 04:21:40,300	[INFO]	289	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:21:40,301	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,18 ****
--- 13,20 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
+         
+ 
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
***************
*** 22,27 ****
--- 24,30 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 04:21:43,558	[INFO]	290	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:21:43,559	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,18 ****
--- 13,20 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
+         
+ 
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }

2020-12-11 04:21:44,516	[INFO]	291	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:21:45,490	[INFO]	292	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:21:46,431	[INFO]	293	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:21:49,737	[INFO]	294	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:21:49,738	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,18 ****
--- 13,20 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
+         
+ 
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
***************
*** 24,29 ****
--- 26,35 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:21:50,681	[INFO]	295	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:21:50,683	[INFO]	296	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:21:50,683	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,18 ****
--- 13,20 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
+         
+ 
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }

2020-12-11 04:21:50,685	[INFO]	297	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:21:51,614	[INFO]	298	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:21:51,615	[INFO]	299	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:21:51,616	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,18 ****
--- 13,20 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
+         
+ 
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }

2020-12-11 04:21:52,579	[INFO]	300	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:21:52,581	[INFO]	301	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:21:52,582	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,18 ****
--- 13,20 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
+         
+ 
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }

2020-12-11 04:21:53,535	[INFO]	302	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:21:53,536	[INFO]	303	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:21:53,537	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,18 ****
--- 13,20 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
+         
+ 
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }

2020-12-11 04:21:53,537	[INFO]	304	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:21:56,819	[INFO]	305	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:21:56,821	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,23 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             
+         }
+ 
+         for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 04:22:00,097	[INFO]	306	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:22:00,098	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 04:22:01,030	[INFO]	307	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:22:02,008	[INFO]	308	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:22:02,010	[INFO]	309	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:22:02,011	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 04:22:02,012	[INFO]	310	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:22:02,012	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 04:22:02,957	[INFO]	311	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:22:02,960	[INFO]	312	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:22:03,914	[INFO]	313	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:22:03,916	[INFO]	314	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:22:03,916	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 04:22:03,917	[INFO]	315	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:22:03,918	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 04:22:03,919	[INFO]	316	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:22:03,919	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 04:22:03,920	[INFO]	317	SUCCESS	+6.0	
2020-12-11 04:22:03,920	[DEBUG]	
2020-12-11 04:22:07,197	[INFO]	318	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:22:07,198	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 04:22:08,128	[INFO]	319	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:22:09,026	[INFO]	320	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:22:12,299	[INFO]	321	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:22:12,301	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,28 ****
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
! 	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 18,25 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
! 	
!         
  
          return sorted_arr;
      }

2020-12-11 04:22:13,231	[INFO]	322	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:22:13,232	[INFO]	323	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:22:13,232	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,28 ****
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
! 	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 18,25 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
! 	
!         
  
          return sorted_arr;
      }

2020-12-11 04:22:13,233	[INFO]	324	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:22:13,233	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,28 ****
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
! 	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 18,25 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
! 	
!         
  
          return sorted_arr;
      }

2020-12-11 04:22:13,234	[INFO]	325	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:22:13,234	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 04:22:13,235	[INFO]	326	SUCCESS	+6.0	
2020-12-11 04:22:13,235	[DEBUG]	
2020-12-11 04:22:14,162	[INFO]	327	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:22:15,125	[INFO]	328	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:22:18,393	[INFO]	329	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:22:18,395	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 04:22:18,397	[INFO]	330	SUCCESS	+6.0	
2020-12-11 04:22:18,398	[DEBUG]	
2020-12-11 04:22:19,327	[INFO]	331	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:22:20,270	[INFO]	332	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:22:23,466	[INFO]	333	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:22:23,468	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 04:22:23,470	[INFO]	334	SUCCESS	+6.0	
2020-12-11 04:22:23,470	[DEBUG]	
2020-12-11 04:22:23,472	[INFO]	335	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:22:24,399	[INFO]	336	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:22:24,400	[INFO]	337	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:22:24,401	[DEBUG]	
2020-12-11 04:22:25,335	[INFO]	338	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:22:26,298	[INFO]	339	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:22:27,266	[INFO]	340	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:22:30,580	[INFO]	341	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:22:30,581	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:22:30,582	[INFO]	342	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:22:30,582	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:22:30,583	[INFO]	343	SUCCESS	+6.0	
2020-12-11 04:22:30,584	[DEBUG]	
2020-12-11 04:22:31,506	[INFO]	344	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:22:32,428	[INFO]	345	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:22:33,370	[INFO]	346	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:22:34,352	[INFO]	347	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:22:34,353	[INFO]	348	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:22:34,353	[DEBUG]	
2020-12-11 04:22:34,354	[INFO]	349	SUCCESS	+6.0	
2020-12-11 04:22:34,354	[DEBUG]	
2020-12-11 04:22:35,300	[INFO]	350	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:22:36,262	[INFO]	351	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:22:36,266	[INFO]	352	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:22:36,267	[DEBUG]	
2020-12-11 04:22:36,268	[INFO]	353	SUCCESS	+6.0	
2020-12-11 04:22:36,268	[DEBUG]	
2020-12-11 04:22:37,219	[INFO]	354	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:22:40,413	[INFO]	355	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:22:40,414	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 04:22:41,354	[INFO]	356	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:22:41,355	[INFO]	357	SUCCESS	+6.0	
2020-12-11 04:22:41,355	[DEBUG]	
2020-12-11 04:22:42,324	[INFO]	358	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:22:43,264	[INFO]	359	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:22:43,265	[INFO]	360	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:22:43,265	[DEBUG]	
2020-12-11 04:22:44,220	[INFO]	361	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:22:45,166	[INFO]	362	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:22:45,167	[INFO]	363	SUCCESS	+6.0	
2020-12-11 04:22:45,167	[DEBUG]	
2020-12-11 04:22:46,135	[INFO]	364	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:22:47,131	[INFO]	365	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:22:47,134	[INFO]	366	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:22:50,335	[INFO]	367	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:22:50,336	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 04:22:53,641	[INFO]	368	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:22:53,642	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:22:56,855	[INFO]	369	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:22:56,856	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 04:22:56,857	[INFO]	370	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:22:56,857	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:22:57,837	[INFO]	371	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:22:58,794	[INFO]	372	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:22:58,796	[INFO]	373	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:22:58,796	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 04:22:58,797	[INFO]	374	SUCCESS	+6.0	
2020-12-11 04:22:58,798	[DEBUG]	
2020-12-11 04:22:59,759	[INFO]	375	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:23:00,718	[INFO]	376	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:23:01,673	[INFO]	377	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:23:02,617	[INFO]	378	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:23:05,970	[INFO]	379	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:23:05,970	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,34 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:23:05,971	[INFO]	380	SUCCESS	+6.0	
2020-12-11 04:23:05,971	[DEBUG]	
2020-12-11 04:23:06,924	[INFO]	381	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:23:07,862	[INFO]	382	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:23:07,863	[INFO]	383	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:23:08,808	[INFO]	384	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:23:08,809	[INFO]	385	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:23:09,774	[INFO]	386	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:23:10,745	[INFO]	387	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:23:10,749	[INFO]	388	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:23:10,750	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:23:11,696	[INFO]	389	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:23:11,698	[INFO]	390	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:23:11,698	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:23:12,656	[INFO]	391	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:23:13,604	[INFO]	392	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:23:13,606	[INFO]	393	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:23:13,606	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:23:14,561	[INFO]	394	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:23:15,510	[INFO]	395	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:23:16,478	[INFO]	396	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:23:17,471	[INFO]	397	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:23:17,475	[INFO]	398	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:23:17,476	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:23:20,755	[INFO]	399	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:23:20,756	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,29 ****
--- 20,34 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:23:21,700	[INFO]	400	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:23:21,702	[INFO]	401	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:23:21,703	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,29 ****
--- 20,34 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:23:25,028	[INFO]	402	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:23:25,029	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:23:25,914	[INFO]	403	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:23:29,136	[INFO]	404	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:23:29,137	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  
***************
*** 24,29 ****
--- 25,32 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:23:32,607	[INFO]	405	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:23:32,608	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 04:23:32,610	[INFO]	406	SUCCESS	+6.0	
2020-12-11 04:23:32,610	[DEBUG]	
2020-12-11 04:23:33,538	[INFO]	407	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:23:36,767	[INFO]	408	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:23:36,768	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 04:23:37,706	[INFO]	409	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:23:37,707	[INFO]	410	SUCCESS	+6.0	
2020-12-11 04:23:37,707	[DEBUG]	
2020-12-11 04:23:41,005	[INFO]	411	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:23:41,006	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 04:23:44,257	[INFO]	412	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:23:44,258	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,25 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
--- 13,24 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:23:44,259	[INFO]	413	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:23:44,259	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 04:23:44,260	[INFO]	414	SUCCESS	+6.0	
2020-12-11 04:23:44,260	[DEBUG]	
2020-12-11 04:23:45,214	[INFO]	415	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:23:46,146	[INFO]	416	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:23:47,100	[INFO]	417	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:23:50,350	[INFO]	418	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:23:50,350	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
          }
  
          return sorted_arr;

2020-12-11 04:23:51,300	[INFO]	419	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:23:51,303	[INFO]	420	SUCCESS	+6.0	
2020-12-11 04:23:51,303	[DEBUG]	
2020-12-11 04:23:54,585	[INFO]	421	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:23:54,586	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 04:23:54,586	[INFO]	422	SUCCESS	+6.0	
2020-12-11 04:23:54,587	[DEBUG]	
2020-12-11 04:23:55,468	[INFO]	423	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:23:55,470	[INFO]	424	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:23:55,470	[DEBUG]	
2020-12-11 04:23:56,434	[INFO]	425	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:23:57,391	[INFO]	426	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:24:00,688	[INFO]	427	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:24:00,689	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,34 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:24:00,690	[INFO]	428	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:24:00,690	[DEBUG]	
2020-12-11 04:24:00,691	[INFO]	429	SUCCESS	+6.0	
2020-12-11 04:24:00,691	[DEBUG]	
2020-12-11 04:24:01,591	[INFO]	430	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:24:01,593	[INFO]	431	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:24:01,594	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,34 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:24:04,876	[INFO]	432	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:24:04,878	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,33 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
+         }
+ 
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 04:24:05,880	[INFO]	433	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:24:06,834	[INFO]	434	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:24:07,780	[INFO]	435	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:24:08,745	[INFO]	436	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:24:12,057	[INFO]	437	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:24:12,058	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,24 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
--- 14,30 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+ 	    i++;
+         }
+ 
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 04:24:13,019	[INFO]	438	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:24:13,023	[INFO]	439	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:24:13,024	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,24 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
--- 14,30 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+ 	    i++;
+         }
+ 
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 04:24:13,976	[INFO]	440	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:24:14,924	[INFO]	441	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:24:18,248	[INFO]	442	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:24:18,249	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
***************
*** 24,29 ****
--- 24,34 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:24:21,457	[INFO]	443	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:24:21,458	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,23 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
+         }
+ 
+         for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
***************
*** 24,29 ****
--- 28,38 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:24:22,402	[INFO]	444	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:24:25,640	[INFO]	445	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:24:25,642	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,23 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
+         }
+ 
+         for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
***************
*** 23,28 ****
--- 27,41 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 04:24:28,979	[INFO]	446	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:24:28,980	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,24 ****
--- 17,37 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 04:24:28,981	[INFO]	447	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:24:28,982	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,24 ****
--- 17,37 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 04:24:29,936	[INFO]	448	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:24:33,155	[INFO]	449	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:24:33,156	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,24 ****
--- 17,33 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 04:24:34,077	[INFO]	450	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:24:34,078	[INFO]	451	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:24:34,079	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,34 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:24:34,080	[INFO]	452	SUCCESS	+6.0	
2020-12-11 04:24:34,080	[DEBUG]	
2020-12-11 04:24:35,037	[INFO]	453	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:24:35,975	[INFO]	454	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:24:39,219	[INFO]	455	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:24:39,221	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 04:24:39,223	[INFO]	456	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:24:39,224	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 04:24:39,225	[INFO]	457	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:24:39,226	[DEBUG]	
2020-12-11 04:24:42,448	[INFO]	458	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:24:42,449	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:24:42,450	[INFO]	459	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:24:42,451	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:24:43,370	[INFO]	460	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:24:43,371	[INFO]	461	SUCCESS	+6.0	
2020-12-11 04:24:43,371	[DEBUG]	
2020-12-11 04:24:44,353	[INFO]	462	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:24:45,322	[INFO]	463	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:24:48,597	[INFO]	464	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:24:48,598	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,21 ****
--- 16,24 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 04:24:49,511	[INFO]	465	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:24:50,466	[INFO]	466	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:24:53,862	[INFO]	467	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:24:53,862	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,27 ****
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 16,30 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 04:24:54,733	[INFO]	468	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:24:54,734	[INFO]	469	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:24:54,735	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,21 ****
--- 16,24 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 04:24:55,704	[INFO]	470	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:24:56,662	[INFO]	471	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:24:57,646	[INFO]	472	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:24:57,648	[INFO]	473	SUCCESS	+6.0	
2020-12-11 04:24:57,648	[DEBUG]	
2020-12-11 04:24:57,650	[INFO]	474	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:24:57,651	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,34 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:24:57,652	[INFO]	475	SUCCESS	+6.0	
2020-12-11 04:24:57,652	[DEBUG]	
2020-12-11 04:24:58,603	[INFO]	476	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:24:59,583	[INFO]	477	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:25:00,539	[INFO]	478	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:25:01,505	[INFO]	479	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:25:02,461	[INFO]	480	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:25:03,398	[INFO]	481	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:25:04,368	[INFO]	482	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:25:05,361	[INFO]	483	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:25:06,354	[INFO]	484	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:25:07,297	[INFO]	485	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:25:08,253	[INFO]	486	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:25:11,515	[INFO]	487	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:25:11,517	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:25:12,437	[INFO]	488	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:25:13,383	[INFO]	489	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:25:13,384	[INFO]	490	SUCCESS	+6.0	
2020-12-11 04:25:13,385	[DEBUG]	
2020-12-11 04:25:14,343	[INFO]	491	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:25:15,306	[INFO]	492	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:25:16,275	[INFO]	493	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:25:17,249	[INFO]	494	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:25:17,252	[INFO]	495	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:25:18,191	[INFO]	496	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:25:19,133	[INFO]	497	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:25:20,067	[INFO]	498	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:25:21,063	[INFO]	499	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:25:21,064	[INFO]	500	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:25:21,065	[DEBUG]	
2020-12-11 04:25:21,065	[INFO]	==== END ====
2020-12-11 04:25:21,065	[INFO]	Reason: step budget
2020-12-11 04:25:21,065	[INFO]	
2020-12-11 04:25:21,065	[INFO]	========== EPOCH 3 ==========
2020-12-11 04:25:21,066	[INFO]	==== WARMUP ====
2020-12-11 04:25:24,342	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 04:25:24,343	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 04:25:27,548	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 04:25:27,548	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 04:25:30,805	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 04:25:30,805	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 04:25:34,036	[INFO]	INITIAL	SUCCESS	 6.0	
2020-12-11 04:25:34,036	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 04:25:34,036	[INFO]	==== START ====
2020-12-11 04:25:35,005	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:25:36,167	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:25:37,149	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:25:38,119	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:25:39,061	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:25:42,358	[INFO]	6	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:25:42,359	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 04:25:42,360	[INFO]	7	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:25:42,360	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 04:25:43,289	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:25:43,292	[INFO]	9	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:25:43,293	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 04:25:43,294	[INFO]	10	SUCCESS	+6.0	
2020-12-11 04:25:43,294	[DEBUG]	
2020-12-11 04:25:44,252	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:25:47,530	[INFO]	12	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:25:47,530	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 04:25:48,475	[INFO]	13	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:25:48,477	[INFO]	14	SUCCESS	+6.0	
2020-12-11 04:25:48,478	[DEBUG]	
2020-12-11 04:25:49,378	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:25:50,324	[INFO]	16	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:25:51,272	[INFO]	17	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:25:52,204	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:25:55,370	[INFO]	19	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:25:55,371	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 04:25:56,322	[INFO]	20	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:25:56,324	[INFO]	21	SUCCESS	+6.0	
2020-12-11 04:25:56,325	[DEBUG]	
2020-12-11 04:25:57,251	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:25:58,212	[INFO]	23	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:25:59,179	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:26:00,120	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:26:01,069	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:26:01,072	[INFO]	27	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:26:01,073	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 04:26:01,074	[INFO]	28	SUCCESS	+6.0	
2020-12-11 04:26:01,075	[DEBUG]	
2020-12-11 04:26:02,030	[INFO]	29	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:26:02,979	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:26:03,933	[INFO]	31	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:26:04,873	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:26:05,849	[INFO]	33	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:26:06,779	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:26:06,780	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:26:07,761	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:26:08,700	[INFO]	37	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:26:09,651	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:26:10,584	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:26:11,528	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:26:12,501	[INFO]	41	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:26:13,510	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:26:14,501	[INFO]	43	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:26:15,473	[INFO]	44	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:26:16,399	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:26:19,699	[INFO]	46	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:26:19,701	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 04:26:19,703	[INFO]	47	SUCCESS	+6.0	
2020-12-11 04:26:19,703	[DEBUG]	
2020-12-11 04:26:22,882	[INFO]	48	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:26:22,884	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:26:22,886	[INFO]	49	SUCCESS	+6.0	
2020-12-11 04:26:22,886	[DEBUG]	
2020-12-11 04:26:26,090	[INFO]	50	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:26:26,090	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 04:26:26,091	[INFO]	51	SUCCESS	+6.0	
2020-12-11 04:26:26,091	[DEBUG]	
2020-12-11 04:26:27,002	[INFO]	52	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:26:27,939	[INFO]	53	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:26:28,914	[INFO]	54	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:26:29,906	[INFO]	55	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:26:30,864	[INFO]	56	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:26:31,790	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:26:31,791	[INFO]	58	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:26:31,791	[DEBUG]	
2020-12-11 04:26:32,754	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:26:36,043	[INFO]	60	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:26:36,044	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,21 ****
--- 16,24 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 04:26:36,045	[INFO]	61	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:26:36,045	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,21 ****
--- 16,24 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 04:26:36,996	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:26:36,998	[INFO]	63	SUCCESS	+6.0	
2020-12-11 04:26:36,999	[DEBUG]	
2020-12-11 04:26:37,001	[INFO]	64	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:26:37,002	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:26:37,004	[INFO]	65	SUCCESS	+6.0	
2020-12-11 04:26:37,005	[DEBUG]	
2020-12-11 04:26:37,958	[INFO]	66	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:26:37,959	[INFO]	67	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:26:37,959	[DEBUG]	
2020-12-11 04:26:38,900	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:26:39,844	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:26:40,852	[INFO]	70	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:26:41,890	[INFO]	71	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:26:42,855	[INFO]	72	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:26:46,177	[INFO]	73	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:26:46,178	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:26:47,087	[INFO]	74	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:26:47,090	[INFO]	75	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:26:47,091	[DEBUG]	
2020-12-11 04:26:47,093	[INFO]	76	SUCCESS	+6.0	
2020-12-11 04:26:47,093	[DEBUG]	
2020-12-11 04:26:50,299	[INFO]	77	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:26:50,300	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:26:51,261	[INFO]	78	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:26:54,589	[INFO]	79	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:26:54,590	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,29 ****
--- 19,36 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:26:54,591	[INFO]	80	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:26:54,591	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:26:55,513	[INFO]	81	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:26:56,448	[INFO]	82	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:26:59,805	[INFO]	83	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:26:59,807	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
--- 21,34 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
+         }
+ 
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 04:26:59,810	[INFO]	84	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:26:59,811	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
--- 21,34 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
+         }
+ 
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 04:27:00,729	[INFO]	85	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:27:01,671	[INFO]	86	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:27:02,612	[INFO]	87	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:27:03,581	[INFO]	88	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:27:04,520	[INFO]	89	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:27:04,521	[INFO]	90	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:27:04,522	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
--- 21,34 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
+         }
+ 
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 04:27:04,523	[INFO]	91	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:27:04,524	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
--- 21,34 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
+         }
+ 
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 04:27:04,524	[INFO]	92	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:27:04,525	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:27:07,842	[INFO]	93	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:27:07,843	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
***************
*** 24,29 ****
--- 25,34 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:27:07,844	[INFO]	94	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:27:07,844	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
***************
*** 24,29 ****
--- 25,34 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:27:07,845	[INFO]	95	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:27:07,846	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
***************
*** 24,29 ****
--- 25,34 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:27:07,847	[INFO]	96	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:27:07,847	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
***************
*** 24,29 ****
--- 25,34 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:27:07,848	[INFO]	97	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:27:07,849	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:27:07,849	[INFO]	98	SUCCESS	+6.0	
2020-12-11 04:27:07,850	[DEBUG]	
2020-12-11 04:27:07,851	[INFO]	99	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:27:08,762	[INFO]	100	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:27:08,765	[INFO]	101	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:27:09,704	[INFO]	102	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:27:10,633	[INFO]	103	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:27:10,636	[INFO]	104	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:27:10,637	[DEBUG]	
2020-12-11 04:27:11,563	[INFO]	105	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:27:11,564	[INFO]	106	SUCCESS	+6.0	
2020-12-11 04:27:11,564	[DEBUG]	
2020-12-11 04:27:12,522	[INFO]	107	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:27:13,489	[INFO]	108	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:27:14,603	[INFO]	109	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:27:15,566	[INFO]	110	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:27:16,554	[INFO]	111	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:27:17,487	[INFO]	112	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:27:18,436	[INFO]	113	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:27:19,408	[INFO]	114	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:27:20,406	[INFO]	115	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:27:21,349	[INFO]	116	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:27:22,270	[INFO]	117	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:27:22,271	[INFO]	118	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:27:22,272	[INFO]	119	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:27:23,218	[INFO]	120	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:27:24,193	[INFO]	121	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:27:25,154	[INFO]	122	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:27:25,158	[INFO]	123	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:27:25,159	[DEBUG]	
2020-12-11 04:27:25,161	[INFO]	124	SUCCESS	+6.0	
2020-12-11 04:27:25,161	[DEBUG]	
2020-12-11 04:27:25,164	[INFO]	125	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:27:28,350	[INFO]	126	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:27:28,351	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 04:27:29,310	[INFO]	127	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:27:30,305	[INFO]	128	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:27:31,247	[INFO]	129	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:27:31,248	[INFO]	130	SUCCESS	+6.0	
2020-12-11 04:27:31,248	[DEBUG]	
2020-12-11 04:27:31,249	[INFO]	131	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:27:34,563	[INFO]	132	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:27:34,564	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:27:34,565	[INFO]	133	SUCCESS	+6.0	
2020-12-11 04:27:34,565	[DEBUG]	
2020-12-11 04:27:35,487	[INFO]	134	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:27:35,488	[INFO]	135	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:27:35,489	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:27:35,489	[INFO]	136	SUCCESS	+6.0	
2020-12-11 04:27:35,489	[DEBUG]	
2020-12-11 04:27:35,490	[INFO]	137	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:27:36,417	[INFO]	138	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:27:39,866	[INFO]	139	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:27:39,867	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:27:39,868	[INFO]	140	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:27:39,869	[DEBUG]	
2020-12-11 04:27:40,749	[INFO]	141	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:27:41,690	[INFO]	142	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:27:41,692	[INFO]	143	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:27:41,692	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:27:41,693	[INFO]	144	SUCCESS	+6.0	
2020-12-11 04:27:41,693	[DEBUG]	
2020-12-11 04:27:42,634	[INFO]	145	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:27:43,578	[INFO]	146	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:27:44,528	[INFO]	147	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:27:45,508	[INFO]	148	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:27:46,473	[INFO]	149	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:27:49,813	[INFO]	150	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:27:49,814	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 04:27:49,814	[INFO]	151	SUCCESS	+6.0	
2020-12-11 04:27:49,815	[DEBUG]	
2020-12-11 04:27:50,703	[INFO]	152	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:27:53,874	[INFO]	153	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:27:53,874	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 04:27:54,755	[INFO]	154	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:27:54,756	[INFO]	155	SUCCESS	+6.0	
2020-12-11 04:27:54,756	[DEBUG]	
2020-12-11 04:27:57,969	[INFO]	156	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:27:57,970	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 04:27:58,955	[INFO]	157	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:27:58,956	[INFO]	158	SUCCESS	+6.0	
2020-12-11 04:27:58,956	[DEBUG]	
2020-12-11 04:27:59,921	[INFO]	159	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:27:59,923	[INFO]	160	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:28:00,933	[INFO]	161	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:28:01,896	[INFO]	162	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:28:02,845	[INFO]	163	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:28:06,126	[INFO]	164	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:28:06,127	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,27 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 04:28:07,118	[INFO]	165	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:28:07,120	[INFO]	166	SUCCESS	+6.0	
2020-12-11 04:28:07,121	[DEBUG]	
2020-12-11 04:28:08,059	[INFO]	167	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:28:09,001	[INFO]	168	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:28:12,251	[INFO]	169	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:28:12,252	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 04:28:12,253	[INFO]	170	SUCCESS	+6.0	
2020-12-11 04:28:12,253	[DEBUG]	
2020-12-11 04:28:12,254	[INFO]	171	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:28:13,192	[INFO]	172	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:28:16,393	[INFO]	173	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:28:16,394	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 04:28:17,328	[INFO]	174	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:28:18,288	[INFO]	175	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:28:19,227	[INFO]	176	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:28:19,228	[INFO]	177	SUCCESS	+6.0	
2020-12-11 04:28:19,229	[DEBUG]	
2020-12-11 04:28:22,470	[INFO]	178	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:28:22,470	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 04:28:22,471	[INFO]	179	SUCCESS	+6.0	
2020-12-11 04:28:22,471	[DEBUG]	
2020-12-11 04:28:22,472	[INFO]	180	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:28:25,770	[INFO]	181	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:28:25,771	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 04:28:26,651	[INFO]	182	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:28:26,652	[INFO]	183	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:28:26,653	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 04:28:26,653	[INFO]	184	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:28:26,654	[DEBUG]	
2020-12-11 04:28:29,886	[INFO]	185	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:28:29,886	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:28:29,887	[INFO]	186	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:28:29,888	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:28:30,851	[INFO]	187	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:28:31,824	[INFO]	188	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:28:32,764	[INFO]	189	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:28:32,765	[INFO]	190	SUCCESS	+6.0	
2020-12-11 04:28:32,765	[DEBUG]	
2020-12-11 04:28:33,704	[INFO]	191	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:28:34,626	[INFO]	192	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:28:35,569	[INFO]	193	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:28:36,578	[INFO]	194	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:28:37,539	[INFO]	195	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:28:37,541	[INFO]	196	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:28:37,542	[DEBUG]	
2020-12-11 04:28:40,794	[INFO]	197	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:28:40,795	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 04:28:41,708	[INFO]	198	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:28:41,709	[INFO]	199	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:28:41,709	[DEBUG]	
2020-12-11 04:28:42,638	[INFO]	200	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:28:42,639	[INFO]	201	SUCCESS	+6.0	
2020-12-11 04:28:42,639	[DEBUG]	
2020-12-11 04:28:45,917	[INFO]	202	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:28:45,918	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 04:28:45,918	[INFO]	203	SUCCESS	+6.0	
2020-12-11 04:28:45,919	[DEBUG]	
2020-12-11 04:28:46,826	[INFO]	204	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:28:47,751	[INFO]	205	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:28:48,694	[INFO]	206	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:28:49,619	[INFO]	207	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:28:50,578	[INFO]	208	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:28:51,552	[INFO]	209	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:28:54,856	[INFO]	210	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:28:54,857	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 04:28:58,147	[INFO]	211	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:28:58,148	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,33 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
!         }
! 
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 04:28:58,149	[INFO]	212	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:28:58,149	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 04:29:01,478	[INFO]	213	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:29:01,478	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,28 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
      }
--- 21,32 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
+         }
+ 
+         i++;
  
          return sorted_arr;
      }

2020-12-11 04:29:02,387	[INFO]	214	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:29:02,388	[INFO]	215	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:29:02,389	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,28 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
      }
--- 21,32 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
+         }
+ 
+         i++;
  
          return sorted_arr;
      }

2020-12-11 04:29:02,390	[INFO]	216	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:29:02,391	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:29:03,354	[INFO]	217	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:29:03,357	[INFO]	218	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:29:03,358	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:29:03,360	[INFO]	219	SUCCESS	+6.0	
2020-12-11 04:29:03,360	[DEBUG]	
2020-12-11 04:29:03,362	[INFO]	220	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:29:03,365	[INFO]	221	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:29:06,726	[INFO]	222	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:29:06,728	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 04:29:09,880	[INFO]	223	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:29:09,882	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,26 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 14,29 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 04:29:13,062	[INFO]	224	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:29:13,062	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 04:29:13,963	[INFO]	225	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:29:13,964	[INFO]	226	SUCCESS	+6.0	
2020-12-11 04:29:13,964	[DEBUG]	
2020-12-11 04:29:14,904	[INFO]	227	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:29:15,888	[INFO]	228	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:29:16,857	[INFO]	229	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:29:17,831	[INFO]	230	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:29:17,832	[INFO]	231	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:29:17,832	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 04:29:17,833	[INFO]	232	SUCCESS	+6.0	
2020-12-11 04:29:17,833	[DEBUG]	
2020-12-11 04:29:18,771	[INFO]	233	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:29:19,729	[INFO]	234	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:29:20,690	[INFO]	235	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:29:23,932	[INFO]	236	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:29:23,933	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:29:23,933	[INFO]	237	SUCCESS	+6.0	
2020-12-11 04:29:23,934	[DEBUG]	
2020-12-11 04:29:27,162	[INFO]	238	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:29:27,162	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 04:29:28,070	[INFO]	239	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:29:28,071	[INFO]	240	SUCCESS	+6.0	
2020-12-11 04:29:28,071	[DEBUG]	
2020-12-11 04:29:29,037	[INFO]	241	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:29:30,026	[INFO]	242	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:29:31,006	[INFO]	243	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:29:31,944	[INFO]	244	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:29:32,878	[INFO]	245	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:29:33,802	[INFO]	246	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:29:34,766	[INFO]	247	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:29:35,736	[INFO]	248	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:29:36,704	[INFO]	249	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:29:37,606	[INFO]	250	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:29:38,528	[INFO]	251	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:29:39,494	[INFO]	252	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:29:40,451	[INFO]	253	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:29:41,401	[INFO]	254	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:29:42,344	[INFO]	255	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:29:43,320	[INFO]	256	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:29:46,605	[INFO]	257	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:29:46,606	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:29:46,607	[INFO]	258	SUCCESS	+6.0	
2020-12-11 04:29:46,607	[DEBUG]	
2020-12-11 04:29:47,526	[INFO]	259	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:29:48,481	[INFO]	260	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:29:49,460	[INFO]	261	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:29:49,463	[INFO]	262	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:29:52,758	[INFO]	263	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:29:52,758	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 04:29:52,759	[INFO]	264	SUCCESS	+6.0	
2020-12-11 04:29:52,759	[DEBUG]	
2020-12-11 04:29:55,948	[INFO]	265	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:29:55,949	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 04:29:55,950	[INFO]	266	SUCCESS	+6.0	
2020-12-11 04:29:55,950	[DEBUG]	
2020-12-11 04:29:56,872	[INFO]	267	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:29:57,828	[INFO]	268	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:29:58,759	[INFO]	269	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:29:59,706	[INFO]	270	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:30:00,678	[INFO]	271	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:30:01,626	[INFO]	272	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:30:02,598	[INFO]	273	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:30:03,558	[INFO]	274	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:30:06,830	[INFO]	275	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:30:06,833	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 04:30:06,835	[INFO]	276	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:30:06,836	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 04:30:06,839	[INFO]	277	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:30:06,840	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 04:30:06,841	[INFO]	278	SUCCESS	+6.0	
2020-12-11 04:30:06,842	[DEBUG]	
2020-12-11 04:30:07,813	[INFO]	279	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:30:08,769	[INFO]	280	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:30:08,772	[INFO]	281	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:30:09,725	[INFO]	282	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:30:12,946	[INFO]	283	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:30:12,947	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,34 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:30:13,909	[INFO]	284	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:30:13,912	[INFO]	285	SUCCESS	+6.0	
2020-12-11 04:30:13,912	[DEBUG]	
2020-12-11 04:30:13,914	[INFO]	286	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:30:13,915	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 04:30:13,916	[INFO]	287	SUCCESS	+6.0	
2020-12-11 04:30:13,917	[DEBUG]	
2020-12-11 04:30:14,882	[INFO]	288	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:30:14,883	[INFO]	289	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:30:15,827	[INFO]	290	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:30:16,785	[INFO]	291	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:30:17,745	[INFO]	292	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:30:20,979	[INFO]	293	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:30:20,980	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:30:21,908	[INFO]	294	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:30:22,851	[INFO]	295	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:30:23,750	[INFO]	296	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:30:24,726	[INFO]	297	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:30:24,729	[INFO]	298	SUCCESS	+6.0	
2020-12-11 04:30:24,730	[DEBUG]	
2020-12-11 04:30:25,696	[INFO]	299	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:30:26,640	[INFO]	300	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:30:27,628	[INFO]	301	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:30:27,631	[INFO]	302	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:30:27,633	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 04:30:27,635	[INFO]	303	SUCCESS	+6.0	
2020-12-11 04:30:27,636	[DEBUG]	
2020-12-11 04:30:28,599	[INFO]	304	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:30:31,972	[INFO]	305	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:30:31,973	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:30:31,974	[INFO]	306	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:30:31,975	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:30:32,897	[INFO]	307	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:30:32,898	[INFO]	308	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:30:32,898	[DEBUG]	
2020-12-11 04:30:33,851	[INFO]	309	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:30:33,853	[INFO]	310	SUCCESS	+6.0	
2020-12-11 04:30:33,853	[DEBUG]	
2020-12-11 04:30:34,795	[INFO]	311	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:30:35,979	[INFO]	312	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:30:37,289	[INFO]	313	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:30:38,315	[INFO]	314	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:30:39,573	[INFO]	315	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:30:40,759	[INFO]	316	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:30:42,020	[INFO]	317	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:30:42,021	[INFO]	318	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:30:42,021	[DEBUG]	
2020-12-11 04:30:43,205	[INFO]	319	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:30:43,206	[INFO]	320	SUCCESS	+6.0	
2020-12-11 04:30:43,206	[DEBUG]	
2020-12-11 04:30:47,024	[INFO]	321	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:30:47,025	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 04:30:50,310	[INFO]	322	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:30:50,313	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    
  	    i++;
          }
  

2020-12-11 04:30:50,315	[INFO]	323	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:30:50,315	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 04:30:50,317	[INFO]	324	SUCCESS	+6.0	
2020-12-11 04:30:50,317	[DEBUG]	
2020-12-11 04:30:50,320	[INFO]	325	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:30:50,322	[INFO]	326	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:30:51,235	[INFO]	327	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:30:52,169	[INFO]	328	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:30:55,495	[INFO]	329	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:30:55,496	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 04:30:55,497	[INFO]	330	SUCCESS	+6.0	
2020-12-11 04:30:55,497	[DEBUG]	
2020-12-11 04:30:56,404	[INFO]	331	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:30:57,400	[INFO]	332	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:30:57,403	[INFO]	333	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:30:57,404	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:30:57,405	[INFO]	334	SUCCESS	+6.0	
2020-12-11 04:30:57,406	[DEBUG]	
2020-12-11 04:30:58,392	[INFO]	335	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:30:58,395	[INFO]	336	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:30:59,400	[INFO]	337	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:31:00,347	[INFO]	338	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:31:03,534	[INFO]	339	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:31:03,535	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 04:31:03,536	[INFO]	340	SUCCESS	+6.0	
2020-12-11 04:31:03,536	[DEBUG]	
2020-12-11 04:31:04,467	[INFO]	341	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:31:05,444	[INFO]	342	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:31:08,674	[INFO]	343	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:31:08,675	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:31:08,677	[INFO]	344	SUCCESS	+6.0	
2020-12-11 04:31:08,678	[DEBUG]	
2020-12-11 04:31:11,928	[INFO]	345	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:31:11,929	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 04:31:11,930	[INFO]	346	SUCCESS	+6.0	
2020-12-11 04:31:11,930	[DEBUG]	
2020-12-11 04:31:12,875	[INFO]	347	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:31:13,822	[INFO]	348	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:31:14,808	[INFO]	349	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:31:15,738	[INFO]	350	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:31:16,685	[INFO]	351	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:31:16,686	[INFO]	352	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:31:16,687	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:31:16,687	[INFO]	353	SUCCESS	+6.0	
2020-12-11 04:31:16,687	[DEBUG]	
2020-12-11 04:31:19,903	[INFO]	354	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:31:19,904	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:31:20,817	[INFO]	355	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:31:20,818	[INFO]	356	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:31:20,818	[DEBUG]	
2020-12-11 04:31:21,757	[INFO]	357	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:31:21,758	[INFO]	358	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:31:21,759	[DEBUG]	
2020-12-11 04:31:21,759	[INFO]	359	SUCCESS	+6.0	
2020-12-11 04:31:21,760	[DEBUG]	
2020-12-11 04:31:22,716	[INFO]	360	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:31:22,717	[INFO]	361	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:31:22,718	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 04:31:23,629	[INFO]	362	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:31:24,611	[INFO]	363	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:31:24,612	[INFO]	364	SUCCESS	+6.0	
2020-12-11 04:31:24,612	[DEBUG]	
2020-12-11 04:31:25,542	[INFO]	365	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:31:26,493	[INFO]	366	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:31:26,494	[INFO]	367	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:31:27,592	[INFO]	368	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:31:28,551	[INFO]	369	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:31:29,553	[INFO]	370	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:31:30,550	[INFO]	371	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:31:31,494	[INFO]	372	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:31:34,853	[INFO]	373	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:31:34,854	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 04:31:34,854	[INFO]	374	SUCCESS	+6.0	
2020-12-11 04:31:34,855	[DEBUG]	
2020-12-11 04:31:35,719	[INFO]	375	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:31:36,675	[INFO]	376	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:31:37,602	[INFO]	377	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:31:38,580	[INFO]	378	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:31:38,581	[INFO]	379	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:31:39,523	[INFO]	380	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:31:39,526	[INFO]	381	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:31:39,527	[INFO]	382	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:31:40,474	[INFO]	383	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:31:41,420	[INFO]	384	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:31:42,353	[INFO]	385	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:31:43,300	[INFO]	386	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:31:46,707	[INFO]	387	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:31:46,708	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 04:31:46,709	[INFO]	388	SUCCESS	+6.0	
2020-12-11 04:31:46,710	[DEBUG]	
2020-12-11 04:31:47,607	[INFO]	389	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:31:48,580	[INFO]	390	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:31:49,544	[INFO]	391	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:31:50,484	[INFO]	392	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:31:50,486	[INFO]	393	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:31:51,465	[INFO]	394	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:31:52,449	[INFO]	395	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:31:53,386	[INFO]	396	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:31:54,366	[INFO]	397	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:31:55,326	[INFO]	398	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:31:56,278	[INFO]	399	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:31:57,240	[INFO]	400	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:31:57,242	[INFO]	401	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:31:57,242	[DEBUG]	
2020-12-11 04:31:58,192	[INFO]	402	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:31:58,194	[INFO]	403	SUCCESS	+6.0	
2020-12-11 04:31:58,194	[DEBUG]	
2020-12-11 04:32:01,457	[INFO]	404	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:32:01,458	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:32:02,398	[INFO]	405	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:32:02,400	[INFO]	406	SUCCESS	+6.0	
2020-12-11 04:32:02,401	[DEBUG]	
2020-12-11 04:32:03,351	[INFO]	407	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:32:04,293	[INFO]	408	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:32:04,294	[INFO]	409	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:32:07,645	[INFO]	410	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:32:07,647	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 04:32:10,858	[INFO]	411	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:32:10,860	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,24 ****
--- 17,29 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 04:32:10,863	[INFO]	412	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:32:10,864	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,24 ****
--- 17,29 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 04:32:11,798	[INFO]	413	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:32:11,802	[INFO]	414	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:32:11,803	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,24 ****
--- 17,29 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 04:32:11,804	[INFO]	415	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:32:11,805	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 04:32:12,744	[INFO]	416	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:32:12,745	[INFO]	417	SUCCESS	+6.0	
2020-12-11 04:32:12,745	[DEBUG]	
2020-12-11 04:32:13,704	[INFO]	418	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:32:14,664	[INFO]	419	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:32:14,665	[INFO]	420	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:32:14,665	[DEBUG]	
2020-12-11 04:32:15,610	[INFO]	421	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:32:15,611	[INFO]	422	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:32:15,611	[DEBUG]	
2020-12-11 04:32:16,533	[INFO]	423	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:32:16,535	[INFO]	424	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:32:16,535	[DEBUG]	
2020-12-11 04:32:16,536	[INFO]	425	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:32:16,536	[INFO]	426	SUCCESS	+6.0	
2020-12-11 04:32:16,537	[DEBUG]	
2020-12-11 04:32:17,493	[INFO]	427	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:32:17,494	[INFO]	428	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:32:17,495	[INFO]	429	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:32:17,495	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 04:32:17,496	[INFO]	430	SUCCESS	+6.0	
2020-12-11 04:32:17,496	[DEBUG]	
2020-12-11 04:32:20,735	[INFO]	431	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:32:20,736	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 04:32:20,737	[INFO]	432	SUCCESS	+6.0	
2020-12-11 04:32:20,737	[DEBUG]	
2020-12-11 04:32:20,738	[INFO]	433	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:32:20,738	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:32:21,669	[INFO]	434	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:32:21,670	[INFO]	435	SUCCESS	+6.0	
2020-12-11 04:32:21,671	[DEBUG]	
2020-12-11 04:32:22,573	[INFO]	436	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:32:23,537	[INFO]	437	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:32:24,484	[INFO]	438	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:32:25,477	[INFO]	439	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:32:26,423	[INFO]	440	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:32:27,383	[INFO]	441	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:32:28,322	[INFO]	442	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:32:29,303	[INFO]	443	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:32:32,552	[INFO]	444	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:32:32,553	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 04:32:33,427	[INFO]	445	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:32:33,429	[INFO]	446	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:32:33,430	[INFO]	447	SUCCESS	+6.0	
2020-12-11 04:32:33,430	[DEBUG]	
2020-12-11 04:32:34,357	[INFO]	448	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:32:37,658	[INFO]	449	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:32:37,659	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 04:32:37,660	[INFO]	450	SUCCESS	+6.0	
2020-12-11 04:32:37,660	[DEBUG]	
2020-12-11 04:32:38,558	[INFO]	451	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:32:39,505	[INFO]	452	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:32:40,466	[INFO]	453	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:32:41,390	[INFO]	454	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:32:41,392	[INFO]	455	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:32:42,346	[INFO]	456	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:32:42,348	[INFO]	457	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:32:42,348	[DEBUG]	
2020-12-11 04:32:42,348	[INFO]	458	SUCCESS	+6.0	
2020-12-11 04:32:42,349	[DEBUG]	
2020-12-11 04:32:43,286	[INFO]	459	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:32:44,234	[INFO]	460	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:32:44,235	[INFO]	461	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:32:44,236	[DEBUG]	
2020-12-11 04:32:45,199	[INFO]	462	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:32:46,185	[INFO]	463	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:32:47,122	[INFO]	464	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:32:47,124	[INFO]	465	SUCCESS	+6.0	
2020-12-11 04:32:47,125	[DEBUG]	
2020-12-11 04:32:48,083	[INFO]	466	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:32:49,052	[INFO]	467	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:32:49,996	[INFO]	468	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:32:50,936	[INFO]	469	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:32:51,901	[INFO]	470	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:32:52,838	[INFO]	471	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:32:56,101	[INFO]	472	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:32:56,102	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 04:32:57,049	[INFO]	473	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:32:57,050	[INFO]	474	SUCCESS	+6.0	
2020-12-11 04:32:57,050	[DEBUG]	
2020-12-11 04:32:57,997	[INFO]	475	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:32:58,963	[INFO]	476	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:32:58,966	[INFO]	477	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:32:59,961	[INFO]	478	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:33:00,918	[INFO]	479	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:33:04,263	[INFO]	480	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:33:04,263	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:33:05,184	[INFO]	481	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:33:06,177	[INFO]	482	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:33:06,180	[INFO]	483	SUCCESS	+6.0	
2020-12-11 04:33:06,181	[DEBUG]	
2020-12-11 04:33:07,145	[INFO]	484	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:33:08,090	[INFO]	485	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:33:08,091	[INFO]	486	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:33:09,030	[INFO]	487	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:33:12,248	[INFO]	488	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:33:12,250	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 04:33:13,193	[INFO]	489	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:33:14,131	[INFO]	490	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:33:15,080	[INFO]	491	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:33:16,053	[INFO]	492	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:33:19,318	[INFO]	493	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:33:19,319	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,28 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 04:33:22,557	[INFO]	494	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:33:22,558	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,24 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
-         ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
- 	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
--- 13,26 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
+         
+ 
+         ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	int i = 0;
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 04:33:25,773	[INFO]	495	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:33:25,774	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,27 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 13,24 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 04:33:26,664	[INFO]	496	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:33:27,610	[INFO]	497	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:33:30,860	[INFO]	498	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:33:30,860	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 04:33:30,861	[INFO]	499	SUCCESS	+6.0	
2020-12-11 04:33:30,861	[DEBUG]	
2020-12-11 04:33:31,782	[INFO]	500	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:33:31,782	[INFO]	==== END ====
2020-12-11 04:33:31,782	[INFO]	Reason: step budget
2020-12-11 04:33:31,783	[INFO]	
2020-12-11 04:33:31,783	[INFO]	========== EPOCH 4 ==========
2020-12-11 04:33:31,783	[INFO]	==== WARMUP ====
2020-12-11 04:33:35,038	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 04:33:35,039	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 04:33:38,309	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 04:33:38,309	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 04:33:41,542	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 04:33:41,543	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 04:33:44,794	[INFO]	INITIAL	SUCCESS	 6.0	
2020-12-11 04:33:44,794	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 04:33:44,794	[INFO]	==== START ====
2020-12-11 04:33:45,721	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:33:48,954	[INFO]	2	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:33:48,955	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 04:33:49,892	[INFO]	3	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:33:53,137	[INFO]	4	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:33:53,138	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 22,28 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 04:33:56,441	[INFO]	5	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:33:56,442	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 22,28 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
          }
  
          return sorted_arr;

2020-12-11 04:33:56,443	[INFO]	6	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:33:56,443	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 22,28 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 04:33:57,371	[INFO]	7	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:34:00,617	[INFO]	8	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:34:00,618	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
***************
*** 23,28 ****
--- 24,33 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    
+         }
  
          return sorted_arr;
      }

2020-12-11 04:34:03,934	[INFO]	9	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:34:03,936	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    
+         }
  
          return sorted_arr;
      }

2020-12-11 04:34:03,938	[INFO]	10	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:34:03,939	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 04:34:04,857	[INFO]	11	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:34:08,099	[INFO]	12	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:34:08,100	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,27 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 14,27 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 04:34:11,323	[INFO]	13	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:34:11,324	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:34:11,325	[INFO]	14	SUCCESS	+6.0	
2020-12-11 04:34:11,325	[DEBUG]	
2020-12-11 04:34:12,497	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:34:13,476	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:34:14,442	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:34:15,430	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:34:16,357	[INFO]	19	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:34:17,304	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:34:18,235	[INFO]	21	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:34:19,185	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:34:20,127	[INFO]	23	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:34:21,082	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:34:22,033	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:34:22,963	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:34:23,869	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:34:23,870	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:34:24,856	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:34:24,860	[INFO]	30	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:34:24,862	[INFO]	31	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:34:25,850	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:34:25,851	[INFO]	33	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:34:25,852	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:34:26,782	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:34:27,763	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:34:27,767	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:34:28,735	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:34:28,738	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:34:28,740	[INFO]	40	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:34:28,741	[INFO]	41	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:34:28,742	[DEBUG]	
2020-12-11 04:34:28,743	[INFO]	42	SUCCESS	+6.0	
2020-12-11 04:34:28,743	[DEBUG]	
2020-12-11 04:34:29,718	[INFO]	43	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:34:30,700	[INFO]	44	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:34:31,621	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:34:32,572	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:34:35,796	[INFO]	47	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:34:35,796	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 04:34:35,797	[INFO]	48	SUCCESS	+6.0	
2020-12-11 04:34:35,797	[DEBUG]	
2020-12-11 04:34:39,010	[INFO]	49	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:34:39,011	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,21 ****
--- 16,24 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 04:34:39,012	[INFO]	50	SUCCESS	+6.0	
2020-12-11 04:34:39,012	[DEBUG]	
2020-12-11 04:34:39,969	[INFO]	51	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:34:39,970	[INFO]	52	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:34:39,971	[INFO]	53	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:34:40,942	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:34:41,878	[INFO]	55	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:34:42,827	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:34:42,828	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:34:42,829	[INFO]	58	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:34:42,829	[DEBUG]	
2020-12-11 04:34:42,830	[INFO]	59	SUCCESS	+6.0	
2020-12-11 04:34:42,830	[DEBUG]	
2020-12-11 04:34:46,145	[INFO]	60	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:34:46,146	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 04:34:46,147	[INFO]	61	SUCCESS	+6.0	
2020-12-11 04:34:46,147	[DEBUG]	
2020-12-11 04:34:47,071	[INFO]	62	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:34:48,027	[INFO]	63	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:34:48,940	[INFO]	64	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:34:49,921	[INFO]	65	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:34:49,923	[INFO]	66	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:34:49,924	[DEBUG]	
2020-12-11 04:34:50,868	[INFO]	67	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:34:54,117	[INFO]	68	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:34:54,120	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:34:54,122	[INFO]	69	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:34:54,123	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:34:54,125	[INFO]	70	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:34:54,126	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:34:54,129	[INFO]	71	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:34:54,130	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:34:54,132	[INFO]	72	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:34:54,133	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:34:54,136	[INFO]	73	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:34:54,137	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:34:54,139	[INFO]	74	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:34:54,140	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:34:55,094	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:34:56,063	[INFO]	76	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:34:56,067	[INFO]	77	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:34:56,068	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:34:56,069	[INFO]	78	SUCCESS	+6.0	
2020-12-11 04:34:56,070	[DEBUG]	
2020-12-11 04:34:57,023	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:35:00,247	[INFO]	80	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:35:00,248	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 04:35:00,249	[INFO]	81	SUCCESS	+6.0	
2020-12-11 04:35:00,249	[DEBUG]	
2020-12-11 04:35:03,470	[INFO]	82	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:35:03,471	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 04:35:03,472	[INFO]	83	SUCCESS	+6.0	
2020-12-11 04:35:03,473	[DEBUG]	
2020-12-11 04:35:04,397	[INFO]	84	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:35:05,409	[INFO]	85	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:35:06,387	[INFO]	86	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:35:07,331	[INFO]	87	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:35:08,275	[INFO]	88	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:35:09,213	[INFO]	89	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:35:10,185	[INFO]	90	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:35:10,188	[INFO]	91	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:35:11,126	[INFO]	92	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:35:14,328	[INFO]	93	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:35:14,330	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:35:15,278	[INFO]	94	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:35:15,280	[INFO]	95	SUCCESS	+6.0	
2020-12-11 04:35:15,281	[DEBUG]	
2020-12-11 04:35:16,228	[INFO]	96	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:35:17,222	[INFO]	97	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:35:18,185	[INFO]	98	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:35:19,118	[INFO]	99	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:35:20,096	[INFO]	100	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:35:21,025	[INFO]	101	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:35:21,966	[INFO]	102	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:35:21,968	[INFO]	103	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:35:21,968	[DEBUG]	
2020-12-11 04:35:25,188	[INFO]	104	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:35:25,189	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,27 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 04:35:26,133	[INFO]	105	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:35:26,135	[INFO]	106	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:35:26,136	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,27 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 04:35:26,137	[INFO]	107	SUCCESS	+6.0	
2020-12-11 04:35:26,137	[DEBUG]	
2020-12-11 04:35:27,063	[INFO]	108	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:35:27,065	[INFO]	109	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:35:30,360	[INFO]	110	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:35:30,362	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:35:31,293	[INFO]	111	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:35:32,235	[INFO]	112	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:35:32,236	[INFO]	113	SUCCESS	+6.0	
2020-12-11 04:35:32,236	[DEBUG]	
2020-12-11 04:35:33,203	[INFO]	114	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:35:34,156	[INFO]	115	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:35:35,219	[INFO]	116	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:35:36,312	[INFO]	117	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:35:41,605	[INFO]	118	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:35:41,606	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 04:35:42,940	[INFO]	119	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:35:42,941	[INFO]	120	SUCCESS	+6.0	
2020-12-11 04:35:42,942	[DEBUG]	
2020-12-11 04:35:44,149	[INFO]	121	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:35:45,357	[INFO]	122	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:35:46,574	[INFO]	123	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:35:47,760	[INFO]	124	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:35:48,957	[INFO]	125	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:35:50,100	[INFO]	126	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:35:54,011	[INFO]	127	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:35:54,012	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 04:35:54,013	[INFO]	128	SUCCESS	+6.0	
2020-12-11 04:35:54,014	[DEBUG]	
2020-12-11 04:35:55,181	[INFO]	129	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:35:56,309	[INFO]	130	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:35:57,476	[INFO]	131	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:36:01,167	[INFO]	132	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:36:01,168	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 04:36:01,169	[INFO]	133	SUCCESS	+6.0	
2020-12-11 04:36:01,169	[DEBUG]	
2020-12-11 04:36:02,126	[INFO]	134	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:36:03,075	[INFO]	135	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:36:04,031	[INFO]	136	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:36:05,020	[INFO]	137	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:36:08,407	[INFO]	138	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:36:08,409	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 04:36:09,308	[INFO]	139	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:36:10,267	[INFO]	140	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:36:13,644	[INFO]	141	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:36:13,645	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,27 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 14,27 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 04:36:15,069	[INFO]	142	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:36:19,308	[INFO]	143	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:36:19,310	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,27 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 14,30 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 04:36:20,232	[INFO]	144	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:36:20,235	[INFO]	145	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:36:20,237	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,27 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 14,27 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 04:36:20,240	[INFO]	146	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:36:20,241	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,27 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 14,27 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 04:36:21,178	[INFO]	147	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:36:21,179	[INFO]	148	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:36:21,180	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,27 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 14,27 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 04:36:24,408	[INFO]	149	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:36:24,409	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,27 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 13,24 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 04:36:24,410	[INFO]	150	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:36:24,411	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,27 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 14,27 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 04:36:24,411	[INFO]	151	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:36:24,412	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 04:36:24,413	[INFO]	152	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:36:24,414	[INFO]	153	SUCCESS	+6.0	
2020-12-11 04:36:24,414	[DEBUG]	
2020-12-11 04:36:27,626	[INFO]	154	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:36:27,627	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 04:36:27,627	[INFO]	155	SUCCESS	+6.0	
2020-12-11 04:36:27,628	[DEBUG]	
2020-12-11 04:36:30,881	[INFO]	156	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:36:30,882	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:36:31,875	[INFO]	157	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:36:31,877	[INFO]	158	SUCCESS	+6.0	
2020-12-11 04:36:31,878	[DEBUG]	
2020-12-11 04:36:32,846	[INFO]	159	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:36:33,811	[INFO]	160	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:36:34,750	[INFO]	161	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:36:34,751	[INFO]	162	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:36:34,752	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:36:34,752	[INFO]	163	SUCCESS	+6.0	
2020-12-11 04:36:34,752	[DEBUG]	
2020-12-11 04:36:38,035	[INFO]	164	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:36:38,036	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:36:38,037	[INFO]	165	SUCCESS	+6.0	
2020-12-11 04:36:38,037	[DEBUG]	
2020-12-11 04:36:38,947	[INFO]	166	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:36:38,948	[INFO]	167	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:36:38,949	[DEBUG]	
2020-12-11 04:36:39,895	[INFO]	168	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:36:39,898	[INFO]	169	SUCCESS	+6.0	
2020-12-11 04:36:39,899	[DEBUG]	
2020-12-11 04:36:43,125	[INFO]	170	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:36:43,126	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,21 ****
--- 16,24 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 04:36:43,127	[INFO]	171	SUCCESS	+6.0	
2020-12-11 04:36:43,127	[DEBUG]	
2020-12-11 04:36:43,127	[INFO]	172	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:36:43,128	[DEBUG]	
2020-12-11 04:36:43,128	[INFO]	173	SUCCESS	+6.0	
2020-12-11 04:36:43,128	[DEBUG]	
2020-12-11 04:36:44,058	[INFO]	174	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:36:45,000	[INFO]	175	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:36:45,951	[INFO]	176	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:36:46,915	[INFO]	177	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:36:47,895	[INFO]	178	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:36:48,835	[INFO]	179	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:36:49,811	[INFO]	180	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:36:50,719	[INFO]	181	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:36:51,708	[INFO]	182	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:36:52,651	[INFO]	183	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:36:53,565	[INFO]	184	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:36:54,535	[INFO]	185	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:36:55,486	[INFO]	186	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:36:56,430	[INFO]	187	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:36:56,432	[INFO]	188	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:36:57,416	[INFO]	189	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:36:58,350	[INFO]	190	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:36:59,311	[INFO]	191	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:37:00,269	[INFO]	192	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:37:00,271	[INFO]	193	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:37:00,272	[INFO]	194	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:37:01,210	[INFO]	195	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:37:01,211	[INFO]	196	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:37:01,212	[INFO]	197	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:37:02,177	[INFO]	198	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:37:03,130	[INFO]	199	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:37:04,109	[INFO]	200	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:37:05,071	[INFO]	201	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:37:08,311	[INFO]	202	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:37:08,312	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 04:37:08,313	[INFO]	203	SUCCESS	+6.0	
2020-12-11 04:37:08,313	[DEBUG]	
2020-12-11 04:37:08,314	[INFO]	204	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:37:08,315	[DEBUG]	
2020-12-11 04:37:08,316	[INFO]	205	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:37:08,317	[INFO]	206	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:37:08,317	[INFO]	207	SUCCESS	+6.0	
2020-12-11 04:37:08,317	[DEBUG]	
2020-12-11 04:37:09,265	[INFO]	208	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:37:12,592	[INFO]	209	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:37:12,593	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 04:37:13,508	[INFO]	210	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:37:14,469	[INFO]	211	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:37:17,715	[INFO]	212	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:37:17,716	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,18 ****
--- 13,20 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
+         
+ 
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }

2020-12-11 04:37:21,053	[INFO]	213	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:37:21,054	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 04:37:21,978	[INFO]	214	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:37:21,979	[INFO]	215	SUCCESS	+6.0	
2020-12-11 04:37:21,980	[DEBUG]	
2020-12-11 04:37:25,161	[INFO]	216	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:37:25,162	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 04:37:26,095	[INFO]	217	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:37:26,098	[INFO]	218	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:37:26,099	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 04:37:27,049	[INFO]	219	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:37:28,016	[INFO]	220	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:37:28,970	[INFO]	221	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:37:29,993	[INFO]	222	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:37:29,996	[INFO]	223	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:37:29,997	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 04:37:30,970	[INFO]	224	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:37:30,973	[INFO]	225	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:37:30,974	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 04:37:30,976	[INFO]	226	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:37:30,976	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 04:37:30,978	[INFO]	227	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:37:30,979	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 04:37:31,909	[INFO]	228	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:37:31,911	[INFO]	229	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:37:31,911	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 04:37:31,912	[INFO]	230	SUCCESS	+6.0	
2020-12-11 04:37:31,912	[DEBUG]	
2020-12-11 04:37:32,841	[INFO]	231	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:37:33,804	[INFO]	232	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:37:34,756	[INFO]	233	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:37:35,715	[INFO]	234	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:37:36,633	[INFO]	235	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:37:39,926	[INFO]	236	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:37:39,927	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 04:37:43,081	[INFO]	237	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:37:43,082	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,27 ****
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 18,30 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 04:37:43,083	[INFO]	238	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:37:43,084	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 04:37:44,034	[INFO]	239	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:37:44,994	[INFO]	240	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:37:44,996	[INFO]	241	SUCCESS	+6.0	
2020-12-11 04:37:44,997	[DEBUG]	
2020-12-11 04:37:45,974	[INFO]	242	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:37:46,937	[INFO]	243	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:37:47,889	[INFO]	244	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:37:48,846	[INFO]	245	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:37:49,785	[INFO]	246	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:37:49,786	[INFO]	247	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:37:49,786	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 04:37:49,787	[INFO]	248	SUCCESS	+6.0	
2020-12-11 04:37:49,787	[DEBUG]	
2020-12-11 04:37:50,741	[INFO]	249	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:37:51,730	[INFO]	250	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:37:52,643	[INFO]	251	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:37:53,571	[INFO]	252	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:37:54,527	[INFO]	253	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:37:55,446	[INFO]	254	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:37:56,398	[INFO]	255	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:37:57,397	[INFO]	256	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:37:58,335	[INFO]	257	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:38:01,847	[INFO]	258	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:38:01,849	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
          }
  
          return sorted_arr;

2020-12-11 04:38:02,814	[INFO]	259	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:38:03,796	[INFO]	260	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:38:03,797	[INFO]	261	SUCCESS	+6.0	
2020-12-11 04:38:03,797	[DEBUG]	
2020-12-11 04:38:04,737	[INFO]	262	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:38:04,738	[INFO]	263	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:38:05,734	[INFO]	264	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:38:06,686	[INFO]	265	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:38:09,910	[INFO]	266	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:38:09,912	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:38:10,831	[INFO]	267	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:38:10,832	[INFO]	268	SUCCESS	+6.0	
2020-12-11 04:38:10,833	[DEBUG]	
2020-12-11 04:38:11,791	[INFO]	269	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:38:12,738	[INFO]	270	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:38:13,712	[INFO]	271	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:38:14,667	[INFO]	272	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:38:15,612	[INFO]	273	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:38:18,859	[INFO]	274	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:38:18,861	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:38:18,863	[INFO]	275	SUCCESS	+6.0	
2020-12-11 04:38:18,863	[DEBUG]	
2020-12-11 04:38:19,805	[INFO]	276	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:38:20,741	[INFO]	277	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:38:21,680	[INFO]	278	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:38:22,621	[INFO]	279	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:38:25,869	[INFO]	280	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:38:25,870	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,27 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 04:38:26,800	[INFO]	281	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:38:26,803	[INFO]	282	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:38:26,804	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,27 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 04:38:26,806	[INFO]	283	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:38:26,806	[DEBUG]	
2020-12-11 04:38:27,757	[INFO]	284	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:38:27,758	[INFO]	285	SUCCESS	+6.0	
2020-12-11 04:38:27,758	[DEBUG]	
2020-12-11 04:38:27,759	[INFO]	286	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:38:31,095	[INFO]	287	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:38:31,096	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 04:38:32,280	[INFO]	288	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:38:33,653	[INFO]	289	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:38:38,075	[INFO]	290	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:38:38,076	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,27 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
- 	    i++;
          }
  
          return sorted_arr;
--- 20,27 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    
  	    sorted_arr.addAll(Collections.nCopies(count, i));
          }
  
          return sorted_arr;

2020-12-11 04:38:38,077	[INFO]	291	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:38:38,077	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 04:38:38,078	[INFO]	292	SUCCESS	+6.0	
2020-12-11 04:38:38,078	[DEBUG]	
2020-12-11 04:38:39,044	[INFO]	293	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:38:39,971	[INFO]	294	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:38:40,919	[INFO]	295	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:38:41,879	[INFO]	296	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:38:45,085	[INFO]	297	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:38:45,086	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 04:38:46,061	[INFO]	298	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:38:49,385	[INFO]	299	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:38:49,387	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,25 ****
--- 14,29 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:38:50,351	[INFO]	300	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:38:51,327	[INFO]	301	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:38:51,329	[INFO]	302	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:38:51,329	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 04:38:51,330	[INFO]	303	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:38:51,330	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 04:38:51,331	[INFO]	304	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:38:51,332	[DEBUG]	
2020-12-11 04:38:51,333	[INFO]	305	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:38:51,333	[DEBUG]	
2020-12-11 04:38:52,283	[INFO]	306	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:38:52,285	[INFO]	307	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:38:52,285	[DEBUG]	
2020-12-11 04:38:52,286	[INFO]	308	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:38:52,286	[DEBUG]	
2020-12-11 04:38:53,273	[INFO]	309	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:38:54,235	[INFO]	310	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:38:55,190	[INFO]	311	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:38:55,191	[INFO]	312	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:38:55,191	[DEBUG]	
2020-12-11 04:38:56,181	[INFO]	313	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:38:56,183	[INFO]	314	SUCCESS	+6.0	
2020-12-11 04:38:56,184	[DEBUG]	
2020-12-11 04:38:57,141	[INFO]	315	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:38:58,103	[INFO]	316	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:38:58,105	[INFO]	317	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:38:59,078	[INFO]	318	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:39:00,030	[INFO]	319	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:39:00,986	[INFO]	320	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:39:00,987	[INFO]	321	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:39:00,987	[DEBUG]	
2020-12-11 04:39:04,199	[INFO]	322	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:39:04,200	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 04:39:04,201	[INFO]	323	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:39:04,202	[DEBUG]	
2020-12-11 04:39:04,202	[INFO]	324	SUCCESS	+6.0	
2020-12-11 04:39:04,203	[DEBUG]	
2020-12-11 04:39:05,179	[INFO]	325	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:39:08,559	[INFO]	326	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:39:08,560	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 04:39:08,561	[INFO]	327	SUCCESS	+6.0	
2020-12-11 04:39:08,561	[DEBUG]	
2020-12-11 04:39:09,528	[INFO]	328	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:39:10,465	[INFO]	329	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:39:13,739	[INFO]	330	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:39:13,741	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 04:39:14,701	[INFO]	331	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:39:15,656	[INFO]	332	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:39:16,629	[INFO]	333	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:39:16,632	[INFO]	334	SUCCESS	+6.0	
2020-12-11 04:39:16,633	[DEBUG]	
2020-12-11 04:39:17,586	[INFO]	335	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:39:18,546	[INFO]	336	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:39:18,548	[INFO]	337	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:39:18,549	[INFO]	338	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:39:19,485	[INFO]	339	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:39:19,486	[INFO]	340	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:39:20,422	[INFO]	341	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:39:21,373	[INFO]	342	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:39:22,328	[INFO]	343	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:39:23,264	[INFO]	344	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:39:24,239	[INFO]	345	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:39:25,172	[INFO]	346	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:39:26,115	[INFO]	347	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:39:27,060	[INFO]	348	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:39:30,460	[INFO]	349	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:39:30,461	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 04:39:30,461	[INFO]	350	SUCCESS	+6.0	
2020-12-11 04:39:30,461	[DEBUG]	
2020-12-11 04:39:30,462	[INFO]	351	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:39:30,462	[DEBUG]	
2020-12-11 04:39:30,463	[INFO]	352	SUCCESS	+6.0	
2020-12-11 04:39:30,463	[DEBUG]	
2020-12-11 04:39:31,386	[INFO]	353	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:39:32,319	[INFO]	354	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:39:33,277	[INFO]	355	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:39:34,236	[INFO]	356	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:39:34,237	[INFO]	357	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:39:34,238	[DEBUG]	
2020-12-11 04:39:35,189	[INFO]	358	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:39:36,120	[INFO]	359	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:39:37,060	[INFO]	360	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:39:40,281	[INFO]	361	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:39:40,282	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 04:39:43,531	[INFO]	362	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:39:43,532	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,33 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
+         }
+ 
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 04:39:44,439	[INFO]	363	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:39:44,441	[INFO]	364	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:39:44,441	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,33 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
+         }
+ 
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 04:39:47,724	[INFO]	365	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:39:47,725	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,33 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    
+         }
+ 
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 04:39:51,001	[INFO]	366	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:39:51,002	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,28 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 04:39:51,003	[INFO]	367	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:39:51,003	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,28 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 04:39:54,168	[INFO]	368	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:39:54,170	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 04:39:54,172	[INFO]	369	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:39:54,173	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 04:39:54,175	[INFO]	370	SUCCESS	+6.0	
2020-12-11 04:39:54,175	[DEBUG]	
2020-12-11 04:39:55,134	[INFO]	371	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:39:56,078	[INFO]	372	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:39:57,030	[INFO]	373	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:39:57,031	[INFO]	374	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:39:57,031	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 04:39:57,032	[INFO]	375	SUCCESS	+6.0	
2020-12-11 04:39:57,032	[DEBUG]	
2020-12-11 04:40:00,427	[INFO]	376	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:40:00,427	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 04:40:01,365	[INFO]	377	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:40:01,366	[INFO]	378	SUCCESS	+6.0	
2020-12-11 04:40:01,367	[DEBUG]	
2020-12-11 04:40:02,311	[INFO]	379	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:40:03,288	[INFO]	380	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:40:03,292	[INFO]	381	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:40:04,230	[INFO]	382	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:40:05,196	[INFO]	383	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:40:06,133	[INFO]	384	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:40:07,117	[INFO]	385	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:40:08,070	[INFO]	386	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:40:09,058	[INFO]	387	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:40:10,027	[INFO]	388	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:40:10,949	[INFO]	389	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:40:10,950	[INFO]	390	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:40:10,951	[DEBUG]	
2020-12-11 04:40:11,926	[INFO]	391	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:40:12,868	[INFO]	392	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:40:12,869	[INFO]	393	SUCCESS	+6.0	
2020-12-11 04:40:12,870	[DEBUG]	
2020-12-11 04:40:13,860	[INFO]	394	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:40:14,849	[INFO]	395	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:40:14,852	[INFO]	396	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:40:14,852	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 04:40:15,763	[INFO]	397	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:40:15,764	[INFO]	398	SUCCESS	+6.0	
2020-12-11 04:40:15,764	[DEBUG]	
2020-12-11 04:40:16,717	[INFO]	399	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:40:17,652	[INFO]	400	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:40:18,614	[INFO]	401	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:40:18,615	[INFO]	402	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:40:19,543	[INFO]	403	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:40:20,483	[INFO]	404	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:40:21,443	[INFO]	405	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:40:21,444	[INFO]	406	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:40:21,445	[INFO]	407	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:40:22,384	[INFO]	408	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:40:23,350	[INFO]	409	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:40:23,352	[INFO]	410	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:40:23,352	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 04:40:23,353	[INFO]	411	SUCCESS	+6.0	
2020-12-11 04:40:23,353	[DEBUG]	
2020-12-11 04:40:26,561	[INFO]	412	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:40:26,562	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:40:27,531	[INFO]	413	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:40:27,534	[INFO]	414	SUCCESS	+6.0	
2020-12-11 04:40:27,535	[DEBUG]	
2020-12-11 04:40:28,482	[INFO]	415	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:40:29,460	[INFO]	416	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:40:30,406	[INFO]	417	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:40:31,353	[INFO]	418	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:40:32,344	[INFO]	419	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:40:33,297	[INFO]	420	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:40:34,264	[INFO]	421	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:40:35,356	[INFO]	422	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:40:35,358	[INFO]	423	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:40:35,359	[INFO]	424	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:40:36,327	[INFO]	425	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:40:37,270	[INFO]	426	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:40:40,573	[INFO]	427	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:40:40,575	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 04:40:40,576	[INFO]	428	SUCCESS	+6.0	
2020-12-11 04:40:40,577	[DEBUG]	
2020-12-11 04:40:40,578	[INFO]	429	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:40:40,579	[DEBUG]	
2020-12-11 04:40:41,472	[INFO]	430	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:40:41,473	[INFO]	431	SUCCESS	+6.0	
2020-12-11 04:40:41,474	[DEBUG]	
2020-12-11 04:40:44,743	[INFO]	432	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:40:44,744	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 04:40:48,027	[INFO]	433	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:40:48,028	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,25 ****
--- 14,27 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:40:51,284	[INFO]	434	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:40:51,285	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,26 ****
--- 14,31 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 04:40:54,524	[INFO]	435	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:40:54,525	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
--- 20,30 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 04:40:57,780	[INFO]	436	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:40:57,781	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 04:40:57,782	[INFO]	437	SUCCESS	+6.0	
2020-12-11 04:40:57,782	[DEBUG]	
2020-12-11 04:41:01,012	[INFO]	438	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:41:01,013	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 04:41:01,014	[INFO]	439	SUCCESS	+6.0	
2020-12-11 04:41:01,014	[DEBUG]	
2020-12-11 04:41:01,015	[INFO]	440	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:41:01,015	[DEBUG]	
2020-12-11 04:41:01,015	[INFO]	441	SUCCESS	+6.0	
2020-12-11 04:41:01,016	[DEBUG]	
2020-12-11 04:41:01,931	[INFO]	442	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:41:02,867	[INFO]	443	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:41:03,792	[INFO]	444	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:41:04,739	[INFO]	445	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:41:08,050	[INFO]	446	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:41:08,050	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
          }
  
          return sorted_arr;

2020-12-11 04:41:08,051	[INFO]	447	SUCCESS	+6.0	
2020-12-11 04:41:08,052	[DEBUG]	
2020-12-11 04:41:11,256	[INFO]	448	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:41:11,257	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 04:41:11,258	[INFO]	449	SUCCESS	+6.0	
2020-12-11 04:41:11,258	[DEBUG]	
2020-12-11 04:41:11,259	[INFO]	450	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:41:11,259	[DEBUG]	
2020-12-11 04:41:11,260	[INFO]	451	SUCCESS	+6.0	
2020-12-11 04:41:11,260	[DEBUG]	
2020-12-11 04:41:12,192	[INFO]	452	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:41:13,136	[INFO]	453	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:41:14,067	[INFO]	454	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:41:15,047	[INFO]	455	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:41:15,993	[INFO]	456	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:41:16,952	[INFO]	457	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:41:17,921	[INFO]	458	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:41:18,837	[INFO]	459	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:41:19,782	[INFO]	460	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:41:20,750	[INFO]	461	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:41:21,703	[INFO]	462	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:41:22,662	[INFO]	463	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:41:22,663	[INFO]	464	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:41:22,664	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 04:41:22,664	[INFO]	465	SUCCESS	+6.0	
2020-12-11 04:41:22,665	[DEBUG]	
2020-12-11 04:41:25,909	[INFO]	466	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:41:25,909	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:41:26,797	[INFO]	467	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:41:30,111	[INFO]	468	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:41:30,112	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 04:41:30,113	[INFO]	469	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:41:30,113	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:41:30,114	[INFO]	470	SUCCESS	+6.0	
2020-12-11 04:41:30,114	[DEBUG]	
2020-12-11 04:41:31,058	[INFO]	471	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:41:31,060	[INFO]	472	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:41:31,061	[INFO]	473	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:41:34,295	[INFO]	474	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:41:34,296	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 04:41:34,297	[INFO]	475	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:41:34,297	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 04:41:35,226	[INFO]	476	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:41:36,209	[INFO]	477	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:41:36,212	[INFO]	478	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:41:36,213	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 04:41:37,167	[INFO]	479	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:41:38,093	[INFO]	480	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:41:38,094	[INFO]	481	SUCCESS	+6.0	
2020-12-11 04:41:38,094	[DEBUG]	
2020-12-11 04:41:41,388	[INFO]	482	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:41:41,390	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 04:41:42,335	[INFO]	483	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:41:43,317	[INFO]	484	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:41:43,319	[INFO]	485	SUCCESS	+6.0	
2020-12-11 04:41:43,320	[DEBUG]	
2020-12-11 04:41:44,275	[INFO]	486	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:41:47,573	[INFO]	487	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:41:47,574	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 04:41:48,463	[INFO]	488	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:41:49,368	[INFO]	489	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:41:50,340	[INFO]	490	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:41:50,341	[INFO]	491	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:41:50,342	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 04:41:51,295	[INFO]	492	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:41:51,297	[INFO]	493	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:41:51,297	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 04:41:51,298	[INFO]	494	SUCCESS	+6.0	
2020-12-11 04:41:51,299	[DEBUG]	
2020-12-11 04:41:54,565	[INFO]	495	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:41:54,566	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:41:55,515	[INFO]	496	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:41:55,516	[INFO]	497	SUCCESS	+6.0	
2020-12-11 04:41:55,516	[DEBUG]	
2020-12-11 04:41:55,517	[INFO]	498	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:41:55,517	[DEBUG]	
2020-12-11 04:41:55,518	[INFO]	499	SUCCESS	+6.0	
2020-12-11 04:41:55,518	[DEBUG]	
2020-12-11 04:41:58,776	[INFO]	500	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:41:58,777	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 04:41:58,777	[INFO]	==== END ====
2020-12-11 04:41:58,777	[INFO]	Reason: step budget
2020-12-11 04:41:58,778	[INFO]	
2020-12-11 04:41:58,778	[INFO]	========== EPOCH 5 ==========
2020-12-11 04:41:58,778	[INFO]	==== WARMUP ====
2020-12-11 04:42:01,977	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 04:42:01,978	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 04:42:05,246	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 04:42:05,246	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 04:42:08,497	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 04:42:08,497	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 04:42:11,806	[INFO]	INITIAL	SUCCESS	 6.0	
2020-12-11 04:42:11,806	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 04:42:11,806	[INFO]	==== START ====
2020-12-11 04:42:12,666	[INFO]	1	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:42:13,603	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:42:14,540	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:42:17,788	[INFO]	4	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:42:17,789	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 04:42:17,790	[INFO]	5	SUCCESS	+6.0	
2020-12-11 04:42:17,790	[DEBUG]	
2020-12-11 04:42:18,778	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:42:19,732	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:42:22,999	[INFO]	8	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:42:22,999	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 04:42:23,000	[INFO]	9	SUCCESS	+6.0	
2020-12-11 04:42:23,000	[DEBUG]	
2020-12-11 04:42:23,897	[INFO]	10	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:42:27,140	[INFO]	11	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:42:27,141	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:42:30,380	[INFO]	12	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:42:30,381	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,21 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:42:31,315	[INFO]	13	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:42:32,224	[INFO]	14	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:42:35,585	[INFO]	15	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:42:35,587	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 04:42:36,496	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:42:36,498	[INFO]	17	SUCCESS	+6.0	
2020-12-11 04:42:36,498	[DEBUG]	
2020-12-11 04:42:37,430	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:42:38,372	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:42:39,351	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:42:42,600	[INFO]	21	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:42:42,600	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 04:42:42,601	[INFO]	22	SUCCESS	+6.0	
2020-12-11 04:42:42,601	[DEBUG]	
2020-12-11 04:42:43,522	[INFO]	23	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:42:44,495	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:42:47,723	[INFO]	25	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:42:47,724	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 04:42:47,725	[INFO]	26	SUCCESS	+6.0	
2020-12-11 04:42:47,725	[DEBUG]	
2020-12-11 04:42:47,726	[INFO]	27	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:42:47,727	[DEBUG]	
2020-12-11 04:42:48,674	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:42:49,594	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:42:49,595	[INFO]	30	SUCCESS	+6.0	
2020-12-11 04:42:49,596	[DEBUG]	
2020-12-11 04:42:52,819	[INFO]	31	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:42:52,820	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 04:42:52,821	[INFO]	32	SUCCESS	+6.0	
2020-12-11 04:42:52,821	[DEBUG]	
2020-12-11 04:42:53,748	[INFO]	33	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:42:54,679	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:42:57,906	[INFO]	35	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:42:57,907	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 04:42:58,817	[INFO]	36	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:42:59,774	[INFO]	37	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:43:00,704	[INFO]	38	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:43:00,706	[INFO]	39	SUCCESS	+6.0	
2020-12-11 04:43:00,706	[DEBUG]	
2020-12-11 04:43:04,007	[INFO]	40	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:43:04,009	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,27 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 04:43:04,011	[INFO]	41	SUCCESS	+6.0	
2020-12-11 04:43:04,011	[DEBUG]	
2020-12-11 04:43:05,005	[INFO]	42	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:43:05,950	[INFO]	43	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:43:09,238	[INFO]	44	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:43:09,239	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,34 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:43:12,466	[INFO]	45	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:43:12,467	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,32 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 	    i++;
+         }
+ 
+         for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:43:13,424	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:43:14,354	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:43:15,358	[INFO]	48	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:43:15,361	[INFO]	49	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:43:15,362	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,32 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 	    i++;
+         }
+ 
+         for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:43:15,363	[INFO]	50	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:43:15,364	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,32 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 	    i++;
+         }
+ 
+         for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:43:15,365	[INFO]	51	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:43:15,366	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,32 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 	    i++;
+         }
+ 
+         for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:43:16,315	[INFO]	52	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:43:16,317	[INFO]	53	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:43:16,318	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,32 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 	    i++;
+         }
+ 
+         for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:43:16,319	[INFO]	54	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:43:16,320	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,34 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:43:19,711	[INFO]	55	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:43:19,714	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
***************
*** 24,29 ****
--- 24,34 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:43:19,715	[INFO]	56	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:43:19,716	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
***************
*** 24,29 ****
--- 24,34 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:43:19,718	[INFO]	57	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:43:19,719	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
***************
*** 24,29 ****
--- 24,34 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:43:19,721	[INFO]	58	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:43:19,722	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
***************
*** 24,29 ****
--- 24,34 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:43:19,723	[INFO]	59	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:43:19,724	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
***************
*** 24,29 ****
--- 24,34 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:43:20,613	[INFO]	60	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:43:21,575	[INFO]	61	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:43:24,893	[INFO]	62	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:43:24,894	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:43:24,895	[INFO]	63	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:43:24,895	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:43:28,098	[INFO]	64	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:43:28,099	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:43:29,044	[INFO]	65	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:43:29,045	[INFO]	66	SUCCESS	+6.0	
2020-12-11 04:43:29,046	[DEBUG]	
2020-12-11 04:43:32,316	[INFO]	67	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:43:32,317	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 04:43:32,318	[INFO]	68	SUCCESS	+6.0	
2020-12-11 04:43:32,318	[DEBUG]	
2020-12-11 04:43:33,260	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:43:34,215	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:43:35,176	[INFO]	71	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:43:36,110	[INFO]	72	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:43:37,083	[INFO]	73	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:43:37,991	[INFO]	74	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:43:38,955	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:43:38,956	[INFO]	76	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:43:38,956	[DEBUG]	
2020-12-11 04:43:38,957	[INFO]	77	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:43:39,909	[INFO]	78	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:43:43,233	[INFO]	79	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:43:43,234	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 04:43:44,133	[INFO]	80	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:43:45,082	[INFO]	81	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:43:46,033	[INFO]	82	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:43:46,034	[INFO]	83	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:43:46,035	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 04:43:46,989	[INFO]	84	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:43:46,990	[INFO]	85	SUCCESS	+6.0	
2020-12-11 04:43:46,990	[DEBUG]	
2020-12-11 04:43:50,226	[INFO]	86	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:43:50,227	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 04:43:50,227	[INFO]	87	SUCCESS	+6.0	
2020-12-11 04:43:50,227	[DEBUG]	
2020-12-11 04:43:51,161	[INFO]	88	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:43:52,084	[INFO]	89	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:43:53,032	[INFO]	90	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:43:54,009	[INFO]	91	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:43:57,288	[INFO]	92	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:43:57,289	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 04:43:57,290	[INFO]	93	SUCCESS	+6.0	
2020-12-11 04:43:57,290	[DEBUG]	
2020-12-11 04:43:58,224	[INFO]	94	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:43:59,174	[INFO]	95	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:44:00,127	[INFO]	96	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:44:03,433	[INFO]	97	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:44:03,434	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:44:04,344	[INFO]	98	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:44:04,346	[INFO]	99	SUCCESS	+6.0	
2020-12-11 04:44:04,347	[DEBUG]	
2020-12-11 04:44:04,350	[INFO]	100	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:44:04,351	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 04:44:05,336	[INFO]	101	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:44:05,339	[INFO]	102	SUCCESS	+6.0	
2020-12-11 04:44:05,340	[DEBUG]	
2020-12-11 04:44:06,329	[INFO]	103	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:44:07,243	[INFO]	104	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:44:10,550	[INFO]	105	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:44:10,551	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
          }
  
          return sorted_arr;

2020-12-11 04:44:10,551	[INFO]	106	SUCCESS	+6.0	
2020-12-11 04:44:10,552	[DEBUG]	
2020-12-11 04:44:11,476	[INFO]	107	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:44:14,829	[INFO]	108	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:44:14,831	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 04:44:14,833	[INFO]	109	SUCCESS	+6.0	
2020-12-11 04:44:14,833	[DEBUG]	
2020-12-11 04:44:15,752	[INFO]	110	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:44:16,699	[INFO]	111	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:44:17,626	[INFO]	112	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:44:18,548	[INFO]	113	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:44:19,516	[INFO]	114	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:44:22,737	[INFO]	115	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:44:22,738	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 04:44:22,739	[INFO]	116	SUCCESS	+6.0	
2020-12-11 04:44:22,739	[DEBUG]	
2020-12-11 04:44:23,692	[INFO]	117	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:44:26,893	[INFO]	118	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:44:26,894	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:44:27,817	[INFO]	119	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:44:28,787	[INFO]	120	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:44:32,008	[INFO]	121	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:44:32,009	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,26 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 14,28 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 04:44:32,011	[INFO]	122	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:44:32,011	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:44:35,260	[INFO]	123	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:44:35,261	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,26 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 14,26 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 04:44:35,262	[INFO]	124	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:44:35,262	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:44:35,263	[INFO]	125	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:44:35,264	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:44:38,476	[INFO]	126	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:44:38,477	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,27 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 14,26 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 04:44:38,478	[INFO]	127	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:44:38,478	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:44:39,399	[INFO]	128	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:44:39,401	[INFO]	129	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:44:39,402	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:44:39,403	[INFO]	130	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:44:39,403	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:44:40,325	[INFO]	131	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:44:41,258	[INFO]	132	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:44:44,492	[INFO]	133	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:44:44,493	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 04:44:45,437	[INFO]	134	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:44:45,438	[INFO]	135	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:44:45,439	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 04:44:48,734	[INFO]	136	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:44:48,736	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,27 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
          return sorted_arr;
--- 13,26 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 04:44:51,988	[INFO]	137	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:44:51,991	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
***************
*** 23,28 ****
--- 21,31 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 04:44:51,994	[INFO]	138	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:44:51,995	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
***************
*** 23,28 ****
--- 21,31 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 04:44:51,997	[INFO]	139	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:44:51,999	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
***************
*** 23,28 ****
--- 21,31 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 04:44:52,911	[INFO]	140	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:44:53,903	[INFO]	141	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:44:57,266	[INFO]	142	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:44:57,267	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
***************
*** 23,28 ****
--- 21,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 04:44:58,184	[INFO]	143	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:44:58,186	[INFO]	144	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:44:58,186	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
***************
*** 23,28 ****
--- 21,31 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 04:44:58,188	[INFO]	145	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:44:58,188	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
***************
*** 23,28 ****
--- 21,31 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 04:44:59,146	[INFO]	146	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:45:02,480	[INFO]	147	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:45:02,482	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,24 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
--- 13,26 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 04:45:03,362	[INFO]	148	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:45:06,647	[INFO]	149	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:45:06,651	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
***************
*** 23,28 ****
--- 21,33 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 04:45:07,606	[INFO]	150	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:45:08,539	[INFO]	151	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:45:09,498	[INFO]	152	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:45:10,463	[INFO]	153	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:45:10,467	[INFO]	154	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:45:10,469	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
***************
*** 23,28 ****
--- 21,33 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 04:45:11,413	[INFO]	155	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:45:11,415	[INFO]	156	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:45:11,415	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
***************
*** 23,28 ****
--- 21,33 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 04:45:11,417	[INFO]	157	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:45:11,417	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
***************
*** 23,28 ****
--- 21,33 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 04:45:11,419	[INFO]	158	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:45:11,419	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
***************
*** 23,28 ****
--- 21,33 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 04:45:11,421	[INFO]	159	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:45:11,422	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
***************
*** 23,28 ****
--- 21,33 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 04:45:14,634	[INFO]	160	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:45:14,636	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,25 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
--- 13,26 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:45:14,638	[INFO]	161	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:45:14,639	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,25 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
--- 13,26 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:45:14,640	[INFO]	162	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:45:14,641	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,25 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
--- 13,26 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:45:15,595	[INFO]	163	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:45:15,600	[INFO]	164	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:45:15,601	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,25 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
--- 13,26 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:45:16,571	[INFO]	165	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:45:17,520	[INFO]	166	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:45:18,493	[INFO]	167	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:45:19,435	[INFO]	168	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:45:20,401	[INFO]	169	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:45:20,406	[INFO]	170	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:45:20,408	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,25 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
--- 13,26 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:45:20,412	[INFO]	171	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:45:20,413	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,25 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
--- 13,26 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:45:20,417	[INFO]	172	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:45:20,420	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,25 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
--- 13,26 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:45:20,423	[INFO]	173	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:45:20,424	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,25 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
--- 13,26 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:45:21,356	[INFO]	174	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:45:21,358	[INFO]	175	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:45:21,359	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,25 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
--- 13,26 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:45:21,360	[INFO]	176	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:45:21,361	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,25 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
--- 13,26 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:45:22,291	[INFO]	177	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:45:23,281	[INFO]	178	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:45:24,239	[INFO]	179	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:45:24,243	[INFO]	180	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:45:24,245	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,25 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
--- 13,26 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:45:24,249	[INFO]	181	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:45:24,251	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,25 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
--- 13,26 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:45:24,254	[INFO]	182	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:45:24,255	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 04:45:24,257	[INFO]	183	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:45:24,258	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 04:45:25,187	[INFO]	184	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:45:25,191	[INFO]	185	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:45:25,192	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 04:45:25,194	[INFO]	186	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:45:25,195	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 04:45:28,416	[INFO]	187	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:45:28,417	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
***************
*** 24,29 ****
--- 22,29 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:45:28,419	[INFO]	188	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:45:28,420	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
***************
*** 24,29 ****
--- 22,29 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:45:31,773	[INFO]	189	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:45:31,775	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,29 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
- 
-         ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
- 	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
          return sorted_arr;
      }
  }
--- 13,32 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
+         
+ 
+         ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	int i = 0;
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:45:31,778	[INFO]	190	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:45:31,779	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,29 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
- 
-         ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
- 	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
          return sorted_arr;
      }
  }
--- 13,32 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
+         
+ 
+         ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	int i = 0;
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:45:32,690	[INFO]	191	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:45:33,619	[INFO]	192	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:45:33,621	[INFO]	193	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:45:33,621	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,29 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
- 
-         ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
- 	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
          return sorted_arr;
      }
  }
--- 13,32 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
+         
+ 
+         ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	int i = 0;
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:45:33,623	[INFO]	194	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:45:33,623	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
***************
*** 24,29 ****
--- 22,29 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:45:34,586	[INFO]	195	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:45:35,777	[INFO]	196	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:45:37,070	[INFO]	197	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:45:37,072	[INFO]	198	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:45:37,073	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 04:45:37,075	[INFO]	199	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:45:37,076	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 04:45:38,083	[INFO]	200	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:45:38,085	[INFO]	201	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:45:38,086	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 04:45:38,087	[INFO]	202	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:45:38,088	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 04:45:39,356	[INFO]	203	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:45:40,323	[INFO]	204	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:45:43,514	[INFO]	205	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:45:43,515	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,28 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 13,23 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 04:45:43,516	[INFO]	206	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:45:43,517	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,28 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 13,23 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 04:45:46,711	[INFO]	207	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:45:46,712	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,24 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
--- 13,24 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
+ 
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 04:45:46,714	[INFO]	208	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:45:46,714	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,24 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
--- 13,24 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
+ 
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 04:45:46,715	[INFO]	209	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:45:46,716	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,24 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
--- 13,24 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
+ 
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 04:45:46,717	[INFO]	210	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:45:46,718	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,24 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
--- 13,24 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
+ 
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 04:45:46,719	[INFO]	211	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:45:46,720	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,24 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
--- 13,24 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
+ 
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 04:45:47,637	[INFO]	212	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:45:47,639	[INFO]	213	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:45:47,639	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,24 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
--- 13,24 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
+ 
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 04:45:47,641	[INFO]	214	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:45:47,641	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,24 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
--- 13,24 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
+ 
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 04:45:47,642	[INFO]	215	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:45:47,643	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,24 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
--- 13,24 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
+ 
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 04:45:47,644	[INFO]	216	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:45:47,645	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,24 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
--- 13,24 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
+ 
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 04:45:48,580	[INFO]	217	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:45:48,581	[INFO]	218	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:45:48,582	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,28 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 13,23 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 04:45:49,534	[INFO]	219	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:45:49,536	[INFO]	220	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:45:49,536	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 04:45:50,465	[INFO]	221	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:45:50,466	[INFO]	222	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:45:50,466	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 04:45:50,467	[INFO]	223	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:45:50,468	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 04:45:51,492	[INFO]	224	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:45:51,493	[INFO]	225	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:45:51,494	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 04:45:52,442	[INFO]	226	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:45:52,443	[INFO]	227	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:45:52,444	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 04:45:53,383	[INFO]	228	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:45:54,328	[INFO]	229	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:45:55,270	[INFO]	230	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:45:55,273	[INFO]	231	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:45:55,274	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 04:45:55,275	[INFO]	232	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:45:55,275	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 04:45:55,277	[INFO]	233	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:45:55,277	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 04:45:55,279	[INFO]	234	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:45:55,280	[INFO]	235	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:45:55,280	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 04:45:56,210	[INFO]	236	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:45:59,407	[INFO]	237	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:45:59,408	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:45:59,409	[INFO]	238	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:45:59,410	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:45:59,410	[INFO]	239	SUCCESS	+6.0	
2020-12-11 04:45:59,410	[DEBUG]	
2020-12-11 04:46:00,367	[INFO]	240	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:46:01,321	[INFO]	241	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:46:02,308	[INFO]	242	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:46:05,591	[INFO]	243	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:46:05,592	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
          }
  
          return sorted_arr;

2020-12-11 04:46:06,557	[INFO]	244	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:46:07,516	[INFO]	245	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:46:07,517	[INFO]	246	SUCCESS	+6.0	
2020-12-11 04:46:07,518	[DEBUG]	
2020-12-11 04:46:08,446	[INFO]	247	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:46:09,423	[INFO]	248	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:46:09,426	[INFO]	249	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:46:10,378	[INFO]	250	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:46:11,320	[INFO]	251	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:46:12,285	[INFO]	252	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:46:13,250	[INFO]	253	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:46:14,217	[INFO]	254	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:46:14,218	[INFO]	255	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:46:14,219	[DEBUG]	
2020-12-11 04:46:15,164	[INFO]	256	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:46:15,165	[INFO]	257	SUCCESS	+6.0	
2020-12-11 04:46:15,165	[DEBUG]	
2020-12-11 04:46:16,086	[INFO]	258	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:46:16,087	[INFO]	259	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:46:17,052	[INFO]	260	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:46:18,001	[INFO]	261	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:46:18,971	[INFO]	262	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:46:19,926	[INFO]	263	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:46:20,899	[INFO]	264	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:46:21,844	[INFO]	265	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:46:22,801	[INFO]	266	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:46:23,740	[INFO]	267	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:46:24,690	[INFO]	268	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:46:25,657	[INFO]	269	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:46:26,594	[INFO]	270	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:46:27,564	[INFO]	271	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:46:28,511	[INFO]	272	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:46:29,521	[INFO]	273	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:46:30,491	[INFO]	274	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:46:31,482	[INFO]	275	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:46:31,485	[INFO]	276	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:46:31,485	[DEBUG]	
2020-12-11 04:46:31,486	[INFO]	277	SUCCESS	+6.0	
2020-12-11 04:46:31,487	[DEBUG]	
2020-12-11 04:46:32,434	[INFO]	278	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:46:32,437	[INFO]	279	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:46:32,439	[INFO]	280	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:46:35,712	[INFO]	281	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:46:35,714	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,34 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:46:36,652	[INFO]	282	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:46:36,653	[INFO]	283	SUCCESS	+6.0	
2020-12-11 04:46:36,653	[DEBUG]	
2020-12-11 04:46:37,600	[INFO]	284	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:46:38,591	[INFO]	285	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:46:39,529	[INFO]	286	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:46:42,779	[INFO]	287	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:46:42,779	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:46:42,780	[INFO]	288	SUCCESS	+6.0	
2020-12-11 04:46:42,780	[DEBUG]	
2020-12-11 04:46:45,996	[INFO]	289	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:46:45,997	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:46:46,923	[INFO]	290	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:46:46,924	[INFO]	291	SUCCESS	+6.0	
2020-12-11 04:46:46,924	[DEBUG]	
2020-12-11 04:46:47,866	[INFO]	292	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:46:48,778	[INFO]	293	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:46:49,753	[INFO]	294	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:46:50,692	[INFO]	295	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:46:50,694	[INFO]	296	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:46:51,653	[INFO]	297	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:46:54,978	[INFO]	298	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:46:54,979	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 04:46:54,980	[INFO]	299	SUCCESS	+6.0	
2020-12-11 04:46:54,980	[DEBUG]	
2020-12-11 04:46:54,981	[INFO]	300	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:46:54,982	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:46:58,162	[INFO]	301	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:46:58,164	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:46:59,112	[INFO]	302	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:47:02,242	[INFO]	303	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:47:02,243	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,27 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
          return sorted_arr;
--- 14,31 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
+         }
+ 
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 04:47:03,177	[INFO]	304	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:47:06,415	[INFO]	305	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:47:06,416	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,26 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 14,26 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 04:47:07,306	[INFO]	306	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:47:08,281	[INFO]	307	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:47:08,282	[INFO]	308	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:47:08,283	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:47:09,203	[INFO]	309	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:47:09,204	[INFO]	310	SUCCESS	+6.0	
2020-12-11 04:47:09,205	[DEBUG]	
2020-12-11 04:47:10,361	[INFO]	311	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:47:11,338	[INFO]	312	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:47:11,339	[INFO]	313	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:47:11,340	[INFO]	314	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:47:12,273	[INFO]	315	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:47:13,225	[INFO]	316	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:47:14,210	[INFO]	317	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:47:15,132	[INFO]	318	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:47:16,076	[INFO]	319	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:47:16,077	[INFO]	320	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:47:16,077	[DEBUG]	
2020-12-11 04:47:16,078	[INFO]	321	SUCCESS	+6.0	
2020-12-11 04:47:16,078	[DEBUG]	
2020-12-11 04:47:19,436	[INFO]	322	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:47:19,439	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 04:47:20,371	[INFO]	323	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:47:20,372	[INFO]	324	SUCCESS	+6.0	
2020-12-11 04:47:20,372	[DEBUG]	
2020-12-11 04:47:21,311	[INFO]	325	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:47:21,313	[INFO]	326	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:47:22,292	[INFO]	327	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:47:23,250	[INFO]	328	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:47:24,194	[INFO]	329	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:47:25,141	[INFO]	330	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:47:26,085	[INFO]	331	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:47:27,052	[INFO]	332	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:47:28,016	[INFO]	333	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:47:28,971	[INFO]	334	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:47:28,972	[INFO]	335	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:47:29,966	[INFO]	336	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:47:30,960	[INFO]	337	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:47:31,877	[INFO]	338	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:47:35,104	[INFO]	339	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:47:35,105	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 04:47:35,105	[INFO]	340	SUCCESS	+6.0	
2020-12-11 04:47:35,106	[DEBUG]	
2020-12-11 04:47:36,057	[INFO]	341	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:47:37,023	[INFO]	342	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:47:37,983	[INFO]	343	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:47:38,956	[INFO]	344	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:47:38,959	[INFO]	345	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:47:38,960	[DEBUG]	
2020-12-11 04:47:38,961	[INFO]	346	SUCCESS	+6.0	
2020-12-11 04:47:38,962	[DEBUG]	
2020-12-11 04:47:39,886	[INFO]	347	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:47:43,098	[INFO]	348	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:47:43,099	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 04:47:43,100	[INFO]	349	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:47:43,100	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 04:47:44,046	[INFO]	350	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:47:47,231	[INFO]	351	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:47:47,232	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,26 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 13,24 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 04:47:50,404	[INFO]	352	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:47:50,406	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,27 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
          return sorted_arr;
--- 13,26 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 04:47:50,409	[INFO]	353	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:47:50,410	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,27 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
          return sorted_arr;
--- 13,26 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 04:47:53,663	[INFO]	354	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:47:53,664	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,25 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
--- 13,24 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:47:53,665	[INFO]	355	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:47:53,665	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,25 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
--- 13,24 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:47:53,666	[INFO]	356	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:47:53,667	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,25 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
--- 13,24 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:47:53,667	[INFO]	357	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:47:53,668	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,25 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
--- 13,24 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:47:53,669	[INFO]	358	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:47:53,669	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,25 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
--- 13,24 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:47:53,670	[INFO]	359	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:47:53,671	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,25 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
--- 13,24 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:47:53,671	[INFO]	360	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:47:53,672	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,25 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
--- 13,24 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:47:56,971	[INFO]	361	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:47:56,971	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 04:47:56,972	[INFO]	362	SUCCESS	+6.0	
2020-12-11 04:47:56,972	[DEBUG]	
2020-12-11 04:47:57,867	[INFO]	363	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:47:58,837	[INFO]	364	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:47:59,782	[INFO]	365	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:48:03,119	[INFO]	366	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:48:03,120	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:48:03,121	[INFO]	367	SUCCESS	+6.0	
2020-12-11 04:48:03,121	[DEBUG]	
2020-12-11 04:48:06,427	[INFO]	368	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:48:06,427	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 04:48:06,428	[INFO]	369	SUCCESS	+6.0	
2020-12-11 04:48:06,428	[DEBUG]	
2020-12-11 04:48:09,713	[INFO]	370	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:48:09,715	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 04:48:09,716	[INFO]	371	SUCCESS	+6.0	
2020-12-11 04:48:09,717	[DEBUG]	
2020-12-11 04:48:09,719	[INFO]	372	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:48:09,719	[DEBUG]	
2020-12-11 04:48:10,660	[INFO]	373	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:48:10,661	[INFO]	374	SUCCESS	+6.0	
2020-12-11 04:48:10,662	[DEBUG]	
2020-12-11 04:48:11,610	[INFO]	375	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:48:12,578	[INFO]	376	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:48:15,978	[INFO]	377	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:48:15,978	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 04:48:15,979	[INFO]	378	SUCCESS	+6.0	
2020-12-11 04:48:15,979	[DEBUG]	
2020-12-11 04:48:16,891	[INFO]	379	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:48:17,857	[INFO]	380	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:48:18,815	[INFO]	381	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:48:19,758	[INFO]	382	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:48:20,747	[INFO]	383	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:48:24,004	[INFO]	384	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:48:24,005	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 04:48:24,972	[INFO]	385	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:48:28,191	[INFO]	386	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:48:28,192	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,26 ****
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 17,30 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 04:48:28,193	[INFO]	387	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:48:28,194	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 04:48:29,109	[INFO]	388	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:48:29,110	[INFO]	389	SUCCESS	+6.0	
2020-12-11 04:48:29,110	[DEBUG]	
2020-12-11 04:48:29,111	[INFO]	390	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:48:29,111	[DEBUG]	
2020-12-11 04:48:29,112	[INFO]	391	SUCCESS	+6.0	
2020-12-11 04:48:29,112	[DEBUG]	
2020-12-11 04:48:29,113	[INFO]	392	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:48:29,113	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:48:29,114	[INFO]	393	SUCCESS	+6.0	
2020-12-11 04:48:29,114	[DEBUG]	
2020-12-11 04:48:30,115	[INFO]	394	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:48:30,117	[INFO]	395	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:48:30,117	[DEBUG]	
2020-12-11 04:48:31,076	[INFO]	396	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:48:31,078	[INFO]	397	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:48:31,078	[INFO]	398	SUCCESS	+6.0	
2020-12-11 04:48:31,079	[DEBUG]	
2020-12-11 04:48:34,474	[INFO]	399	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:48:34,476	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:48:34,478	[INFO]	400	SUCCESS	+6.0	
2020-12-11 04:48:34,478	[DEBUG]	
2020-12-11 04:48:35,385	[INFO]	401	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:48:36,327	[INFO]	402	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:48:37,290	[INFO]	403	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:48:37,292	[INFO]	404	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:48:37,293	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 04:48:37,294	[INFO]	405	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:48:37,295	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 04:48:37,296	[INFO]	406	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:48:37,297	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 04:48:37,298	[INFO]	407	SUCCESS	+6.0	
2020-12-11 04:48:37,298	[DEBUG]	
2020-12-11 04:48:38,296	[INFO]	408	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:48:39,437	[INFO]	409	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:48:40,415	[INFO]	410	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:48:43,667	[INFO]	411	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:48:43,668	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 04:48:44,591	[INFO]	412	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:48:44,593	[INFO]	413	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:48:44,594	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 04:48:44,594	[INFO]	414	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:48:44,595	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 04:48:44,596	[INFO]	415	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:48:44,596	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 04:48:44,597	[INFO]	416	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:48:44,598	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 04:48:45,553	[INFO]	417	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:48:48,742	[INFO]	418	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:48:48,743	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,28 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 14,25 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 04:48:49,684	[INFO]	419	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:48:50,585	[INFO]	420	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:48:53,865	[INFO]	421	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:48:53,866	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,25 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
--- 14,26 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:48:53,867	[INFO]	422	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:48:53,868	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,25 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
--- 14,26 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:48:57,089	[INFO]	423	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:48:57,090	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 04:48:57,091	[INFO]	424	SUCCESS	+6.0	
2020-12-11 04:48:57,091	[DEBUG]	
2020-12-11 04:49:00,290	[INFO]	425	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:49:00,291	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 04:49:01,196	[INFO]	426	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:49:04,382	[INFO]	427	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:49:04,383	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
***************
*** 24,29 ****
--- 22,29 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:49:04,384	[INFO]	428	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:49:04,384	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 04:49:04,384	[INFO]	429	SUCCESS	+6.0	
2020-12-11 04:49:04,385	[DEBUG]	
2020-12-11 04:49:05,374	[INFO]	430	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:49:06,345	[INFO]	431	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:49:07,316	[INFO]	432	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:49:08,263	[INFO]	433	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:49:09,215	[INFO]	434	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:49:09,217	[INFO]	435	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:49:09,218	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 04:49:10,160	[INFO]	436	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:49:10,164	[INFO]	437	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:49:10,165	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 04:49:11,096	[INFO]	438	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:49:12,065	[INFO]	439	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:49:15,272	[INFO]	440	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:49:15,273	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,27 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 13,27 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 04:49:16,231	[INFO]	441	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:49:17,177	[INFO]	442	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:49:17,180	[INFO]	443	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:49:17,180	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,27 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 13,27 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 04:49:20,471	[INFO]	444	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:49:20,472	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,27 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 13,30 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 04:49:23,761	[INFO]	445	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:49:23,762	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,28 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
      }
--- 13,33 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
+         }
+ 
+         i++;
  
          return sorted_arr;
      }

2020-12-11 04:49:24,654	[INFO]	446	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:49:27,862	[INFO]	447	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:49:27,863	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,28 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
      }
--- 13,30 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
+         }
+ 
+         i++;
  
          return sorted_arr;
      }

2020-12-11 04:49:27,864	[INFO]	448	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:49:27,864	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
***************
*** 24,29 ****
--- 22,29 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:49:31,199	[INFO]	449	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:49:31,200	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:49:34,446	[INFO]	450	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:49:34,447	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,29 ****
--- 18,34 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:49:34,448	[INFO]	451	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:49:34,448	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:49:35,321	[INFO]	452	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:49:35,322	[INFO]	453	SUCCESS	+6.0	
2020-12-11 04:49:35,323	[DEBUG]	
2020-12-11 04:49:36,267	[INFO]	454	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:49:37,217	[INFO]	455	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:49:38,185	[INFO]	456	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:49:39,122	[INFO]	457	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:49:42,402	[INFO]	458	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:49:42,403	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:49:42,404	[INFO]	459	SUCCESS	+6.0	
2020-12-11 04:49:42,404	[DEBUG]	
2020-12-11 04:49:43,366	[INFO]	460	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:49:46,618	[INFO]	461	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:49:46,619	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 04:49:46,620	[INFO]	462	SUCCESS	+6.0	
2020-12-11 04:49:46,620	[DEBUG]	
2020-12-11 04:49:47,558	[INFO]	463	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:49:48,521	[INFO]	464	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:49:49,488	[INFO]	465	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:49:50,457	[INFO]	466	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:49:51,411	[INFO]	467	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:49:52,346	[INFO]	468	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:49:53,273	[INFO]	469	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:49:53,274	[INFO]	470	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:49:53,275	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:49:53,276	[INFO]	471	SUCCESS	+6.0	
2020-12-11 04:49:53,276	[DEBUG]	
2020-12-11 04:49:54,210	[INFO]	472	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:49:55,169	[INFO]	473	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:49:56,157	[INFO]	474	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:49:59,379	[INFO]	475	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:49:59,381	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 04:49:59,384	[INFO]	476	SUCCESS	+6.0	
2020-12-11 04:49:59,385	[DEBUG]	
2020-12-11 04:50:00,308	[INFO]	477	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:50:01,251	[INFO]	478	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:50:01,253	[INFO]	479	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:50:02,209	[INFO]	480	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:50:03,183	[INFO]	481	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:50:04,107	[INFO]	482	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:50:04,109	[INFO]	483	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:50:04,109	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 04:50:07,375	[INFO]	484	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:50:07,376	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,27 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
          return sorted_arr;
--- 13,26 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 04:50:07,377	[INFO]	485	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:50:07,377	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,27 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
          return sorted_arr;
--- 13,26 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 04:50:08,359	[INFO]	486	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:50:09,272	[INFO]	487	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:50:09,274	[INFO]	488	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:50:09,274	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,27 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
          return sorted_arr;
--- 13,26 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 04:50:10,218	[INFO]	489	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:50:10,220	[INFO]	490	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:50:10,220	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,27 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
          return sorted_arr;
--- 13,26 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 04:50:11,191	[INFO]	491	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:50:14,524	[INFO]	492	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:50:14,525	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,26 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 13,26 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
  	    i++;
          }
  

2020-12-11 04:50:17,656	[INFO]	493	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:50:17,657	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,25 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
--- 13,24 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:50:18,590	[INFO]	494	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:50:19,548	[INFO]	495	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:50:19,550	[INFO]	496	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:50:19,550	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,25 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
--- 13,24 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:50:19,551	[INFO]	497	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:50:19,552	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,25 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
--- 13,24 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:50:19,553	[INFO]	498	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:50:19,554	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,25 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
--- 13,24 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:50:19,555	[INFO]	499	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:50:19,556	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,25 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
--- 13,24 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:50:20,498	[INFO]	500	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:50:20,499	[INFO]	==== END ====
2020-12-11 04:50:20,499	[INFO]	Reason: step budget
2020-12-11 04:50:20,500	[INFO]	
2020-12-11 04:50:20,500	[INFO]	========== EPOCH 6 ==========
2020-12-11 04:50:20,500	[INFO]	==== WARMUP ====
2020-12-11 04:50:23,789	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 04:50:23,789	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 04:50:27,075	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 04:50:27,075	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 04:50:30,400	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 04:50:30,400	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 04:50:33,575	[INFO]	INITIAL	SUCCESS	 6.0	
2020-12-11 04:50:33,576	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 04:50:33,576	[INFO]	==== START ====
2020-12-11 04:50:37,341	[INFO]	1	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:50:37,343	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 04:50:37,344	[INFO]	2	SUCCESS	+6.0	
2020-12-11 04:50:37,344	[DEBUG]	
2020-12-11 04:50:38,493	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:50:39,810	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:50:43,880	[INFO]	5	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:50:43,881	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 04:50:43,883	[INFO]	6	SUCCESS	+6.0	
2020-12-11 04:50:43,884	[DEBUG]	
2020-12-11 04:50:44,989	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:50:44,990	[INFO]	8	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:50:44,990	[DEBUG]	
2020-12-11 04:50:46,175	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:50:47,459	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:50:47,460	[INFO]	11	SUCCESS	+6.0	
2020-12-11 04:50:47,461	[DEBUG]	
2020-12-11 04:50:48,461	[INFO]	12	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:50:51,744	[INFO]	13	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:50:51,745	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:50:51,746	[INFO]	14	SUCCESS	+6.0	
2020-12-11 04:50:51,746	[DEBUG]	
2020-12-11 04:50:52,648	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:50:53,599	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:50:54,543	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:50:55,527	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:50:56,475	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:50:57,410	[INFO]	20	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:50:58,333	[INFO]	21	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:50:59,314	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:51:00,281	[INFO]	23	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:51:01,256	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:51:02,216	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:51:03,186	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:51:03,187	[INFO]	27	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:51:03,188	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 04:51:06,530	[INFO]	28	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:51:06,531	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  
***************
*** 21,26 ****
--- 22,28 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 04:51:09,738	[INFO]	29	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:51:09,739	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  
***************
*** 21,26 ****
--- 22,31 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 04:51:09,740	[INFO]	30	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:51:09,740	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  
***************
*** 21,26 ****
--- 22,28 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 04:51:10,714	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:51:11,700	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:51:11,703	[INFO]	33	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:51:11,704	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 04:51:11,706	[INFO]	34	SUCCESS	+6.0	
2020-12-11 04:51:11,706	[DEBUG]	
2020-12-11 04:51:12,652	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:51:13,800	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:51:17,093	[INFO]	37	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:51:17,094	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 04:51:17,095	[INFO]	38	SUCCESS	+6.0	
2020-12-11 04:51:17,095	[DEBUG]	
2020-12-11 04:51:18,027	[INFO]	39	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:51:18,947	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:51:19,907	[INFO]	41	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:51:20,863	[INFO]	42	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:51:24,143	[INFO]	43	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:51:24,144	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 04:51:25,063	[INFO]	44	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:51:25,065	[INFO]	45	SUCCESS	+6.0	
2020-12-11 04:51:25,065	[DEBUG]	
2020-12-11 04:51:26,000	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:51:26,002	[INFO]	47	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:51:26,002	[INFO]	48	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:51:29,265	[INFO]	49	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:51:29,267	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 04:51:29,268	[INFO]	50	SUCCESS	+6.0	
2020-12-11 04:51:29,268	[DEBUG]	
2020-12-11 04:51:32,582	[INFO]	51	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:51:32,582	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 04:51:32,583	[INFO]	52	SUCCESS	+6.0	
2020-12-11 04:51:32,583	[DEBUG]	
2020-12-11 04:51:32,584	[INFO]	53	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:51:32,584	[DEBUG]	
2020-12-11 04:51:32,585	[INFO]	54	SUCCESS	+6.0	
2020-12-11 04:51:32,585	[DEBUG]	
2020-12-11 04:51:33,503	[INFO]	55	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:51:33,504	[INFO]	56	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:51:33,504	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 04:51:34,464	[INFO]	57	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:51:34,468	[INFO]	58	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:51:34,469	[INFO]	59	SUCCESS	+6.0	
2020-12-11 04:51:34,470	[DEBUG]	
2020-12-11 04:51:37,763	[INFO]	60	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:51:37,764	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:51:37,765	[INFO]	61	SUCCESS	+6.0	
2020-12-11 04:51:37,765	[DEBUG]	
2020-12-11 04:51:38,687	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:51:39,630	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:51:42,855	[INFO]	64	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:51:42,855	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 04:51:42,856	[INFO]	65	SUCCESS	+6.0	
2020-12-11 04:51:42,856	[DEBUG]	
2020-12-11 04:51:43,792	[INFO]	66	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:51:44,724	[INFO]	67	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:51:45,681	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:51:48,945	[INFO]	69	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:51:48,946	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 04:51:49,848	[INFO]	70	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:51:49,849	[INFO]	71	SUCCESS	+6.0	
2020-12-11 04:51:49,849	[DEBUG]	
2020-12-11 04:51:50,812	[INFO]	72	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:51:50,814	[INFO]	73	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:51:50,815	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 04:51:51,756	[INFO]	74	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:51:52,727	[INFO]	75	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:51:52,728	[INFO]	76	SUCCESS	+6.0	
2020-12-11 04:51:52,728	[DEBUG]	
2020-12-11 04:51:53,685	[INFO]	77	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:51:54,620	[INFO]	78	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:51:55,578	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:51:56,524	[INFO]	80	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:51:57,489	[INFO]	81	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:51:57,491	[INFO]	82	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:51:57,491	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 04:51:58,454	[INFO]	83	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:51:58,455	[INFO]	84	SUCCESS	+6.0	
2020-12-11 04:51:58,456	[DEBUG]	
2020-12-11 04:52:01,861	[INFO]	85	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:52:01,863	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,34 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:52:01,864	[INFO]	86	SUCCESS	+6.0	
2020-12-11 04:52:01,865	[DEBUG]	
2020-12-11 04:52:02,758	[INFO]	87	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:52:03,675	[INFO]	88	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:52:04,630	[INFO]	89	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:52:05,626	[INFO]	90	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:52:06,557	[INFO]	91	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:52:09,868	[INFO]	92	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:52:09,869	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,21 ****
--- 16,24 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 04:52:09,869	[INFO]	93	SUCCESS	+6.0	
2020-12-11 04:52:09,870	[DEBUG]	
2020-12-11 04:52:10,801	[INFO]	94	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:52:13,981	[INFO]	95	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:52:13,982	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 04:52:13,983	[INFO]	96	SUCCESS	+6.0	
2020-12-11 04:52:13,983	[DEBUG]	
2020-12-11 04:52:13,984	[INFO]	97	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:52:13,985	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,21 ****
--- 16,24 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 04:52:13,985	[INFO]	98	SUCCESS	+6.0	
2020-12-11 04:52:13,985	[DEBUG]	
2020-12-11 04:52:13,986	[INFO]	99	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:52:13,986	[DEBUG]	
2020-12-11 04:52:17,264	[INFO]	100	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:52:17,265	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 04:52:17,266	[INFO]	101	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:52:17,266	[DEBUG]	
2020-12-11 04:52:18,188	[INFO]	102	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:52:19,134	[INFO]	103	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:52:19,136	[INFO]	104	SUCCESS	+6.0	
2020-12-11 04:52:19,137	[DEBUG]	
2020-12-11 04:52:19,139	[INFO]	105	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:52:19,141	[INFO]	106	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:52:19,142	[DEBUG]	
2020-12-11 04:52:19,144	[INFO]	107	SUCCESS	+6.0	
2020-12-11 04:52:19,145	[DEBUG]	
2020-12-11 04:52:22,402	[INFO]	108	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:52:22,403	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 04:52:23,343	[INFO]	109	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:52:26,659	[INFO]	110	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:52:26,660	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 22,28 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 04:52:26,661	[INFO]	111	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:52:26,661	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 04:52:26,662	[INFO]	112	SUCCESS	+6.0	
2020-12-11 04:52:26,662	[DEBUG]	
2020-12-11 04:52:27,582	[INFO]	113	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:52:30,884	[INFO]	114	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:52:30,885	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,27 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 04:52:31,809	[INFO]	115	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:52:32,751	[INFO]	116	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:52:33,932	[INFO]	117	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:52:33,933	[INFO]	118	SUCCESS	+6.0	
2020-12-11 04:52:33,933	[DEBUG]	
2020-12-11 04:52:34,927	[INFO]	119	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:52:34,929	[INFO]	120	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:52:35,880	[INFO]	121	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:52:36,837	[INFO]	122	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:52:37,780	[INFO]	123	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:52:38,734	[INFO]	124	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:52:39,699	[INFO]	125	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:52:39,700	[INFO]	126	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:52:40,660	[INFO]	127	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:52:41,616	[INFO]	128	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:52:42,583	[INFO]	129	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:52:43,525	[INFO]	130	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:52:44,483	[INFO]	131	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:52:45,456	[INFO]	132	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:52:46,411	[INFO]	133	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:52:47,352	[INFO]	134	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:52:48,319	[INFO]	135	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:52:49,306	[INFO]	136	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:52:50,254	[INFO]	137	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:52:50,255	[INFO]	138	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:52:53,508	[INFO]	139	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:52:53,509	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:52:56,772	[INFO]	140	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:52:56,773	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,25 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
--- 14,26 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:53:00,073	[INFO]	141	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:53:00,074	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:53:00,995	[INFO]	142	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:53:01,944	[INFO]	143	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:53:01,946	[INFO]	144	SUCCESS	+6.0	
2020-12-11 04:53:01,947	[DEBUG]	
2020-12-11 04:53:01,950	[INFO]	145	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:53:01,952	[INFO]	146	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:53:02,895	[INFO]	147	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:53:03,884	[INFO]	148	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:53:03,886	[INFO]	149	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:53:04,880	[INFO]	150	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:53:05,892	[INFO]	151	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:53:06,890	[INFO]	152	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:53:07,872	[INFO]	153	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:53:08,824	[INFO]	154	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:53:09,793	[INFO]	155	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:53:10,728	[INFO]	156	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:53:11,656	[INFO]	157	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:53:12,585	[INFO]	158	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:53:13,582	[INFO]	159	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:53:13,585	[INFO]	160	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:53:13,586	[DEBUG]	
2020-12-11 04:53:13,587	[INFO]	161	SUCCESS	+6.0	
2020-12-11 04:53:13,587	[DEBUG]	
2020-12-11 04:53:14,504	[INFO]	162	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:53:17,683	[INFO]	163	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:53:17,684	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 04:53:17,684	[INFO]	164	SUCCESS	+6.0	
2020-12-11 04:53:17,685	[DEBUG]	
2020-12-11 04:53:17,685	[INFO]	165	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:53:17,685	[DEBUG]	
2020-12-11 04:53:18,612	[INFO]	166	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:53:19,532	[INFO]	167	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:53:19,533	[INFO]	168	SUCCESS	+6.0	
2020-12-11 04:53:19,533	[DEBUG]	
2020-12-11 04:53:20,484	[INFO]	169	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:53:23,742	[INFO]	170	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:53:23,743	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:53:24,667	[INFO]	171	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:53:25,583	[INFO]	172	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:53:25,585	[INFO]	173	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:53:28,784	[INFO]	174	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:53:28,785	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,26 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 14,26 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 04:53:29,682	[INFO]	175	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:53:30,597	[INFO]	176	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:53:33,826	[INFO]	177	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:53:33,827	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 04:53:34,733	[INFO]	178	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:53:34,734	[INFO]	179	SUCCESS	+6.0	
2020-12-11 04:53:34,734	[DEBUG]	
2020-12-11 04:53:34,735	[INFO]	180	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:53:35,671	[INFO]	181	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:53:36,664	[INFO]	182	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:53:37,616	[INFO]	183	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:53:38,561	[INFO]	184	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:53:39,538	[INFO]	185	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:53:39,540	[INFO]	186	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:53:39,541	[DEBUG]	
2020-12-11 04:53:39,542	[INFO]	187	SUCCESS	+6.0	
2020-12-11 04:53:39,542	[DEBUG]	
2020-12-11 04:53:39,544	[INFO]	188	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:53:40,497	[INFO]	189	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:53:40,498	[INFO]	190	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:53:40,499	[DEBUG]	
2020-12-11 04:53:41,447	[INFO]	191	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:53:42,386	[INFO]	192	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:53:42,388	[INFO]	193	SUCCESS	+6.0	
2020-12-11 04:53:42,388	[DEBUG]	
2020-12-11 04:53:43,377	[INFO]	194	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:53:44,355	[INFO]	195	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:53:47,680	[INFO]	196	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:53:47,681	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 04:53:48,616	[INFO]	197	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:53:48,618	[INFO]	198	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:53:48,618	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 04:53:51,897	[INFO]	199	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:53:51,898	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:53:51,899	[INFO]	200	SUCCESS	+6.0	
2020-12-11 04:53:51,899	[DEBUG]	
2020-12-11 04:53:52,860	[INFO]	201	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:53:53,818	[INFO]	202	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:53:54,792	[INFO]	203	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:53:54,793	[INFO]	204	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:53:54,794	[DEBUG]	
2020-12-11 04:53:54,794	[INFO]	205	SUCCESS	+6.0	
2020-12-11 04:53:54,795	[DEBUG]	
2020-12-11 04:53:55,753	[INFO]	206	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:53:56,727	[INFO]	207	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:54:00,052	[INFO]	208	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:54:00,053	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:54:00,985	[INFO]	209	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:54:00,988	[INFO]	210	SUCCESS	+6.0	
2020-12-11 04:54:00,988	[DEBUG]	
2020-12-11 04:54:01,957	[INFO]	211	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:54:02,896	[INFO]	212	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:54:03,841	[INFO]	213	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:54:04,831	[INFO]	214	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:54:05,833	[INFO]	215	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:54:06,779	[INFO]	216	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:54:07,744	[INFO]	217	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:54:08,679	[INFO]	218	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:54:09,655	[INFO]	219	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:54:09,658	[INFO]	220	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:54:10,582	[INFO]	221	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:54:10,583	[INFO]	222	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:54:11,519	[INFO]	223	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:54:12,467	[INFO]	224	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:54:12,469	[INFO]	225	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:54:15,728	[INFO]	226	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:54:15,729	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 04:54:16,655	[INFO]	227	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:54:16,657	[INFO]	228	SUCCESS	+6.0	
2020-12-11 04:54:16,657	[DEBUG]	
2020-12-11 04:54:16,659	[INFO]	229	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:54:16,660	[INFO]	230	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:54:17,604	[INFO]	231	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:54:17,606	[INFO]	232	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:54:17,606	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:54:17,607	[INFO]	233	SUCCESS	+6.0	
2020-12-11 04:54:17,607	[DEBUG]	
2020-12-11 04:54:18,579	[INFO]	234	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:54:19,527	[INFO]	235	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:54:20,475	[INFO]	236	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:54:20,477	[INFO]	237	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:54:23,697	[INFO]	238	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:54:23,699	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:54:23,700	[INFO]	239	SUCCESS	+6.0	
2020-12-11 04:54:23,701	[DEBUG]	
2020-12-11 04:54:24,613	[INFO]	240	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:54:25,564	[INFO]	241	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:54:26,510	[INFO]	242	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:54:26,512	[INFO]	243	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:54:27,459	[INFO]	244	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:54:28,433	[INFO]	245	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:54:28,434	[INFO]	246	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:54:31,701	[INFO]	247	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:54:31,704	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 04:54:31,706	[INFO]	248	SUCCESS	+6.0	
2020-12-11 04:54:31,706	[DEBUG]	
2020-12-11 04:54:32,642	[INFO]	249	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:54:33,609	[INFO]	250	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:54:34,538	[INFO]	251	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:54:37,775	[INFO]	252	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:54:37,776	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 04:54:37,777	[INFO]	253	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:54:37,778	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 04:54:37,779	[INFO]	254	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:54:37,780	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 04:54:37,780	[INFO]	255	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:54:37,781	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 04:54:38,752	[INFO]	256	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:54:39,721	[INFO]	257	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:54:39,724	[INFO]	258	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:54:39,725	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 04:54:39,727	[INFO]	259	SUCCESS	+6.0	
2020-12-11 04:54:39,727	[DEBUG]	
2020-12-11 04:54:40,668	[INFO]	260	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:54:41,605	[INFO]	261	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:54:41,607	[INFO]	262	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:54:42,558	[INFO]	263	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:54:43,505	[INFO]	264	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:54:44,426	[INFO]	265	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:54:45,366	[INFO]	266	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:54:46,371	[INFO]	267	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:54:47,373	[INFO]	268	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:54:50,610	[INFO]	269	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:54:50,611	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 04:54:51,567	[INFO]	270	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:54:51,569	[INFO]	271	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:54:52,522	[INFO]	272	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:54:55,830	[INFO]	273	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:54:55,831	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
***************
*** 21,26 ****
--- 22,30 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 04:54:56,772	[INFO]	274	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:55:00,078	[INFO]	275	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:55:00,079	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 04:55:00,080	[INFO]	276	SUCCESS	+6.0	
2020-12-11 04:55:00,080	[DEBUG]	
2020-12-11 04:55:00,990	[INFO]	277	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:55:01,950	[INFO]	278	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:55:02,916	[INFO]	279	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:55:02,918	[INFO]	280	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:55:03,909	[INFO]	281	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:55:04,859	[INFO]	282	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:55:05,860	[INFO]	283	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:55:05,862	[INFO]	284	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:55:06,838	[INFO]	285	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:55:07,787	[INFO]	286	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:55:07,789	[INFO]	287	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:55:07,789	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 04:55:07,790	[INFO]	288	SUCCESS	+6.0	
2020-12-11 04:55:07,790	[DEBUG]	
2020-12-11 04:55:08,725	[INFO]	289	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:55:09,692	[INFO]	290	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:55:09,694	[INFO]	291	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:55:09,695	[DEBUG]	
2020-12-11 04:55:13,006	[INFO]	292	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:55:13,008	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:55:13,009	[INFO]	293	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:55:13,009	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:55:13,010	[INFO]	294	SUCCESS	+6.0	
2020-12-11 04:55:13,010	[DEBUG]	
2020-12-11 04:55:13,956	[INFO]	295	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:55:17,198	[INFO]	296	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:55:17,199	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 04:55:17,199	[INFO]	297	SUCCESS	+6.0	
2020-12-11 04:55:17,200	[DEBUG]	
2020-12-11 04:55:18,120	[INFO]	298	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:55:19,063	[INFO]	299	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:55:20,031	[INFO]	300	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:55:20,033	[INFO]	301	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:55:20,033	[DEBUG]	
2020-12-11 04:55:20,033	[INFO]	302	SUCCESS	+6.0	
2020-12-11 04:55:20,034	[DEBUG]	
2020-12-11 04:55:20,034	[INFO]	303	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:55:20,035	[DEBUG]	
2020-12-11 04:55:21,023	[INFO]	304	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:55:21,026	[INFO]	305	SUCCESS	+6.0	
2020-12-11 04:55:21,026	[DEBUG]	
2020-12-11 04:55:21,960	[INFO]	306	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:55:25,196	[INFO]	307	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:55:25,197	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 04:55:25,198	[INFO]	308	SUCCESS	+6.0	
2020-12-11 04:55:25,198	[DEBUG]	
2020-12-11 04:55:26,126	[INFO]	309	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:55:29,431	[INFO]	310	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:55:29,431	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 04:55:30,352	[INFO]	311	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:55:30,353	[INFO]	312	SUCCESS	+6.0	
2020-12-11 04:55:30,353	[DEBUG]	
2020-12-11 04:55:31,287	[INFO]	313	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:55:31,289	[INFO]	314	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:55:31,290	[DEBUG]	
2020-12-11 04:55:32,237	[INFO]	315	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:55:32,240	[INFO]	316	SUCCESS	+6.0	
2020-12-11 04:55:32,241	[DEBUG]	
2020-12-11 04:55:32,243	[INFO]	317	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:55:32,244	[DEBUG]	
2020-12-11 04:55:32,246	[INFO]	318	SUCCESS	+6.0	
2020-12-11 04:55:32,247	[DEBUG]	
2020-12-11 04:55:33,188	[INFO]	319	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:55:34,152	[INFO]	320	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:55:35,239	[INFO]	321	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:55:35,240	[INFO]	322	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:55:36,203	[INFO]	323	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:55:37,184	[INFO]	324	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:55:37,185	[INFO]	325	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:55:37,186	[DEBUG]	
2020-12-11 04:55:37,187	[INFO]	326	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:55:37,187	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 04:55:37,188	[INFO]	327	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:55:37,188	[DEBUG]	
2020-12-11 04:55:37,189	[INFO]	328	SUCCESS	+6.0	
2020-12-11 04:55:37,189	[DEBUG]	
2020-12-11 04:55:38,117	[INFO]	329	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:55:39,077	[INFO]	330	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:55:40,042	[INFO]	331	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:55:41,023	[INFO]	332	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:55:44,266	[INFO]	333	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:55:44,267	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:55:45,203	[INFO]	334	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:55:46,184	[INFO]	335	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:55:46,185	[INFO]	336	SUCCESS	+6.0	
2020-12-11 04:55:46,186	[DEBUG]	
2020-12-11 04:55:47,145	[INFO]	337	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:55:47,147	[INFO]	338	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:55:48,129	[INFO]	339	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:55:48,132	[INFO]	340	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:55:48,133	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 04:55:48,135	[INFO]	341	SUCCESS	+6.0	
2020-12-11 04:55:48,136	[DEBUG]	
2020-12-11 04:55:48,139	[INFO]	342	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:55:49,123	[INFO]	343	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:55:49,127	[INFO]	344	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:55:50,061	[INFO]	345	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:55:50,062	[INFO]	346	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:55:50,062	[DEBUG]	
2020-12-11 04:55:51,024	[INFO]	347	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:55:51,025	[INFO]	348	SUCCESS	+6.0	
2020-12-11 04:55:51,025	[DEBUG]	
2020-12-11 04:55:51,966	[INFO]	349	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:55:51,967	[INFO]	350	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:55:52,911	[INFO]	351	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:55:56,213	[INFO]	352	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:55:56,214	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 04:55:56,215	[INFO]	353	SUCCESS	+6.0	
2020-12-11 04:55:56,215	[DEBUG]	
2020-12-11 04:55:57,122	[INFO]	354	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:55:58,092	[INFO]	355	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:55:59,043	[INFO]	356	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:56:00,000	[INFO]	357	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:56:00,002	[INFO]	358	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:56:00,960	[INFO]	359	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:56:01,930	[INFO]	360	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:56:02,902	[INFO]	361	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:56:03,831	[INFO]	362	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:56:04,780	[INFO]	363	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:56:04,782	[INFO]	364	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:56:05,789	[INFO]	365	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:56:06,744	[INFO]	366	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:56:10,026	[INFO]	367	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:56:10,027	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 04:56:10,028	[INFO]	368	SUCCESS	+6.0	
2020-12-11 04:56:10,028	[DEBUG]	
2020-12-11 04:56:10,029	[INFO]	369	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:56:10,981	[INFO]	370	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:56:11,928	[INFO]	371	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:56:12,886	[INFO]	372	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:56:13,831	[INFO]	373	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:56:14,792	[INFO]	374	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:56:15,777	[INFO]	375	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:56:16,698	[INFO]	376	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:56:17,655	[INFO]	377	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:56:20,904	[INFO]	378	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:56:20,905	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 04:56:21,855	[INFO]	379	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:56:22,825	[INFO]	380	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:56:26,166	[INFO]	381	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:56:26,168	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  
***************
*** 22,27 ****
--- 23,29 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 04:56:27,108	[INFO]	382	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:56:30,360	[INFO]	383	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:56:30,361	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 04:56:31,334	[INFO]	384	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:56:31,335	[INFO]	385	SUCCESS	+6.0	
2020-12-11 04:56:31,336	[DEBUG]	
2020-12-11 04:56:34,584	[INFO]	386	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:56:34,585	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:56:34,585	[INFO]	387	SUCCESS	+6.0	
2020-12-11 04:56:34,586	[DEBUG]	
2020-12-11 04:56:37,813	[INFO]	388	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:56:37,814	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:56:37,814	[INFO]	389	SUCCESS	+6.0	
2020-12-11 04:56:37,815	[DEBUG]	
2020-12-11 04:56:38,748	[INFO]	390	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:56:38,749	[INFO]	391	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:56:42,039	[INFO]	392	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:56:42,040	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,21 ****
--- 16,24 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 04:56:42,972	[INFO]	393	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:56:42,973	[INFO]	394	SUCCESS	+6.0	
2020-12-11 04:56:42,973	[DEBUG]	
2020-12-11 04:56:42,974	[INFO]	395	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:56:42,974	[DEBUG]	
2020-12-11 04:56:42,975	[INFO]	396	SUCCESS	+6.0	
2020-12-11 04:56:42,975	[DEBUG]	
2020-12-11 04:56:43,890	[INFO]	397	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:56:47,242	[INFO]	398	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:56:47,243	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 04:56:48,148	[INFO]	399	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:56:48,149	[INFO]	400	SUCCESS	+6.0	
2020-12-11 04:56:48,149	[DEBUG]	
2020-12-11 04:56:49,112	[INFO]	401	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:56:50,060	[INFO]	402	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:56:51,041	[INFO]	403	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:56:51,982	[INFO]	404	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:56:52,943	[INFO]	405	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:56:53,895	[INFO]	406	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:56:54,841	[INFO]	407	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:56:58,100	[INFO]	408	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:56:58,100	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 04:56:58,982	[INFO]	409	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:56:59,923	[INFO]	410	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:56:59,925	[INFO]	411	SUCCESS	+6.0	
2020-12-11 04:56:59,926	[DEBUG]	
2020-12-11 04:56:59,928	[INFO]	412	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:57:00,851	[INFO]	413	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:57:01,819	[INFO]	414	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:57:05,157	[INFO]	415	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:57:05,158	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:57:05,159	[INFO]	416	SUCCESS	+6.0	
2020-12-11 04:57:05,159	[DEBUG]	
2020-12-11 04:57:06,039	[INFO]	417	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:57:09,258	[INFO]	418	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:57:09,259	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 04:57:12,434	[INFO]	419	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:57:12,435	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,27 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 20,27 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 04:57:12,436	[INFO]	420	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:57:12,437	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 04:57:12,437	[INFO]	421	SUCCESS	+6.0	
2020-12-11 04:57:12,438	[DEBUG]	
2020-12-11 04:57:13,351	[INFO]	422	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:57:14,306	[INFO]	423	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:57:15,251	[INFO]	424	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:57:16,191	[INFO]	425	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:57:17,176	[INFO]	426	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:57:20,405	[INFO]	427	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:57:20,406	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 04:57:20,407	[INFO]	428	SUCCESS	+6.0	
2020-12-11 04:57:20,407	[DEBUG]	
2020-12-11 04:57:21,350	[INFO]	429	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:57:24,637	[INFO]	430	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:57:24,638	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 04:57:24,639	[INFO]	431	SUCCESS	+6.0	
2020-12-11 04:57:24,640	[DEBUG]	
2020-12-11 04:57:25,580	[INFO]	432	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:57:25,581	[INFO]	433	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:57:25,582	[DEBUG]	
2020-12-11 04:57:26,545	[INFO]	434	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:57:26,547	[INFO]	435	SUCCESS	+6.0	
2020-12-11 04:57:26,548	[DEBUG]	
2020-12-11 04:57:26,551	[INFO]	436	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:57:27,525	[INFO]	437	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:57:30,793	[INFO]	438	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:57:30,794	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 04:57:31,718	[INFO]	439	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:57:32,664	[INFO]	440	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:57:32,665	[INFO]	441	SUCCESS	+6.0	
2020-12-11 04:57:32,666	[DEBUG]	
2020-12-11 04:57:33,615	[INFO]	442	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:57:34,551	[INFO]	443	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:57:37,848	[INFO]	444	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:57:37,849	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,27 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 04:57:37,849	[INFO]	445	SUCCESS	+6.0	
2020-12-11 04:57:37,850	[DEBUG]	
2020-12-11 04:57:38,800	[INFO]	446	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:57:39,825	[INFO]	447	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:57:40,859	[INFO]	448	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:57:44,099	[INFO]	449	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:57:44,100	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 04:57:44,989	[INFO]	450	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:57:44,991	[INFO]	451	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:57:44,991	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 04:57:48,224	[INFO]	452	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:57:48,225	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,28 ****
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 18,28 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 04:57:49,183	[INFO]	453	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:57:52,382	[INFO]	454	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:57:52,384	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,28 ****
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 15,29 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 04:57:52,385	[INFO]	455	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:57:52,385	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,28 ****
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 18,28 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 04:57:53,309	[INFO]	456	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:57:53,311	[INFO]	457	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:57:54,302	[INFO]	458	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:57:55,258	[INFO]	459	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:57:56,204	[INFO]	460	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:57:56,205	[INFO]	461	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:57:56,205	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 04:57:56,206	[INFO]	462	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 04:57:56,206	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 04:57:56,207	[INFO]	463	SUCCESS	+6.0	
2020-12-11 04:57:56,207	[DEBUG]	
2020-12-11 04:57:57,159	[INFO]	464	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:57:58,137	[INFO]	465	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:57:59,093	[INFO]	466	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:58:00,073	[INFO]	467	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:58:01,022	[INFO]	468	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:58:04,335	[INFO]	469	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:58:04,336	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 04:58:04,336	[INFO]	470	SUCCESS	+6.0	
2020-12-11 04:58:04,337	[DEBUG]	
2020-12-11 04:58:05,343	[INFO]	471	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:58:08,666	[INFO]	472	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:58:08,666	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 04:58:09,603	[INFO]	473	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:58:10,574	[INFO]	474	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:58:11,541	[INFO]	475	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:58:11,544	[INFO]	476	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:58:11,545	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 04:58:11,547	[INFO]	477	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:58:11,548	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 04:58:11,549	[INFO]	478	SUCCESS	+6.0	
2020-12-11 04:58:11,550	[DEBUG]	
2020-12-11 04:58:12,472	[INFO]	479	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:58:13,398	[INFO]	480	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:58:13,400	[INFO]	481	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:58:13,400	[DEBUG]	
2020-12-11 04:58:14,382	[INFO]	482	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:58:15,342	[INFO]	483	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:58:16,303	[INFO]	484	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:58:16,306	[INFO]	485	SUCCESS	+6.0	
2020-12-11 04:58:16,306	[DEBUG]	
2020-12-11 04:58:17,292	[INFO]	486	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:58:18,202	[INFO]	487	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:58:18,203	[INFO]	488	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:58:21,481	[INFO]	489	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:58:21,483	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 04:58:21,484	[INFO]	490	SUCCESS	+6.0	
2020-12-11 04:58:21,485	[DEBUG]	
2020-12-11 04:58:22,405	[INFO]	491	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:58:23,347	[INFO]	492	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 04:58:24,328	[INFO]	493	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:58:25,278	[INFO]	494	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:58:25,280	[INFO]	495	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:58:25,280	[DEBUG]	
2020-12-11 04:58:25,281	[INFO]	496	SUCCESS	+6.0	
2020-12-11 04:58:25,281	[DEBUG]	
2020-12-11 04:58:26,245	[INFO]	497	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:58:27,180	[INFO]	498	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:58:28,154	[INFO]	499	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:58:29,108	[INFO]	500	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:58:29,109	[INFO]	==== END ====
2020-12-11 04:58:29,109	[INFO]	Reason: step budget
2020-12-11 04:58:29,109	[INFO]	
2020-12-11 04:58:29,109	[INFO]	========== EPOCH 7 ==========
2020-12-11 04:58:29,110	[INFO]	==== WARMUP ====
2020-12-11 04:58:32,475	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 04:58:32,476	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 04:58:35,689	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 04:58:35,690	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 04:58:38,902	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 04:58:38,903	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 04:58:42,098	[INFO]	INITIAL	SUCCESS	 6.0	
2020-12-11 04:58:42,098	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 04:58:42,098	[INFO]	==== START ====
2020-12-11 04:58:45,302	[INFO]	1	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:58:45,303	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 04:58:46,249	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:58:46,250	[INFO]	3	SUCCESS	+6.0	
2020-12-11 04:58:46,250	[DEBUG]	
2020-12-11 04:58:47,226	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:58:48,177	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:58:49,157	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:58:52,410	[INFO]	7	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:58:52,411	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:58:52,412	[INFO]	8	SUCCESS	+6.0	
2020-12-11 04:58:52,412	[DEBUG]	
2020-12-11 04:58:55,741	[INFO]	9	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:58:55,742	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 04:58:58,889	[INFO]	10	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:58:58,890	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,26 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 14,27 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 04:58:59,791	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:58:59,792	[INFO]	12	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:58:59,793	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 04:58:59,793	[INFO]	13	SUCCESS	+6.0	
2020-12-11 04:58:59,794	[DEBUG]	
2020-12-11 04:59:00,741	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:59:01,725	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:59:02,683	[INFO]	16	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:59:05,952	[INFO]	17	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:59:05,953	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 04:59:06,890	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:59:07,842	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:59:07,843	[INFO]	20	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:59:07,844	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 04:59:08,796	[INFO]	21	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:59:09,767	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:59:10,716	[INFO]	23	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:59:11,657	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:59:12,625	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:59:12,629	[INFO]	26	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:59:12,630	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 04:59:12,631	[INFO]	27	SUCCESS	+6.0	
2020-12-11 04:59:12,631	[DEBUG]	
2020-12-11 04:59:13,547	[INFO]	28	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:59:14,505	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:59:15,478	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:59:15,480	[INFO]	31	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:59:15,481	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 04:59:15,483	[INFO]	32	SUCCESS	+6.0	
2020-12-11 04:59:15,483	[DEBUG]	
2020-12-11 04:59:15,485	[INFO]	33	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 04:59:15,487	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 04:59:15,489	[INFO]	34	SUCCESS	+6.0	
2020-12-11 04:59:15,489	[DEBUG]	
2020-12-11 04:59:18,733	[INFO]	35	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:59:18,735	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,27 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 04:59:18,737	[INFO]	36	SUCCESS	+6.0	
2020-12-11 04:59:18,738	[DEBUG]	
2020-12-11 04:59:19,700	[INFO]	37	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:59:20,613	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:59:21,562	[INFO]	39	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 04:59:24,793	[INFO]	40	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:59:24,794	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:59:24,795	[INFO]	41	SUCCESS	+6.0	
2020-12-11 04:59:24,795	[DEBUG]	
2020-12-11 04:59:25,698	[INFO]	42	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:59:25,699	[INFO]	43	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:59:25,699	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 04:59:25,700	[INFO]	44	SUCCESS	+6.0	
2020-12-11 04:59:25,700	[DEBUG]	
2020-12-11 04:59:28,998	[INFO]	45	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:59:28,999	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,34 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:59:32,221	[INFO]	46	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 04:59:32,223	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,33 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
+         for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 04:59:33,150	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 04:59:33,151	[INFO]	48	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:59:33,152	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,34 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 04:59:33,152	[INFO]	49	SUCCESS	+6.0	
2020-12-11 04:59:33,153	[DEBUG]	
2020-12-11 04:59:33,154	[INFO]	50	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:59:33,154	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:59:34,112	[INFO]	51	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:59:35,049	[INFO]	52	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:59:35,050	[INFO]	53	SUCCESS	+6.0	
2020-12-11 04:59:35,051	[DEBUG]	
2020-12-11 04:59:35,052	[INFO]	54	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:59:35,052	[DEBUG]	
2020-12-11 04:59:35,053	[INFO]	55	SUCCESS	+6.0	
2020-12-11 04:59:35,053	[DEBUG]	
2020-12-11 04:59:36,006	[INFO]	56	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:59:36,942	[INFO]	57	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:59:40,182	[INFO]	58	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 04:59:40,183	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 04:59:43,418	[INFO]	59	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:59:43,419	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,28 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
  	    i++;
          }
  

2020-12-11 04:59:44,335	[INFO]	60	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:59:45,304	[INFO]	61	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 04:59:45,307	[INFO]	62	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 04:59:45,308	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 04:59:45,310	[INFO]	63	SUCCESS	+6.0	
2020-12-11 04:59:45,311	[DEBUG]	
2020-12-11 04:59:46,272	[INFO]	64	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 04:59:47,215	[INFO]	65	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:59:50,520	[INFO]	66	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 04:59:50,522	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 04:59:51,452	[INFO]	67	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:59:52,388	[INFO]	68	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:59:52,390	[INFO]	69	SUCCESS	+6.0	
2020-12-11 04:59:52,390	[DEBUG]	
2020-12-11 04:59:53,311	[INFO]	70	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 04:59:54,258	[INFO]	71	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 04:59:54,260	[INFO]	72	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 04:59:54,260	[INFO]	73	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:59:54,261	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 04:59:54,262	[INFO]	74	SUCCESS	+6.0	
2020-12-11 04:59:54,262	[DEBUG]	
2020-12-11 04:59:55,209	[INFO]	75	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 04:59:56,174	[INFO]	76	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 04:59:57,150	[INFO]	77	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 04:59:58,122	[INFO]	78	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 04:59:59,089	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:00:00,042	[INFO]	80	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:00:00,994	[INFO]	81	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:00:01,976	[INFO]	82	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:00:02,927	[INFO]	83	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:00:03,897	[INFO]	84	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:00:04,851	[INFO]	85	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:00:05,844	[INFO]	86	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:00:06,802	[INFO]	87	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:00:10,114	[INFO]	88	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:00:10,115	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 05:00:11,020	[INFO]	89	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:00:11,961	[INFO]	90	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:00:11,962	[INFO]	91	SUCCESS	+6.0	
2020-12-11 05:00:11,963	[DEBUG]	
2020-12-11 05:00:12,901	[INFO]	92	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:00:12,902	[INFO]	93	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:00:12,903	[INFO]	94	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:00:13,870	[INFO]	95	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:00:14,834	[INFO]	96	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:00:15,805	[INFO]	97	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:00:16,766	[INFO]	98	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:00:17,721	[INFO]	99	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:00:18,676	[INFO]	100	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:00:19,622	[INFO]	101	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:00:20,549	[INFO]	102	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:00:21,518	[INFO]	103	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:00:22,488	[INFO]	104	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:00:22,491	[INFO]	105	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:00:22,492	[DEBUG]	
2020-12-11 05:00:25,802	[INFO]	106	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:00:25,803	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 05:00:26,685	[INFO]	107	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:00:26,686	[INFO]	108	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:00:26,687	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 05:00:26,688	[INFO]	109	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:00:26,688	[DEBUG]	
2020-12-11 05:00:26,689	[INFO]	110	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:00:26,689	[DEBUG]	
2020-12-11 05:00:26,690	[INFO]	111	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:00:26,690	[DEBUG]	
2020-12-11 05:00:26,691	[INFO]	112	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:00:26,691	[DEBUG]	
2020-12-11 05:00:29,939	[INFO]	113	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:00:29,939	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 05:00:29,940	[INFO]	114	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:00:29,941	[DEBUG]	
2020-12-11 05:00:29,941	[INFO]	115	SUCCESS	+6.0	
2020-12-11 05:00:29,941	[DEBUG]	
2020-12-11 05:00:30,883	[INFO]	116	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:00:34,098	[INFO]	117	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:00:34,099	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
          }
  
          return sorted_arr;

2020-12-11 05:00:34,099	[INFO]	118	SUCCESS	+6.0	
2020-12-11 05:00:34,100	[DEBUG]	
2020-12-11 05:00:35,126	[INFO]	119	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:00:36,432	[INFO]	120	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:00:37,579	[INFO]	121	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:00:37,582	[INFO]	122	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:00:41,261	[INFO]	123	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:00:41,262	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 05:00:41,263	[INFO]	124	SUCCESS	+6.0	
2020-12-11 05:00:41,263	[DEBUG]	
2020-12-11 05:00:41,264	[INFO]	125	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:00:41,264	[DEBUG]	
2020-12-11 05:00:41,265	[INFO]	126	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:00:42,189	[INFO]	127	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:00:43,142	[INFO]	128	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:00:44,103	[INFO]	129	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:00:44,106	[INFO]	130	SUCCESS	+6.0	
2020-12-11 05:00:44,106	[DEBUG]	
2020-12-11 05:00:44,108	[INFO]	131	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:00:45,061	[INFO]	132	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:00:45,063	[INFO]	133	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:00:45,063	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 05:00:45,064	[INFO]	134	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:00:45,064	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 05:00:45,065	[INFO]	135	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:00:45,065	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 05:00:45,066	[INFO]	136	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:00:45,066	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 05:00:45,997	[INFO]	137	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:00:46,961	[INFO]	138	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:00:50,213	[INFO]	139	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:00:50,215	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 05:00:51,194	[INFO]	140	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:00:52,149	[INFO]	141	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:00:53,098	[INFO]	142	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:00:54,063	[INFO]	143	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:00:54,064	[INFO]	144	SUCCESS	+6.0	
2020-12-11 05:00:54,065	[DEBUG]	
2020-12-11 05:00:55,024	[INFO]	145	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:00:55,999	[INFO]	146	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:00:56,931	[INFO]	147	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:00:57,903	[INFO]	148	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:00:58,891	[INFO]	149	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:00:59,829	[INFO]	150	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:01:00,785	[INFO]	151	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:01:01,738	[INFO]	152	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:01:02,676	[INFO]	153	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:01:02,677	[INFO]	154	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:01:02,678	[DEBUG]	
2020-12-11 05:01:02,678	[INFO]	155	SUCCESS	+6.0	
2020-12-11 05:01:02,679	[DEBUG]	
2020-12-11 05:01:03,628	[INFO]	156	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:01:04,574	[INFO]	157	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:01:05,600	[INFO]	158	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:01:05,605	[INFO]	159	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:01:05,606	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 05:01:06,607	[INFO]	160	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:01:06,609	[INFO]	161	SUCCESS	+6.0	
2020-12-11 05:01:06,609	[DEBUG]	
2020-12-11 05:01:09,841	[INFO]	162	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:01:09,842	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:01:09,842	[INFO]	163	SUCCESS	+6.0	
2020-12-11 05:01:09,843	[DEBUG]	
2020-12-11 05:01:10,764	[INFO]	164	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:01:11,690	[INFO]	165	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:01:12,650	[INFO]	166	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:01:13,609	[INFO]	167	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:01:13,612	[INFO]	168	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:01:14,560	[INFO]	169	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:01:17,933	[INFO]	170	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:01:17,934	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
          }
  
          return sorted_arr;

2020-12-11 05:01:17,935	[INFO]	171	SUCCESS	+6.0	
2020-12-11 05:01:17,936	[DEBUG]	
2020-12-11 05:01:18,886	[INFO]	172	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:01:19,821	[INFO]	173	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:01:20,791	[INFO]	174	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:01:21,750	[INFO]	175	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:01:22,698	[INFO]	176	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:01:26,008	[INFO]	177	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:01:26,009	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 05:01:26,011	[INFO]	178	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:01:26,012	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 05:01:29,279	[INFO]	179	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:01:29,281	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:01:29,283	[INFO]	180	SUCCESS	+6.0	
2020-12-11 05:01:29,284	[DEBUG]	
2020-12-11 05:01:32,470	[INFO]	181	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:01:32,472	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,27 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 05:01:32,474	[INFO]	182	SUCCESS	+6.0	
2020-12-11 05:01:32,474	[DEBUG]	
2020-12-11 05:01:33,395	[INFO]	183	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:01:34,322	[INFO]	184	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:01:37,633	[INFO]	185	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:01:37,634	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 05:01:37,635	[INFO]	186	SUCCESS	+6.0	
2020-12-11 05:01:37,635	[DEBUG]	
2020-12-11 05:01:37,636	[INFO]	187	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:01:37,637	[DEBUG]	
2020-12-11 05:01:37,637	[INFO]	188	SUCCESS	+6.0	
2020-12-11 05:01:37,638	[DEBUG]	
2020-12-11 05:01:38,586	[INFO]	189	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:01:39,537	[INFO]	190	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:01:42,812	[INFO]	191	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:01:42,813	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 05:01:42,813	[INFO]	192	SUCCESS	+6.0	
2020-12-11 05:01:42,814	[DEBUG]	
2020-12-11 05:01:43,678	[INFO]	193	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:01:43,679	[INFO]	194	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:01:43,680	[INFO]	195	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:01:44,631	[INFO]	196	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:01:45,597	[INFO]	197	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:01:49,183	[INFO]	198	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:01:49,184	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,21 ****
--- 16,24 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 05:01:50,072	[INFO]	199	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:01:51,014	[INFO]	200	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:01:52,000	[INFO]	201	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:01:52,003	[INFO]	202	SUCCESS	+6.0	
2020-12-11 05:01:52,003	[DEBUG]	
2020-12-11 05:01:52,984	[INFO]	203	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:01:54,119	[INFO]	204	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:01:55,088	[INFO]	205	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:01:56,067	[INFO]	206	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:01:56,990	[INFO]	207	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:01:57,995	[INFO]	208	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:01:58,978	[INFO]	209	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:01:58,981	[INFO]	210	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:01:59,949	[INFO]	211	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:02:00,943	[INFO]	212	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:02:01,913	[INFO]	213	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:02:05,163	[INFO]	214	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:02:05,163	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 05:02:05,164	[INFO]	215	SUCCESS	+6.0	
2020-12-11 05:02:05,164	[DEBUG]	
2020-12-11 05:02:06,124	[INFO]	216	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:02:09,363	[INFO]	217	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:02:09,364	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 05:02:10,276	[INFO]	218	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:02:11,266	[INFO]	219	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:02:12,232	[INFO]	220	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:02:12,235	[INFO]	221	SUCCESS	+6.0	
2020-12-11 05:02:12,235	[DEBUG]	
2020-12-11 05:02:13,197	[INFO]	222	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:02:14,134	[INFO]	223	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:02:15,121	[INFO]	224	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:02:18,398	[INFO]	225	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:02:18,399	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 05:02:18,400	[INFO]	226	SUCCESS	+6.0	
2020-12-11 05:02:18,400	[DEBUG]	
2020-12-11 05:02:19,288	[INFO]	227	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:02:22,552	[INFO]	228	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:02:22,553	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 05:02:22,554	[INFO]	229	SUCCESS	+6.0	
2020-12-11 05:02:22,554	[DEBUG]	
2020-12-11 05:02:23,498	[INFO]	230	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:02:24,460	[INFO]	231	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:02:25,418	[INFO]	232	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:02:26,389	[INFO]	233	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:02:27,343	[INFO]	234	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:02:30,570	[INFO]	235	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:02:30,571	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 05:02:31,486	[INFO]	236	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:02:31,487	[INFO]	237	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:02:31,488	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 05:02:34,792	[INFO]	238	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:02:34,794	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,27 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 05:02:34,795	[INFO]	239	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:02:34,796	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,27 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 05:02:34,797	[INFO]	240	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:02:34,798	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 05:02:35,797	[INFO]	241	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:02:36,789	[INFO]	242	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:02:37,768	[INFO]	243	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:02:41,032	[INFO]	244	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:02:41,033	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,28 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 05:02:41,034	[INFO]	245	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:02:41,035	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 05:02:41,035	[INFO]	246	SUCCESS	+6.0	
2020-12-11 05:02:41,035	[DEBUG]	
2020-12-11 05:02:44,277	[INFO]	247	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:02:44,278	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 05:02:44,279	[INFO]	248	SUCCESS	+6.0	
2020-12-11 05:02:44,279	[DEBUG]	
2020-12-11 05:02:45,215	[INFO]	249	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:02:46,179	[INFO]	250	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:02:47,130	[INFO]	251	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:02:48,111	[INFO]	252	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:02:51,324	[INFO]	253	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:02:51,325	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 05:02:51,326	[INFO]	254	SUCCESS	+6.0	
2020-12-11 05:02:51,326	[DEBUG]	
2020-12-11 05:02:52,269	[INFO]	255	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:02:55,501	[INFO]	256	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:02:55,503	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 05:02:55,504	[INFO]	257	SUCCESS	+6.0	
2020-12-11 05:02:55,505	[DEBUG]	
2020-12-11 05:02:56,474	[INFO]	258	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:02:57,420	[INFO]	259	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:03:00,642	[INFO]	260	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:03:00,643	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 05:03:00,643	[INFO]	261	SUCCESS	+6.0	
2020-12-11 05:03:00,644	[DEBUG]	
2020-12-11 05:03:01,565	[INFO]	262	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:03:02,539	[INFO]	263	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:03:03,504	[INFO]	264	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:03:04,438	[INFO]	265	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:03:05,411	[INFO]	266	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:03:06,437	[INFO]	267	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:03:07,375	[INFO]	268	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:03:08,342	[INFO]	269	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:03:09,300	[INFO]	270	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:03:10,302	[INFO]	271	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:03:11,265	[INFO]	272	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:03:12,244	[INFO]	273	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:03:15,515	[INFO]	274	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:03:15,516	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 05:03:15,517	[INFO]	275	SUCCESS	+6.0	
2020-12-11 05:03:15,517	[DEBUG]	
2020-12-11 05:03:16,441	[INFO]	276	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:03:17,381	[INFO]	277	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:03:18,315	[INFO]	278	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:03:19,279	[INFO]	279	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:03:19,283	[INFO]	280	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:03:19,284	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 05:03:19,286	[INFO]	281	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:03:19,287	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 05:03:19,289	[INFO]	282	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:03:19,290	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 05:03:19,291	[INFO]	283	SUCCESS	+6.0	
2020-12-11 05:03:19,292	[DEBUG]	
2020-12-11 05:03:20,245	[INFO]	284	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:03:21,182	[INFO]	285	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:03:22,151	[INFO]	286	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:03:25,442	[INFO]	287	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:03:25,443	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 05:03:25,444	[INFO]	288	SUCCESS	+6.0	
2020-12-11 05:03:25,444	[DEBUG]	
2020-12-11 05:03:26,335	[INFO]	289	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:03:27,272	[INFO]	290	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:03:28,254	[INFO]	291	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:03:29,184	[INFO]	292	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:03:32,534	[INFO]	293	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:03:32,535	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,21 ****
--- 16,24 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 05:03:33,435	[INFO]	294	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:03:33,436	[INFO]	295	SUCCESS	+6.0	
2020-12-11 05:03:33,437	[DEBUG]	
2020-12-11 05:03:33,437	[INFO]	296	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:03:33,438	[DEBUG]	
2020-12-11 05:03:33,438	[INFO]	297	SUCCESS	+6.0	
2020-12-11 05:03:33,439	[DEBUG]	
2020-12-11 05:03:36,713	[INFO]	298	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:03:36,714	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:03:37,634	[INFO]	299	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:03:37,635	[INFO]	300	SUCCESS	+6.0	
2020-12-11 05:03:37,635	[DEBUG]	
2020-12-11 05:03:38,573	[INFO]	301	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:03:39,547	[INFO]	302	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:03:40,511	[INFO]	303	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:03:40,514	[INFO]	304	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:03:43,908	[INFO]	305	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:03:43,909	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:03:43,910	[INFO]	306	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:03:43,910	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:03:43,911	[INFO]	307	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:03:43,911	[DEBUG]	
2020-12-11 05:03:43,912	[INFO]	308	SUCCESS	+6.0	
2020-12-11 05:03:43,912	[DEBUG]	
2020-12-11 05:03:44,805	[INFO]	309	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:03:45,774	[INFO]	310	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:03:46,769	[INFO]	311	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:03:49,957	[INFO]	312	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:03:49,958	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 05:03:49,959	[INFO]	313	SUCCESS	+6.0	
2020-12-11 05:03:49,960	[DEBUG]	
2020-12-11 05:03:50,892	[INFO]	314	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:03:54,158	[INFO]	315	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:03:54,159	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 05:03:54,160	[INFO]	316	SUCCESS	+6.0	
2020-12-11 05:03:54,160	[DEBUG]	
2020-12-11 05:03:55,116	[INFO]	317	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:03:56,076	[INFO]	318	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:03:56,995	[INFO]	319	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:03:56,996	[INFO]	320	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:03:57,954	[INFO]	321	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:03:57,956	[INFO]	322	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:03:58,902	[INFO]	323	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:03:58,903	[INFO]	324	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:03:58,904	[DEBUG]	
2020-12-11 05:03:58,904	[INFO]	325	SUCCESS	+6.0	
2020-12-11 05:03:58,905	[DEBUG]	
2020-12-11 05:03:59,876	[INFO]	326	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:04:03,154	[INFO]	327	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:04:03,155	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 05:04:03,156	[INFO]	328	SUCCESS	+6.0	
2020-12-11 05:04:03,156	[DEBUG]	
2020-12-11 05:04:04,067	[INFO]	329	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:04:05,079	[INFO]	330	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:04:06,028	[INFO]	331	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:04:06,030	[INFO]	332	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:04:06,031	[INFO]	333	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:04:09,332	[INFO]	334	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:04:09,333	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 05:04:10,230	[INFO]	335	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:04:10,232	[INFO]	336	SUCCESS	+6.0	
2020-12-11 05:04:10,232	[DEBUG]	
2020-12-11 05:04:11,177	[INFO]	337	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:04:12,124	[INFO]	338	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:04:13,085	[INFO]	339	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:04:14,021	[INFO]	340	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:04:14,022	[INFO]	341	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:04:14,974	[INFO]	342	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:04:15,944	[INFO]	343	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:04:16,889	[INFO]	344	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:04:17,849	[INFO]	345	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:04:18,795	[INFO]	346	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:04:19,741	[INFO]	347	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:04:19,743	[INFO]	348	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:04:23,047	[INFO]	349	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:04:23,048	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 05:04:23,049	[INFO]	350	SUCCESS	+6.0	
2020-12-11 05:04:23,049	[DEBUG]	
2020-12-11 05:04:23,050	[INFO]	351	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:04:23,992	[INFO]	352	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:04:24,929	[INFO]	353	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:04:25,908	[INFO]	354	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:04:26,857	[INFO]	355	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:04:26,858	[INFO]	356	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:04:27,839	[INFO]	357	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:04:28,807	[INFO]	358	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:04:29,812	[INFO]	359	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:04:33,097	[INFO]	360	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:04:33,098	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 05:04:33,099	[INFO]	361	SUCCESS	+6.0	
2020-12-11 05:04:33,099	[DEBUG]	
2020-12-11 05:04:34,015	[INFO]	362	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:04:34,960	[INFO]	363	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:04:38,233	[INFO]	364	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:04:38,233	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 05:04:38,234	[INFO]	365	SUCCESS	+6.0	
2020-12-11 05:04:38,234	[DEBUG]	
2020-12-11 05:04:39,158	[INFO]	366	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:04:40,111	[INFO]	367	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:04:40,112	[INFO]	368	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:04:40,113	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 05:04:41,109	[INFO]	369	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:04:41,112	[INFO]	370	SUCCESS	+6.0	
2020-12-11 05:04:41,112	[DEBUG]	
2020-12-11 05:04:42,089	[INFO]	371	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:04:43,034	[INFO]	372	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:04:43,960	[INFO]	373	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:04:44,901	[INFO]	374	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:04:45,874	[INFO]	375	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:04:46,890	[INFO]	376	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:04:46,894	[INFO]	377	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:04:47,866	[INFO]	378	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:04:48,820	[INFO]	379	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:04:48,824	[INFO]	380	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:04:49,771	[INFO]	381	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:04:50,715	[INFO]	382	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:04:51,704	[INFO]	383	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:04:52,663	[INFO]	384	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:04:53,599	[INFO]	385	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:04:53,600	[INFO]	386	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:04:54,581	[INFO]	387	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:04:55,564	[INFO]	388	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:04:58,871	[INFO]	389	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:04:58,872	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:04:58,873	[INFO]	390	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:04:58,874	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:04:59,789	[INFO]	391	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:05:00,735	[INFO]	392	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:05:00,737	[INFO]	393	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:05:00,738	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:05:00,739	[INFO]	394	SUCCESS	+6.0	
2020-12-11 05:05:00,739	[DEBUG]	
2020-12-11 05:05:01,665	[INFO]	395	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:05:04,998	[INFO]	396	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:05:04,999	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 05:05:05,000	[INFO]	397	SUCCESS	+6.0	
2020-12-11 05:05:05,000	[DEBUG]	
2020-12-11 05:05:05,951	[INFO]	398	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:05:06,884	[INFO]	399	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:05:07,807	[INFO]	400	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:05:07,808	[INFO]	401	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:05:08,756	[INFO]	402	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:05:09,728	[INFO]	403	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:05:10,655	[INFO]	404	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:05:11,602	[INFO]	405	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:05:14,815	[INFO]	406	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:05:14,816	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:05:18,113	[INFO]	407	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:05:18,114	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,24 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
--- 14,25 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 05:05:21,270	[INFO]	408	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:05:21,271	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 05:05:21,272	[INFO]	409	SUCCESS	+6.0	
2020-12-11 05:05:21,272	[DEBUG]	
2020-12-11 05:05:21,273	[INFO]	410	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:05:22,206	[INFO]	411	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:05:23,157	[INFO]	412	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:05:23,158	[INFO]	413	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:05:24,123	[INFO]	414	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:05:27,320	[INFO]	415	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:05:27,321	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 05:05:27,321	[INFO]	416	SUCCESS	+6.0	
2020-12-11 05:05:27,322	[DEBUG]	
2020-12-11 05:05:27,322	[INFO]	417	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:05:28,260	[INFO]	418	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:05:31,576	[INFO]	419	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:05:31,578	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:05:31,579	[INFO]	420	SUCCESS	+6.0	
2020-12-11 05:05:31,579	[DEBUG]	
2020-12-11 05:05:32,529	[INFO]	421	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:05:33,476	[INFO]	422	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:05:34,425	[INFO]	423	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:05:35,564	[INFO]	424	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:05:35,566	[INFO]	425	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:05:35,568	[INFO]	426	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:05:36,627	[INFO]	427	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:05:39,966	[INFO]	428	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:05:39,967	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 05:05:39,968	[INFO]	429	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:05:39,969	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 05:05:40,878	[INFO]	430	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:05:41,811	[INFO]	431	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:05:41,813	[INFO]	432	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:05:41,814	[DEBUG]	
2020-12-11 05:05:41,815	[INFO]	433	SUCCESS	+6.0	
2020-12-11 05:05:41,815	[DEBUG]	
2020-12-11 05:05:42,764	[INFO]	434	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:05:46,028	[INFO]	435	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:05:46,029	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 05:05:46,973	[INFO]	436	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:05:46,974	[INFO]	437	SUCCESS	+6.0	
2020-12-11 05:05:46,974	[DEBUG]	
2020-12-11 05:05:47,937	[INFO]	438	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:05:51,188	[INFO]	439	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:05:51,190	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 05:05:52,126	[INFO]	440	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:05:52,127	[INFO]	441	SUCCESS	+6.0	
2020-12-11 05:05:52,127	[DEBUG]	
2020-12-11 05:05:55,304	[INFO]	442	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:05:55,305	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 05:05:55,306	[INFO]	443	SUCCESS	+6.0	
2020-12-11 05:05:55,306	[DEBUG]	
2020-12-11 05:05:56,248	[INFO]	444	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:05:56,250	[INFO]	445	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:05:56,250	[DEBUG]	
2020-12-11 05:05:57,203	[INFO]	446	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:05:57,207	[INFO]	447	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:05:57,208	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 05:05:58,179	[INFO]	448	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:05:58,180	[INFO]	449	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:05:58,181	[DEBUG]	
2020-12-11 05:05:58,182	[INFO]	450	SUCCESS	+6.0	
2020-12-11 05:05:58,182	[DEBUG]	
2020-12-11 05:06:01,408	[INFO]	451	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:06:01,409	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 05:06:01,410	[INFO]	452	SUCCESS	+6.0	
2020-12-11 05:06:01,410	[DEBUG]	
2020-12-11 05:06:02,360	[INFO]	453	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:06:03,312	[INFO]	454	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:06:04,297	[INFO]	455	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:06:05,300	[INFO]	456	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:06:06,283	[INFO]	457	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:06:06,285	[INFO]	458	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:06:06,285	[DEBUG]	
2020-12-11 05:06:06,286	[INFO]	459	SUCCESS	+6.0	
2020-12-11 05:06:06,287	[DEBUG]	
2020-12-11 05:06:06,288	[INFO]	460	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:06:06,289	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 05:06:06,290	[INFO]	461	SUCCESS	+6.0	
2020-12-11 05:06:06,290	[DEBUG]	
2020-12-11 05:06:07,235	[INFO]	462	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:06:08,201	[INFO]	463	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:06:09,134	[INFO]	464	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:06:12,370	[INFO]	465	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:06:12,372	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 05:06:12,373	[INFO]	466	SUCCESS	+6.0	
2020-12-11 05:06:12,374	[DEBUG]	
2020-12-11 05:06:13,351	[INFO]	467	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:06:14,276	[INFO]	468	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:06:14,277	[INFO]	469	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:06:14,278	[DEBUG]	
2020-12-11 05:06:15,257	[INFO]	470	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:06:15,259	[INFO]	471	SUCCESS	+6.0	
2020-12-11 05:06:15,260	[DEBUG]	
2020-12-11 05:06:16,225	[INFO]	472	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:06:16,228	[INFO]	473	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:06:16,229	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 05:06:17,176	[INFO]	474	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:06:17,178	[INFO]	475	SUCCESS	+6.0	
2020-12-11 05:06:17,178	[DEBUG]	
2020-12-11 05:06:18,121	[INFO]	476	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:06:19,065	[INFO]	477	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:06:19,067	[INFO]	478	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:06:20,054	[INFO]	479	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:06:20,985	[INFO]	480	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:06:21,943	[INFO]	481	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:06:22,879	[INFO]	482	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:06:23,845	[INFO]	483	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:06:24,764	[INFO]	484	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:06:25,700	[INFO]	485	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:06:26,633	[INFO]	486	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:06:29,970	[INFO]	487	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:06:29,971	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:06:29,971	[INFO]	488	SUCCESS	+6.0	
2020-12-11 05:06:29,971	[DEBUG]	
2020-12-11 05:06:30,863	[INFO]	489	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:06:34,187	[INFO]	490	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:06:34,188	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 05:06:35,091	[INFO]	491	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:06:36,018	[INFO]	492	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:06:39,268	[INFO]	493	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:06:39,270	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 05:06:40,185	[INFO]	494	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:06:41,159	[INFO]	495	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:06:41,162	[INFO]	496	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:06:41,163	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 05:06:41,165	[INFO]	497	SUCCESS	+6.0	
2020-12-11 05:06:41,166	[DEBUG]	
2020-12-11 05:06:41,168	[INFO]	498	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:06:42,106	[INFO]	499	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:06:42,107	[INFO]	500	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:06:42,107	[DEBUG]	
2020-12-11 05:06:42,107	[INFO]	==== END ====
2020-12-11 05:06:42,107	[INFO]	Reason: step budget
2020-12-11 05:06:42,108	[INFO]	
2020-12-11 05:06:42,108	[INFO]	========== EPOCH 8 ==========
2020-12-11 05:06:42,108	[INFO]	==== WARMUP ====
2020-12-11 05:06:45,422	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 05:06:45,422	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 05:06:48,568	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 05:06:48,568	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 05:06:51,797	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 05:06:51,797	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 05:06:55,038	[INFO]	INITIAL	SUCCESS	 6.0	
2020-12-11 05:06:55,038	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 05:06:55,039	[INFO]	==== START ====
2020-12-11 05:06:58,238	[INFO]	1	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:06:58,239	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:07:01,466	[INFO]	2	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:07:01,467	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,26 ****
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 15,27 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 05:07:02,396	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:07:02,398	[INFO]	4	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:07:02,400	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:07:03,354	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:07:03,357	[INFO]	6	SUCCESS	+6.0	
2020-12-11 05:07:03,357	[DEBUG]	
2020-12-11 05:07:04,306	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:07:05,289	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:07:06,239	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:07:07,252	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:07:08,201	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:07:09,125	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:07:10,286	[INFO]	13	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:07:11,253	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:07:12,202	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:07:13,144	[INFO]	16	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:07:14,112	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:07:15,084	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:07:16,011	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:07:16,998	[INFO]	20	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:07:17,001	[INFO]	21	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:07:17,969	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:07:21,234	[INFO]	23	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:07:21,234	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,21 ****
--- 16,24 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 05:07:22,183	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:07:23,141	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:07:23,142	[INFO]	26	SUCCESS	+6.0	
2020-12-11 05:07:23,142	[DEBUG]	
2020-12-11 05:07:24,114	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:07:25,072	[INFO]	28	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:07:26,043	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:07:26,975	[INFO]	30	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:07:27,952	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:07:27,954	[INFO]	32	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:07:27,954	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:07:27,955	[INFO]	33	SUCCESS	+6.0	
2020-12-11 05:07:27,955	[DEBUG]	
2020-12-11 05:07:28,896	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:07:28,898	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:07:29,892	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:07:33,198	[INFO]	37	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:07:33,199	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 05:07:34,113	[INFO]	38	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:07:37,415	[INFO]	39	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:07:37,416	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 05:07:37,417	[INFO]	40	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:07:37,417	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 05:07:38,318	[INFO]	41	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:07:38,319	[INFO]	42	SUCCESS	+6.0	
2020-12-11 05:07:38,319	[DEBUG]	
2020-12-11 05:07:39,243	[INFO]	43	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:07:42,489	[INFO]	44	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:07:42,489	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:07:43,449	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:07:44,423	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:07:45,387	[INFO]	47	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:07:46,342	[INFO]	48	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:07:47,296	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:07:47,297	[INFO]	50	SUCCESS	+6.0	
2020-12-11 05:07:47,297	[DEBUG]	
2020-12-11 05:07:48,229	[INFO]	51	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:07:49,202	[INFO]	52	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:07:49,203	[INFO]	53	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:07:49,203	[DEBUG]	
2020-12-11 05:07:50,171	[INFO]	54	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:07:50,174	[INFO]	55	SUCCESS	+6.0	
2020-12-11 05:07:50,175	[DEBUG]	
2020-12-11 05:07:51,096	[INFO]	56	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:07:52,052	[INFO]	57	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:07:55,276	[INFO]	58	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:07:55,276	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 05:07:55,277	[INFO]	59	SUCCESS	+6.0	
2020-12-11 05:07:55,277	[DEBUG]	
2020-12-11 05:07:58,575	[INFO]	60	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:07:58,576	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:07:59,533	[INFO]	61	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:07:59,536	[INFO]	62	SUCCESS	+6.0	
2020-12-11 05:07:59,537	[DEBUG]	
2020-12-11 05:08:00,499	[INFO]	63	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:08:03,746	[INFO]	64	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:08:03,747	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 05:08:03,748	[INFO]	65	SUCCESS	+6.0	
2020-12-11 05:08:03,748	[DEBUG]	
2020-12-11 05:08:07,122	[INFO]	66	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:08:07,123	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
          }
  
          return sorted_arr;

2020-12-11 05:08:08,060	[INFO]	67	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:08:08,061	[INFO]	68	SUCCESS	+6.0	
2020-12-11 05:08:08,061	[DEBUG]	
2020-12-11 05:08:09,054	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:08:10,020	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:08:10,958	[INFO]	71	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:08:10,960	[INFO]	72	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:08:11,897	[INFO]	73	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:08:12,846	[INFO]	74	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:08:13,785	[INFO]	75	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:08:14,748	[INFO]	76	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:08:15,693	[INFO]	77	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:08:16,655	[INFO]	78	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:08:17,608	[INFO]	79	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:08:18,566	[INFO]	80	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:08:21,814	[INFO]	81	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:08:21,814	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:08:21,815	[INFO]	82	SUCCESS	+6.0	
2020-12-11 05:08:21,815	[DEBUG]	
2020-12-11 05:08:21,816	[INFO]	83	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:08:22,755	[INFO]	84	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:08:23,696	[INFO]	85	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:08:24,668	[INFO]	86	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:08:25,635	[INFO]	87	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:08:26,574	[INFO]	88	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:08:27,548	[INFO]	89	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:08:28,527	[INFO]	90	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:08:29,515	[INFO]	91	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:08:30,456	[INFO]	92	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:08:31,375	[INFO]	93	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:08:32,345	[INFO]	94	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:08:33,312	[INFO]	95	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:08:33,314	[INFO]	96	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:08:34,246	[INFO]	97	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:08:35,207	[INFO]	98	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:08:38,436	[INFO]	99	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:08:38,437	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 05:08:38,438	[INFO]	100	SUCCESS	+6.0	
2020-12-11 05:08:38,438	[DEBUG]	
2020-12-11 05:08:41,742	[INFO]	101	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:08:41,744	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 05:08:41,745	[INFO]	102	SUCCESS	+6.0	
2020-12-11 05:08:41,746	[DEBUG]	
2020-12-11 05:08:42,728	[INFO]	103	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:08:46,019	[INFO]	104	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:08:46,020	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 05:08:46,975	[INFO]	105	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:08:46,976	[INFO]	106	SUCCESS	+6.0	
2020-12-11 05:08:46,976	[DEBUG]	
2020-12-11 05:08:47,936	[INFO]	107	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:08:48,910	[INFO]	108	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:08:49,847	[INFO]	109	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:08:49,848	[INFO]	110	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:08:50,787	[INFO]	111	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:08:51,773	[INFO]	112	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:08:52,712	[INFO]	113	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:08:53,672	[INFO]	114	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:08:56,979	[INFO]	115	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:08:56,981	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,27 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 05:08:56,983	[INFO]	116	SUCCESS	+6.0	
2020-12-11 05:08:56,983	[DEBUG]	
2020-12-11 05:08:56,985	[INFO]	117	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:08:56,987	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:08:56,988	[INFO]	119	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:08:56,989	[DEBUG]	
2020-12-11 05:08:56,990	[INFO]	120	SUCCESS	+6.0	
2020-12-11 05:08:56,991	[DEBUG]	
2020-12-11 05:09:00,354	[INFO]	121	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:09:00,355	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 05:09:03,551	[INFO]	122	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:09:03,553	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
--- 20,30 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
  	    i++;
          }
  

2020-12-11 05:09:03,555	[INFO]	123	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:09:03,556	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 05:09:04,490	[INFO]	124	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:09:04,491	[INFO]	125	SUCCESS	+6.0	
2020-12-11 05:09:04,491	[DEBUG]	
2020-12-11 05:09:05,482	[INFO]	126	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:09:05,485	[INFO]	127	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:09:06,443	[INFO]	128	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:09:07,379	[INFO]	129	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:09:10,584	[INFO]	130	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:09:10,585	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 05:09:10,585	[INFO]	131	SUCCESS	+6.0	
2020-12-11 05:09:10,586	[DEBUG]	
2020-12-11 05:09:11,556	[INFO]	132	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:09:12,509	[INFO]	133	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:09:13,479	[INFO]	134	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:09:13,483	[INFO]	135	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:09:13,484	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 05:09:13,485	[INFO]	136	SUCCESS	+6.0	
2020-12-11 05:09:13,486	[DEBUG]	
2020-12-11 05:09:14,431	[INFO]	137	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:09:15,389	[INFO]	138	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:09:15,390	[INFO]	139	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:09:15,390	[DEBUG]	
2020-12-11 05:09:16,362	[INFO]	140	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:09:16,364	[INFO]	141	SUCCESS	+6.0	
2020-12-11 05:09:16,365	[DEBUG]	
2020-12-11 05:09:16,367	[INFO]	142	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:09:17,322	[INFO]	143	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:09:18,273	[INFO]	144	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:09:19,210	[INFO]	145	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:09:20,162	[INFO]	146	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:09:23,485	[INFO]	147	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:09:23,486	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,34 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:09:24,398	[INFO]	148	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:09:24,399	[INFO]	149	SUCCESS	+6.0	
2020-12-11 05:09:24,399	[DEBUG]	
2020-12-11 05:09:27,595	[INFO]	150	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:09:27,595	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 05:09:28,564	[INFO]	151	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:09:28,566	[INFO]	152	SUCCESS	+6.0	
2020-12-11 05:09:28,567	[DEBUG]	
2020-12-11 05:09:28,568	[INFO]	153	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:09:28,569	[DEBUG]	
2020-12-11 05:09:28,570	[INFO]	154	SUCCESS	+6.0	
2020-12-11 05:09:28,571	[DEBUG]	
2020-12-11 05:09:29,527	[INFO]	155	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:09:32,825	[INFO]	156	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:09:32,826	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,27 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 05:09:32,827	[INFO]	157	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:09:32,827	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,27 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 05:09:36,044	[INFO]	158	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:09:36,046	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,24 ****
--- 14,28 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 05:09:36,047	[INFO]	159	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:09:36,047	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,27 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 05:09:36,979	[INFO]	160	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:09:36,980	[INFO]	161	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:09:36,980	[DEBUG]	
2020-12-11 05:09:36,981	[INFO]	162	SUCCESS	+6.0	
2020-12-11 05:09:36,981	[DEBUG]	
2020-12-11 05:09:37,940	[INFO]	163	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:09:38,910	[INFO]	164	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:09:39,855	[INFO]	165	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:09:40,801	[INFO]	166	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:09:44,034	[INFO]	167	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:09:44,035	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 05:09:44,960	[INFO]	168	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:09:44,961	[INFO]	169	SUCCESS	+6.0	
2020-12-11 05:09:44,961	[DEBUG]	
2020-12-11 05:09:45,915	[INFO]	170	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:09:46,868	[INFO]	171	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:09:47,825	[INFO]	172	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:09:48,803	[INFO]	173	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:09:49,754	[INFO]	174	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:09:50,735	[INFO]	175	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:09:51,640	[INFO]	176	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:09:52,585	[INFO]	177	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:09:55,874	[INFO]	178	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:09:55,876	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 05:09:55,877	[INFO]	179	SUCCESS	+6.0	
2020-12-11 05:09:55,877	[DEBUG]	
2020-12-11 05:09:56,795	[INFO]	180	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:09:57,724	[INFO]	181	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:09:58,678	[INFO]	182	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:09:58,679	[INFO]	183	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:09:58,680	[INFO]	184	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:09:59,660	[INFO]	185	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:10:00,627	[INFO]	186	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:10:01,552	[INFO]	187	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:10:02,492	[INFO]	188	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:10:03,460	[INFO]	189	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:10:06,744	[INFO]	190	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:10:06,745	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 05:10:07,694	[INFO]	191	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:10:07,697	[INFO]	192	SUCCESS	+6.0	
2020-12-11 05:10:07,697	[DEBUG]	
2020-12-11 05:10:11,014	[INFO]	193	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:10:11,015	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,34 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:10:11,015	[INFO]	194	SUCCESS	+6.0	
2020-12-11 05:10:11,015	[DEBUG]	
2020-12-11 05:10:11,951	[INFO]	195	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:10:12,904	[INFO]	196	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:10:13,834	[INFO]	197	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:10:14,781	[INFO]	198	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:10:18,221	[INFO]	199	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:10:18,222	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 05:10:18,223	[INFO]	200	SUCCESS	+6.0	
2020-12-11 05:10:18,223	[DEBUG]	
2020-12-11 05:10:19,152	[INFO]	201	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:10:20,090	[INFO]	202	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:10:21,018	[INFO]	203	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:10:21,965	[INFO]	204	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:10:22,927	[INFO]	205	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:10:23,881	[INFO]	206	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:10:24,860	[INFO]	207	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:10:25,849	[INFO]	208	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:10:26,789	[INFO]	209	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:10:27,723	[INFO]	210	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:10:28,674	[INFO]	211	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:10:29,683	[INFO]	212	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:10:29,684	[INFO]	213	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:10:29,685	[DEBUG]	
2020-12-11 05:10:29,685	[INFO]	214	SUCCESS	+6.0	
2020-12-11 05:10:29,685	[DEBUG]	
2020-12-11 05:10:30,656	[INFO]	215	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:10:31,596	[INFO]	216	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:10:32,582	[INFO]	217	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:10:33,536	[INFO]	218	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:10:34,453	[INFO]	219	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:10:35,623	[INFO]	220	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:10:36,946	[INFO]	221	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:10:40,956	[INFO]	222	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:10:40,957	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 05:10:42,190	[INFO]	223	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:10:42,191	[INFO]	224	SUCCESS	+6.0	
2020-12-11 05:10:42,192	[DEBUG]	
2020-12-11 05:10:43,411	[INFO]	225	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:10:44,691	[INFO]	226	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:10:45,642	[INFO]	227	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:10:46,863	[INFO]	228	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:10:46,864	[INFO]	229	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:10:46,864	[DEBUG]	
2020-12-11 05:10:46,865	[INFO]	230	SUCCESS	+6.0	
2020-12-11 05:10:46,865	[DEBUG]	
2020-12-11 05:10:48,002	[INFO]	231	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:10:48,987	[INFO]	232	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:10:49,967	[INFO]	233	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:10:53,188	[INFO]	234	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:10:53,189	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 05:10:53,189	[INFO]	235	SUCCESS	+6.0	
2020-12-11 05:10:53,190	[DEBUG]	
2020-12-11 05:10:54,132	[INFO]	236	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:10:55,102	[INFO]	237	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:10:55,103	[INFO]	238	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:10:56,043	[INFO]	239	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:10:56,980	[INFO]	240	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:11:00,349	[INFO]	241	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:11:00,350	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:11:01,279	[INFO]	242	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:11:02,239	[INFO]	243	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:11:02,241	[INFO]	244	SUCCESS	+6.0	
2020-12-11 05:11:02,242	[DEBUG]	
2020-12-11 05:11:03,214	[INFO]	245	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:11:04,151	[INFO]	246	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:11:05,117	[INFO]	247	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:11:06,049	[INFO]	248	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:11:06,996	[INFO]	249	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:11:07,970	[INFO]	250	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:11:07,972	[INFO]	251	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:11:07,972	[INFO]	252	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:11:07,973	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:11:07,974	[INFO]	253	SUCCESS	+6.0	
2020-12-11 05:11:07,974	[DEBUG]	
2020-12-11 05:11:11,225	[INFO]	254	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:11:11,227	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 05:11:11,231	[INFO]	255	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:11:11,232	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 05:11:11,234	[INFO]	256	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:11:11,235	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 05:11:11,236	[INFO]	257	SUCCESS	+6.0	
2020-12-11 05:11:11,237	[DEBUG]	
2020-12-11 05:11:12,318	[INFO]	258	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:11:15,567	[INFO]	259	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:11:15,569	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 05:11:15,570	[INFO]	260	SUCCESS	+6.0	
2020-12-11 05:11:15,571	[DEBUG]	
2020-12-11 05:11:16,501	[INFO]	261	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:11:17,465	[INFO]	262	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:11:17,468	[INFO]	263	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:11:20,743	[INFO]	264	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:11:20,744	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 05:11:20,744	[INFO]	265	SUCCESS	+6.0	
2020-12-11 05:11:20,745	[DEBUG]	
2020-12-11 05:11:21,654	[INFO]	266	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:11:22,602	[INFO]	267	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:11:23,575	[INFO]	268	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:11:24,535	[INFO]	269	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:11:25,472	[INFO]	270	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:11:25,473	[INFO]	271	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:11:28,820	[INFO]	272	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:11:28,821	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:11:29,749	[INFO]	273	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:11:29,750	[INFO]	274	SUCCESS	+6.0	
2020-12-11 05:11:29,750	[DEBUG]	
2020-12-11 05:11:30,686	[INFO]	275	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:11:31,646	[INFO]	276	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:11:34,896	[INFO]	277	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:11:34,897	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:11:35,846	[INFO]	278	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:11:35,849	[INFO]	279	SUCCESS	+6.0	
2020-12-11 05:11:35,850	[DEBUG]	
2020-12-11 05:11:36,784	[INFO]	280	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:11:36,785	[INFO]	281	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:11:37,759	[INFO]	282	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:11:38,703	[INFO]	283	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:11:39,663	[INFO]	284	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:11:40,627	[INFO]	285	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:11:40,631	[INFO]	286	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:11:41,601	[INFO]	287	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:11:44,934	[INFO]	288	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:11:44,935	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 05:11:45,865	[INFO]	289	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:11:45,866	[INFO]	290	SUCCESS	+6.0	
2020-12-11 05:11:45,866	[DEBUG]	
2020-12-11 05:11:46,831	[INFO]	291	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:11:50,097	[INFO]	292	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:11:50,098	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 05:11:51,039	[INFO]	293	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:11:51,040	[INFO]	294	SUCCESS	+6.0	
2020-12-11 05:11:51,040	[DEBUG]	
2020-12-11 05:11:51,986	[INFO]	295	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:11:52,913	[INFO]	296	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:11:53,877	[INFO]	297	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:11:54,838	[INFO]	298	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:11:55,770	[INFO]	299	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:11:56,720	[INFO]	300	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:11:57,651	[INFO]	301	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:11:58,622	[INFO]	302	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:11:59,552	[INFO]	303	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:12:00,516	[INFO]	304	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:12:03,788	[INFO]	305	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:12:03,789	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:12:03,790	[INFO]	306	SUCCESS	+6.0	
2020-12-11 05:12:03,790	[DEBUG]	
2020-12-11 05:12:04,704	[INFO]	307	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:12:04,706	[INFO]	308	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:12:05,676	[INFO]	309	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:12:09,085	[INFO]	310	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:12:09,087	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 05:12:09,965	[INFO]	311	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:12:10,884	[INFO]	312	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:12:10,885	[INFO]	313	SUCCESS	+6.0	
2020-12-11 05:12:10,885	[DEBUG]	
2020-12-11 05:12:11,825	[INFO]	314	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:12:12,795	[INFO]	315	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:12:13,751	[INFO]	316	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:12:17,049	[INFO]	317	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:12:17,050	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 05:12:17,051	[INFO]	318	SUCCESS	+6.0	
2020-12-11 05:12:17,052	[DEBUG]	
2020-12-11 05:12:17,991	[INFO]	319	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:12:18,947	[INFO]	320	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:12:19,893	[INFO]	321	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:12:19,894	[INFO]	322	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:12:20,866	[INFO]	323	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:12:21,870	[INFO]	324	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:12:22,828	[INFO]	325	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:12:23,784	[INFO]	326	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:12:24,751	[INFO]	327	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:12:28,019	[INFO]	328	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:12:28,019	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:12:31,230	[INFO]	329	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:12:31,231	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,28 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 14,25 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 05:12:31,232	[INFO]	330	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:12:31,233	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:12:31,234	[INFO]	331	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:12:31,234	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:12:31,235	[INFO]	332	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:12:31,236	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:12:31,236	[INFO]	333	SUCCESS	+6.0	
2020-12-11 05:12:31,236	[DEBUG]	
2020-12-11 05:12:31,237	[INFO]	334	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:12:31,238	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 05:12:31,238	[INFO]	335	SUCCESS	+6.0	
2020-12-11 05:12:31,239	[DEBUG]	
2020-12-11 05:12:32,194	[INFO]	336	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:12:35,361	[INFO]	337	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:12:35,361	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 05:12:36,299	[INFO]	338	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:12:36,300	[INFO]	339	SUCCESS	+6.0	
2020-12-11 05:12:36,300	[DEBUG]	
2020-12-11 05:12:39,515	[INFO]	340	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:12:39,516	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:12:39,517	[INFO]	341	SUCCESS	+6.0	
2020-12-11 05:12:39,517	[DEBUG]	
2020-12-11 05:12:40,463	[INFO]	342	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:12:41,442	[INFO]	343	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:12:42,389	[INFO]	344	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:12:42,390	[INFO]	345	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:12:45,606	[INFO]	346	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:12:45,607	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 05:12:45,608	[INFO]	347	SUCCESS	+6.0	
2020-12-11 05:12:45,608	[DEBUG]	
2020-12-11 05:12:45,609	[INFO]	348	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:12:45,610	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 05:12:46,566	[INFO]	349	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:12:49,844	[INFO]	350	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:12:49,846	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,26 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 14,29 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 05:12:49,848	[INFO]	351	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:12:49,849	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:12:49,851	[INFO]	352	SUCCESS	+6.0	
2020-12-11 05:12:49,852	[DEBUG]	
2020-12-11 05:12:50,832	[INFO]	353	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:12:54,082	[INFO]	354	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:12:54,084	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
          }
  
          return sorted_arr;

2020-12-11 05:12:55,038	[INFO]	355	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:12:55,039	[INFO]	356	SUCCESS	+6.0	
2020-12-11 05:12:55,039	[DEBUG]	
2020-12-11 05:12:56,008	[INFO]	357	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:12:56,939	[INFO]	358	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:12:56,940	[INFO]	359	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:12:56,941	[INFO]	360	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:12:57,891	[INFO]	361	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:12:57,892	[INFO]	362	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:12:57,892	[DEBUG]	
2020-12-11 05:12:57,893	[INFO]	363	SUCCESS	+6.0	
2020-12-11 05:12:57,893	[DEBUG]	
2020-12-11 05:12:57,894	[INFO]	364	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:12:57,894	[DEBUG]	
2020-12-11 05:13:01,193	[INFO]	365	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:13:01,194	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 05:13:01,195	[INFO]	366	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:13:01,196	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 05:13:01,196	[INFO]	367	SUCCESS	+6.0	
2020-12-11 05:13:01,197	[DEBUG]	
2020-12-11 05:13:02,146	[INFO]	368	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:13:03,124	[INFO]	369	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:13:04,048	[INFO]	370	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:13:05,003	[INFO]	371	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:13:05,973	[INFO]	372	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:13:06,954	[INFO]	373	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:13:07,971	[INFO]	374	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:13:08,926	[INFO]	375	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:13:09,934	[INFO]	376	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:13:10,930	[INFO]	377	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:13:14,170	[INFO]	378	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:13:14,171	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 05:13:14,171	[INFO]	379	SUCCESS	+6.0	
2020-12-11 05:13:14,172	[DEBUG]	
2020-12-11 05:13:15,103	[INFO]	380	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:13:16,084	[INFO]	381	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:13:17,039	[INFO]	382	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:13:17,041	[INFO]	383	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:13:18,174	[INFO]	384	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:13:21,525	[INFO]	385	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:13:21,526	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 05:13:22,450	[INFO]	386	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:13:23,386	[INFO]	387	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:13:23,388	[INFO]	388	SUCCESS	+6.0	
2020-12-11 05:13:23,389	[DEBUG]	
2020-12-11 05:13:24,357	[INFO]	389	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:13:25,313	[INFO]	390	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:13:26,258	[INFO]	391	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:13:26,259	[INFO]	392	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:13:26,259	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 05:13:27,208	[INFO]	393	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:13:28,164	[INFO]	394	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:13:29,109	[INFO]	395	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:13:30,104	[INFO]	396	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:13:33,353	[INFO]	397	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:13:33,354	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
***************
*** 22,27 ****
--- 22,28 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 05:13:36,616	[INFO]	398	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:13:36,616	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:13:36,617	[INFO]	399	SUCCESS	+6.0	
2020-12-11 05:13:36,618	[DEBUG]	
2020-12-11 05:13:37,558	[INFO]	400	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:13:38,522	[INFO]	401	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:13:38,526	[INFO]	402	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:13:41,880	[INFO]	403	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:13:41,882	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,21 ****
--- 16,24 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 05:13:41,884	[INFO]	404	SUCCESS	+6.0	
2020-12-11 05:13:41,884	[DEBUG]	
2020-12-11 05:13:42,788	[INFO]	405	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:13:43,706	[INFO]	406	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:13:46,968	[INFO]	407	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:13:46,969	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 05:13:47,891	[INFO]	408	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:13:48,857	[INFO]	409	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:13:48,859	[INFO]	410	SUCCESS	+6.0	
2020-12-11 05:13:48,860	[DEBUG]	
2020-12-11 05:13:49,807	[INFO]	411	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:13:50,767	[INFO]	412	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:13:51,716	[INFO]	413	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:13:51,717	[INFO]	414	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:13:51,718	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:13:51,718	[INFO]	415	SUCCESS	+6.0	
2020-12-11 05:13:51,719	[DEBUG]	
2020-12-11 05:13:51,719	[INFO]	416	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:13:51,720	[DEBUG]	
2020-12-11 05:13:52,695	[INFO]	417	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:13:52,696	[INFO]	418	SUCCESS	+6.0	
2020-12-11 05:13:52,696	[DEBUG]	
2020-12-11 05:13:53,630	[INFO]	419	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:13:54,608	[INFO]	420	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:13:55,609	[INFO]	421	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:13:56,562	[INFO]	422	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:13:56,564	[INFO]	423	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:13:56,564	[DEBUG]	
2020-12-11 05:13:57,567	[INFO]	424	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:13:58,494	[INFO]	425	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:13:58,495	[INFO]	426	SUCCESS	+6.0	
2020-12-11 05:13:58,496	[DEBUG]	
2020-12-11 05:13:59,461	[INFO]	427	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:14:00,422	[INFO]	428	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:14:01,381	[INFO]	429	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:14:02,333	[INFO]	430	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:14:03,295	[INFO]	431	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:14:06,521	[INFO]	432	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:14:06,522	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 05:14:06,523	[INFO]	433	SUCCESS	+6.0	
2020-12-11 05:14:06,523	[DEBUG]	
2020-12-11 05:14:09,842	[INFO]	434	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:14:09,843	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 05:14:09,844	[INFO]	435	SUCCESS	+6.0	
2020-12-11 05:14:09,844	[DEBUG]	
2020-12-11 05:14:10,748	[INFO]	436	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:14:14,033	[INFO]	437	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:14:14,033	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 05:14:14,992	[INFO]	438	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:14:15,947	[INFO]	439	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:14:15,948	[INFO]	440	SUCCESS	+6.0	
2020-12-11 05:14:15,949	[DEBUG]	
2020-12-11 05:14:16,911	[INFO]	441	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:14:20,171	[INFO]	442	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:14:20,172	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 05:14:20,173	[INFO]	443	SUCCESS	+6.0	
2020-12-11 05:14:20,174	[DEBUG]	
2020-12-11 05:14:23,371	[INFO]	444	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:14:23,373	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
          }
  
          return sorted_arr;

2020-12-11 05:14:24,326	[INFO]	445	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:14:24,328	[INFO]	446	SUCCESS	+6.0	
2020-12-11 05:14:24,329	[DEBUG]	
2020-12-11 05:14:27,594	[INFO]	447	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:14:27,595	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 05:14:27,596	[INFO]	448	SUCCESS	+6.0	
2020-12-11 05:14:27,596	[DEBUG]	
2020-12-11 05:14:28,503	[INFO]	449	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:14:28,504	[INFO]	450	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:14:28,505	[DEBUG]	
2020-12-11 05:14:28,505	[INFO]	451	SUCCESS	+6.0	
2020-12-11 05:14:28,506	[DEBUG]	
2020-12-11 05:14:28,507	[INFO]	452	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:14:31,837	[INFO]	453	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:14:31,838	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 05:14:31,839	[INFO]	454	SUCCESS	+6.0	
2020-12-11 05:14:31,839	[DEBUG]	
2020-12-11 05:14:31,840	[INFO]	455	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:14:31,840	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 05:14:31,841	[INFO]	456	SUCCESS	+6.0	
2020-12-11 05:14:31,841	[DEBUG]	
2020-12-11 05:14:35,027	[INFO]	457	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:14:35,028	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 05:14:35,963	[INFO]	458	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:14:36,903	[INFO]	459	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:14:36,904	[INFO]	460	SUCCESS	+6.0	
2020-12-11 05:14:36,904	[DEBUG]	
2020-12-11 05:14:37,825	[INFO]	461	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:14:38,807	[INFO]	462	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:14:39,746	[INFO]	463	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:14:43,079	[INFO]	464	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:14:43,080	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:14:43,080	[INFO]	465	SUCCESS	+6.0	
2020-12-11 05:14:43,080	[DEBUG]	
2020-12-11 05:14:44,007	[INFO]	466	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:14:44,960	[INFO]	467	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:14:45,906	[INFO]	468	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:14:46,880	[INFO]	469	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:14:47,849	[INFO]	470	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:14:48,815	[INFO]	471	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:14:49,765	[INFO]	472	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:14:50,709	[INFO]	473	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:14:51,663	[INFO]	474	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:14:52,631	[INFO]	475	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:14:55,932	[INFO]	476	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:14:55,933	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:14:59,163	[INFO]	477	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:14:59,163	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,26 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 14,29 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 05:15:00,040	[INFO]	478	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:15:01,026	[INFO]	479	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:15:01,028	[INFO]	480	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:15:01,028	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:15:02,015	[INFO]	481	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:15:02,018	[INFO]	482	SUCCESS	+6.0	
2020-12-11 05:15:02,019	[DEBUG]	
2020-12-11 05:15:05,374	[INFO]	483	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:15:05,375	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 05:15:05,376	[INFO]	484	SUCCESS	+6.0	
2020-12-11 05:15:05,376	[DEBUG]	
2020-12-11 05:15:05,377	[INFO]	485	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:15:06,295	[INFO]	486	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:15:07,284	[INFO]	487	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:15:08,215	[INFO]	488	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:15:08,217	[INFO]	489	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:15:09,143	[INFO]	490	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:15:09,144	[INFO]	491	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:15:10,097	[INFO]	492	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:15:11,083	[INFO]	493	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:15:12,025	[INFO]	494	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:15:15,269	[INFO]	495	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:15:15,270	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 05:15:16,207	[INFO]	496	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:15:16,208	[INFO]	497	SUCCESS	+6.0	
2020-12-11 05:15:16,209	[DEBUG]	
2020-12-11 05:15:16,210	[INFO]	498	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:15:16,210	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 05:15:17,161	[INFO]	499	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:15:18,134	[INFO]	500	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:15:18,134	[INFO]	==== END ====
2020-12-11 05:15:18,134	[INFO]	Reason: step budget
2020-12-11 05:15:18,135	[INFO]	
2020-12-11 05:15:18,135	[INFO]	========== EPOCH 9 ==========
2020-12-11 05:15:18,135	[INFO]	==== WARMUP ====
2020-12-11 05:15:21,399	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 05:15:21,399	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 05:15:24,614	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 05:15:24,614	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 05:15:27,885	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 05:15:27,885	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 05:15:31,084	[INFO]	INITIAL	SUCCESS	 6.0	
2020-12-11 05:15:31,084	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 05:15:31,084	[INFO]	==== START ====
2020-12-11 05:15:32,041	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:15:33,009	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:15:33,930	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:15:37,306	[INFO]	4	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:15:37,307	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 05:15:37,307	[INFO]	5	SUCCESS	+6.0	
2020-12-11 05:15:37,308	[DEBUG]	
2020-12-11 05:15:38,253	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:15:38,255	[INFO]	7	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:15:38,255	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 05:15:38,256	[INFO]	8	SUCCESS	+6.0	
2020-12-11 05:15:38,256	[DEBUG]	
2020-12-11 05:15:41,564	[INFO]	9	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:15:41,565	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 05:15:41,566	[INFO]	10	SUCCESS	+6.0	
2020-12-11 05:15:41,566	[DEBUG]	
2020-12-11 05:15:44,854	[INFO]	11	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:15:44,856	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 05:15:48,042	[INFO]	12	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:15:48,043	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,25 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
--- 13,24 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 05:15:48,044	[INFO]	13	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:15:48,045	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,25 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
--- 13,24 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 05:15:51,482	[INFO]	14	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:15:51,484	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,26 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 13,27 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 05:15:54,912	[INFO]	15	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:15:54,913	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,26 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 14,29 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 05:15:58,056	[INFO]	16	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:15:58,058	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 05:16:01,292	[INFO]	17	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:16:01,295	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 05:16:01,297	[INFO]	18	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:16:01,298	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 05:16:01,300	[INFO]	19	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:16:01,301	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 05:16:04,638	[INFO]	20	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:16:04,639	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,30 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 05:16:08,014	[INFO]	21	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:16:08,015	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,26 ****
--- 18,33 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 05:16:08,907	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:16:08,909	[INFO]	23	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:16:08,909	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,26 ****
--- 18,33 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 05:16:09,886	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:16:10,817	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:16:11,794	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:16:11,795	[INFO]	27	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:16:11,796	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,30 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 05:16:11,797	[INFO]	28	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:16:11,798	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,30 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 05:16:12,761	[INFO]	29	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:16:12,763	[INFO]	30	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:16:12,763	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 05:16:12,764	[INFO]	31	SUCCESS	+6.0	
2020-12-11 05:16:12,765	[DEBUG]	
2020-12-11 05:16:16,034	[INFO]	32	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:16:16,035	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 05:16:16,036	[INFO]	33	SUCCESS	+6.0	
2020-12-11 05:16:16,036	[DEBUG]	
2020-12-11 05:16:16,980	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:16:17,917	[INFO]	35	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:16:17,918	[INFO]	36	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:16:17,918	[DEBUG]	
2020-12-11 05:16:18,868	[INFO]	37	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:16:18,869	[INFO]	38	SUCCESS	+6.0	
2020-12-11 05:16:18,869	[DEBUG]	
2020-12-11 05:16:19,836	[INFO]	39	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:16:20,803	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:16:21,741	[INFO]	41	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:16:22,695	[INFO]	42	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:16:25,969	[INFO]	43	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:16:25,970	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:16:26,929	[INFO]	44	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:16:26,932	[INFO]	45	SUCCESS	+6.0	
2020-12-11 05:16:26,933	[DEBUG]	
2020-12-11 05:16:30,215	[INFO]	46	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:16:30,216	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 05:16:30,216	[INFO]	47	SUCCESS	+6.0	
2020-12-11 05:16:30,217	[DEBUG]	
2020-12-11 05:16:31,149	[INFO]	48	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:16:32,107	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:16:33,089	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:16:34,020	[INFO]	51	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:16:34,993	[INFO]	52	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:16:35,948	[INFO]	53	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:16:35,950	[INFO]	54	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:16:35,950	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 05:16:35,951	[INFO]	55	SUCCESS	+6.0	
2020-12-11 05:16:35,951	[DEBUG]	
2020-12-11 05:16:36,870	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:16:37,813	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:16:38,795	[INFO]	58	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:16:39,733	[INFO]	59	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:16:40,704	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:16:43,957	[INFO]	61	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:16:43,958	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:16:47,247	[INFO]	62	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:16:47,248	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
***************
*** 24,29 ****
--- 28,37 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:16:48,197	[INFO]	63	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:16:51,457	[INFO]	64	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:16:51,458	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 05:16:54,716	[INFO]	65	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:16:54,717	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,21 ****
--- 16,28 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 05:16:55,628	[INFO]	66	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:16:56,584	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:16:59,866	[INFO]	68	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:16:59,868	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,21 ****
--- 16,24 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 05:17:00,820	[INFO]	69	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:17:01,768	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:17:01,771	[INFO]	71	SUCCESS	+6.0	
2020-12-11 05:17:01,772	[DEBUG]	
2020-12-11 05:17:02,732	[INFO]	72	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:17:03,688	[INFO]	73	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:17:04,628	[INFO]	74	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:17:05,589	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:17:06,571	[INFO]	76	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:17:09,897	[INFO]	77	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:17:09,898	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 05:17:13,146	[INFO]	78	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:17:13,149	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  
***************
*** 23,28 ****
--- 24,33 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 05:17:16,407	[INFO]	79	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:17:16,408	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 05:17:16,408	[INFO]	80	SUCCESS	+6.0	
2020-12-11 05:17:16,409	[DEBUG]	
2020-12-11 05:17:17,319	[INFO]	81	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:17:18,256	[INFO]	82	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:17:19,194	[INFO]	83	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:17:19,196	[INFO]	84	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:17:19,196	[DEBUG]	
2020-12-11 05:17:20,138	[INFO]	85	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:17:20,140	[INFO]	86	SUCCESS	+6.0	
2020-12-11 05:17:20,140	[DEBUG]	
2020-12-11 05:17:21,115	[INFO]	87	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:17:24,443	[INFO]	88	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:17:24,444	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,34 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:17:24,445	[INFO]	89	SUCCESS	+6.0	
2020-12-11 05:17:24,445	[DEBUG]	
2020-12-11 05:17:25,360	[INFO]	90	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:17:26,302	[INFO]	91	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:17:29,572	[INFO]	92	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:17:29,573	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:17:30,496	[INFO]	93	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:17:30,497	[INFO]	94	SUCCESS	+6.0	
2020-12-11 05:17:30,498	[DEBUG]	
2020-12-11 05:17:31,452	[INFO]	95	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:17:32,376	[INFO]	96	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:17:33,319	[INFO]	97	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:17:34,243	[INFO]	98	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:17:37,491	[INFO]	99	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:17:37,493	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 05:17:37,495	[INFO]	100	SUCCESS	+6.0	
2020-12-11 05:17:37,496	[DEBUG]	
2020-12-11 05:17:38,443	[INFO]	101	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:17:39,385	[INFO]	102	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:17:40,333	[INFO]	103	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:17:41,281	[INFO]	104	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:17:42,245	[INFO]	105	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:17:43,201	[INFO]	106	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:17:43,202	[INFO]	107	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:17:43,203	[DEBUG]	
2020-12-11 05:17:46,484	[INFO]	108	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:17:46,484	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 05:17:47,412	[INFO]	109	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:17:47,415	[INFO]	110	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:17:47,416	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 05:17:47,418	[INFO]	111	SUCCESS	+6.0	
2020-12-11 05:17:47,418	[DEBUG]	
2020-12-11 05:17:47,420	[INFO]	112	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:17:47,420	[DEBUG]	
2020-12-11 05:17:48,350	[INFO]	113	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:17:48,351	[INFO]	114	SUCCESS	+6.0	
2020-12-11 05:17:48,351	[DEBUG]	
2020-12-11 05:17:49,291	[INFO]	115	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:17:50,243	[INFO]	116	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:17:51,202	[INFO]	117	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:17:52,153	[INFO]	118	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:17:53,123	[INFO]	119	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:17:53,125	[INFO]	120	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:17:53,126	[DEBUG]	
2020-12-11 05:17:53,127	[INFO]	121	SUCCESS	+6.0	
2020-12-11 05:17:53,128	[DEBUG]	
2020-12-11 05:17:54,061	[INFO]	122	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:17:54,063	[INFO]	123	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:17:54,063	[DEBUG]	
2020-12-11 05:17:55,033	[INFO]	124	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:17:55,036	[INFO]	125	SUCCESS	+6.0	
2020-12-11 05:17:55,037	[DEBUG]	
2020-12-11 05:17:55,988	[INFO]	126	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:17:59,266	[INFO]	127	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:17:59,268	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 05:17:59,270	[INFO]	128	SUCCESS	+6.0	
2020-12-11 05:17:59,271	[DEBUG]	
2020-12-11 05:18:02,511	[INFO]	129	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:18:02,512	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 05:18:03,423	[INFO]	130	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:18:04,360	[INFO]	131	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:18:07,735	[INFO]	132	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:18:07,737	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,25 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
--- 14,26 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 05:18:08,685	[INFO]	133	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:18:08,686	[INFO]	134	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:18:08,687	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 05:18:09,627	[INFO]	135	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:18:09,628	[INFO]	136	SUCCESS	+6.0	
2020-12-11 05:18:09,628	[DEBUG]	
2020-12-11 05:18:10,573	[INFO]	137	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:18:11,536	[INFO]	138	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:18:11,537	[INFO]	139	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:18:11,537	[DEBUG]	
2020-12-11 05:18:11,538	[INFO]	140	SUCCESS	+6.0	
2020-12-11 05:18:11,538	[DEBUG]	
2020-12-11 05:18:14,757	[INFO]	141	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:18:14,758	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
          }
  
          return sorted_arr;

2020-12-11 05:18:14,759	[INFO]	142	SUCCESS	+6.0	
2020-12-11 05:18:14,760	[DEBUG]	
2020-12-11 05:18:14,761	[INFO]	143	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:18:14,761	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 05:18:14,762	[INFO]	144	SUCCESS	+6.0	
2020-12-11 05:18:14,762	[DEBUG]	
2020-12-11 05:18:15,698	[INFO]	145	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:18:16,664	[INFO]	146	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:18:19,946	[INFO]	147	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:18:19,946	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 05:18:19,947	[INFO]	148	SUCCESS	+6.0	
2020-12-11 05:18:19,947	[DEBUG]	
2020-12-11 05:18:20,888	[INFO]	149	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:18:21,842	[INFO]	150	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:18:25,173	[INFO]	151	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:18:25,174	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 05:18:25,174	[INFO]	152	SUCCESS	+6.0	
2020-12-11 05:18:25,175	[DEBUG]	
2020-12-11 05:18:26,111	[INFO]	153	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:18:27,115	[INFO]	154	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:18:28,085	[INFO]	155	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:18:29,062	[INFO]	156	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:18:30,025	[INFO]	157	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:18:30,984	[INFO]	158	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:18:31,959	[INFO]	159	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:18:35,192	[INFO]	160	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:18:35,193	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:18:35,194	[INFO]	161	SUCCESS	+6.0	
2020-12-11 05:18:35,194	[DEBUG]	
2020-12-11 05:18:36,140	[INFO]	162	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:18:36,141	[INFO]	163	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:18:36,141	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
          }
  
          return sorted_arr;

2020-12-11 05:18:36,142	[INFO]	164	SUCCESS	+6.0	
2020-12-11 05:18:36,143	[DEBUG]	
2020-12-11 05:18:36,143	[INFO]	165	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:18:36,144	[DEBUG]	
2020-12-11 05:18:36,145	[INFO]	166	SUCCESS	+6.0	
2020-12-11 05:18:36,145	[DEBUG]	
2020-12-11 05:18:39,418	[INFO]	167	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:18:39,419	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,21 ****
--- 16,24 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 05:18:39,420	[INFO]	168	SUCCESS	+6.0	
2020-12-11 05:18:39,420	[DEBUG]	
2020-12-11 05:18:40,369	[INFO]	169	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:18:43,700	[INFO]	170	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:18:43,702	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:18:43,703	[INFO]	171	SUCCESS	+6.0	
2020-12-11 05:18:43,704	[DEBUG]	
2020-12-11 05:18:44,594	[INFO]	172	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:18:45,533	[INFO]	173	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:18:46,489	[INFO]	174	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:18:47,459	[INFO]	175	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:18:47,461	[INFO]	176	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:18:48,617	[INFO]	177	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:18:49,571	[INFO]	178	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:18:50,512	[INFO]	179	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:18:51,464	[INFO]	180	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:18:52,376	[INFO]	181	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:18:55,642	[INFO]	182	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:18:55,644	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 05:18:56,629	[INFO]	183	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:18:57,605	[INFO]	184	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:18:58,572	[INFO]	185	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:18:59,512	[INFO]	186	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:18:59,513	[INFO]	187	SUCCESS	+6.0	
2020-12-11 05:18:59,513	[DEBUG]	
2020-12-11 05:19:00,436	[INFO]	188	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:19:01,402	[INFO]	189	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:19:02,381	[INFO]	190	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:19:02,383	[INFO]	191	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:19:03,348	[INFO]	192	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:19:03,350	[INFO]	193	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:19:06,739	[INFO]	194	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:19:06,740	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 05:19:06,740	[INFO]	195	SUCCESS	+6.0	
2020-12-11 05:19:06,740	[DEBUG]	
2020-12-11 05:19:06,741	[INFO]	196	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:19:09,923	[INFO]	197	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:19:09,924	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 05:19:10,863	[INFO]	198	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:19:10,865	[INFO]	199	SUCCESS	+6.0	
2020-12-11 05:19:10,865	[DEBUG]	
2020-12-11 05:19:11,810	[INFO]	200	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:19:12,796	[INFO]	201	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:19:13,753	[INFO]	202	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:19:14,768	[INFO]	203	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:19:14,771	[INFO]	204	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:19:14,772	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
          }
  
          return sorted_arr;

2020-12-11 05:19:14,773	[INFO]	205	SUCCESS	+6.0	
2020-12-11 05:19:14,774	[DEBUG]	
2020-12-11 05:19:15,715	[INFO]	206	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:19:16,696	[INFO]	207	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:19:17,624	[INFO]	208	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:19:20,888	[INFO]	209	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:19:20,889	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 05:19:20,890	[INFO]	210	SUCCESS	+6.0	
2020-12-11 05:19:20,890	[DEBUG]	
2020-12-11 05:19:21,813	[INFO]	211	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:19:21,814	[INFO]	212	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:19:21,814	[DEBUG]	
2020-12-11 05:19:21,815	[INFO]	213	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:19:22,766	[INFO]	214	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:19:23,726	[INFO]	215	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:19:24,656	[INFO]	216	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:19:24,657	[INFO]	217	SUCCESS	+6.0	
2020-12-11 05:19:24,657	[DEBUG]	
2020-12-11 05:19:25,635	[INFO]	218	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:19:28,964	[INFO]	219	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:19:28,967	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,21 ****
--- 16,24 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 05:19:28,969	[INFO]	220	SUCCESS	+6.0	
2020-12-11 05:19:28,970	[DEBUG]	
2020-12-11 05:19:29,937	[INFO]	221	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:19:30,874	[INFO]	222	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:19:31,880	[INFO]	223	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:19:32,855	[INFO]	224	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:19:33,776	[INFO]	225	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:19:34,756	[INFO]	226	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:19:34,759	[INFO]	227	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:19:34,760	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 05:19:34,763	[INFO]	228	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:19:34,764	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 05:19:34,765	[INFO]	229	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:19:34,766	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 05:19:34,768	[INFO]	230	SUCCESS	+6.0	
2020-12-11 05:19:34,768	[DEBUG]	
2020-12-11 05:19:35,730	[INFO]	231	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:19:36,674	[INFO]	232	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:19:37,621	[INFO]	233	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:19:38,573	[INFO]	234	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:19:39,546	[INFO]	235	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:19:39,548	[INFO]	236	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:19:40,510	[INFO]	237	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:19:41,496	[INFO]	238	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:19:41,500	[INFO]	239	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:19:42,470	[INFO]	240	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:19:43,412	[INFO]	241	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:19:46,645	[INFO]	242	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:19:46,646	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 05:19:46,647	[INFO]	243	SUCCESS	+6.0	
2020-12-11 05:19:46,648	[DEBUG]	
2020-12-11 05:19:47,571	[INFO]	244	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:19:48,511	[INFO]	245	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:19:49,464	[INFO]	246	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:19:50,425	[INFO]	247	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:19:51,367	[INFO]	248	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:19:54,748	[INFO]	249	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:19:54,749	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,27 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 05:19:54,750	[INFO]	250	SUCCESS	+6.0	
2020-12-11 05:19:54,750	[DEBUG]	
2020-12-11 05:19:55,666	[INFO]	251	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:19:56,622	[INFO]	252	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:19:57,611	[INFO]	253	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:19:58,571	[INFO]	254	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:19:58,572	[INFO]	255	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:19:58,573	[DEBUG]	
2020-12-11 05:19:58,573	[INFO]	256	SUCCESS	+6.0	
2020-12-11 05:19:58,574	[DEBUG]	
2020-12-11 05:19:59,506	[INFO]	257	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:20:00,486	[INFO]	258	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:20:03,709	[INFO]	259	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:20:03,711	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 05:20:03,713	[INFO]	260	SUCCESS	+6.0	
2020-12-11 05:20:03,714	[DEBUG]	
2020-12-11 05:20:03,716	[INFO]	261	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:20:03,717	[DEBUG]	
2020-12-11 05:20:04,623	[INFO]	262	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:20:04,624	[INFO]	263	SUCCESS	+6.0	
2020-12-11 05:20:04,624	[DEBUG]	
2020-12-11 05:20:04,625	[INFO]	264	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:20:05,626	[INFO]	265	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:20:06,559	[INFO]	266	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:20:07,497	[INFO]	267	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:20:08,459	[INFO]	268	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:20:09,437	[INFO]	269	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:20:12,723	[INFO]	270	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:20:12,724	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 05:20:13,637	[INFO]	271	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:20:13,639	[INFO]	272	SUCCESS	+6.0	
2020-12-11 05:20:13,639	[DEBUG]	
2020-12-11 05:20:13,640	[INFO]	273	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:20:14,599	[INFO]	274	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:20:15,544	[INFO]	275	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:20:16,504	[INFO]	276	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:20:17,434	[INFO]	277	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:20:18,412	[INFO]	278	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:20:19,378	[INFO]	279	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:20:20,315	[INFO]	280	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:20:21,315	[INFO]	281	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:20:24,557	[INFO]	282	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:20:24,558	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 05:20:25,487	[INFO]	283	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:20:25,488	[INFO]	284	SUCCESS	+6.0	
2020-12-11 05:20:25,489	[DEBUG]	
2020-12-11 05:20:26,430	[INFO]	285	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:20:27,403	[INFO]	286	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:20:28,326	[INFO]	287	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:20:29,288	[INFO]	288	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:20:29,291	[INFO]	289	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:20:30,278	[INFO]	290	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:20:31,207	[INFO]	291	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:20:31,208	[INFO]	292	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:20:31,209	[DEBUG]	
2020-12-11 05:20:31,209	[INFO]	293	SUCCESS	+6.0	
2020-12-11 05:20:31,209	[DEBUG]	
2020-12-11 05:20:32,176	[INFO]	294	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:20:33,124	[INFO]	295	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:20:36,927	[INFO]	296	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:20:36,928	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 05:20:37,986	[INFO]	297	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:20:37,987	[INFO]	298	SUCCESS	+6.0	
2020-12-11 05:20:37,988	[DEBUG]	
2020-12-11 05:20:39,219	[INFO]	299	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:20:42,705	[INFO]	300	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:20:42,706	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 05:20:42,706	[INFO]	301	SUCCESS	+6.0	
2020-12-11 05:20:42,707	[DEBUG]	
2020-12-11 05:20:46,018	[INFO]	302	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:20:46,018	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 05:20:46,019	[INFO]	303	SUCCESS	+6.0	
2020-12-11 05:20:46,019	[DEBUG]	
2020-12-11 05:20:46,997	[INFO]	304	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:20:50,333	[INFO]	305	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:20:50,334	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 05:20:51,236	[INFO]	306	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:20:51,237	[INFO]	307	SUCCESS	+6.0	
2020-12-11 05:20:51,237	[DEBUG]	
2020-12-11 05:20:51,238	[INFO]	308	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:20:51,238	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 05:20:52,214	[INFO]	309	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:20:53,181	[INFO]	310	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:20:53,182	[INFO]	311	SUCCESS	+6.0	
2020-12-11 05:20:53,182	[DEBUG]	
2020-12-11 05:20:53,183	[INFO]	312	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:20:53,184	[DEBUG]	
2020-12-11 05:20:53,185	[INFO]	313	SUCCESS	+6.0	
2020-12-11 05:20:53,185	[DEBUG]	
2020-12-11 05:20:54,144	[INFO]	314	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:20:55,116	[INFO]	315	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:20:56,075	[INFO]	316	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:20:57,052	[INFO]	317	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:21:00,239	[INFO]	318	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:21:00,240	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 05:21:00,241	[INFO]	319	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:21:00,242	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 05:21:01,181	[INFO]	320	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:21:02,107	[INFO]	321	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:21:03,051	[INFO]	322	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:21:06,425	[INFO]	323	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:21:06,428	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 05:21:07,393	[INFO]	324	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:21:07,395	[INFO]	325	SUCCESS	+6.0	
2020-12-11 05:21:07,396	[DEBUG]	
2020-12-11 05:21:07,398	[INFO]	326	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:21:10,731	[INFO]	327	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:21:10,732	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 05:21:10,733	[INFO]	328	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:21:10,734	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 05:21:10,734	[INFO]	329	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:21:10,735	[DEBUG]	
2020-12-11 05:21:10,735	[INFO]	330	SUCCESS	+6.0	
2020-12-11 05:21:10,736	[DEBUG]	
2020-12-11 05:21:11,680	[INFO]	331	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:21:12,626	[INFO]	332	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:21:13,616	[INFO]	333	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:21:14,557	[INFO]	334	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:21:15,539	[INFO]	335	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:21:16,482	[INFO]	336	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:21:17,414	[INFO]	337	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:21:17,416	[INFO]	338	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:21:18,401	[INFO]	339	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:21:21,675	[INFO]	340	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:21:21,675	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 05:21:24,903	[INFO]	341	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:21:24,904	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,25 ****
--- 18,29 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 05:21:25,825	[INFO]	342	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:21:29,195	[INFO]	343	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:21:29,195	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 05:21:29,196	[INFO]	344	SUCCESS	+6.0	
2020-12-11 05:21:29,196	[DEBUG]	
2020-12-11 05:21:30,140	[INFO]	345	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:21:31,096	[INFO]	346	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:21:32,044	[INFO]	347	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:21:33,018	[INFO]	348	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:21:33,022	[INFO]	349	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:21:33,023	[DEBUG]	
2020-12-11 05:21:34,011	[INFO]	350	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:21:34,013	[INFO]	351	SUCCESS	+6.0	
2020-12-11 05:21:34,014	[DEBUG]	
2020-12-11 05:21:34,967	[INFO]	352	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:21:35,905	[INFO]	353	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:21:36,891	[INFO]	354	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:21:37,911	[INFO]	355	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:21:41,149	[INFO]	356	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:21:41,150	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 05:21:41,150	[INFO]	357	SUCCESS	+6.0	
2020-12-11 05:21:41,151	[DEBUG]	
2020-12-11 05:21:42,110	[INFO]	358	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:21:43,101	[INFO]	359	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:21:44,091	[INFO]	360	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:21:44,093	[INFO]	361	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:21:44,094	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 05:21:44,095	[INFO]	362	SUCCESS	+6.0	
2020-12-11 05:21:44,095	[DEBUG]	
2020-12-11 05:21:45,032	[INFO]	363	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:21:45,979	[INFO]	364	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:21:49,210	[INFO]	365	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:21:49,211	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 05:21:49,212	[INFO]	366	SUCCESS	+6.0	
2020-12-11 05:21:49,212	[DEBUG]	
2020-12-11 05:21:50,135	[INFO]	367	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:21:51,085	[INFO]	368	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:21:51,087	[INFO]	369	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:21:54,367	[INFO]	370	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:21:54,369	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 05:21:54,370	[INFO]	371	SUCCESS	+6.0	
2020-12-11 05:21:54,370	[DEBUG]	
2020-12-11 05:21:55,301	[INFO]	372	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:21:56,267	[INFO]	373	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:21:57,221	[INFO]	374	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:21:58,175	[INFO]	375	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:21:58,178	[INFO]	376	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:21:58,181	[INFO]	377	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:22:01,506	[INFO]	378	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:22:01,507	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 05:22:02,443	[INFO]	379	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:22:05,649	[INFO]	380	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:22:05,651	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,26 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 14,29 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 05:22:08,986	[INFO]	381	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:22:08,988	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 05:22:09,883	[INFO]	382	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:22:10,822	[INFO]	383	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:22:10,823	[INFO]	384	SUCCESS	+6.0	
2020-12-11 05:22:10,824	[DEBUG]	
2020-12-11 05:22:11,793	[INFO]	385	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:22:12,741	[INFO]	386	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:22:13,717	[INFO]	387	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:22:13,720	[INFO]	388	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:22:14,700	[INFO]	389	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:22:15,621	[INFO]	390	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:22:15,622	[INFO]	391	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:22:15,623	[DEBUG]	
2020-12-11 05:22:16,579	[INFO]	392	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:22:16,580	[INFO]	393	SUCCESS	+6.0	
2020-12-11 05:22:16,580	[DEBUG]	
2020-12-11 05:22:17,525	[INFO]	394	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:22:18,497	[INFO]	395	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:22:21,831	[INFO]	396	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:22:21,831	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 05:22:22,800	[INFO]	397	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:22:23,726	[INFO]	398	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:22:23,728	[INFO]	399	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:22:23,728	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 05:22:23,729	[INFO]	400	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:22:23,729	[DEBUG]	
2020-12-11 05:22:27,018	[INFO]	401	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:22:27,020	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:22:27,022	[INFO]	402	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:22:27,022	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:22:27,023	[INFO]	403	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:22:27,024	[DEBUG]	
2020-12-11 05:22:27,025	[INFO]	404	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:22:27,025	[DEBUG]	
2020-12-11 05:22:27,026	[INFO]	405	SUCCESS	+6.0	
2020-12-11 05:22:27,026	[DEBUG]	
2020-12-11 05:22:30,415	[INFO]	406	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:22:30,416	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 05:22:30,417	[INFO]	407	SUCCESS	+6.0	
2020-12-11 05:22:30,418	[DEBUG]	
2020-12-11 05:22:33,576	[INFO]	408	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:22:33,577	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 05:22:33,578	[INFO]	409	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:22:33,578	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 05:22:33,579	[INFO]	410	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:22:33,580	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 05:22:33,581	[INFO]	411	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:22:33,581	[DEBUG]	
2020-12-11 05:22:33,582	[INFO]	412	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:22:33,582	[INFO]	413	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:22:33,583	[DEBUG]	
2020-12-11 05:22:33,583	[INFO]	414	SUCCESS	+6.0	
2020-12-11 05:22:33,584	[DEBUG]	
2020-12-11 05:22:33,584	[INFO]	415	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:22:34,540	[INFO]	416	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:22:34,544	[INFO]	417	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:22:35,512	[INFO]	418	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:22:38,879	[INFO]	419	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:22:38,880	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:22:39,779	[INFO]	420	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:22:39,781	[INFO]	421	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:22:39,782	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:22:39,783	[INFO]	422	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:22:39,783	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:22:39,784	[INFO]	423	SUCCESS	+6.0	
2020-12-11 05:22:39,785	[DEBUG]	
2020-12-11 05:22:40,700	[INFO]	424	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:22:40,701	[INFO]	425	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:22:40,701	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 05:22:41,636	[INFO]	426	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:22:42,586	[INFO]	427	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:22:42,587	[INFO]	428	SUCCESS	+6.0	
2020-12-11 05:22:42,587	[DEBUG]	
2020-12-11 05:22:42,589	[INFO]	429	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:22:42,589	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 05:22:43,550	[INFO]	430	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:22:44,500	[INFO]	431	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:22:44,501	[INFO]	432	SUCCESS	+6.0	
2020-12-11 05:22:44,501	[DEBUG]	
2020-12-11 05:22:47,790	[INFO]	433	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:22:47,791	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:22:47,791	[INFO]	434	SUCCESS	+6.0	
2020-12-11 05:22:47,791	[DEBUG]	
2020-12-11 05:22:48,742	[INFO]	435	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:22:48,745	[INFO]	436	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:22:49,669	[INFO]	437	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:22:50,612	[INFO]	438	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:22:51,554	[INFO]	439	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:22:52,486	[INFO]	440	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:22:53,466	[INFO]	441	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:22:53,467	[INFO]	442	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:22:54,388	[INFO]	443	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:22:55,342	[INFO]	444	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:22:58,583	[INFO]	445	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:22:58,584	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 05:22:59,540	[INFO]	446	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:22:59,543	[INFO]	447	SUCCESS	+6.0	
2020-12-11 05:22:59,543	[DEBUG]	
2020-12-11 05:23:02,876	[INFO]	448	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:23:02,877	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,34 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:23:03,773	[INFO]	449	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:23:03,776	[INFO]	450	SUCCESS	+6.0	
2020-12-11 05:23:03,777	[DEBUG]	
2020-12-11 05:23:04,731	[INFO]	451	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:23:05,719	[INFO]	452	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:23:05,721	[INFO]	453	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:23:05,721	[DEBUG]	
2020-12-11 05:23:05,722	[INFO]	454	SUCCESS	+6.0	
2020-12-11 05:23:05,722	[DEBUG]	
2020-12-11 05:23:08,968	[INFO]	455	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:23:08,969	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 05:23:09,918	[INFO]	456	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:23:09,919	[INFO]	457	SUCCESS	+6.0	
2020-12-11 05:23:09,920	[DEBUG]	
2020-12-11 05:23:10,923	[INFO]	458	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:23:11,881	[INFO]	459	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:23:12,821	[INFO]	460	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:23:16,182	[INFO]	461	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:23:16,182	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 05:23:16,183	[INFO]	462	SUCCESS	+6.0	
2020-12-11 05:23:16,183	[DEBUG]	
2020-12-11 05:23:17,092	[INFO]	463	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:23:18,045	[INFO]	464	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:23:21,277	[INFO]	465	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:23:21,278	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 05:23:21,278	[INFO]	466	SUCCESS	+6.0	
2020-12-11 05:23:21,279	[DEBUG]	
2020-12-11 05:23:22,226	[INFO]	467	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:23:23,179	[INFO]	468	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:23:23,180	[INFO]	469	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:23:23,181	[DEBUG]	
2020-12-11 05:23:24,115	[INFO]	470	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:23:24,117	[INFO]	471	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:23:24,118	[INFO]	472	SUCCESS	+6.0	
2020-12-11 05:23:24,118	[DEBUG]	
2020-12-11 05:23:25,038	[INFO]	473	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:23:26,011	[INFO]	474	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:23:26,973	[INFO]	475	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:23:26,976	[INFO]	476	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:23:26,977	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:23:26,979	[INFO]	477	SUCCESS	+6.0	
2020-12-11 05:23:26,980	[DEBUG]	
2020-12-11 05:23:27,973	[INFO]	478	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:23:28,904	[INFO]	479	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:23:29,891	[INFO]	480	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:23:29,893	[INFO]	481	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:23:29,894	[DEBUG]	
2020-12-11 05:23:30,855	[INFO]	482	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:23:31,821	[INFO]	483	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:23:31,822	[INFO]	484	SUCCESS	+6.0	
2020-12-11 05:23:31,822	[DEBUG]	
2020-12-11 05:23:32,792	[INFO]	485	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:23:33,724	[INFO]	486	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:23:34,700	[INFO]	487	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:23:38,001	[INFO]	488	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:23:38,002	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,27 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 05:23:38,911	[INFO]	489	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:23:38,912	[INFO]	490	SUCCESS	+6.0	
2020-12-11 05:23:38,912	[DEBUG]	
2020-12-11 05:23:39,870	[INFO]	491	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:23:40,817	[INFO]	492	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:23:44,075	[INFO]	493	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:23:44,076	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 05:23:44,997	[INFO]	494	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:23:44,998	[INFO]	495	SUCCESS	+6.0	
2020-12-11 05:23:44,998	[DEBUG]	
2020-12-11 05:23:48,259	[INFO]	496	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:23:48,259	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 05:23:48,260	[INFO]	497	SUCCESS	+6.0	
2020-12-11 05:23:48,260	[DEBUG]	
2020-12-11 05:23:51,381	[INFO]	498	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:23:51,382	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 05:23:51,383	[INFO]	499	SUCCESS	+6.0	
2020-12-11 05:23:51,383	[DEBUG]	
2020-12-11 05:23:52,335	[INFO]	500	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:23:52,336	[INFO]	==== END ====
2020-12-11 05:23:52,336	[INFO]	Reason: step budget
2020-12-11 05:23:52,338	[INFO]	
2020-12-11 05:23:52,338	[INFO]	========== EPOCH 10 ==========
2020-12-11 05:23:52,339	[INFO]	==== WARMUP ====
2020-12-11 05:23:55,661	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 05:23:55,661	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 05:23:58,888	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 05:23:58,889	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 05:24:02,162	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 05:24:02,163	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 05:24:05,394	[INFO]	INITIAL	SUCCESS	 6.0	
2020-12-11 05:24:05,394	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 05:24:05,395	[INFO]	==== START ====
2020-12-11 05:24:06,341	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:24:07,278	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:24:10,608	[INFO]	3	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:24:10,609	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 05:24:10,610	[INFO]	4	SUCCESS	+6.0	
2020-12-11 05:24:10,610	[DEBUG]	
2020-12-11 05:24:11,514	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:24:12,456	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:24:13,437	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:24:14,364	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:24:15,351	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:24:16,282	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:24:17,206	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:24:18,356	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:24:19,326	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:24:19,329	[INFO]	14	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:24:19,330	[DEBUG]	
2020-12-11 05:24:20,290	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:24:23,505	[INFO]	16	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:24:23,506	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 05:24:24,437	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:24:25,501	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:24:25,503	[INFO]	19	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:24:25,503	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 05:24:26,450	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:24:26,452	[INFO]	21	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:24:26,452	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 05:24:26,453	[INFO]	22	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:24:26,453	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 05:24:26,454	[INFO]	23	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:24:26,455	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 05:24:27,441	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:24:27,442	[INFO]	25	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:24:27,442	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 05:24:28,395	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:24:29,352	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:24:29,353	[INFO]	28	SUCCESS	+6.0	
2020-12-11 05:24:29,354	[DEBUG]	
2020-12-11 05:24:30,336	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:24:31,271	[INFO]	30	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:24:31,272	[INFO]	31	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:24:32,204	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:24:32,205	[INFO]	33	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:24:35,480	[INFO]	34	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:24:35,481	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 05:24:35,481	[INFO]	35	SUCCESS	+6.0	
2020-12-11 05:24:35,482	[DEBUG]	
2020-12-11 05:24:38,621	[INFO]	36	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:24:38,622	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 05:24:38,623	[INFO]	37	SUCCESS	+6.0	
2020-12-11 05:24:38,624	[DEBUG]	
2020-12-11 05:24:41,831	[INFO]	38	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:24:41,832	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 05:24:41,833	[INFO]	39	SUCCESS	+6.0	
2020-12-11 05:24:41,833	[DEBUG]	
2020-12-11 05:24:42,769	[INFO]	40	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:24:43,719	[INFO]	41	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:24:44,660	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:24:45,618	[INFO]	43	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:24:46,606	[INFO]	44	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:24:47,542	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:24:48,477	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:24:49,420	[INFO]	47	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:24:50,363	[INFO]	48	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:24:53,567	[INFO]	49	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:24:53,568	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 05:24:53,569	[INFO]	50	SUCCESS	+6.0	
2020-12-11 05:24:53,569	[DEBUG]	
2020-12-11 05:24:54,471	[INFO]	51	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:24:57,695	[INFO]	52	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:24:57,696	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 05:24:58,640	[INFO]	53	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:24:59,631	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:24:59,632	[INFO]	55	SUCCESS	+6.0	
2020-12-11 05:24:59,632	[DEBUG]	
2020-12-11 05:25:02,884	[INFO]	56	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:25:02,885	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 05:25:02,886	[INFO]	57	SUCCESS	+6.0	
2020-12-11 05:25:02,887	[DEBUG]	
2020-12-11 05:25:03,792	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:25:04,722	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:25:05,720	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:25:06,667	[INFO]	61	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:25:07,598	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:25:08,557	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:25:09,517	[INFO]	64	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:25:09,519	[INFO]	65	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:25:10,490	[INFO]	66	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:25:11,421	[INFO]	67	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:25:12,409	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:25:13,330	[INFO]	69	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:25:16,504	[INFO]	70	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:25:16,505	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 05:25:17,447	[INFO]	71	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:25:17,450	[INFO]	72	SUCCESS	+6.0	
2020-12-11 05:25:17,451	[DEBUG]	
2020-12-11 05:25:18,403	[INFO]	73	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:25:18,404	[INFO]	74	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:25:18,405	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 05:25:19,341	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:25:20,312	[INFO]	76	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:25:20,314	[INFO]	77	SUCCESS	+6.0	
2020-12-11 05:25:20,314	[DEBUG]	
2020-12-11 05:25:20,315	[INFO]	78	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:25:20,315	[DEBUG]	
2020-12-11 05:25:20,317	[INFO]	79	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:25:21,273	[INFO]	80	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:25:21,275	[INFO]	81	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:25:21,275	[INFO]	82	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:25:21,276	[DEBUG]	
2020-12-11 05:25:22,265	[INFO]	83	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:25:23,258	[INFO]	84	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:25:26,539	[INFO]	85	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:25:26,540	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 05:25:29,772	[INFO]	86	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:25:29,773	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,26 ****
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 18,29 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 05:25:29,774	[INFO]	87	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:25:29,775	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,26 ****
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 18,29 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 05:25:30,721	[INFO]	88	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:25:33,963	[INFO]	89	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:25:33,964	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,27 ****
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 18,30 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 05:25:34,898	[INFO]	90	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:25:35,969	[INFO]	91	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:25:35,972	[INFO]	92	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:25:35,973	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,26 ****
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 18,29 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 05:25:36,914	[INFO]	93	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:25:37,858	[INFO]	94	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:25:41,117	[INFO]	95	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:25:41,118	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 05:25:41,120	[INFO]	96	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:25:41,120	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 05:25:42,057	[INFO]	97	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:25:45,336	[INFO]	98	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:25:45,337	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,23 ****
--- 14,27 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 05:25:45,338	[INFO]	99	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:25:45,338	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,23 ****
--- 14,27 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 05:25:45,339	[INFO]	100	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:25:45,340	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,23 ****
--- 14,27 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 05:25:48,542	[INFO]	101	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:25:48,543	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,26 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 14,30 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 05:25:51,707	[INFO]	102	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:25:51,708	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,26 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 14,32 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 05:25:51,709	[INFO]	103	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:25:51,710	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,26 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 14,32 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 05:25:52,613	[INFO]	104	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:25:53,581	[INFO]	105	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:25:56,753	[INFO]	106	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:25:56,754	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,28 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
          return sorted_arr;
      }
--- 14,36 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
+ 
+         i++;
  
          return sorted_arr;
      }

2020-12-11 05:25:56,756	[INFO]	107	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:25:56,756	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,26 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 14,32 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 05:25:56,757	[INFO]	108	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:25:56,758	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,26 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 14,32 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 05:25:57,678	[INFO]	109	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:25:57,679	[INFO]	110	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:25:57,680	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,26 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 14,32 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 05:26:00,932	[INFO]	111	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:26:00,933	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,26 ****
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 18,31 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 05:26:01,859	[INFO]	112	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:26:02,814	[INFO]	113	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:26:03,727	[INFO]	114	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:26:06,971	[INFO]	115	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:26:06,972	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,28 ****
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
          return sorted_arr;
      }
--- 18,35 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
+ 
+         i++;
  
          return sorted_arr;
      }

2020-12-11 05:26:10,164	[INFO]	116	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:26:10,164	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,28 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
          return sorted_arr;
      }
--- 20,32 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
+ 
+         i++;
  
          return sorted_arr;
      }

2020-12-11 05:26:13,378	[INFO]	117	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:26:13,379	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:26:13,379	[INFO]	118	SUCCESS	+6.0	
2020-12-11 05:26:13,380	[DEBUG]	
2020-12-11 05:26:14,337	[INFO]	119	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:26:15,267	[INFO]	120	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:26:18,522	[INFO]	121	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:26:18,522	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 05:26:19,697	[INFO]	122	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:26:19,698	[INFO]	123	SUCCESS	+6.0	
2020-12-11 05:26:19,698	[DEBUG]	
2020-12-11 05:26:20,644	[INFO]	124	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:26:21,552	[INFO]	125	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:26:22,506	[INFO]	126	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:26:23,465	[INFO]	127	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:26:23,466	[INFO]	128	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:26:23,467	[DEBUG]	
2020-12-11 05:26:23,467	[INFO]	129	SUCCESS	+6.0	
2020-12-11 05:26:23,467	[DEBUG]	
2020-12-11 05:26:23,468	[INFO]	130	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:26:23,468	[DEBUG]	
2020-12-11 05:26:26,688	[INFO]	131	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:26:26,689	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 05:26:27,616	[INFO]	132	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:26:28,540	[INFO]	133	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:26:28,541	[INFO]	134	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:26:28,541	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 05:26:28,542	[INFO]	135	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:26:28,543	[INFO]	136	SUCCESS	+6.0	
2020-12-11 05:26:28,543	[DEBUG]	
2020-12-11 05:26:28,544	[INFO]	137	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:26:29,543	[INFO]	138	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:26:32,807	[INFO]	139	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:26:32,809	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 05:26:32,810	[INFO]	140	SUCCESS	+6.0	
2020-12-11 05:26:32,811	[DEBUG]	
2020-12-11 05:26:33,746	[INFO]	141	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:26:34,669	[INFO]	142	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:26:35,609	[INFO]	143	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:26:38,830	[INFO]	144	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:26:38,831	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 05:26:39,783	[INFO]	145	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:26:39,786	[INFO]	146	SUCCESS	+6.0	
2020-12-11 05:26:39,787	[DEBUG]	
2020-12-11 05:26:39,789	[INFO]	147	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:26:39,790	[DEBUG]	
2020-12-11 05:26:40,726	[INFO]	148	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:26:41,675	[INFO]	149	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:26:41,676	[INFO]	150	SUCCESS	+6.0	
2020-12-11 05:26:41,676	[DEBUG]	
2020-12-11 05:26:42,638	[INFO]	151	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:26:43,588	[INFO]	152	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:26:44,533	[INFO]	153	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:26:44,534	[INFO]	154	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:26:44,534	[DEBUG]	
2020-12-11 05:26:44,535	[INFO]	155	SUCCESS	+6.0	
2020-12-11 05:26:44,535	[DEBUG]	
2020-12-11 05:26:45,446	[INFO]	156	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:26:46,402	[INFO]	157	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:26:47,356	[INFO]	158	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:26:48,313	[INFO]	159	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:26:49,256	[INFO]	160	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:26:49,257	[INFO]	161	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:26:50,173	[INFO]	162	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:26:51,108	[INFO]	163	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:26:51,109	[INFO]	164	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:26:51,110	[DEBUG]	
2020-12-11 05:26:52,068	[INFO]	165	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:26:55,242	[INFO]	166	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:26:55,243	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 05:26:55,244	[INFO]	167	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:26:55,244	[DEBUG]	
2020-12-11 05:26:56,218	[INFO]	168	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:26:56,220	[INFO]	169	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:26:57,178	[INFO]	170	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:26:58,126	[INFO]	171	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:26:59,084	[INFO]	172	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:26:59,085	[INFO]	173	SUCCESS	+6.0	
2020-12-11 05:26:59,086	[DEBUG]	
2020-12-11 05:27:00,007	[INFO]	174	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:27:00,937	[INFO]	175	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:27:04,138	[INFO]	176	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:27:04,138	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 05:27:04,139	[INFO]	177	SUCCESS	+6.0	
2020-12-11 05:27:04,140	[DEBUG]	
2020-12-11 05:27:05,114	[INFO]	178	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:27:05,117	[INFO]	179	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:27:05,118	[DEBUG]	
2020-12-11 05:27:05,120	[INFO]	180	SUCCESS	+6.0	
2020-12-11 05:27:05,121	[DEBUG]	
2020-12-11 05:27:08,380	[INFO]	181	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:27:08,381	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,21 ****
--- 16,24 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 05:27:09,318	[INFO]	182	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:27:09,319	[INFO]	183	SUCCESS	+6.0	
2020-12-11 05:27:09,319	[DEBUG]	
2020-12-11 05:27:10,239	[INFO]	184	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:27:10,242	[INFO]	185	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:27:10,243	[DEBUG]	
2020-12-11 05:27:10,245	[INFO]	186	SUCCESS	+6.0	
2020-12-11 05:27:10,246	[DEBUG]	
2020-12-11 05:27:11,197	[INFO]	187	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:27:12,137	[INFO]	188	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:27:13,100	[INFO]	189	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:27:14,062	[INFO]	190	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:27:14,066	[INFO]	191	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:27:15,017	[INFO]	192	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:27:15,018	[INFO]	193	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:27:15,019	[DEBUG]	
2020-12-11 05:27:15,019	[INFO]	194	SUCCESS	+6.0	
2020-12-11 05:27:15,020	[DEBUG]	
2020-12-11 05:27:15,951	[INFO]	195	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:27:16,901	[INFO]	196	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:27:17,845	[INFO]	197	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:27:18,789	[INFO]	198	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:27:18,790	[INFO]	199	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:27:18,791	[DEBUG]	
2020-12-11 05:27:18,791	[INFO]	200	SUCCESS	+6.0	
2020-12-11 05:27:18,792	[DEBUG]	
2020-12-11 05:27:18,792	[INFO]	201	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:27:18,793	[INFO]	202	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:27:19,728	[INFO]	203	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:27:22,941	[INFO]	204	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:27:22,942	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 05:27:22,943	[INFO]	205	SUCCESS	+6.0	
2020-12-11 05:27:22,943	[DEBUG]	
2020-12-11 05:27:23,887	[INFO]	206	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:27:24,807	[INFO]	207	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:27:28,009	[INFO]	208	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:27:28,010	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:27:28,956	[INFO]	209	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:27:28,957	[INFO]	210	SUCCESS	+6.0	
2020-12-11 05:27:28,958	[DEBUG]	
2020-12-11 05:27:29,911	[INFO]	211	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:27:30,875	[INFO]	212	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:27:31,840	[INFO]	213	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:27:32,763	[INFO]	214	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:27:33,700	[INFO]	215	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:27:33,701	[INFO]	216	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:27:33,702	[DEBUG]	
2020-12-11 05:27:33,702	[INFO]	217	SUCCESS	+6.0	
2020-12-11 05:27:33,703	[DEBUG]	
2020-12-11 05:27:36,953	[INFO]	218	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:27:36,954	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
          }
  
          return sorted_arr;

2020-12-11 05:27:37,865	[INFO]	219	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:27:37,866	[INFO]	220	SUCCESS	+6.0	
2020-12-11 05:27:37,867	[DEBUG]	
2020-12-11 05:27:41,155	[INFO]	221	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:27:41,156	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,34 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:27:41,157	[INFO]	222	SUCCESS	+6.0	
2020-12-11 05:27:41,157	[DEBUG]	
2020-12-11 05:27:42,087	[INFO]	223	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:27:42,088	[INFO]	224	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:27:42,089	[DEBUG]	
2020-12-11 05:27:42,089	[INFO]	225	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:27:42,090	[INFO]	226	SUCCESS	+6.0	
2020-12-11 05:27:42,090	[DEBUG]	
2020-12-11 05:27:43,054	[INFO]	227	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:27:43,989	[INFO]	228	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:27:44,933	[INFO]	229	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:27:44,934	[INFO]	230	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:27:44,935	[INFO]	231	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:27:48,210	[INFO]	232	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:27:48,210	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:27:51,516	[INFO]	233	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:27:51,517	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:27:51,519	[INFO]	234	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:27:51,520	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:27:51,522	[INFO]	235	SUCCESS	+6.0	
2020-12-11 05:27:51,522	[DEBUG]	
2020-12-11 05:27:54,700	[INFO]	236	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:27:54,703	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 05:27:55,655	[INFO]	237	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:27:56,588	[INFO]	238	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:27:56,590	[INFO]	239	SUCCESS	+6.0	
2020-12-11 05:27:56,590	[DEBUG]	
2020-12-11 05:27:57,542	[INFO]	240	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:27:58,501	[INFO]	241	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:27:59,454	[INFO]	242	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:28:00,396	[INFO]	243	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:28:01,350	[INFO]	244	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:28:01,351	[INFO]	245	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:28:01,352	[DEBUG]	
2020-12-11 05:28:01,353	[INFO]	246	SUCCESS	+6.0	
2020-12-11 05:28:01,353	[DEBUG]	
2020-12-11 05:28:02,294	[INFO]	247	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:28:05,541	[INFO]	248	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:28:05,542	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 05:28:06,488	[INFO]	249	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:28:09,689	[INFO]	250	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:28:09,690	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,26 ****
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 18,29 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 05:28:12,940	[INFO]	251	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:28:12,941	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,28 ****
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
          return sorted_arr;
      }
--- 18,33 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
+ 
+         i++;
  
          return sorted_arr;
      }

2020-12-11 05:28:12,942	[INFO]	252	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:28:12,942	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,26 ****
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 18,29 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 05:28:12,943	[INFO]	253	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:28:12,943	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 05:28:12,944	[INFO]	254	SUCCESS	+6.0	
2020-12-11 05:28:12,944	[DEBUG]	
2020-12-11 05:28:13,863	[INFO]	255	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:28:14,794	[INFO]	256	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:28:15,724	[INFO]	257	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:28:16,709	[INFO]	258	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:28:17,664	[INFO]	259	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:28:18,588	[INFO]	260	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:28:18,590	[INFO]	261	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:28:18,590	[DEBUG]	
2020-12-11 05:28:19,507	[INFO]	262	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:28:22,763	[INFO]	263	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:28:22,764	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 05:28:22,765	[INFO]	264	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:28:22,766	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 05:28:22,766	[INFO]	265	SUCCESS	+6.0	
2020-12-11 05:28:22,766	[DEBUG]	
2020-12-11 05:28:25,920	[INFO]	266	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:28:25,921	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:28:25,922	[INFO]	267	SUCCESS	+6.0	
2020-12-11 05:28:25,922	[DEBUG]	
2020-12-11 05:28:26,852	[INFO]	268	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:28:26,855	[INFO]	269	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:28:26,856	[INFO]	270	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:28:26,856	[DEBUG]	
2020-12-11 05:28:26,857	[INFO]	271	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:28:26,858	[INFO]	272	SUCCESS	+6.0	
2020-12-11 05:28:26,859	[DEBUG]	
2020-12-11 05:28:27,848	[INFO]	273	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:28:28,794	[INFO]	274	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:28:28,797	[INFO]	275	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:28:28,797	[DEBUG]	
2020-12-11 05:28:29,749	[INFO]	276	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:28:29,750	[INFO]	277	SUCCESS	+6.0	
2020-12-11 05:28:29,750	[DEBUG]	
2020-12-11 05:28:30,686	[INFO]	278	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:28:31,608	[INFO]	279	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:28:32,569	[INFO]	280	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:28:33,502	[INFO]	281	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:28:33,504	[INFO]	282	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:28:33,504	[DEBUG]	
2020-12-11 05:28:34,459	[INFO]	283	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:28:34,460	[INFO]	284	SUCCESS	+6.0	
2020-12-11 05:28:34,460	[DEBUG]	
2020-12-11 05:28:37,688	[INFO]	285	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:28:37,689	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,21 ****
--- 16,24 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 05:28:38,636	[INFO]	286	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:28:38,638	[INFO]	287	SUCCESS	+6.0	
2020-12-11 05:28:38,638	[DEBUG]	
2020-12-11 05:28:41,900	[INFO]	288	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:28:41,901	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 05:28:42,833	[INFO]	289	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:28:42,835	[INFO]	290	SUCCESS	+6.0	
2020-12-11 05:28:42,836	[DEBUG]	
2020-12-11 05:28:43,809	[INFO]	291	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:28:44,810	[INFO]	292	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:28:45,783	[INFO]	293	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:28:46,734	[INFO]	294	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:28:47,675	[INFO]	295	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:28:48,616	[INFO]	296	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:28:51,784	[INFO]	297	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:28:51,784	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 05:28:52,725	[INFO]	298	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:28:53,644	[INFO]	299	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:28:56,892	[INFO]	300	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:28:56,893	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,27 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 20,31 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 05:28:56,894	[INFO]	301	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:28:56,894	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 05:28:56,895	[INFO]	302	SUCCESS	+6.0	
2020-12-11 05:28:56,895	[DEBUG]	
2020-12-11 05:28:56,896	[INFO]	303	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:28:56,896	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 05:28:56,897	[INFO]	304	SUCCESS	+6.0	
2020-12-11 05:28:56,897	[DEBUG]	
2020-12-11 05:28:57,813	[INFO]	305	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:28:58,729	[INFO]	306	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:28:59,675	[INFO]	307	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:29:00,677	[INFO]	308	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:29:03,897	[INFO]	309	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:29:03,899	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 05:29:03,901	[INFO]	310	SUCCESS	+6.0	
2020-12-11 05:29:03,902	[DEBUG]	
2020-12-11 05:29:04,828	[INFO]	311	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:29:05,810	[INFO]	312	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:29:08,967	[INFO]	313	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:29:08,968	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 05:29:08,969	[INFO]	314	SUCCESS	+6.0	
2020-12-11 05:29:08,969	[DEBUG]	
2020-12-11 05:29:09,895	[INFO]	315	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:29:10,843	[INFO]	316	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:29:10,844	[INFO]	317	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:29:10,845	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 05:29:10,845	[INFO]	318	SUCCESS	+6.0	
2020-12-11 05:29:10,846	[DEBUG]	
2020-12-11 05:29:11,781	[INFO]	319	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:29:12,728	[INFO]	320	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:29:13,715	[INFO]	321	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:29:14,673	[INFO]	322	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:29:17,843	[INFO]	323	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:29:17,844	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 05:29:17,846	[INFO]	324	SUCCESS	+6.0	
2020-12-11 05:29:17,846	[DEBUG]	
2020-12-11 05:29:18,772	[INFO]	325	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:29:19,724	[INFO]	326	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:29:20,656	[INFO]	327	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:29:21,601	[INFO]	328	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:29:22,554	[INFO]	329	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:29:23,482	[INFO]	330	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:29:24,428	[INFO]	331	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:29:27,767	[INFO]	332	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:29:27,768	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 05:29:27,768	[INFO]	333	SUCCESS	+6.0	
2020-12-11 05:29:27,769	[DEBUG]	
2020-12-11 05:29:27,769	[INFO]	334	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:29:28,685	[INFO]	335	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:29:29,653	[INFO]	336	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:29:30,617	[INFO]	337	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:29:31,562	[INFO]	338	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:29:34,855	[INFO]	339	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:29:34,856	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:29:34,857	[INFO]	340	SUCCESS	+6.0	
2020-12-11 05:29:34,857	[DEBUG]	
2020-12-11 05:29:35,766	[INFO]	341	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:29:38,952	[INFO]	342	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:29:38,953	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,27 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 05:29:38,954	[INFO]	343	SUCCESS	+6.0	
2020-12-11 05:29:38,955	[DEBUG]	
2020-12-11 05:29:39,860	[INFO]	344	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:29:40,848	[INFO]	345	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:29:41,799	[INFO]	346	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:29:42,707	[INFO]	347	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:29:43,633	[INFO]	348	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:29:44,599	[INFO]	349	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:29:47,800	[INFO]	350	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:29:47,801	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 05:29:51,142	[INFO]	351	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:29:51,142	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,28 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 13,23 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 05:29:51,144	[INFO]	352	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:29:51,144	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 05:29:51,145	[INFO]	353	SUCCESS	+6.0	
2020-12-11 05:29:51,145	[DEBUG]	
2020-12-11 05:29:52,050	[INFO]	354	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:29:52,051	[INFO]	355	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:29:52,051	[DEBUG]	
2020-12-11 05:29:52,052	[INFO]	356	SUCCESS	+6.0	
2020-12-11 05:29:52,052	[DEBUG]	
2020-12-11 05:29:52,994	[INFO]	357	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:29:52,995	[INFO]	358	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:29:52,996	[DEBUG]	
2020-12-11 05:29:53,921	[INFO]	359	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:29:54,869	[INFO]	360	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:29:54,870	[INFO]	361	SUCCESS	+6.0	
2020-12-11 05:29:54,870	[DEBUG]	
2020-12-11 05:29:55,820	[INFO]	362	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:29:56,785	[INFO]	363	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:29:57,777	[INFO]	364	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:30:01,031	[INFO]	365	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:30:01,032	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:30:01,032	[INFO]	366	SUCCESS	+6.0	
2020-12-11 05:30:01,032	[DEBUG]	
2020-12-11 05:30:01,973	[INFO]	367	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:30:02,885	[INFO]	368	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:30:03,811	[INFO]	369	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:30:04,773	[INFO]	370	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:30:05,743	[INFO]	371	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:30:06,664	[INFO]	372	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:30:07,603	[INFO]	373	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:30:08,577	[INFO]	374	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:30:09,559	[INFO]	375	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:30:12,853	[INFO]	376	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:30:12,854	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 05:30:12,854	[INFO]	377	SUCCESS	+6.0	
2020-12-11 05:30:12,855	[DEBUG]	
2020-12-11 05:30:16,062	[INFO]	378	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:30:16,063	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 05:30:16,971	[INFO]	379	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:30:17,922	[INFO]	380	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:30:18,866	[INFO]	381	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:30:18,867	[INFO]	382	SUCCESS	+6.0	
2020-12-11 05:30:18,867	[DEBUG]	
2020-12-11 05:30:18,868	[INFO]	383	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:30:19,787	[INFO]	384	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:30:20,720	[INFO]	385	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:30:20,721	[INFO]	386	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:30:21,687	[INFO]	387	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:30:22,634	[INFO]	388	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:30:23,580	[INFO]	389	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:30:24,501	[INFO]	390	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:30:25,424	[INFO]	391	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:30:26,366	[INFO]	392	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:30:27,312	[INFO]	393	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:30:30,605	[INFO]	394	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:30:30,606	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 05:30:31,498	[INFO]	395	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:30:31,500	[INFO]	396	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:30:31,500	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 05:30:31,501	[INFO]	397	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:30:31,502	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 05:30:31,503	[INFO]	398	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:30:31,503	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 05:30:31,504	[INFO]	399	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:30:31,504	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 05:30:31,505	[INFO]	400	SUCCESS	+6.0	
2020-12-11 05:30:31,505	[DEBUG]	
2020-12-11 05:30:32,480	[INFO]	401	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:30:33,400	[INFO]	402	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:30:33,402	[INFO]	403	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:30:34,318	[INFO]	404	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:30:35,417	[INFO]	405	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:30:35,419	[INFO]	406	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:30:35,420	[DEBUG]	
2020-12-11 05:30:35,420	[INFO]	407	SUCCESS	+6.0	
2020-12-11 05:30:35,421	[DEBUG]	
2020-12-11 05:30:36,722	[INFO]	408	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:30:40,761	[INFO]	409	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:30:40,762	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,34 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:30:40,763	[INFO]	410	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:30:40,764	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,34 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:30:40,766	[INFO]	411	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:30:40,766	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,34 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:30:40,767	[INFO]	412	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:30:40,768	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,34 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:30:40,769	[INFO]	413	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:30:40,769	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,34 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:30:42,051	[INFO]	414	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:30:42,053	[INFO]	415	SUCCESS	+6.0	
2020-12-11 05:30:42,053	[DEBUG]	
2020-12-11 05:30:43,233	[INFO]	416	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:30:44,312	[INFO]	417	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:30:44,314	[INFO]	418	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:30:45,315	[INFO]	419	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:30:46,571	[INFO]	420	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:30:46,573	[INFO]	421	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:30:47,705	[INFO]	422	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:30:48,678	[INFO]	423	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:30:49,641	[INFO]	424	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:30:53,189	[INFO]	425	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:30:53,191	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 05:30:53,192	[INFO]	426	SUCCESS	+6.0	
2020-12-11 05:30:53,193	[DEBUG]	
2020-12-11 05:30:53,195	[INFO]	427	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:30:53,196	[INFO]	428	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:30:53,197	[DEBUG]	
2020-12-11 05:30:56,355	[INFO]	429	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:30:56,356	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,27 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 05:30:59,546	[INFO]	430	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:30:59,547	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
      }
--- 19,28 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
+         
  
          return sorted_arr;
      }

2020-12-11 05:31:02,749	[INFO]	431	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:31:02,750	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,28 ****
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
      }
--- 17,32 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
+         
  
          return sorted_arr;
      }

2020-12-11 05:31:02,752	[INFO]	432	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:31:02,753	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,28 ****
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
      }
--- 17,32 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
+         
  
          return sorted_arr;
      }

2020-12-11 05:31:05,949	[INFO]	433	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:31:05,951	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,28 ****
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
! 	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
      }
--- 17,34 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
! 	for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+         
  
          return sorted_arr;
      }

2020-12-11 05:31:06,903	[INFO]	434	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:31:07,820	[INFO]	435	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:31:08,751	[INFO]	436	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:31:09,696	[INFO]	437	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:31:09,698	[INFO]	438	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:31:09,699	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,28 ****
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
! 	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
      }
--- 17,34 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
! 	for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+         
  
          return sorted_arr;
      }

2020-12-11 05:31:09,701	[INFO]	439	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:31:09,701	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,28 ****
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
! 	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
      }
--- 17,34 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
! 	for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+         
  
          return sorted_arr;
      }

2020-12-11 05:31:09,703	[INFO]	440	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:31:09,703	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,28 ****
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
      }
--- 17,32 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
+         
  
          return sorted_arr;
      }

2020-12-11 05:31:09,704	[INFO]	441	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:31:09,705	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,28 ****
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
      }
--- 17,32 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
+         
  
          return sorted_arr;
      }

2020-12-11 05:31:09,707	[INFO]	442	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:31:09,708	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,28 ****
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
      }
--- 17,32 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
+         
  
          return sorted_arr;
      }

2020-12-11 05:31:09,709	[INFO]	443	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:31:09,710	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,28 ****
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
      }
--- 17,32 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
+         
  
          return sorted_arr;
      }

2020-12-11 05:31:09,712	[INFO]	444	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:31:09,713	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,28 ****
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
      }
--- 17,32 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
+         
  
          return sorted_arr;
      }

2020-12-11 05:31:09,714	[INFO]	445	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:31:09,715	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,28 ****
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
      }
--- 17,32 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
+         
  
          return sorted_arr;
      }

2020-12-11 05:31:12,940	[INFO]	446	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:31:12,941	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,28 ****
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
      }
--- 15,33 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
+         }
+ 
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
+         
  
          return sorted_arr;
      }

2020-12-11 05:31:12,942	[INFO]	447	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:31:12,943	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,28 ****
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
      }
--- 15,33 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
+         }
+ 
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
+         
  
          return sorted_arr;
      }

2020-12-11 05:31:12,944	[INFO]	448	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:31:12,945	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,28 ****
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
      }
--- 15,33 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
+         }
+ 
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
+         
  
          return sorted_arr;
      }

2020-12-11 05:31:12,946	[INFO]	449	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:31:12,947	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,28 ****
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
      }
--- 15,33 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
+         }
+ 
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
+         
  
          return sorted_arr;
      }

2020-12-11 05:31:13,875	[INFO]	450	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:31:13,877	[INFO]	451	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:31:13,878	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,28 ****
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
      }
--- 15,33 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
+         }
+ 
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
+         
  
          return sorted_arr;
      }

2020-12-11 05:31:13,879	[INFO]	452	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:31:13,880	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,28 ****
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
      }
--- 17,32 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
+         
  
          return sorted_arr;
      }

2020-12-11 05:31:17,096	[INFO]	453	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:31:17,099	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,28 ****
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 17,29 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 05:31:20,286	[INFO]	454	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:31:20,288	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 05:31:21,180	[INFO]	455	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:31:21,182	[INFO]	456	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:31:21,182	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 05:31:24,463	[INFO]	457	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:31:24,463	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 05:31:24,464	[INFO]	458	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:31:24,465	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 05:31:24,465	[INFO]	459	SUCCESS	+6.0	
2020-12-11 05:31:24,466	[DEBUG]	
2020-12-11 05:31:25,385	[INFO]	460	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:31:28,652	[INFO]	461	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:31:28,653	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:31:29,616	[INFO]	462	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:31:29,617	[INFO]	463	SUCCESS	+6.0	
2020-12-11 05:31:29,618	[DEBUG]	
2020-12-11 05:31:30,561	[INFO]	464	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:31:31,521	[INFO]	465	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:31:32,460	[INFO]	466	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:31:32,462	[INFO]	467	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:31:32,462	[DEBUG]	
2020-12-11 05:31:32,463	[INFO]	468	SUCCESS	+6.0	
2020-12-11 05:31:32,463	[DEBUG]	
2020-12-11 05:31:32,464	[INFO]	469	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:31:32,464	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:31:32,465	[INFO]	470	SUCCESS	+6.0	
2020-12-11 05:31:32,465	[DEBUG]	
2020-12-11 05:31:33,388	[INFO]	471	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:31:34,322	[INFO]	472	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:31:35,253	[INFO]	473	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:31:36,211	[INFO]	474	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:31:37,180	[INFO]	475	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:31:37,182	[INFO]	476	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:31:38,138	[INFO]	477	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:31:39,122	[INFO]	478	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:31:40,045	[INFO]	479	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:31:43,323	[INFO]	480	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:31:43,325	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 05:31:44,283	[INFO]	481	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:31:44,284	[INFO]	482	SUCCESS	+6.0	
2020-12-11 05:31:44,284	[DEBUG]	
2020-12-11 05:31:45,230	[INFO]	483	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:31:46,208	[INFO]	484	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:31:47,180	[INFO]	485	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:31:47,181	[INFO]	486	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:31:47,181	[DEBUG]	
2020-12-11 05:31:48,109	[INFO]	487	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:31:48,111	[INFO]	488	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:31:48,111	[INFO]	489	SUCCESS	+6.0	
2020-12-11 05:31:48,111	[DEBUG]	
2020-12-11 05:31:49,073	[INFO]	490	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:31:49,076	[INFO]	491	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:31:52,280	[INFO]	492	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:31:52,280	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,21 ****
--- 16,24 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 05:31:52,281	[INFO]	493	SUCCESS	+6.0	
2020-12-11 05:31:52,281	[DEBUG]	
2020-12-11 05:31:52,282	[INFO]	494	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:31:52,283	[INFO]	495	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:31:52,284	[DEBUG]	
2020-12-11 05:31:53,238	[INFO]	496	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:31:54,161	[INFO]	497	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:31:55,096	[INFO]	498	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:31:55,099	[INFO]	499	SUCCESS	+6.0	
2020-12-11 05:31:55,100	[DEBUG]	
2020-12-11 05:31:56,067	[INFO]	500	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:31:56,068	[INFO]	==== END ====
2020-12-11 05:31:56,068	[INFO]	Reason: step budget
2020-12-11 05:31:56,069	[INFO]	
2020-12-11 05:31:56,070	[INFO]	========== EPOCH 11 ==========
2020-12-11 05:31:56,071	[INFO]	==== WARMUP ====
2020-12-11 05:31:59,317	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 05:31:59,318	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 05:32:02,527	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 05:32:02,527	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 05:32:05,759	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 05:32:05,760	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 05:32:09,050	[INFO]	INITIAL	SUCCESS	 6.0	
2020-12-11 05:32:09,051	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 05:32:09,051	[INFO]	==== START ====
2020-12-11 05:32:09,965	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:32:10,923	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:32:11,899	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:32:12,857	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:32:13,792	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:32:14,732	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:32:15,664	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:32:16,611	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:32:16,612	[INFO]	9	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:32:16,612	[DEBUG]	
2020-12-11 05:32:16,613	[INFO]	10	SUCCESS	+6.0	
2020-12-11 05:32:16,613	[DEBUG]	
2020-12-11 05:32:17,591	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:32:18,536	[INFO]	12	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:32:21,779	[INFO]	13	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:32:21,780	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:32:21,781	[INFO]	14	SUCCESS	+6.0	
2020-12-11 05:32:21,782	[DEBUG]	
2020-12-11 05:32:22,710	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:32:23,664	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:32:24,614	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:32:27,874	[INFO]	18	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:32:27,875	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
          }
  
          return sorted_arr;

2020-12-11 05:32:27,876	[INFO]	19	SUCCESS	+6.0	
2020-12-11 05:32:27,876	[DEBUG]	
2020-12-11 05:32:28,798	[INFO]	20	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:32:28,802	[INFO]	21	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:32:28,802	[DEBUG]	
2020-12-11 05:32:28,804	[INFO]	22	SUCCESS	+6.0	
2020-12-11 05:32:28,804	[DEBUG]	
2020-12-11 05:32:28,806	[INFO]	23	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:32:28,807	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
          }
  
          return sorted_arr;

2020-12-11 05:32:28,807	[INFO]	24	SUCCESS	+6.0	
2020-12-11 05:32:28,808	[DEBUG]	
2020-12-11 05:32:29,782	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:32:29,784	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:32:29,784	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:32:29,786	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:32:30,756	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:32:31,723	[INFO]	30	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:32:31,727	[INFO]	31	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:32:31,728	[DEBUG]	
2020-12-11 05:32:31,729	[INFO]	32	SUCCESS	+6.0	
2020-12-11 05:32:31,729	[DEBUG]	
2020-12-11 05:32:31,731	[INFO]	33	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:32:34,973	[INFO]	34	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:32:34,974	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,21 ****
--- 16,24 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 05:32:34,975	[INFO]	35	SUCCESS	+6.0	
2020-12-11 05:32:34,975	[DEBUG]	
2020-12-11 05:32:35,878	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:32:36,836	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:32:37,815	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:32:38,754	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:32:39,726	[INFO]	40	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:32:39,728	[INFO]	41	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:32:39,728	[DEBUG]	
2020-12-11 05:32:40,665	[INFO]	42	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:32:40,666	[INFO]	43	SUCCESS	+6.0	
2020-12-11 05:32:40,667	[DEBUG]	
2020-12-11 05:32:41,618	[INFO]	44	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:32:41,621	[INFO]	45	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:32:41,623	[DEBUG]	
2020-12-11 05:32:42,576	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:32:42,578	[INFO]	47	SUCCESS	+6.0	
2020-12-11 05:32:42,578	[DEBUG]	
2020-12-11 05:32:43,507	[INFO]	48	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:32:46,847	[INFO]	49	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:32:46,848	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 05:32:47,730	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:32:50,960	[INFO]	51	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:32:50,961	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,28 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
          }
  
          return sorted_arr;

2020-12-11 05:32:50,962	[INFO]	52	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:32:50,962	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
          }
  
          return sorted_arr;

2020-12-11 05:32:50,963	[INFO]	53	SUCCESS	+6.0	
2020-12-11 05:32:50,963	[DEBUG]	
2020-12-11 05:32:51,884	[INFO]	54	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:32:51,887	[INFO]	55	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:32:55,126	[INFO]	56	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:32:55,127	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 05:32:55,128	[INFO]	57	SUCCESS	+6.0	
2020-12-11 05:32:55,128	[DEBUG]	
2020-12-11 05:32:56,045	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:32:56,975	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:32:57,929	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:32:58,884	[INFO]	61	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:32:59,860	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:33:00,827	[INFO]	63	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:33:01,799	[INFO]	64	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:33:02,752	[INFO]	65	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:33:03,676	[INFO]	66	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:33:07,006	[INFO]	67	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:33:07,007	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:33:07,007	[INFO]	68	SUCCESS	+6.0	
2020-12-11 05:33:07,008	[DEBUG]	
2020-12-11 05:33:07,009	[INFO]	69	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:33:07,009	[DEBUG]	
2020-12-11 05:33:07,902	[INFO]	70	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:33:07,903	[INFO]	71	SUCCESS	+6.0	
2020-12-11 05:33:07,903	[DEBUG]	
2020-12-11 05:33:11,198	[INFO]	72	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:33:11,199	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 05:33:11,200	[INFO]	73	SUCCESS	+6.0	
2020-12-11 05:33:11,200	[DEBUG]	
2020-12-11 05:33:11,201	[INFO]	74	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:33:11,201	[DEBUG]	
2020-12-11 05:33:11,202	[INFO]	75	SUCCESS	+6.0	
2020-12-11 05:33:11,202	[DEBUG]	
2020-12-11 05:33:12,144	[INFO]	76	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:33:15,456	[INFO]	77	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:33:15,457	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,21 ****
--- 16,24 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 05:33:16,386	[INFO]	78	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:33:19,835	[INFO]	79	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:33:19,836	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,27 ****
--- 16,31 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 05:33:20,762	[INFO]	80	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:33:21,706	[INFO]	81	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:33:21,708	[INFO]	82	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:33:21,708	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,21 ****
--- 16,24 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 05:33:21,709	[INFO]	83	SUCCESS	+6.0	
2020-12-11 05:33:21,709	[DEBUG]	
2020-12-11 05:33:24,991	[INFO]	84	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:33:24,991	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:33:25,904	[INFO]	85	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:33:25,906	[INFO]	86	SUCCESS	+6.0	
2020-12-11 05:33:25,907	[DEBUG]	
2020-12-11 05:33:29,095	[INFO]	87	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:33:29,096	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 05:33:29,096	[INFO]	88	SUCCESS	+6.0	
2020-12-11 05:33:29,097	[DEBUG]	
2020-12-11 05:33:30,030	[INFO]	89	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:33:30,997	[INFO]	90	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:33:31,975	[INFO]	91	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:33:32,957	[INFO]	92	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:33:33,898	[INFO]	93	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:33:34,885	[INFO]	94	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:33:34,888	[INFO]	95	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:33:34,889	[DEBUG]	
2020-12-11 05:33:34,890	[INFO]	96	SUCCESS	+6.0	
2020-12-11 05:33:34,891	[DEBUG]	
2020-12-11 05:33:35,825	[INFO]	97	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:33:36,763	[INFO]	98	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:33:37,742	[INFO]	99	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:33:37,745	[INFO]	100	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:33:37,746	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 05:33:37,749	[INFO]	101	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:33:37,751	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 05:33:38,694	[INFO]	102	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:33:39,657	[INFO]	103	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:33:40,605	[INFO]	104	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:33:40,607	[INFO]	105	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:33:40,607	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 05:33:40,608	[INFO]	106	SUCCESS	+6.0	
2020-12-11 05:33:40,608	[DEBUG]	
2020-12-11 05:33:41,526	[INFO]	107	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:33:44,825	[INFO]	108	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:33:44,826	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:33:44,827	[INFO]	109	SUCCESS	+6.0	
2020-12-11 05:33:44,827	[DEBUG]	
2020-12-11 05:33:45,742	[INFO]	110	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:33:45,744	[INFO]	111	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:33:45,744	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:33:45,745	[INFO]	112	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:33:45,746	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:33:45,746	[INFO]	113	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:33:45,747	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:33:46,679	[INFO]	114	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:33:46,680	[INFO]	115	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:33:46,681	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:33:47,615	[INFO]	116	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:33:47,617	[INFO]	117	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:33:47,617	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:33:47,618	[INFO]	118	SUCCESS	+6.0	
2020-12-11 05:33:47,618	[DEBUG]	
2020-12-11 05:33:47,619	[INFO]	119	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:33:47,619	[DEBUG]	
2020-12-11 05:33:47,619	[INFO]	120	SUCCESS	+6.0	
2020-12-11 05:33:47,620	[DEBUG]	
2020-12-11 05:33:48,582	[INFO]	121	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:33:49,524	[INFO]	122	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:33:50,506	[INFO]	123	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:33:51,492	[INFO]	124	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:33:52,398	[INFO]	125	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:33:53,340	[INFO]	126	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:33:54,313	[INFO]	127	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:33:55,255	[INFO]	128	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:33:56,220	[INFO]	129	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:33:57,206	[INFO]	130	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:33:58,181	[INFO]	131	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:33:59,122	[INFO]	132	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:33:59,123	[INFO]	133	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:33:59,123	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 05:34:00,043	[INFO]	134	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:34:00,044	[INFO]	135	SUCCESS	+6.0	
2020-12-11 05:34:00,044	[DEBUG]	
2020-12-11 05:34:00,045	[INFO]	136	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:34:00,046	[DEBUG]	
2020-12-11 05:34:00,046	[INFO]	137	SUCCESS	+6.0	
2020-12-11 05:34:00,047	[DEBUG]	
2020-12-11 05:34:03,345	[INFO]	138	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:34:03,346	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 05:34:04,255	[INFO]	139	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:34:04,257	[INFO]	140	SUCCESS	+6.0	
2020-12-11 05:34:04,258	[DEBUG]	
2020-12-11 05:34:05,222	[INFO]	141	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:34:06,173	[INFO]	142	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:34:06,175	[INFO]	143	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:34:06,176	[INFO]	144	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:34:06,176	[DEBUG]	
2020-12-11 05:34:06,177	[INFO]	145	SUCCESS	+6.0	
2020-12-11 05:34:06,177	[DEBUG]	
2020-12-11 05:34:07,107	[INFO]	146	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:34:08,054	[INFO]	147	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:34:08,055	[INFO]	148	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:34:08,995	[INFO]	149	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:34:12,241	[INFO]	150	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:34:12,242	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 05:34:13,202	[INFO]	151	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:34:13,204	[INFO]	152	SUCCESS	+6.0	
2020-12-11 05:34:13,205	[DEBUG]	
2020-12-11 05:34:14,151	[INFO]	153	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:34:15,116	[INFO]	154	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:34:18,367	[INFO]	155	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:34:18,368	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 05:34:18,368	[INFO]	156	SUCCESS	+6.0	
2020-12-11 05:34:18,369	[DEBUG]	
2020-12-11 05:34:19,295	[INFO]	157	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:34:19,296	[INFO]	158	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:34:20,242	[INFO]	159	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:34:21,202	[INFO]	160	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:34:22,147	[INFO]	161	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:34:22,148	[INFO]	162	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:34:23,101	[INFO]	163	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:34:24,059	[INFO]	164	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:34:24,988	[INFO]	165	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:34:24,990	[INFO]	166	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:34:24,991	[INFO]	167	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:34:24,991	[DEBUG]	
2020-12-11 05:34:25,929	[INFO]	168	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:34:25,930	[INFO]	169	SUCCESS	+6.0	
2020-12-11 05:34:25,930	[DEBUG]	
2020-12-11 05:34:29,173	[INFO]	170	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:34:29,174	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 05:34:29,175	[INFO]	171	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:34:29,176	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 05:34:29,177	[INFO]	172	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:34:30,141	[INFO]	173	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:34:30,143	[INFO]	174	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:34:30,144	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 05:34:30,145	[INFO]	175	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:34:30,145	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 05:34:31,112	[INFO]	176	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:34:32,107	[INFO]	177	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:34:32,111	[INFO]	178	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:34:35,404	[INFO]	179	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:34:35,405	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,24 ****
--- 18,32 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 05:34:36,333	[INFO]	180	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:34:36,336	[INFO]	181	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:34:36,338	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 05:34:37,276	[INFO]	182	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:34:37,277	[INFO]	183	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:34:40,574	[INFO]	184	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:34:40,575	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,26 ****
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 18,31 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 05:34:41,481	[INFO]	185	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:34:41,485	[INFO]	186	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:34:41,487	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,26 ****
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 18,31 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 05:34:41,489	[INFO]	187	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:34:41,490	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 05:34:41,491	[INFO]	188	SUCCESS	+6.0	
2020-12-11 05:34:41,492	[DEBUG]	
2020-12-11 05:34:44,679	[INFO]	189	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:34:44,680	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 05:34:45,612	[INFO]	190	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:34:45,613	[INFO]	191	SUCCESS	+6.0	
2020-12-11 05:34:45,613	[DEBUG]	
2020-12-11 05:34:46,556	[INFO]	192	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:34:47,492	[INFO]	193	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:34:50,694	[INFO]	194	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:34:50,695	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 05:34:50,696	[INFO]	195	SUCCESS	+6.0	
2020-12-11 05:34:50,697	[DEBUG]	
2020-12-11 05:34:53,886	[INFO]	196	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:34:53,886	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 05:34:53,887	[INFO]	197	SUCCESS	+6.0	
2020-12-11 05:34:53,887	[DEBUG]	
2020-12-11 05:34:54,812	[INFO]	198	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:34:55,777	[INFO]	199	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:34:56,738	[INFO]	200	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:34:56,739	[INFO]	201	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:34:57,694	[INFO]	202	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:34:58,628	[INFO]	203	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:34:58,629	[INFO]	204	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:34:58,630	[DEBUG]	
2020-12-11 05:34:58,630	[INFO]	205	SUCCESS	+6.0	
2020-12-11 05:34:58,630	[DEBUG]	
2020-12-11 05:34:59,598	[INFO]	206	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:35:00,545	[INFO]	207	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:35:01,522	[INFO]	208	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:35:02,503	[INFO]	209	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:35:03,454	[INFO]	210	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:35:03,455	[INFO]	211	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:35:04,372	[INFO]	212	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:35:04,374	[INFO]	213	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:35:05,358	[INFO]	214	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:35:05,359	[INFO]	215	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:35:05,360	[DEBUG]	
2020-12-11 05:35:05,360	[INFO]	216	SUCCESS	+6.0	
2020-12-11 05:35:05,360	[DEBUG]	
2020-12-11 05:35:06,342	[INFO]	217	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:35:06,344	[INFO]	218	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:35:06,346	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 05:35:06,348	[INFO]	219	SUCCESS	+6.0	
2020-12-11 05:35:06,349	[DEBUG]	
2020-12-11 05:35:07,322	[INFO]	220	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:35:10,612	[INFO]	221	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:35:10,613	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,21 ****
--- 16,24 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 05:35:13,777	[INFO]	222	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:35:13,778	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,21 ****
--- 16,25 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 05:35:16,971	[INFO]	223	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:35:16,973	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:35:17,953	[INFO]	224	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:35:17,954	[INFO]	225	SUCCESS	+6.0	
2020-12-11 05:35:17,954	[DEBUG]	
2020-12-11 05:35:18,896	[INFO]	226	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:35:19,873	[INFO]	227	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:35:20,825	[INFO]	228	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:35:21,986	[INFO]	229	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:35:22,934	[INFO]	230	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:35:23,900	[INFO]	231	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:35:24,866	[INFO]	232	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:35:25,796	[INFO]	233	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:35:29,024	[INFO]	234	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:35:29,025	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:35:29,026	[INFO]	235	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:35:29,027	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:35:29,028	[INFO]	236	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:35:29,028	[DEBUG]	
2020-12-11 05:35:29,952	[INFO]	237	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:35:30,898	[INFO]	238	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:35:30,899	[INFO]	239	SUCCESS	+6.0	
2020-12-11 05:35:30,900	[DEBUG]	
2020-12-11 05:35:31,879	[INFO]	240	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:35:32,829	[INFO]	241	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:35:33,764	[INFO]	242	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:35:34,769	[INFO]	243	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:35:35,820	[INFO]	244	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:35:36,788	[INFO]	245	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:35:36,789	[INFO]	246	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:35:36,789	[DEBUG]	
2020-12-11 05:35:36,790	[INFO]	247	SUCCESS	+6.0	
2020-12-11 05:35:36,790	[DEBUG]	
2020-12-11 05:35:36,791	[INFO]	248	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:35:37,756	[INFO]	249	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:35:41,070	[INFO]	250	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:35:41,071	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,27 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 05:35:44,303	[INFO]	251	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:35:44,304	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,26 ****
--- 19,30 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
  	    i++;
          }
  

2020-12-11 05:35:45,245	[INFO]	252	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:35:46,221	[INFO]	253	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:35:46,224	[INFO]	254	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:35:46,224	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,27 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 05:35:47,179	[INFO]	255	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:35:48,157	[INFO]	256	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:35:48,158	[INFO]	257	SUCCESS	+6.0	
2020-12-11 05:35:48,159	[DEBUG]	
2020-12-11 05:35:49,124	[INFO]	258	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:35:50,078	[INFO]	259	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:35:51,020	[INFO]	260	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:35:51,972	[INFO]	261	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:35:52,913	[INFO]	262	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:35:53,855	[INFO]	263	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:35:54,809	[INFO]	264	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:35:54,811	[INFO]	265	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:35:54,811	[DEBUG]	
2020-12-11 05:35:54,812	[INFO]	266	SUCCESS	+6.0	
2020-12-11 05:35:54,812	[DEBUG]	
2020-12-11 05:35:55,752	[INFO]	267	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:35:56,715	[INFO]	268	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:35:59,942	[INFO]	269	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:35:59,943	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 05:35:59,945	[INFO]	270	SUCCESS	+6.0	
2020-12-11 05:35:59,945	[DEBUG]	
2020-12-11 05:36:03,184	[INFO]	271	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:36:03,185	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 05:36:04,110	[INFO]	272	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:36:04,111	[INFO]	273	SUCCESS	+6.0	
2020-12-11 05:36:04,112	[DEBUG]	
2020-12-11 05:36:05,067	[INFO]	274	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:36:06,020	[INFO]	275	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:36:06,979	[INFO]	276	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:36:07,939	[INFO]	277	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:36:08,859	[INFO]	278	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:36:09,791	[INFO]	279	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:36:10,781	[INFO]	280	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:36:10,784	[INFO]	281	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:36:11,748	[INFO]	282	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:36:12,697	[INFO]	283	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:36:13,718	[INFO]	284	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:36:14,688	[INFO]	285	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:36:15,616	[INFO]	286	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:36:18,908	[INFO]	287	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:36:18,909	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 05:36:18,910	[INFO]	288	SUCCESS	+6.0	
2020-12-11 05:36:18,910	[DEBUG]	
2020-12-11 05:36:22,138	[INFO]	289	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:36:22,139	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 05:36:23,074	[INFO]	290	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:36:24,044	[INFO]	291	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:36:24,047	[INFO]	292	SUCCESS	+6.0	
2020-12-11 05:36:24,048	[DEBUG]	
2020-12-11 05:36:24,993	[INFO]	293	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:36:25,936	[INFO]	294	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:36:26,879	[INFO]	295	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:36:26,881	[INFO]	296	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:36:27,815	[INFO]	297	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:36:27,816	[INFO]	298	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:36:27,817	[DEBUG]	
2020-12-11 05:36:28,782	[INFO]	299	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:36:29,747	[INFO]	300	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:36:30,695	[INFO]	301	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:36:30,696	[INFO]	302	SUCCESS	+6.0	
2020-12-11 05:36:30,696	[DEBUG]	
2020-12-11 05:36:30,697	[INFO]	303	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:36:31,640	[INFO]	304	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:36:32,555	[INFO]	305	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:36:33,540	[INFO]	306	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:36:34,504	[INFO]	307	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:36:35,458	[INFO]	308	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:36:36,419	[INFO]	309	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:36:37,368	[INFO]	310	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:36:38,359	[INFO]	311	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:36:38,363	[INFO]	312	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:36:39,317	[INFO]	313	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:36:39,320	[INFO]	314	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:36:40,244	[INFO]	315	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:36:41,181	[INFO]	316	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:36:42,153	[INFO]	317	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:36:43,127	[INFO]	318	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:36:44,084	[INFO]	319	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:36:45,025	[INFO]	320	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:36:45,969	[INFO]	321	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:36:49,303	[INFO]	322	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:36:49,305	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
          }
  
          return sorted_arr;

2020-12-11 05:36:49,306	[INFO]	323	SUCCESS	+6.0	
2020-12-11 05:36:49,307	[DEBUG]	
2020-12-11 05:36:52,454	[INFO]	324	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:36:52,455	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:36:52,456	[INFO]	325	SUCCESS	+6.0	
2020-12-11 05:36:52,456	[DEBUG]	
2020-12-11 05:36:52,457	[INFO]	326	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:36:52,458	[INFO]	327	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:36:55,690	[INFO]	328	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:36:55,691	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,34 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:36:56,620	[INFO]	329	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:36:56,622	[INFO]	330	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:36:56,622	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,34 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:36:56,623	[INFO]	331	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:36:56,624	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,34 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:36:57,588	[INFO]	332	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:36:58,591	[INFO]	333	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:37:01,839	[INFO]	334	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:37:01,840	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
***************
*** 24,29 ****
--- 25,35 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:37:01,841	[INFO]	335	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:37:01,841	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
***************
*** 24,29 ****
--- 25,35 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:37:01,842	[INFO]	336	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:37:01,843	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
***************
*** 24,29 ****
--- 25,35 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:37:02,758	[INFO]	337	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:37:02,760	[INFO]	338	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:37:02,761	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
***************
*** 24,29 ****
--- 25,35 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:37:03,697	[INFO]	339	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:37:03,699	[INFO]	340	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:37:03,699	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
***************
*** 24,29 ****
--- 25,35 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:37:03,700	[INFO]	341	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:37:03,701	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
***************
*** 24,29 ****
--- 25,35 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:37:04,677	[INFO]	342	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:37:04,679	[INFO]	343	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:37:04,680	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
***************
*** 24,29 ****
--- 25,35 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:37:05,676	[INFO]	344	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:37:06,622	[INFO]	345	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:37:06,623	[INFO]	346	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:37:06,624	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
***************
*** 24,29 ****
--- 25,35 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:37:06,625	[INFO]	347	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:37:06,625	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
***************
*** 24,29 ****
--- 25,35 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:37:09,880	[INFO]	348	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:37:09,882	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
***************
*** 22,27 ****
--- 23,34 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
+         }
+ 
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 05:37:10,852	[INFO]	349	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:37:14,102	[INFO]	350	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:37:14,103	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
***************
*** 22,27 ****
--- 23,29 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 05:37:17,345	[INFO]	351	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:37:17,348	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
***************
*** 22,27 ****
--- 23,30 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 05:37:20,549	[INFO]	352	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:37:20,551	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,29 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 05:37:23,845	[INFO]	353	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:37:23,846	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 05:37:27,141	[INFO]	354	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:37:27,142	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
--- 20,30 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
  	    i++;
          }
  

2020-12-11 05:37:30,449	[INFO]	355	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:37:30,450	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 05:37:30,451	[INFO]	356	SUCCESS	+6.0	
2020-12-11 05:37:30,451	[DEBUG]	
2020-12-11 05:37:31,365	[INFO]	357	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:37:32,311	[INFO]	358	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:37:33,292	[INFO]	359	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:37:34,238	[INFO]	360	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:37:35,166	[INFO]	361	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:37:38,499	[INFO]	362	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:37:38,500	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 05:37:38,501	[INFO]	363	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:37:38,501	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 05:37:38,502	[INFO]	364	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:37:38,502	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 05:37:39,434	[INFO]	365	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:37:39,438	[INFO]	366	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:37:39,440	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 05:37:39,441	[INFO]	367	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:37:39,442	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 05:37:40,360	[INFO]	368	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:37:41,342	[INFO]	369	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:37:44,555	[INFO]	370	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:37:44,556	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,25 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
--- 14,26 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 05:37:47,813	[INFO]	371	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:37:47,814	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:37:48,740	[INFO]	372	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:37:48,741	[INFO]	373	SUCCESS	+6.0	
2020-12-11 05:37:48,741	[DEBUG]	
2020-12-11 05:37:49,697	[INFO]	374	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:37:50,655	[INFO]	375	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:37:50,657	[INFO]	376	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:37:51,577	[INFO]	377	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:37:52,522	[INFO]	378	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:37:52,524	[INFO]	379	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:37:52,524	[DEBUG]	
2020-12-11 05:37:53,508	[INFO]	380	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:37:53,511	[INFO]	381	SUCCESS	+6.0	
2020-12-11 05:37:53,512	[DEBUG]	
2020-12-11 05:37:54,479	[INFO]	382	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:37:57,822	[INFO]	383	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:37:57,823	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:37:57,823	[INFO]	384	SUCCESS	+6.0	
2020-12-11 05:37:57,823	[DEBUG]	
2020-12-11 05:37:58,727	[INFO]	385	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:38:01,999	[INFO]	386	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:38:02,000	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 05:38:02,000	[INFO]	387	SUCCESS	+6.0	
2020-12-11 05:38:02,001	[DEBUG]	
2020-12-11 05:38:02,924	[INFO]	388	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:38:03,855	[INFO]	389	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:38:04,797	[INFO]	390	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:38:04,798	[INFO]	391	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:38:04,799	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,34 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:38:04,799	[INFO]	392	SUCCESS	+6.0	
2020-12-11 05:38:04,799	[DEBUG]	
2020-12-11 05:38:04,800	[INFO]	393	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:38:04,801	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 05:38:04,801	[INFO]	394	SUCCESS	+6.0	
2020-12-11 05:38:04,801	[DEBUG]	
2020-12-11 05:38:04,802	[INFO]	395	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:38:04,802	[DEBUG]	
2020-12-11 05:38:05,802	[INFO]	396	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:38:05,803	[INFO]	397	SUCCESS	+6.0	
2020-12-11 05:38:05,803	[DEBUG]	
2020-12-11 05:38:06,758	[INFO]	398	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:38:07,728	[INFO]	399	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:38:08,693	[INFO]	400	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:38:08,695	[INFO]	401	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:38:09,640	[INFO]	402	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:38:10,590	[INFO]	403	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:38:11,526	[INFO]	404	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:38:11,528	[INFO]	405	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:38:12,462	[INFO]	406	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:38:13,479	[INFO]	407	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:38:16,763	[INFO]	408	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:38:16,764	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 05:38:17,654	[INFO]	409	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:38:18,593	[INFO]	410	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:38:18,595	[INFO]	411	SUCCESS	+6.0	
2020-12-11 05:38:18,596	[DEBUG]	
2020-12-11 05:38:19,563	[INFO]	412	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:38:20,492	[INFO]	413	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:38:21,465	[INFO]	414	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:38:24,714	[INFO]	415	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:38:24,716	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:38:24,718	[INFO]	416	SUCCESS	+6.0	
2020-12-11 05:38:24,718	[DEBUG]	
2020-12-11 05:38:25,653	[INFO]	417	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:38:26,580	[INFO]	418	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:38:29,892	[INFO]	419	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:38:29,893	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 05:38:30,826	[INFO]	420	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:38:30,827	[INFO]	421	SUCCESS	+6.0	
2020-12-11 05:38:30,828	[DEBUG]	
2020-12-11 05:38:35,240	[INFO]	422	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:38:35,242	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:38:35,243	[INFO]	423	SUCCESS	+6.0	
2020-12-11 05:38:35,243	[DEBUG]	
2020-12-11 05:38:36,421	[INFO]	424	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:38:37,663	[INFO]	425	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:38:38,756	[INFO]	426	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:38:39,758	[INFO]	427	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:38:42,993	[INFO]	428	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:38:42,994	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 05:38:42,994	[INFO]	429	SUCCESS	+6.0	
2020-12-11 05:38:42,995	[DEBUG]	
2020-12-11 05:38:43,914	[INFO]	430	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:38:44,858	[INFO]	431	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:38:44,859	[INFO]	432	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:38:45,822	[INFO]	433	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:38:46,838	[INFO]	434	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:38:47,780	[INFO]	435	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:38:48,742	[INFO]	436	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:38:52,029	[INFO]	437	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:38:52,030	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 05:38:52,031	[INFO]	438	SUCCESS	+6.0	
2020-12-11 05:38:52,031	[DEBUG]	
2020-12-11 05:38:52,965	[INFO]	439	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:38:56,250	[INFO]	440	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:38:56,251	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:38:57,151	[INFO]	441	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:38:57,152	[INFO]	442	SUCCESS	+6.0	
2020-12-11 05:38:57,153	[DEBUG]	
2020-12-11 05:38:58,118	[INFO]	443	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:38:59,074	[INFO]	444	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:39:00,022	[INFO]	445	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:39:00,967	[INFO]	446	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:39:01,913	[INFO]	447	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:39:01,915	[INFO]	448	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:39:01,915	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 05:39:01,916	[INFO]	449	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:39:01,917	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 05:39:01,918	[INFO]	450	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:39:01,918	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 05:39:01,919	[INFO]	451	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:39:01,919	[DEBUG]	
2020-12-11 05:39:01,921	[INFO]	452	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:39:01,921	[DEBUG]	
2020-12-11 05:39:02,907	[INFO]	453	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:39:03,872	[INFO]	454	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:39:03,875	[INFO]	455	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:39:03,877	[DEBUG]	
2020-12-11 05:39:03,879	[INFO]	456	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:39:03,880	[DEBUG]	
2020-12-11 05:39:07,259	[INFO]	457	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:39:07,260	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,27 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 05:39:07,261	[INFO]	458	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:39:07,261	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,27 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 05:39:08,189	[INFO]	459	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:39:11,448	[INFO]	460	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:39:11,449	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,26 ****
--- 19,30 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
  	    i++;
          }
  

2020-12-11 05:39:11,450	[INFO]	461	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:39:11,450	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,27 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 05:39:11,451	[INFO]	462	SUCCESS	+6.0	
2020-12-11 05:39:11,451	[DEBUG]	
2020-12-11 05:39:12,374	[INFO]	463	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:39:15,623	[INFO]	464	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:39:15,624	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 05:39:16,549	[INFO]	465	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:39:19,764	[INFO]	466	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:39:19,765	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,23 ****
--- 14,27 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 05:39:19,766	[INFO]	467	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:39:19,767	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 05:39:19,767	[INFO]	468	SUCCESS	+6.0	
2020-12-11 05:39:19,768	[DEBUG]	
2020-12-11 05:39:23,010	[INFO]	469	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:39:23,012	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 05:39:23,014	[INFO]	470	SUCCESS	+6.0	
2020-12-11 05:39:23,014	[DEBUG]	
2020-12-11 05:39:23,970	[INFO]	471	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:39:24,907	[INFO]	472	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:39:28,089	[INFO]	473	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:39:28,090	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 05:39:28,091	[INFO]	474	SUCCESS	+6.0	
2020-12-11 05:39:28,091	[DEBUG]	
2020-12-11 05:39:29,017	[INFO]	475	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:39:30,008	[INFO]	476	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:39:30,011	[INFO]	477	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:39:30,012	[DEBUG]	
2020-12-11 05:39:30,013	[INFO]	478	SUCCESS	+6.0	
2020-12-11 05:39:30,014	[DEBUG]	
2020-12-11 05:39:33,218	[INFO]	479	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:39:33,219	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:39:33,220	[INFO]	480	SUCCESS	+6.0	
2020-12-11 05:39:33,220	[DEBUG]	
2020-12-11 05:39:34,178	[INFO]	481	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:39:34,181	[INFO]	482	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:39:37,371	[INFO]	483	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:39:37,372	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 05:39:37,373	[INFO]	484	SUCCESS	+6.0	
2020-12-11 05:39:37,373	[DEBUG]	
2020-12-11 05:39:37,374	[INFO]	485	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:39:38,357	[INFO]	486	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:39:39,295	[INFO]	487	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:39:40,222	[INFO]	488	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:39:40,224	[INFO]	489	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:39:40,224	[DEBUG]	
2020-12-11 05:39:40,224	[INFO]	490	SUCCESS	+6.0	
2020-12-11 05:39:40,225	[DEBUG]	
2020-12-11 05:39:41,174	[INFO]	491	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:39:42,108	[INFO]	492	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:39:43,063	[INFO]	493	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:39:43,066	[INFO]	494	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:39:43,067	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 05:39:44,009	[INFO]	495	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:39:44,010	[INFO]	496	SUCCESS	+6.0	
2020-12-11 05:39:44,010	[DEBUG]	
2020-12-11 05:39:44,960	[INFO]	497	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:39:44,964	[INFO]	498	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:39:44,964	[DEBUG]	
2020-12-11 05:39:45,964	[INFO]	499	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:39:49,246	[INFO]	500	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:39:49,247	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:39:49,247	[INFO]	==== END ====
2020-12-11 05:39:49,248	[INFO]	Reason: step budget
2020-12-11 05:39:49,248	[INFO]	
2020-12-11 05:39:49,248	[INFO]	========== EPOCH 12 ==========
2020-12-11 05:39:49,248	[INFO]	==== WARMUP ====
2020-12-11 05:39:52,461	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 05:39:52,461	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 05:39:55,730	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 05:39:55,730	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 05:39:58,883	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 05:39:58,883	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 05:40:02,078	[INFO]	INITIAL	SUCCESS	 6.0	
2020-12-11 05:40:02,078	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 05:40:02,078	[INFO]	==== START ====
2020-12-11 05:40:03,026	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:40:03,988	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:40:04,928	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:40:08,243	[INFO]	4	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:40:08,244	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,21 ****
--- 16,24 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 05:40:09,158	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:40:10,089	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:40:10,090	[INFO]	7	SUCCESS	+6.0	
2020-12-11 05:40:10,090	[DEBUG]	
2020-12-11 05:40:10,091	[INFO]	8	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:40:10,091	[DEBUG]	
2020-12-11 05:40:10,092	[INFO]	9	SUCCESS	+6.0	
2020-12-11 05:40:10,092	[DEBUG]	
2020-12-11 05:40:11,064	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:40:14,262	[INFO]	11	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:40:14,262	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:40:14,263	[INFO]	12	SUCCESS	+6.0	
2020-12-11 05:40:14,263	[DEBUG]	
2020-12-11 05:40:15,180	[INFO]	13	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:40:16,112	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:40:17,107	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:40:18,091	[INFO]	16	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:40:19,034	[INFO]	17	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:40:20,015	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:40:20,947	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:40:21,928	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:40:21,931	[INFO]	21	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:40:21,932	[DEBUG]	
2020-12-11 05:40:21,934	[INFO]	22	SUCCESS	+6.0	
2020-12-11 05:40:21,935	[DEBUG]	
2020-12-11 05:40:22,910	[INFO]	23	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:40:26,130	[INFO]	24	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:40:26,130	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 05:40:26,131	[INFO]	25	SUCCESS	+6.0	
2020-12-11 05:40:26,131	[DEBUG]	
2020-12-11 05:40:27,052	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:40:28,007	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:40:28,985	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:40:29,963	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:40:30,913	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:40:31,890	[INFO]	31	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:40:32,827	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:40:33,786	[INFO]	33	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:40:37,566	[INFO]	34	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:40:37,567	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:40:37,568	[INFO]	35	SUCCESS	+6.0	
2020-12-11 05:40:37,568	[DEBUG]	
2020-12-11 05:40:38,649	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:40:39,812	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:40:39,814	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:40:40,765	[INFO]	39	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:40:41,705	[INFO]	40	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:40:42,644	[INFO]	41	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:40:43,610	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:40:43,613	[INFO]	43	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:40:43,614	[DEBUG]	
2020-12-11 05:40:43,615	[INFO]	44	SUCCESS	+6.0	
2020-12-11 05:40:43,615	[DEBUG]	
2020-12-11 05:40:43,617	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:40:46,934	[INFO]	46	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:40:46,935	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 05:40:46,936	[INFO]	47	SUCCESS	+6.0	
2020-12-11 05:40:46,936	[DEBUG]	
2020-12-11 05:40:47,864	[INFO]	48	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:40:47,868	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:40:51,094	[INFO]	50	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:40:51,095	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 05:40:52,072	[INFO]	51	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:40:52,076	[INFO]	52	SUCCESS	+6.0	
2020-12-11 05:40:52,077	[DEBUG]	
2020-12-11 05:40:53,000	[INFO]	53	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:40:53,947	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:40:57,146	[INFO]	55	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:40:57,147	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 05:40:58,101	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:40:58,105	[INFO]	57	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:40:58,106	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 05:40:58,108	[INFO]	58	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:40:58,109	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 05:40:59,051	[INFO]	59	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:40:59,052	[INFO]	60	SUCCESS	+6.0	
2020-12-11 05:40:59,052	[DEBUG]	
2020-12-11 05:40:59,985	[INFO]	61	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:41:00,915	[INFO]	62	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:41:04,132	[INFO]	63	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:41:04,132	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 05:41:04,133	[INFO]	64	SUCCESS	+6.0	
2020-12-11 05:41:04,133	[DEBUG]	
2020-12-11 05:41:04,134	[INFO]	65	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:41:04,135	[DEBUG]	
2020-12-11 05:41:04,135	[INFO]	66	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:41:04,136	[DEBUG]	
2020-12-11 05:41:05,101	[INFO]	67	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:41:06,082	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:41:06,085	[INFO]	69	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:41:06,086	[DEBUG]	
2020-12-11 05:41:06,087	[INFO]	70	SUCCESS	+6.0	
2020-12-11 05:41:06,088	[DEBUG]	
2020-12-11 05:41:06,089	[INFO]	71	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:41:06,090	[DEBUG]	
2020-12-11 05:41:09,341	[INFO]	72	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:41:09,343	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 05:41:09,345	[INFO]	73	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:41:09,346	[DEBUG]	
2020-12-11 05:41:09,347	[INFO]	74	SUCCESS	+6.0	
2020-12-11 05:41:09,347	[DEBUG]	
2020-12-11 05:41:10,299	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:41:10,300	[INFO]	76	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:41:11,275	[INFO]	77	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:41:12,210	[INFO]	78	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:41:13,132	[INFO]	79	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:41:14,053	[INFO]	80	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:41:14,054	[INFO]	81	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:41:17,512	[INFO]	82	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:41:17,513	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 05:41:17,514	[INFO]	83	SUCCESS	+6.0	
2020-12-11 05:41:17,514	[DEBUG]	
2020-12-11 05:41:18,455	[INFO]	84	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:41:19,406	[INFO]	85	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:41:20,366	[INFO]	86	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:41:21,303	[INFO]	87	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:41:22,246	[INFO]	88	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:41:22,247	[INFO]	89	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:41:22,247	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 05:41:22,248	[INFO]	90	SUCCESS	+6.0	
2020-12-11 05:41:22,248	[DEBUG]	
2020-12-11 05:41:23,184	[INFO]	91	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:41:24,150	[INFO]	92	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:41:25,123	[INFO]	93	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:41:26,091	[INFO]	94	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:41:27,067	[INFO]	95	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:41:28,018	[INFO]	96	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:41:28,960	[INFO]	97	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:41:29,952	[INFO]	98	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:41:30,919	[INFO]	99	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:41:31,876	[INFO]	100	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:41:31,879	[INFO]	101	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:41:31,882	[INFO]	102	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:41:32,851	[INFO]	103	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:41:33,789	[INFO]	104	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:41:34,731	[INFO]	105	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:41:35,657	[INFO]	106	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:41:36,611	[INFO]	107	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:41:37,579	[INFO]	108	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:41:38,553	[INFO]	109	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:41:39,515	[INFO]	110	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:41:42,788	[INFO]	111	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:41:42,789	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 05:41:43,735	[INFO]	112	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:41:43,737	[INFO]	113	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:41:43,737	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 05:41:43,738	[INFO]	114	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:41:43,739	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 05:41:43,740	[INFO]	115	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:41:43,740	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 05:41:43,741	[INFO]	116	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:41:43,742	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 05:41:47,009	[INFO]	117	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:41:47,009	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,28 ****
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 17,29 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 05:41:47,917	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:41:47,922	[INFO]	119	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:41:47,923	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,28 ****
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 17,29 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 05:41:47,925	[INFO]	120	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:41:47,926	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,28 ****
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 17,29 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 05:41:51,352	[INFO]	121	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:41:51,354	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,28 ****
--- 17,33 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         
  
          return sorted_arr;
      }

2020-12-11 05:41:52,256	[INFO]	122	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:41:52,258	[INFO]	123	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:41:52,259	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,28 ****
--- 17,33 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         
  
          return sorted_arr;
      }

2020-12-11 05:41:52,261	[INFO]	124	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:41:52,262	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,28 ****
--- 17,33 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         
  
          return sorted_arr;
      }

2020-12-11 05:41:52,263	[INFO]	125	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:41:52,263	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,28 ****
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 17,29 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 05:41:52,264	[INFO]	126	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:41:52,265	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,28 ****
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 17,29 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 05:41:52,266	[INFO]	127	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:41:52,267	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,28 ****
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 17,29 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 05:41:52,269	[INFO]	128	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:41:52,269	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,28 ****
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 17,29 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 05:41:53,211	[INFO]	129	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:41:53,213	[INFO]	130	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:41:53,213	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,28 ****
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 17,29 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 05:41:53,214	[INFO]	131	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:41:53,215	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,28 ****
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 17,29 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 05:41:53,216	[INFO]	132	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:41:53,216	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,28 ****
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 17,29 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 05:41:53,217	[INFO]	133	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:41:53,218	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,28 ****
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 17,29 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 05:41:54,172	[INFO]	134	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:41:54,173	[INFO]	135	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:41:54,174	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,28 ****
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 17,29 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 05:41:55,109	[INFO]	136	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:41:55,110	[INFO]	137	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:41:55,111	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,28 ****
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 17,29 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 05:41:55,112	[INFO]	138	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:41:55,112	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,28 ****
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 17,29 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 05:41:58,396	[INFO]	139	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:41:58,398	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,28 ****
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 17,31 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
! 
!         i++;
  
          return sorted_arr;
      }

2020-12-11 05:41:58,403	[INFO]	140	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:41:58,405	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,28 ****
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 17,31 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
! 
!         i++;
  
          return sorted_arr;
      }

2020-12-11 05:41:59,304	[INFO]	141	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:41:59,306	[INFO]	142	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:41:59,306	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,28 ****
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 17,31 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
! 
!         i++;
  
          return sorted_arr;
      }

2020-12-11 05:41:59,308	[INFO]	143	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:41:59,308	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,28 ****
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 17,31 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
! 
!         i++;
  
          return sorted_arr;
      }

2020-12-11 05:42:00,228	[INFO]	144	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:42:01,168	[INFO]	145	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:42:01,170	[INFO]	146	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:42:01,171	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,28 ****
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 17,31 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
! 
!         i++;
  
          return sorted_arr;
      }

2020-12-11 05:42:02,135	[INFO]	147	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:42:02,137	[INFO]	148	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:42:02,137	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,28 ****
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 17,31 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
! 
!         i++;
  
          return sorted_arr;
      }

2020-12-11 05:42:05,414	[INFO]	149	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:42:05,415	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,28 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 14,32 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
+             counts.set(x,counts.get(x)+1);
+         }
+ 
+         for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
! 
!         i++;
  
          return sorted_arr;
      }

2020-12-11 05:42:08,699	[INFO]	150	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:42:08,700	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,28 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 14,30 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
+             counts.set(x,counts.get(x)+1);
+         }
+ 
+         for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 05:42:08,701	[INFO]	151	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:42:08,702	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,28 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 14,30 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
+             counts.set(x,counts.get(x)+1);
+         }
+ 
+         for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 05:42:09,583	[INFO]	152	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:42:09,585	[INFO]	153	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:42:09,585	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,28 ****
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 17,29 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 05:42:10,536	[INFO]	154	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:42:10,537	[INFO]	155	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:42:10,538	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,28 ****
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 17,29 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 05:42:10,539	[INFO]	156	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:42:10,539	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,28 ****
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 17,29 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 05:42:11,476	[INFO]	157	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:42:12,446	[INFO]	158	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:42:12,450	[INFO]	159	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:42:12,451	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 05:42:12,452	[INFO]	160	SUCCESS	+6.0	
2020-12-11 05:42:12,453	[DEBUG]	
2020-12-11 05:42:13,386	[INFO]	161	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:42:14,341	[INFO]	162	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:42:17,573	[INFO]	163	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:42:17,574	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:42:17,575	[INFO]	164	SUCCESS	+6.0	
2020-12-11 05:42:17,575	[DEBUG]	
2020-12-11 05:42:18,519	[INFO]	165	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:42:19,451	[INFO]	166	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:42:20,397	[INFO]	167	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:42:21,350	[INFO]	168	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:42:21,351	[INFO]	169	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:42:21,351	[DEBUG]	
2020-12-11 05:42:22,309	[INFO]	170	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:42:22,310	[INFO]	171	SUCCESS	+6.0	
2020-12-11 05:42:22,310	[DEBUG]	
2020-12-11 05:42:25,491	[INFO]	172	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:42:25,492	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 05:42:25,492	[INFO]	173	SUCCESS	+6.0	
2020-12-11 05:42:25,493	[DEBUG]	
2020-12-11 05:42:26,422	[INFO]	174	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:42:27,357	[INFO]	175	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:42:30,644	[INFO]	176	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:42:30,649	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 05:42:30,652	[INFO]	177	SUCCESS	+6.0	
2020-12-11 05:42:30,652	[DEBUG]	
2020-12-11 05:42:31,592	[INFO]	178	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:42:32,556	[INFO]	179	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:42:33,535	[INFO]	180	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:42:36,777	[INFO]	181	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:42:36,778	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,34 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:42:37,722	[INFO]	182	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:42:37,723	[INFO]	183	SUCCESS	+6.0	
2020-12-11 05:42:37,724	[DEBUG]	
2020-12-11 05:42:38,644	[INFO]	184	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:42:39,588	[INFO]	185	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:42:40,578	[INFO]	186	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:42:40,581	[INFO]	187	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:42:40,583	[INFO]	188	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:42:40,584	[DEBUG]	
2020-12-11 05:42:40,585	[INFO]	189	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:42:40,586	[INFO]	190	SUCCESS	+6.0	
2020-12-11 05:42:40,587	[DEBUG]	
2020-12-11 05:42:41,520	[INFO]	191	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:42:42,447	[INFO]	192	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:42:43,414	[INFO]	193	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:42:44,338	[INFO]	194	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:42:47,708	[INFO]	195	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:42:47,709	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 05:42:47,710	[INFO]	196	SUCCESS	+6.0	
2020-12-11 05:42:47,710	[DEBUG]	
2020-12-11 05:42:48,617	[INFO]	197	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:42:49,563	[INFO]	198	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:42:52,811	[INFO]	199	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:42:52,812	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 05:42:53,709	[INFO]	200	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:42:56,969	[INFO]	201	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:42:56,971	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
***************
*** 22,27 ****
--- 23,29 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 05:42:56,974	[INFO]	202	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:42:56,975	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 05:42:57,896	[INFO]	203	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:42:57,897	[INFO]	204	SUCCESS	+6.0	
2020-12-11 05:42:57,898	[DEBUG]	
2020-12-11 05:42:58,860	[INFO]	205	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:42:59,793	[INFO]	206	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:42:59,795	[INFO]	207	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:42:59,796	[INFO]	208	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:43:03,030	[INFO]	209	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:43:03,032	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:43:03,033	[INFO]	210	SUCCESS	+6.0	
2020-12-11 05:43:03,034	[DEBUG]	
2020-12-11 05:43:03,036	[INFO]	211	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:43:03,037	[DEBUG]	
2020-12-11 05:43:03,038	[INFO]	212	SUCCESS	+6.0	
2020-12-11 05:43:03,039	[DEBUG]	
2020-12-11 05:43:03,988	[INFO]	213	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:43:04,941	[INFO]	214	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:43:05,910	[INFO]	215	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:43:06,901	[INFO]	216	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:43:10,151	[INFO]	217	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:43:10,152	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 05:43:10,153	[INFO]	218	SUCCESS	+6.0	
2020-12-11 05:43:10,153	[DEBUG]	
2020-12-11 05:43:13,354	[INFO]	219	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:43:13,355	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 05:43:16,697	[INFO]	220	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:43:16,698	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,26 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 13,24 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 05:43:17,609	[INFO]	221	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:43:20,794	[INFO]	222	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:43:20,795	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 05:43:21,751	[INFO]	223	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:43:22,695	[INFO]	224	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:43:22,696	[INFO]	225	SUCCESS	+6.0	
2020-12-11 05:43:22,697	[DEBUG]	
2020-12-11 05:43:22,697	[INFO]	226	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:43:23,631	[INFO]	227	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:43:24,577	[INFO]	228	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:43:25,530	[INFO]	229	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:43:28,826	[INFO]	230	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:43:28,827	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:43:28,828	[INFO]	231	SUCCESS	+6.0	
2020-12-11 05:43:28,828	[DEBUG]	
2020-12-11 05:43:29,781	[INFO]	232	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:43:32,980	[INFO]	233	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:43:32,981	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 05:43:32,982	[INFO]	234	SUCCESS	+6.0	
2020-12-11 05:43:32,982	[DEBUG]	
2020-12-11 05:43:33,916	[INFO]	235	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:43:37,208	[INFO]	236	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:43:37,209	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
          }
  
          return sorted_arr;

2020-12-11 05:43:38,150	[INFO]	237	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:43:39,095	[INFO]	238	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:43:40,033	[INFO]	239	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:43:40,034	[INFO]	240	SUCCESS	+6.0	
2020-12-11 05:43:40,035	[DEBUG]	
2020-12-11 05:43:40,973	[INFO]	241	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:43:40,974	[INFO]	242	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:43:44,275	[INFO]	243	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:43:44,276	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 05:43:44,277	[INFO]	244	SUCCESS	+6.0	
2020-12-11 05:43:44,277	[DEBUG]	
2020-12-11 05:43:45,165	[INFO]	245	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:43:46,095	[INFO]	246	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:43:46,099	[INFO]	247	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:43:46,100	[DEBUG]	
2020-12-11 05:43:47,057	[INFO]	248	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:43:47,058	[INFO]	249	SUCCESS	+6.0	
2020-12-11 05:43:47,059	[DEBUG]	
2020-12-11 05:43:48,020	[INFO]	250	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:43:48,942	[INFO]	251	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:43:48,943	[INFO]	252	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:43:49,889	[INFO]	253	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:43:50,837	[INFO]	254	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:43:51,779	[INFO]	255	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:43:55,019	[INFO]	256	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:43:55,020	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 05:43:55,931	[INFO]	257	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:43:55,932	[INFO]	258	SUCCESS	+6.0	
2020-12-11 05:43:55,933	[DEBUG]	
2020-12-11 05:43:59,269	[INFO]	259	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:43:59,270	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:44:02,455	[INFO]	260	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:44:02,456	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
***************
*** 24,29 ****
--- 25,34 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:44:05,735	[INFO]	261	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:44:05,736	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:44:05,736	[INFO]	262	SUCCESS	+6.0	
2020-12-11 05:44:05,737	[DEBUG]	
2020-12-11 05:44:06,663	[INFO]	263	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:44:07,581	[INFO]	264	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:44:10,836	[INFO]	265	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:44:10,837	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 05:44:10,837	[INFO]	266	SUCCESS	+6.0	
2020-12-11 05:44:10,838	[DEBUG]	
2020-12-11 05:44:11,785	[INFO]	267	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:44:12,739	[INFO]	268	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:44:13,652	[INFO]	269	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:44:14,590	[INFO]	270	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:44:14,591	[INFO]	271	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:44:15,515	[INFO]	272	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:44:16,459	[INFO]	273	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:44:17,406	[INFO]	274	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:44:18,374	[INFO]	275	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:44:19,295	[INFO]	276	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:44:19,296	[INFO]	277	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:44:19,297	[DEBUG]	
2020-12-11 05:44:19,297	[INFO]	278	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:44:19,298	[DEBUG]	
2020-12-11 05:44:19,299	[INFO]	279	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:44:19,299	[DEBUG]	
2020-12-11 05:44:19,300	[INFO]	280	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:44:19,301	[DEBUG]	
2020-12-11 05:44:19,301	[INFO]	281	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:44:19,302	[DEBUG]	
2020-12-11 05:44:19,303	[INFO]	282	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:44:20,263	[INFO]	283	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:44:20,264	[INFO]	284	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:44:20,264	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:44:20,266	[INFO]	285	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:44:20,266	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:44:20,267	[INFO]	286	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:44:20,268	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:44:21,244	[INFO]	287	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:44:24,558	[INFO]	288	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:44:24,560	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,34 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:44:24,561	[INFO]	289	SUCCESS	+6.0	
2020-12-11 05:44:24,562	[DEBUG]	
2020-12-11 05:44:25,521	[INFO]	290	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:44:26,445	[INFO]	291	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:44:26,446	[INFO]	292	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:44:26,447	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 05:44:26,448	[INFO]	293	SUCCESS	+6.0	
2020-12-11 05:44:26,448	[DEBUG]	
2020-12-11 05:44:27,386	[INFO]	294	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:44:28,352	[INFO]	295	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:44:29,328	[INFO]	296	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:44:32,556	[INFO]	297	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:44:32,557	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 05:44:33,508	[INFO]	298	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:44:33,509	[INFO]	299	SUCCESS	+6.0	
2020-12-11 05:44:33,509	[DEBUG]	
2020-12-11 05:44:34,446	[INFO]	300	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:44:35,416	[INFO]	301	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:44:36,370	[INFO]	302	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:44:39,660	[INFO]	303	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:44:39,662	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 05:44:39,663	[INFO]	304	SUCCESS	+6.0	
2020-12-11 05:44:39,664	[DEBUG]	
2020-12-11 05:44:39,665	[INFO]	305	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:44:42,832	[INFO]	306	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:44:42,833	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,21 ****
--- 16,24 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 05:44:46,181	[INFO]	307	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:44:46,181	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,26 ****
--- 16,32 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 05:44:46,182	[INFO]	308	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:44:46,183	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,21 ****
--- 16,24 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 05:44:46,183	[INFO]	309	SUCCESS	+6.0	
2020-12-11 05:44:46,183	[DEBUG]	
2020-12-11 05:44:46,184	[INFO]	310	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:44:47,061	[INFO]	311	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:44:48,000	[INFO]	312	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:44:48,964	[INFO]	313	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:44:49,912	[INFO]	314	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:44:53,225	[INFO]	315	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:44:53,226	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 05:44:53,226	[INFO]	316	SUCCESS	+6.0	
2020-12-11 05:44:53,226	[DEBUG]	
2020-12-11 05:44:54,124	[INFO]	317	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:44:57,401	[INFO]	318	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:44:57,402	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 05:44:57,403	[INFO]	319	SUCCESS	+6.0	
2020-12-11 05:44:57,403	[DEBUG]	
2020-12-11 05:44:58,345	[INFO]	320	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:44:59,296	[INFO]	321	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:45:00,212	[INFO]	322	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:45:03,454	[INFO]	323	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:45:03,455	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 05:45:03,455	[INFO]	324	SUCCESS	+6.0	
2020-12-11 05:45:03,456	[DEBUG]	
2020-12-11 05:45:04,400	[INFO]	325	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:45:07,761	[INFO]	326	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:45:07,762	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 05:45:08,691	[INFO]	327	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:45:08,692	[INFO]	328	SUCCESS	+6.0	
2020-12-11 05:45:08,692	[DEBUG]	
2020-12-11 05:45:11,910	[INFO]	329	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:45:11,910	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 05:45:11,911	[INFO]	330	SUCCESS	+6.0	
2020-12-11 05:45:11,911	[DEBUG]	
2020-12-11 05:45:12,846	[INFO]	331	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:45:13,808	[INFO]	332	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:45:14,769	[INFO]	333	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:45:14,771	[INFO]	334	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:45:15,700	[INFO]	335	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:45:16,636	[INFO]	336	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:45:16,638	[INFO]	337	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:45:17,592	[INFO]	338	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:45:18,554	[INFO]	339	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:45:18,557	[INFO]	340	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:45:18,559	[INFO]	341	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:45:18,560	[DEBUG]	
2020-12-11 05:45:18,561	[INFO]	342	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:45:18,562	[DEBUG]	
2020-12-11 05:45:19,509	[INFO]	343	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:45:20,446	[INFO]	344	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:45:20,447	[INFO]	345	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:45:20,447	[DEBUG]	
2020-12-11 05:45:20,448	[INFO]	346	SUCCESS	+6.0	
2020-12-11 05:45:20,448	[DEBUG]	
2020-12-11 05:45:23,753	[INFO]	347	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:45:23,754	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 05:45:23,754	[INFO]	348	SUCCESS	+6.0	
2020-12-11 05:45:23,754	[DEBUG]	
2020-12-11 05:45:24,653	[INFO]	349	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:45:25,575	[INFO]	350	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:45:26,511	[INFO]	351	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:45:27,458	[INFO]	352	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:45:28,408	[INFO]	353	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:45:31,656	[INFO]	354	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:45:31,657	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 05:45:32,576	[INFO]	355	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:45:32,577	[INFO]	356	SUCCESS	+6.0	
2020-12-11 05:45:32,578	[DEBUG]	
2020-12-11 05:45:33,547	[INFO]	357	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:45:33,551	[INFO]	358	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:45:37,080	[INFO]	359	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:45:37,082	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
          }
  
          return sorted_arr;

2020-12-11 05:45:38,036	[INFO]	360	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:45:38,984	[INFO]	361	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:45:38,986	[INFO]	362	SUCCESS	+6.0	
2020-12-11 05:45:38,986	[DEBUG]	
2020-12-11 05:45:39,931	[INFO]	363	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:45:40,901	[INFO]	364	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:45:44,206	[INFO]	365	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:45:44,207	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,27 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 05:45:45,186	[INFO]	366	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:45:48,419	[INFO]	367	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:45:48,422	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,30 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 05:45:49,361	[INFO]	368	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:45:50,308	[INFO]	369	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:45:50,309	[INFO]	370	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:45:50,309	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,27 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 05:45:50,310	[INFO]	371	SUCCESS	+6.0	
2020-12-11 05:45:50,310	[DEBUG]	
2020-12-11 05:45:51,271	[INFO]	372	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:45:52,342	[INFO]	373	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:45:53,316	[INFO]	374	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:45:54,247	[INFO]	375	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:45:57,543	[INFO]	376	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:45:57,543	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 05:46:00,703	[INFO]	377	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:46:00,704	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,27 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 20,27 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
! 	    
          }
  
          return sorted_arr;

2020-12-11 05:46:03,849	[INFO]	378	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:46:03,850	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 05:46:04,762	[INFO]	379	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:46:04,763	[INFO]	380	SUCCESS	+6.0	
2020-12-11 05:46:04,764	[DEBUG]	
2020-12-11 05:46:05,745	[INFO]	381	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:46:06,680	[INFO]	382	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:46:07,618	[INFO]	383	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:46:10,832	[INFO]	384	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:46:10,833	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 05:46:10,834	[INFO]	385	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:46:10,834	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 05:46:10,835	[INFO]	386	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:46:10,836	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 05:46:14,122	[INFO]	387	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:46:14,123	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,23 ****
--- 14,27 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 05:46:15,058	[INFO]	388	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:46:16,006	[INFO]	389	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:46:16,951	[INFO]	390	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:46:16,952	[INFO]	391	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:46:16,953	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,23 ****
--- 14,27 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 05:46:16,954	[INFO]	392	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:46:16,955	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,23 ****
--- 14,27 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 05:46:17,898	[INFO]	393	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:46:21,203	[INFO]	394	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:46:21,204	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,27 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 14,31 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
          }
  
          return sorted_arr;

2020-12-11 05:46:21,205	[INFO]	395	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:46:21,205	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,23 ****
--- 14,27 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 05:46:22,117	[INFO]	396	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:46:22,118	[INFO]	397	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:46:22,119	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 05:46:23,078	[INFO]	398	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:46:24,065	[INFO]	399	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:46:27,247	[INFO]	400	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:46:27,248	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,23 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
- 
-         ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
--- 13,24 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
! 
!         ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
! 	for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 05:46:30,529	[INFO]	401	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:46:30,530	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 05:46:30,531	[INFO]	402	SUCCESS	+6.0	
2020-12-11 05:46:30,531	[DEBUG]	
2020-12-11 05:46:30,531	[INFO]	403	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:46:30,532	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 05:46:30,532	[INFO]	404	SUCCESS	+6.0	
2020-12-11 05:46:30,532	[DEBUG]	
2020-12-11 05:46:31,451	[INFO]	405	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:46:34,763	[INFO]	406	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:46:34,764	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 05:46:37,960	[INFO]	407	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:46:37,961	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,27 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 20,30 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 05:46:38,878	[INFO]	408	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:46:39,828	[INFO]	409	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:46:43,347	[INFO]	410	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:46:43,348	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,27 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 20,33 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 05:46:46,712	[INFO]	411	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:46:46,713	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,32 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 05:46:50,040	[INFO]	412	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:46:50,042	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 05:46:50,044	[INFO]	413	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:46:50,045	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 05:46:50,047	[INFO]	414	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:46:50,048	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 05:46:50,961	[INFO]	415	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:46:50,964	[INFO]	416	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:46:50,965	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 05:46:51,949	[INFO]	417	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:46:51,953	[INFO]	418	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:46:51,954	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 05:46:55,194	[INFO]	419	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:46:55,195	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,31 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 05:46:58,488	[INFO]	420	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:46:58,490	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 05:46:58,492	[INFO]	421	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:46:58,492	[DEBUG]	
2020-12-11 05:46:58,493	[INFO]	422	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:46:58,494	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 05:46:58,495	[INFO]	423	SUCCESS	+6.0	
2020-12-11 05:46:58,495	[DEBUG]	
2020-12-11 05:46:58,496	[INFO]	424	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:46:58,497	[DEBUG]	
2020-12-11 05:46:58,497	[INFO]	425	SUCCESS	+6.0	
2020-12-11 05:46:58,498	[DEBUG]	
2020-12-11 05:46:58,498	[INFO]	426	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:46:58,499	[DEBUG]	
2020-12-11 05:47:01,627	[INFO]	427	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:47:01,628	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 05:47:02,570	[INFO]	428	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:47:05,864	[INFO]	429	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:47:05,865	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,27 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
! 	    i++;
  	    i++;
          }
  

2020-12-11 05:47:09,089	[INFO]	430	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:47:09,090	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,28 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
          return sorted_arr;
      }
--- 20,31 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
! 	    i++;
  	    i++;
          }
+ 
+         i++;
  
          return sorted_arr;
      }

2020-12-11 05:47:09,965	[INFO]	431	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:47:10,925	[INFO]	432	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:47:10,928	[INFO]	433	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:47:10,929	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,27 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
! 	    i++;
  	    i++;
          }
  

2020-12-11 05:47:11,852	[INFO]	434	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:47:15,123	[INFO]	435	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:47:15,124	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 05:47:15,124	[INFO]	436	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:47:15,125	[DEBUG]	
2020-12-11 05:47:15,125	[INFO]	437	SUCCESS	+6.0	
2020-12-11 05:47:15,126	[DEBUG]	
2020-12-11 05:47:15,126	[INFO]	438	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:47:15,127	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 05:47:15,127	[INFO]	439	SUCCESS	+6.0	
2020-12-11 05:47:15,127	[DEBUG]	
2020-12-11 05:47:15,128	[INFO]	440	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:47:15,128	[DEBUG]	
2020-12-11 05:47:15,129	[INFO]	441	SUCCESS	+6.0	
2020-12-11 05:47:15,129	[DEBUG]	
2020-12-11 05:47:16,053	[INFO]	442	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:47:17,181	[INFO]	443	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:47:18,165	[INFO]	444	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:47:19,157	[INFO]	445	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:47:20,089	[INFO]	446	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:47:21,027	[INFO]	447	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:47:21,981	[INFO]	448	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:47:22,952	[INFO]	449	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:47:22,955	[INFO]	450	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:47:22,956	[DEBUG]	
2020-12-11 05:47:26,201	[INFO]	451	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:47:26,203	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 05:47:29,442	[INFO]	452	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:47:29,444	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  
***************
*** 21,26 ****
--- 22,28 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 05:47:29,445	[INFO]	453	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:47:29,446	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 05:47:29,448	[INFO]	454	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:47:29,449	[DEBUG]	
2020-12-11 05:47:29,450	[INFO]	455	SUCCESS	+6.0	
2020-12-11 05:47:29,450	[DEBUG]	
2020-12-11 05:47:32,686	[INFO]	456	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:47:32,687	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:47:32,688	[INFO]	457	SUCCESS	+6.0	
2020-12-11 05:47:32,688	[DEBUG]	
2020-12-11 05:47:33,587	[INFO]	458	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:47:33,588	[INFO]	459	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:47:33,589	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 05:47:33,589	[INFO]	460	SUCCESS	+6.0	
2020-12-11 05:47:33,590	[DEBUG]	
2020-12-11 05:47:33,591	[INFO]	461	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:47:33,591	[DEBUG]	
2020-12-11 05:47:33,592	[INFO]	462	SUCCESS	+6.0	
2020-12-11 05:47:33,592	[DEBUG]	
2020-12-11 05:47:33,593	[INFO]	463	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:47:34,565	[INFO]	464	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:47:35,526	[INFO]	465	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:47:36,512	[INFO]	466	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:47:36,513	[INFO]	467	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:47:36,514	[DEBUG]	
2020-12-11 05:47:36,514	[INFO]	468	SUCCESS	+6.0	
2020-12-11 05:47:36,514	[DEBUG]	
2020-12-11 05:47:37,456	[INFO]	469	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:47:38,402	[INFO]	470	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:47:39,356	[INFO]	471	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:47:40,311	[INFO]	472	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:47:41,260	[INFO]	473	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:47:42,219	[INFO]	474	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:47:43,202	[INFO]	475	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:47:44,159	[INFO]	476	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:47:45,115	[INFO]	477	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:47:48,304	[INFO]	478	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:47:48,305	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 05:47:48,306	[INFO]	479	SUCCESS	+6.0	
2020-12-11 05:47:48,306	[DEBUG]	
2020-12-11 05:47:49,223	[INFO]	480	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:47:50,156	[INFO]	481	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:47:51,088	[INFO]	482	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:47:52,018	[INFO]	483	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:47:52,996	[INFO]	484	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:47:53,930	[INFO]	485	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:47:54,885	[INFO]	486	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:47:55,817	[INFO]	487	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:47:59,131	[INFO]	488	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:47:59,132	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 05:48:02,320	[INFO]	489	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:48:02,321	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,33 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 05:48:02,322	[INFO]	490	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:48:02,323	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 05:48:03,253	[INFO]	491	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:48:04,227	[INFO]	492	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:48:04,230	[INFO]	493	SUCCESS	+6.0	
2020-12-11 05:48:04,231	[DEBUG]	
2020-12-11 05:48:05,228	[INFO]	494	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:48:06,221	[INFO]	495	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:48:06,223	[INFO]	496	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:48:07,195	[INFO]	497	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:48:07,196	[INFO]	498	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:48:07,197	[INFO]	499	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:48:07,198	[DEBUG]	
2020-12-11 05:48:07,198	[INFO]	500	SUCCESS	+6.0	
2020-12-11 05:48:07,199	[DEBUG]	
2020-12-11 05:48:07,199	[INFO]	==== END ====
2020-12-11 05:48:07,199	[INFO]	Reason: step budget
2020-12-11 05:48:07,199	[INFO]	
2020-12-11 05:48:07,200	[INFO]	========== EPOCH 13 ==========
2020-12-11 05:48:07,200	[INFO]	==== WARMUP ====
2020-12-11 05:48:10,435	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 05:48:10,435	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 05:48:13,650	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 05:48:13,650	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 05:48:16,929	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 05:48:16,929	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 05:48:20,065	[INFO]	INITIAL	SUCCESS	 6.0	
2020-12-11 05:48:20,065	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 05:48:20,065	[INFO]	==== START ====
2020-12-11 05:48:20,985	[INFO]	1	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:48:24,173	[INFO]	2	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:48:24,174	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 05:48:24,175	[INFO]	3	SUCCESS	+6.0	
2020-12-11 05:48:24,175	[DEBUG]	
2020-12-11 05:48:25,101	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:48:26,044	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:48:27,004	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:48:27,947	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:48:28,879	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:48:28,880	[INFO]	9	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:48:28,880	[DEBUG]	
2020-12-11 05:48:28,881	[INFO]	10	SUCCESS	+6.0	
2020-12-11 05:48:28,881	[DEBUG]	
2020-12-11 05:48:29,851	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:48:30,785	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:48:31,740	[INFO]	13	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:48:32,686	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:48:33,619	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:48:33,620	[INFO]	16	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:48:33,620	[DEBUG]	
2020-12-11 05:48:33,621	[INFO]	17	SUCCESS	+6.0	
2020-12-11 05:48:33,621	[DEBUG]	
2020-12-11 05:48:34,595	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:48:34,597	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:48:35,544	[INFO]	20	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:48:36,517	[INFO]	21	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:48:37,442	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:48:37,445	[INFO]	23	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:48:38,416	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:48:39,362	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:48:39,364	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:48:40,337	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:48:43,617	[INFO]	28	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:48:43,618	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 05:48:43,619	[INFO]	29	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:48:43,619	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 05:48:44,540	[INFO]	30	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:48:44,541	[INFO]	31	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:48:44,542	[DEBUG]	
2020-12-11 05:48:44,542	[INFO]	32	SUCCESS	+6.0	
2020-12-11 05:48:44,543	[DEBUG]	
2020-12-11 05:48:45,524	[INFO]	33	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:48:48,794	[INFO]	34	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:48:48,795	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 05:48:49,747	[INFO]	35	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:48:50,752	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:48:50,754	[INFO]	37	SUCCESS	+6.0	
2020-12-11 05:48:50,755	[DEBUG]	
2020-12-11 05:48:51,694	[INFO]	38	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:48:52,620	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:48:53,573	[INFO]	40	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:48:54,541	[INFO]	41	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:48:55,507	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:48:56,457	[INFO]	43	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:48:57,423	[INFO]	44	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:48:58,404	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:48:59,487	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:49:00,545	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:49:01,511	[INFO]	48	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:49:01,512	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:49:02,498	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:49:03,480	[INFO]	51	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:49:04,439	[INFO]	52	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:49:05,448	[INFO]	53	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:49:06,419	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:49:07,373	[INFO]	55	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:49:08,399	[INFO]	56	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:49:11,700	[INFO]	57	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:49:11,701	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 05:49:11,701	[INFO]	58	SUCCESS	+6.0	
2020-12-11 05:49:11,702	[DEBUG]	
2020-12-11 05:49:12,625	[INFO]	59	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:49:13,598	[INFO]	60	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:49:14,555	[INFO]	61	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:49:17,830	[INFO]	62	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:49:17,832	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,21 ****
--- 16,24 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 05:49:17,833	[INFO]	63	SUCCESS	+6.0	
2020-12-11 05:49:17,834	[DEBUG]	
2020-12-11 05:49:18,764	[INFO]	64	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:49:19,697	[INFO]	65	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:49:22,988	[INFO]	66	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:49:22,989	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 05:49:23,950	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:49:24,875	[INFO]	68	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:49:24,876	[INFO]	69	SUCCESS	+6.0	
2020-12-11 05:49:24,877	[DEBUG]	
2020-12-11 05:49:25,792	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:49:26,730	[INFO]	71	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:49:30,071	[INFO]	72	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:49:30,073	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 05:49:30,074	[INFO]	73	SUCCESS	+6.0	
2020-12-11 05:49:30,074	[DEBUG]	
2020-12-11 05:49:31,016	[INFO]	74	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:49:31,948	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:49:32,914	[INFO]	76	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:49:33,884	[INFO]	77	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:49:37,135	[INFO]	78	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:49:37,136	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 05:49:37,137	[INFO]	79	SUCCESS	+6.0	
2020-12-11 05:49:37,137	[DEBUG]	
2020-12-11 05:49:38,079	[INFO]	80	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:49:38,081	[INFO]	81	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:49:38,082	[INFO]	82	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:49:38,082	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 05:49:38,083	[INFO]	83	SUCCESS	+6.0	
2020-12-11 05:49:38,083	[DEBUG]	
2020-12-11 05:49:41,281	[INFO]	84	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:49:41,282	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 05:49:41,283	[INFO]	85	SUCCESS	+6.0	
2020-12-11 05:49:41,283	[DEBUG]	
2020-12-11 05:49:44,504	[INFO]	86	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:49:44,505	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 05:49:45,387	[INFO]	87	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:49:46,344	[INFO]	88	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:49:47,293	[INFO]	89	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:49:47,294	[INFO]	90	SUCCESS	+6.0	
2020-12-11 05:49:47,294	[DEBUG]	
2020-12-11 05:49:48,255	[INFO]	91	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:49:49,219	[INFO]	92	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:49:50,179	[INFO]	93	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:49:51,106	[INFO]	94	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:49:54,355	[INFO]	95	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:49:54,356	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:49:55,297	[INFO]	96	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:49:56,230	[INFO]	97	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:49:56,231	[INFO]	98	SUCCESS	+6.0	
2020-12-11 05:49:56,231	[DEBUG]	
2020-12-11 05:49:57,173	[INFO]	99	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:49:58,146	[INFO]	100	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:49:59,089	[INFO]	101	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:50:00,044	[INFO]	102	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:50:00,998	[INFO]	103	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:50:01,963	[INFO]	104	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:50:05,246	[INFO]	105	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:50:05,247	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 05:50:06,169	[INFO]	106	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:50:06,170	[INFO]	107	SUCCESS	+6.0	
2020-12-11 05:50:06,170	[DEBUG]	
2020-12-11 05:50:07,115	[INFO]	108	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:50:08,052	[INFO]	109	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:50:09,166	[INFO]	110	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:50:12,481	[INFO]	111	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:50:12,482	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:50:12,482	[INFO]	112	SUCCESS	+6.0	
2020-12-11 05:50:12,482	[DEBUG]	
2020-12-11 05:50:12,483	[INFO]	113	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:50:12,483	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 05:50:13,380	[INFO]	114	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:50:13,381	[INFO]	115	SUCCESS	+6.0	
2020-12-11 05:50:13,381	[DEBUG]	
2020-12-11 05:50:16,582	[INFO]	116	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:50:16,583	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:50:17,528	[INFO]	117	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:50:17,530	[INFO]	118	SUCCESS	+6.0	
2020-12-11 05:50:17,531	[DEBUG]	
2020-12-11 05:50:18,481	[INFO]	119	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:50:19,426	[INFO]	120	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:50:20,382	[INFO]	121	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:50:21,367	[INFO]	122	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:50:22,347	[INFO]	123	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:50:23,291	[INFO]	124	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:50:24,234	[INFO]	125	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:50:25,156	[INFO]	126	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:50:26,100	[INFO]	127	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:50:29,549	[INFO]	128	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:50:29,550	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 05:50:30,486	[INFO]	129	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:50:31,422	[INFO]	130	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:50:32,411	[INFO]	131	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:50:32,414	[INFO]	132	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:50:32,415	[DEBUG]	
2020-12-11 05:50:32,416	[INFO]	133	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:50:32,417	[DEBUG]	
2020-12-11 05:50:32,418	[INFO]	134	SUCCESS	+6.0	
2020-12-11 05:50:32,419	[DEBUG]	
2020-12-11 05:50:33,407	[INFO]	135	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:50:37,216	[INFO]	136	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:50:37,217	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 05:50:41,212	[INFO]	137	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:50:41,214	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,25 ****
--- 18,29 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 05:50:44,977	[INFO]	138	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:50:44,978	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 05:50:46,230	[INFO]	139	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:50:47,356	[INFO]	140	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:50:47,360	[INFO]	141	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:50:47,361	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 05:50:47,363	[INFO]	142	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:50:47,364	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 05:50:47,366	[INFO]	143	SUCCESS	+6.0	
2020-12-11 05:50:47,367	[DEBUG]	
2020-12-11 05:50:48,324	[INFO]	144	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:50:49,268	[INFO]	145	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:50:50,228	[INFO]	146	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:50:51,180	[INFO]	147	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:50:51,183	[INFO]	148	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:50:51,184	[DEBUG]	
2020-12-11 05:50:54,391	[INFO]	149	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:50:54,392	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 05:50:54,393	[INFO]	150	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:50:54,393	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 05:50:54,394	[INFO]	151	SUCCESS	+6.0	
2020-12-11 05:50:54,394	[DEBUG]	
2020-12-11 05:50:57,699	[INFO]	152	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:50:57,700	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,34 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:50:57,701	[INFO]	153	SUCCESS	+6.0	
2020-12-11 05:50:57,701	[DEBUG]	
2020-12-11 05:51:00,938	[INFO]	154	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:51:00,938	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 05:51:01,856	[INFO]	155	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:51:01,858	[INFO]	156	SUCCESS	+6.0	
2020-12-11 05:51:01,859	[DEBUG]	
2020-12-11 05:51:05,075	[INFO]	157	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:51:05,077	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 05:51:06,014	[INFO]	158	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:51:06,015	[INFO]	159	SUCCESS	+6.0	
2020-12-11 05:51:06,015	[DEBUG]	
2020-12-11 05:51:06,946	[INFO]	160	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:51:07,897	[INFO]	161	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:51:08,834	[INFO]	162	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:51:09,779	[INFO]	163	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:51:10,709	[INFO]	164	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:51:11,671	[INFO]	165	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:51:15,125	[INFO]	166	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:51:15,126	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:51:16,023	[INFO]	167	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:51:16,024	[INFO]	168	SUCCESS	+6.0	
2020-12-11 05:51:16,024	[DEBUG]	
2020-12-11 05:51:19,211	[INFO]	169	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:51:19,213	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 05:51:20,129	[INFO]	170	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:51:20,130	[INFO]	171	SUCCESS	+6.0	
2020-12-11 05:51:20,130	[DEBUG]	
2020-12-11 05:51:20,131	[INFO]	172	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:51:21,100	[INFO]	173	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:51:22,070	[INFO]	174	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:51:25,437	[INFO]	175	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:51:25,438	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:51:25,438	[INFO]	176	SUCCESS	+6.0	
2020-12-11 05:51:25,439	[DEBUG]	
2020-12-11 05:51:26,326	[INFO]	177	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:51:27,266	[INFO]	178	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:51:27,267	[INFO]	179	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:51:27,267	[DEBUG]	
2020-12-11 05:51:28,220	[INFO]	180	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:51:31,508	[INFO]	181	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:51:31,509	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:51:32,452	[INFO]	182	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:51:35,677	[INFO]	183	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:51:35,678	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,28 ****
--- 21,33 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
+ 
+         i++;
  
          return sorted_arr;
      }

2020-12-11 05:51:35,679	[INFO]	184	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:51:35,680	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:51:35,680	[INFO]	185	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:51:35,681	[DEBUG]	
2020-12-11 05:51:35,681	[INFO]	186	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:51:35,682	[DEBUG]	
2020-12-11 05:51:35,682	[INFO]	187	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:51:35,683	[DEBUG]	
2020-12-11 05:51:36,614	[INFO]	188	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:51:37,558	[INFO]	189	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:51:38,491	[INFO]	190	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:51:38,492	[INFO]	191	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:51:38,493	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 05:51:38,494	[INFO]	192	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:51:38,494	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 05:51:38,495	[INFO]	193	SUCCESS	+6.0	
2020-12-11 05:51:38,495	[DEBUG]	
2020-12-11 05:51:39,449	[INFO]	194	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:51:40,371	[INFO]	195	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:51:41,336	[INFO]	196	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:51:42,302	[INFO]	197	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:51:43,240	[INFO]	198	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:51:44,222	[INFO]	199	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:51:47,562	[INFO]	200	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:51:47,563	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 05:51:48,462	[INFO]	201	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:51:48,463	[INFO]	202	SUCCESS	+6.0	
2020-12-11 05:51:48,464	[DEBUG]	
2020-12-11 05:51:49,409	[INFO]	203	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:51:52,758	[INFO]	204	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:51:52,761	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:51:53,664	[INFO]	205	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:51:53,666	[INFO]	206	SUCCESS	+6.0	
2020-12-11 05:51:53,666	[DEBUG]	
2020-12-11 05:51:53,667	[INFO]	207	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:51:53,668	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:51:54,566	[INFO]	208	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:51:55,517	[INFO]	209	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:51:56,482	[INFO]	210	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:51:56,483	[INFO]	211	SUCCESS	+6.0	
2020-12-11 05:51:56,484	[DEBUG]	
2020-12-11 05:51:57,466	[INFO]	212	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:51:58,411	[INFO]	213	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:52:01,633	[INFO]	214	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:52:01,634	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 05:52:04,899	[INFO]	215	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:52:04,900	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,27 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
- 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
          return sorted_arr;
--- 20,27 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    i++;
+ 	    
          }
  
          return sorted_arr;

2020-12-11 05:52:08,108	[INFO]	216	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:52:08,109	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,27 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
- 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
          return sorted_arr;
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    i++;
+ 	    i++;
+ 	    
          }
  
          return sorted_arr;

2020-12-11 05:52:11,266	[INFO]	217	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:52:11,267	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,27 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
! 	    i++;
  	    i++;
          }
  

2020-12-11 05:52:11,268	[INFO]	218	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:52:11,268	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 05:52:12,190	[INFO]	219	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:52:12,191	[INFO]	220	SUCCESS	+6.0	
2020-12-11 05:52:12,191	[DEBUG]	
2020-12-11 05:52:13,144	[INFO]	221	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:52:13,145	[INFO]	222	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:52:14,087	[INFO]	223	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:52:15,072	[INFO]	224	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:52:15,074	[INFO]	225	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:52:15,992	[INFO]	226	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:52:16,947	[INFO]	227	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:52:17,897	[INFO]	228	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:52:21,236	[INFO]	229	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:52:21,237	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 05:52:21,238	[INFO]	230	SUCCESS	+6.0	
2020-12-11 05:52:21,238	[DEBUG]	
2020-12-11 05:52:24,422	[INFO]	231	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:52:24,423	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 05:52:24,425	[INFO]	232	SUCCESS	+6.0	
2020-12-11 05:52:24,425	[DEBUG]	
2020-12-11 05:52:25,354	[INFO]	233	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:52:26,298	[INFO]	234	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:52:27,236	[INFO]	235	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:52:28,169	[INFO]	236	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:52:29,112	[INFO]	237	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:52:30,070	[INFO]	238	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:52:31,009	[INFO]	239	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:52:31,956	[INFO]	240	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:52:32,937	[INFO]	241	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:52:33,885	[INFO]	242	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:52:34,808	[INFO]	243	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:52:35,752	[INFO]	244	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:52:36,741	[INFO]	245	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:52:37,680	[INFO]	246	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:52:38,641	[INFO]	247	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:52:39,575	[INFO]	248	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:52:40,532	[INFO]	249	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:52:40,535	[INFO]	250	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:52:41,545	[INFO]	251	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:52:42,486	[INFO]	252	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:52:43,425	[INFO]	253	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:52:46,772	[INFO]	254	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:52:46,772	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,27 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 05:52:46,773	[INFO]	255	SUCCESS	+6.0	
2020-12-11 05:52:46,773	[DEBUG]	
2020-12-11 05:52:47,692	[INFO]	256	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:52:48,623	[INFO]	257	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:52:48,624	[INFO]	258	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:52:48,624	[DEBUG]	
2020-12-11 05:52:48,625	[INFO]	259	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:52:48,625	[DEBUG]	
2020-12-11 05:52:48,626	[INFO]	260	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:52:48,626	[DEBUG]	
2020-12-11 05:52:48,627	[INFO]	261	SUCCESS	+6.0	
2020-12-11 05:52:48,627	[DEBUG]	
2020-12-11 05:52:48,628	[INFO]	262	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:52:48,628	[DEBUG]	
2020-12-11 05:52:48,628	[INFO]	263	SUCCESS	+6.0	
2020-12-11 05:52:48,629	[DEBUG]	
2020-12-11 05:52:49,576	[INFO]	264	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:52:50,515	[INFO]	265	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:52:51,455	[INFO]	266	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:52:54,673	[INFO]	267	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:52:54,674	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:52:54,675	[INFO]	268	SUCCESS	+6.0	
2020-12-11 05:52:54,675	[DEBUG]	
2020-12-11 05:52:54,676	[INFO]	269	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:52:54,677	[INFO]	270	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:52:55,614	[INFO]	271	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:52:56,567	[INFO]	272	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:52:59,871	[INFO]	273	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:52:59,872	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 05:52:59,873	[INFO]	274	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:52:59,874	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 05:52:59,874	[INFO]	275	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:52:59,875	[DEBUG]	
2020-12-11 05:52:59,875	[INFO]	276	SUCCESS	+6.0	
2020-12-11 05:52:59,875	[DEBUG]	
2020-12-11 05:52:59,876	[INFO]	277	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:53:00,767	[INFO]	278	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:53:01,726	[INFO]	279	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:53:05,208	[INFO]	280	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:53:05,210	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:53:06,146	[INFO]	281	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:53:06,147	[INFO]	282	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:53:06,148	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:53:07,112	[INFO]	283	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:53:10,345	[INFO]	284	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:53:10,346	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:53:13,545	[INFO]	285	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:53:13,546	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,28 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
          return sorted_arr;
      }
--- 14,31 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+ 
+         i++;
  
          return sorted_arr;
      }

2020-12-11 05:53:14,481	[INFO]	286	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:53:15,432	[INFO]	287	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:53:18,732	[INFO]	288	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:53:18,734	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,28 ****
--- 21,31 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+ 
+         i++;
  
          return sorted_arr;
      }

2020-12-11 05:53:22,045	[INFO]	289	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:53:22,046	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,28 ****
--- 21,32 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
  	    i++;
          }
+ 
+         i++;
  
          return sorted_arr;
      }

2020-12-11 05:53:22,047	[INFO]	290	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:53:22,048	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,28 ****
--- 21,31 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+ 
+         i++;
  
          return sorted_arr;
      }

2020-12-11 05:53:22,049	[INFO]	291	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:53:22,049	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,28 ****
--- 21,31 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+ 
+         i++;
  
          return sorted_arr;
      }

2020-12-11 05:53:22,050	[INFO]	292	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:53:22,051	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,28 ****
--- 21,31 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+ 
+         i++;
  
          return sorted_arr;
      }

2020-12-11 05:53:22,052	[INFO]	293	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:53:22,052	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,28 ****
--- 21,31 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+ 
+         i++;
  
          return sorted_arr;
      }

2020-12-11 05:53:22,966	[INFO]	294	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:53:23,938	[INFO]	295	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:53:23,940	[INFO]	296	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:53:23,941	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:53:24,912	[INFO]	297	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:53:25,866	[INFO]	298	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:53:26,799	[INFO]	299	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:53:27,744	[INFO]	300	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:53:27,748	[INFO]	301	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:53:27,749	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:53:27,751	[INFO]	302	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:53:28,707	[INFO]	303	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:53:29,691	[INFO]	304	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:53:30,671	[INFO]	305	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:53:30,676	[INFO]	306	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:53:30,677	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:53:31,622	[INFO]	307	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:53:31,624	[INFO]	308	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:53:31,625	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:53:32,564	[INFO]	309	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:53:33,560	[INFO]	310	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:53:34,487	[INFO]	311	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:53:35,447	[INFO]	312	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:53:35,449	[INFO]	313	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:53:35,449	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:53:35,450	[INFO]	314	SUCCESS	+6.0	
2020-12-11 05:53:35,450	[DEBUG]	
2020-12-11 05:53:36,389	[INFO]	315	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:53:37,314	[INFO]	316	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:53:38,273	[INFO]	317	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:53:41,508	[INFO]	318	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:53:41,509	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 05:53:42,458	[INFO]	319	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:53:42,460	[INFO]	320	SUCCESS	+6.0	
2020-12-11 05:53:42,461	[DEBUG]	
2020-12-11 05:53:43,394	[INFO]	321	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:53:44,337	[INFO]	322	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:53:45,271	[INFO]	323	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:53:48,566	[INFO]	324	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:53:48,567	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 05:53:48,567	[INFO]	325	SUCCESS	+6.0	
2020-12-11 05:53:48,568	[DEBUG]	
2020-12-11 05:53:48,568	[INFO]	326	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:53:48,569	[DEBUG]	
2020-12-11 05:53:48,569	[INFO]	327	SUCCESS	+6.0	
2020-12-11 05:53:48,569	[DEBUG]	
2020-12-11 05:53:49,485	[INFO]	328	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:53:49,486	[INFO]	329	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:53:49,486	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 05:53:50,428	[INFO]	330	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:53:50,430	[INFO]	331	SUCCESS	+6.0	
2020-12-11 05:53:50,431	[DEBUG]	
2020-12-11 05:53:51,401	[INFO]	332	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:53:52,374	[INFO]	333	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:53:53,298	[INFO]	334	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:53:56,559	[INFO]	335	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:53:56,560	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 05:53:57,492	[INFO]	336	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:54:00,779	[INFO]	337	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:54:00,780	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,24 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
+             counts.set(x,counts.get(x)+1);
+         }
+ 
+         for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 05:54:04,074	[INFO]	338	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:54:04,075	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 05:54:05,021	[INFO]	339	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:54:05,022	[INFO]	340	SUCCESS	+6.0	
2020-12-11 05:54:05,023	[DEBUG]	
2020-12-11 05:54:05,959	[INFO]	341	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:54:09,197	[INFO]	342	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:54:09,198	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:54:10,141	[INFO]	343	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:54:11,113	[INFO]	344	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:54:12,042	[INFO]	345	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:54:12,044	[INFO]	346	SUCCESS	+6.0	
2020-12-11 05:54:12,044	[DEBUG]	
2020-12-11 05:54:12,982	[INFO]	347	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:54:16,242	[INFO]	348	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:54:16,244	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 05:54:16,245	[INFO]	349	SUCCESS	+6.0	
2020-12-11 05:54:16,246	[DEBUG]	
2020-12-11 05:54:17,180	[INFO]	350	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:54:17,182	[INFO]	351	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:54:18,078	[INFO]	352	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:54:19,048	[INFO]	353	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:54:20,040	[INFO]	354	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:54:23,298	[INFO]	355	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:54:23,299	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:54:23,300	[INFO]	356	SUCCESS	+6.0	
2020-12-11 05:54:23,300	[DEBUG]	
2020-12-11 05:54:24,220	[INFO]	357	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:54:27,418	[INFO]	358	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:54:27,420	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 05:54:28,369	[INFO]	359	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:54:29,274	[INFO]	360	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:54:29,275	[INFO]	361	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:54:29,275	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 05:54:29,276	[INFO]	362	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:54:29,277	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 05:54:32,577	[INFO]	363	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:54:32,578	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,28 ****
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 16,28 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 05:54:33,448	[INFO]	364	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:54:34,400	[INFO]	365	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:54:34,401	[INFO]	366	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:54:34,401	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 05:54:35,351	[INFO]	367	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:54:36,292	[INFO]	368	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:54:37,197	[INFO]	369	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:54:38,106	[INFO]	370	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:54:38,107	[INFO]	371	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:54:38,107	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 05:54:41,318	[INFO]	372	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:54:41,319	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 05:54:41,319	[INFO]	373	SUCCESS	+6.0	
2020-12-11 05:54:41,320	[DEBUG]	
2020-12-11 05:54:42,257	[INFO]	374	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:54:45,461	[INFO]	375	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:54:45,462	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:54:45,463	[INFO]	376	SUCCESS	+6.0	
2020-12-11 05:54:45,463	[DEBUG]	
2020-12-11 05:54:46,431	[INFO]	377	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:54:46,432	[INFO]	378	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:54:46,432	[DEBUG]	
2020-12-11 05:54:46,433	[INFO]	379	SUCCESS	+6.0	
2020-12-11 05:54:46,433	[DEBUG]	
2020-12-11 05:54:47,370	[INFO]	380	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:54:50,617	[INFO]	381	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:54:50,619	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 05:54:53,901	[INFO]	382	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:54:53,903	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,29 ****
--- 18,36 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:54:54,846	[INFO]	383	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:54:55,794	[INFO]	384	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:54:59,095	[INFO]	385	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:54:59,096	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,27 ****
--- 18,35 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+         }
+ 
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 05:54:59,097	[INFO]	386	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:54:59,097	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,29 ****
--- 18,36 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:55:02,379	[INFO]	387	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:55:02,380	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:55:02,381	[INFO]	388	SUCCESS	+6.0	
2020-12-11 05:55:02,382	[DEBUG]	
2020-12-11 05:55:03,296	[INFO]	389	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:55:04,242	[INFO]	390	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:55:07,605	[INFO]	391	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:55:07,607	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 05:55:07,609	[INFO]	392	SUCCESS	+6.0	
2020-12-11 05:55:07,610	[DEBUG]	
2020-12-11 05:55:10,846	[INFO]	393	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:55:10,848	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:55:10,850	[INFO]	394	SUCCESS	+6.0	
2020-12-11 05:55:10,851	[DEBUG]	
2020-12-11 05:55:11,762	[INFO]	395	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:55:12,715	[INFO]	396	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:55:13,644	[INFO]	397	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:55:16,908	[INFO]	398	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:55:16,910	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,34 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 05:55:17,870	[INFO]	399	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:55:17,873	[INFO]	400	SUCCESS	+6.0	
2020-12-11 05:55:17,874	[DEBUG]	
2020-12-11 05:55:17,877	[INFO]	401	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:55:18,812	[INFO]	402	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:55:18,813	[INFO]	403	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:55:19,751	[INFO]	404	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:55:19,752	[INFO]	405	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:55:19,752	[DEBUG]	
2020-12-11 05:55:19,753	[INFO]	406	SUCCESS	+6.0	
2020-12-11 05:55:19,753	[DEBUG]	
2020-12-11 05:55:19,754	[INFO]	407	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:55:20,730	[INFO]	408	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:55:21,724	[INFO]	409	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:55:24,920	[INFO]	410	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:55:24,922	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 05:55:25,851	[INFO]	411	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:55:25,852	[INFO]	412	SUCCESS	+6.0	
2020-12-11 05:55:25,853	[DEBUG]	
2020-12-11 05:55:25,853	[INFO]	413	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:55:25,854	[DEBUG]	
2020-12-11 05:55:25,854	[INFO]	414	SUCCESS	+6.0	
2020-12-11 05:55:25,854	[DEBUG]	
2020-12-11 05:55:25,855	[INFO]	415	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:55:25,856	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 05:55:26,808	[INFO]	416	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:55:27,800	[INFO]	417	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:55:28,740	[INFO]	418	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:55:29,731	[INFO]	419	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:55:29,732	[INFO]	420	SUCCESS	+6.0	
2020-12-11 05:55:29,733	[DEBUG]	
2020-12-11 05:55:30,695	[INFO]	421	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:55:33,880	[INFO]	422	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:55:33,881	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 05:55:37,144	[INFO]	423	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:55:37,145	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,27 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 20,27 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 05:55:37,146	[INFO]	424	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:55:37,147	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 05:55:40,363	[INFO]	425	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:55:40,364	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 05:55:43,584	[INFO]	426	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:55:43,585	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  
***************
*** 23,28 ****
--- 24,33 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 05:55:46,823	[INFO]	427	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:55:46,823	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,26 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 14,27 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 05:55:46,824	[INFO]	428	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:55:46,825	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 05:55:46,825	[INFO]	429	SUCCESS	+6.0	
2020-12-11 05:55:46,825	[DEBUG]	
2020-12-11 05:55:50,054	[INFO]	430	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:55:50,055	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:55:50,056	[INFO]	431	SUCCESS	+6.0	
2020-12-11 05:55:50,056	[DEBUG]	
2020-12-11 05:55:51,027	[INFO]	432	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:55:51,979	[INFO]	433	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:55:52,930	[INFO]	434	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:55:53,890	[INFO]	435	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:55:54,851	[INFO]	436	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:55:54,852	[INFO]	437	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:55:54,853	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 05:55:54,853	[INFO]	438	SUCCESS	+6.0	
2020-12-11 05:55:54,854	[DEBUG]	
2020-12-11 05:55:58,123	[INFO]	439	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:55:58,124	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 05:56:01,307	[INFO]	440	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:56:01,308	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 05:56:01,309	[INFO]	441	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:56:01,310	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 05:56:04,528	[INFO]	442	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:56:04,529	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,28 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 05:56:05,495	[INFO]	443	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:56:05,497	[INFO]	444	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:56:05,497	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 05:56:06,455	[INFO]	445	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:56:07,375	[INFO]	446	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:56:08,347	[INFO]	447	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:56:09,343	[INFO]	448	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:56:09,345	[INFO]	449	SUCCESS	+6.0	
2020-12-11 05:56:09,345	[DEBUG]	
2020-12-11 05:56:09,347	[INFO]	450	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:56:10,304	[INFO]	451	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:56:13,510	[INFO]	452	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:56:13,511	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 05:56:14,494	[INFO]	453	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:56:14,496	[INFO]	454	SUCCESS	+6.0	
2020-12-11 05:56:14,496	[DEBUG]	
2020-12-11 05:56:15,437	[INFO]	455	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:56:16,389	[INFO]	456	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:56:17,360	[INFO]	457	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:56:18,321	[INFO]	458	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:56:19,276	[INFO]	459	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:56:20,218	[INFO]	460	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:56:21,190	[INFO]	461	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:56:21,191	[INFO]	462	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:56:22,172	[INFO]	463	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:56:23,133	[INFO]	464	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:56:23,136	[INFO]	465	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:56:23,137	[DEBUG]	
2020-12-11 05:56:23,138	[INFO]	466	SUCCESS	+6.0	
2020-12-11 05:56:23,139	[DEBUG]	
2020-12-11 05:56:24,075	[INFO]	467	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:56:27,372	[INFO]	468	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:56:27,373	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 05:56:27,373	[INFO]	469	SUCCESS	+6.0	
2020-12-11 05:56:27,374	[DEBUG]	
2020-12-11 05:56:28,267	[INFO]	470	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:56:28,268	[INFO]	471	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:56:29,201	[INFO]	472	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:56:30,194	[INFO]	473	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:56:31,176	[INFO]	474	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:56:32,151	[INFO]	475	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:56:35,428	[INFO]	476	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:56:35,430	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:56:35,431	[INFO]	477	SUCCESS	+6.0	
2020-12-11 05:56:35,432	[DEBUG]	
2020-12-11 05:56:36,336	[INFO]	478	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:56:37,265	[INFO]	479	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:56:38,213	[INFO]	480	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:56:39,151	[INFO]	481	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:56:42,431	[INFO]	482	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:56:42,432	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 05:56:43,368	[INFO]	483	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:56:43,369	[INFO]	484	SUCCESS	+6.0	
2020-12-11 05:56:43,370	[DEBUG]	
2020-12-11 05:56:44,305	[INFO]	485	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:56:45,270	[INFO]	486	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:56:46,230	[INFO]	487	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:56:47,191	[INFO]	488	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:56:48,157	[INFO]	489	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:56:49,106	[INFO]	490	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:56:50,060	[INFO]	491	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:56:50,061	[INFO]	492	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:56:53,352	[INFO]	493	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:56:53,353	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 05:56:53,353	[INFO]	494	SUCCESS	+6.0	
2020-12-11 05:56:53,353	[DEBUG]	
2020-12-11 05:56:54,277	[INFO]	495	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:56:55,206	[INFO]	496	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:56:56,142	[INFO]	497	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:56:57,128	[INFO]	498	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:56:58,108	[INFO]	499	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:56:58,112	[INFO]	500	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:56:58,112	[INFO]	==== END ====
2020-12-11 05:56:58,112	[INFO]	Reason: step budget
2020-12-11 05:56:58,113	[INFO]	
2020-12-11 05:56:58,114	[INFO]	========== EPOCH 14 ==========
2020-12-11 05:56:58,114	[INFO]	==== WARMUP ====
2020-12-11 05:57:01,282	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 05:57:01,282	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 05:57:04,551	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 05:57:04,552	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 05:57:07,812	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 05:57:07,812	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 05:57:11,010	[INFO]	INITIAL	SUCCESS	 6.0	
2020-12-11 05:57:11,010	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 05:57:11,010	[INFO]	==== START ====
2020-12-11 05:57:11,939	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:57:11,940	[INFO]	2	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:57:11,940	[DEBUG]	
2020-12-11 05:57:12,896	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:57:16,072	[INFO]	4	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:57:16,073	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 05:57:16,074	[INFO]	5	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:57:16,075	[DEBUG]	
2020-12-11 05:57:16,075	[INFO]	6	SUCCESS	+6.0	
2020-12-11 05:57:16,075	[DEBUG]	
2020-12-11 05:57:17,049	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:57:20,333	[INFO]	8	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:57:20,334	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 05:57:21,244	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:57:21,245	[INFO]	10	SUCCESS	+6.0	
2020-12-11 05:57:21,246	[DEBUG]	
2020-12-11 05:57:22,176	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:57:23,118	[INFO]	12	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:57:24,045	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:57:25,014	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:57:28,184	[INFO]	15	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:57:28,185	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 05:57:29,106	[INFO]	16	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:57:30,081	[INFO]	17	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:57:30,083	[INFO]	18	SUCCESS	+6.0	
2020-12-11 05:57:30,084	[DEBUG]	
2020-12-11 05:57:33,364	[INFO]	19	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:57:33,366	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 05:57:36,614	[INFO]	20	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:57:36,615	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
***************
*** 23,28 ****
--- 24,33 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 05:57:36,617	[INFO]	21	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:57:36,617	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
***************
*** 23,28 ****
--- 24,33 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 05:57:39,851	[INFO]	22	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:57:39,853	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 05:57:39,855	[INFO]	23	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:57:39,856	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 05:57:39,858	[INFO]	24	SUCCESS	+6.0	
2020-12-11 05:57:39,859	[DEBUG]	
2020-12-11 05:57:40,792	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:57:41,728	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:57:42,662	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:57:43,600	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:57:46,893	[INFO]	29	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:57:46,894	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,27 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 05:57:46,894	[INFO]	30	SUCCESS	+6.0	
2020-12-11 05:57:46,895	[DEBUG]	
2020-12-11 05:57:47,825	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:57:48,735	[INFO]	32	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:57:49,698	[INFO]	33	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:57:50,640	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:57:51,595	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:57:52,571	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:57:53,725	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:57:54,689	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:57:54,690	[INFO]	39	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:57:54,691	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,27 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 05:57:55,638	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:57:58,944	[INFO]	41	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:57:58,946	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,24 ****
--- 14,28 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 05:57:58,948	[INFO]	42	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:57:58,949	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 05:57:58,950	[INFO]	43	SUCCESS	+6.0	
2020-12-11 05:57:58,951	[DEBUG]	
2020-12-11 05:58:02,212	[INFO]	44	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:58:02,213	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 05:58:03,124	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:58:03,127	[INFO]	46	SUCCESS	+6.0	
2020-12-11 05:58:03,127	[DEBUG]	
2020-12-11 05:58:03,130	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:58:04,083	[INFO]	48	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:58:07,315	[INFO]	49	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:58:07,316	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 05:58:10,579	[INFO]	50	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:58:10,580	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,27 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
! 	    i++;
  	    i++;
          }
  

2020-12-11 05:58:11,449	[INFO]	51	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:58:12,414	[INFO]	52	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:58:12,417	[INFO]	53	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:58:12,419	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 05:58:13,369	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:58:14,320	[INFO]	55	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:58:15,266	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:58:15,267	[INFO]	57	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:58:15,268	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 05:58:18,504	[INFO]	58	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:58:18,506	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,26 ****
--- 19,28 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
  	    i++;
          }
  

2020-12-11 05:58:21,696	[INFO]	59	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:58:21,697	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 05:58:21,698	[INFO]	60	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:58:21,699	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 05:58:21,699	[INFO]	61	SUCCESS	+6.0	
2020-12-11 05:58:21,700	[DEBUG]	
2020-12-11 05:58:22,630	[INFO]	62	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:58:23,559	[INFO]	63	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:58:24,490	[INFO]	64	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:58:25,436	[INFO]	65	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:58:28,621	[INFO]	66	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:58:28,622	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:58:29,610	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:58:29,611	[INFO]	68	SUCCESS	+6.0	
2020-12-11 05:58:29,611	[DEBUG]	
2020-12-11 05:58:30,578	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:58:31,525	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:58:31,526	[INFO]	71	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:58:31,526	[DEBUG]	
2020-12-11 05:58:32,477	[INFO]	72	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:58:32,478	[INFO]	73	SUCCESS	+6.0	
2020-12-11 05:58:32,478	[DEBUG]	
2020-12-11 05:58:33,407	[INFO]	74	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:58:34,337	[INFO]	75	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:58:34,338	[INFO]	76	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:58:35,274	[INFO]	77	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:58:36,248	[INFO]	78	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:58:37,203	[INFO]	79	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:58:38,149	[INFO]	80	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:58:39,144	[INFO]	81	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 05:58:39,148	[INFO]	82	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:58:40,067	[INFO]	83	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:58:41,010	[INFO]	84	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:58:41,967	[INFO]	85	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:58:42,905	[INFO]	86	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:58:43,845	[INFO]	87	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:58:43,846	[INFO]	88	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:58:43,846	[DEBUG]	
2020-12-11 05:58:43,847	[INFO]	89	SUCCESS	+6.0	
2020-12-11 05:58:43,847	[DEBUG]	
2020-12-11 05:58:44,792	[INFO]	90	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:58:45,742	[INFO]	91	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:58:46,693	[INFO]	92	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:58:46,694	[INFO]	93	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:58:47,650	[INFO]	94	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 05:58:50,878	[INFO]	95	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:58:50,880	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 05:58:51,774	[INFO]	96	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:58:52,714	[INFO]	97	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:58:53,686	[INFO]	98	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:58:54,613	[INFO]	99	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:58:55,531	[INFO]	100	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:58:56,482	[INFO]	101	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:58:57,444	[INFO]	102	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:58:57,445	[INFO]	103	SUCCESS	+6.0	
2020-12-11 05:58:57,445	[DEBUG]	
2020-12-11 05:59:00,672	[INFO]	104	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 05:59:00,674	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 05:59:01,587	[INFO]	105	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:59:01,588	[INFO]	106	SUCCESS	+6.0	
2020-12-11 05:59:01,589	[DEBUG]	
2020-12-11 05:59:02,546	[INFO]	107	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:59:03,510	[INFO]	108	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:59:04,455	[INFO]	109	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:59:07,857	[INFO]	110	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:59:07,859	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 05:59:07,862	[INFO]	111	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:59:07,863	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 05:59:11,189	[INFO]	112	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:59:11,190	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 05:59:12,081	[INFO]	113	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:59:12,082	[INFO]	114	SUCCESS	+6.0	
2020-12-11 05:59:12,082	[DEBUG]	
2020-12-11 05:59:13,010	[INFO]	115	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 05:59:16,298	[INFO]	116	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:59:16,299	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 05:59:16,299	[INFO]	117	SUCCESS	+6.0	
2020-12-11 05:59:16,300	[DEBUG]	
2020-12-11 05:59:17,213	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:59:18,133	[INFO]	119	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:59:19,081	[INFO]	120	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:59:22,267	[INFO]	121	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:59:22,268	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 05:59:23,219	[INFO]	122	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:59:23,221	[INFO]	123	SUCCESS	+6.0	
2020-12-11 05:59:23,222	[DEBUG]	
2020-12-11 05:59:23,224	[INFO]	124	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 05:59:24,182	[INFO]	125	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:59:25,153	[INFO]	126	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:59:26,103	[INFO]	127	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:59:29,399	[INFO]	128	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 05:59:29,400	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 05:59:29,401	[INFO]	129	SUCCESS	+6.0	
2020-12-11 05:59:29,401	[DEBUG]	
2020-12-11 05:59:29,402	[INFO]	130	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:59:29,403	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 05:59:30,341	[INFO]	131	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:59:31,288	[INFO]	132	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:59:32,237	[INFO]	133	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:59:32,238	[INFO]	134	SUCCESS	+6.0	
2020-12-11 05:59:32,238	[DEBUG]	
2020-12-11 05:59:33,203	[INFO]	135	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:59:34,147	[INFO]	136	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:59:37,393	[INFO]	137	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:59:37,394	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 05:59:38,320	[INFO]	138	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:59:38,321	[INFO]	139	SUCCESS	+6.0	
2020-12-11 05:59:38,321	[DEBUG]	
2020-12-11 05:59:39,260	[INFO]	140	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:59:40,223	[INFO]	141	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 05:59:41,176	[INFO]	142	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:59:42,133	[INFO]	143	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:59:43,062	[INFO]	144	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:59:43,987	[INFO]	145	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 05:59:43,988	[INFO]	146	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:59:43,989	[DEBUG]	
2020-12-11 05:59:44,962	[INFO]	147	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 05:59:45,892	[INFO]	148	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 05:59:45,893	[INFO]	149	SUCCESS	+6.0	
2020-12-11 05:59:45,893	[DEBUG]	
2020-12-11 05:59:46,874	[INFO]	150	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:59:47,841	[INFO]	151	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 05:59:51,010	[INFO]	152	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:59:51,010	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 05:59:51,904	[INFO]	153	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 05:59:52,866	[INFO]	154	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 05:59:52,867	[INFO]	155	SUCCESS	+6.0	
2020-12-11 05:59:52,868	[DEBUG]	
2020-12-11 05:59:53,811	[INFO]	156	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 05:59:54,747	[INFO]	157	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 05:59:57,982	[INFO]	158	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 05:59:57,983	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 05:59:57,984	[INFO]	159	SUCCESS	+6.0	
2020-12-11 05:59:57,984	[DEBUG]	
2020-12-11 05:59:58,932	[INFO]	160	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 05:59:58,933	[INFO]	161	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 05:59:58,933	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 05:59:59,831	[INFO]	162	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:00:03,091	[INFO]	163	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:00:03,092	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,27 ****
--- 16,31 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 06:00:03,093	[INFO]	164	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:00:03,094	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 06:00:03,095	[INFO]	165	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:00:03,095	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 06:00:03,096	[INFO]	166	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:00:03,096	[DEBUG]	
2020-12-11 06:00:03,097	[INFO]	167	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:00:03,097	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 06:00:03,098	[INFO]	168	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:00:03,099	[DEBUG]	
2020-12-11 06:00:03,099	[INFO]	169	SUCCESS	+6.0	
2020-12-11 06:00:03,100	[DEBUG]	
2020-12-11 06:00:04,047	[INFO]	170	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:00:07,343	[INFO]	171	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:00:07,344	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 06:00:07,345	[INFO]	172	SUCCESS	+6.0	
2020-12-11 06:00:07,345	[DEBUG]	
2020-12-11 06:00:08,264	[INFO]	173	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:00:08,266	[INFO]	174	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:00:08,266	[INFO]	175	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:00:08,267	[DEBUG]	
2020-12-11 06:00:08,267	[INFO]	176	SUCCESS	+6.0	
2020-12-11 06:00:08,267	[DEBUG]	
2020-12-11 06:00:11,477	[INFO]	177	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:00:11,478	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 06:00:11,479	[INFO]	178	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:00:11,480	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 06:00:12,413	[INFO]	179	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:00:12,415	[INFO]	180	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:00:12,415	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 06:00:12,416	[INFO]	181	SUCCESS	+6.0	
2020-12-11 06:00:12,416	[DEBUG]	
2020-12-11 06:00:13,346	[INFO]	182	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:00:14,241	[INFO]	183	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:00:15,208	[INFO]	184	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:00:15,211	[INFO]	185	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:00:16,153	[INFO]	186	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:00:17,076	[INFO]	187	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:00:18,036	[INFO]	188	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:00:18,992	[INFO]	189	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:00:18,993	[INFO]	190	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:00:22,351	[INFO]	191	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:00:22,353	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
          }
  
          return sorted_arr;

2020-12-11 06:00:22,355	[INFO]	192	SUCCESS	+6.0	
2020-12-11 06:00:22,355	[DEBUG]	
2020-12-11 06:00:25,499	[INFO]	193	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:00:25,500	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 06:00:26,427	[INFO]	194	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:00:27,402	[INFO]	195	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:00:27,404	[INFO]	196	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:00:27,404	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 06:00:27,405	[INFO]	197	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:00:27,406	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 06:00:27,407	[INFO]	198	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:00:27,407	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 06:00:27,408	[INFO]	199	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:00:27,408	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 06:00:28,371	[INFO]	200	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:00:28,373	[INFO]	201	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:00:28,373	[INFO]	202	SUCCESS	+6.0	
2020-12-11 06:00:28,373	[DEBUG]	
2020-12-11 06:00:29,329	[INFO]	203	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:00:30,367	[INFO]	204	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:00:31,318	[INFO]	205	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:00:32,288	[INFO]	206	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:00:33,251	[INFO]	207	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:00:34,182	[INFO]	208	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:00:35,218	[INFO]	209	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:00:36,515	[INFO]	210	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:00:37,674	[INFO]	211	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:00:38,834	[INFO]	212	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:00:38,836	[INFO]	213	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:00:38,836	[DEBUG]	
2020-12-11 06:00:38,837	[INFO]	214	SUCCESS	+6.0	
2020-12-11 06:00:38,838	[DEBUG]	
2020-12-11 06:00:40,107	[INFO]	215	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:00:41,112	[INFO]	216	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:00:44,424	[INFO]	217	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:00:44,426	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:00:44,427	[INFO]	218	SUCCESS	+6.0	
2020-12-11 06:00:44,428	[DEBUG]	
2020-12-11 06:00:45,337	[INFO]	219	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:00:45,338	[INFO]	220	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:00:45,339	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 06:00:45,339	[INFO]	221	SUCCESS	+6.0	
2020-12-11 06:00:45,340	[DEBUG]	
2020-12-11 06:00:46,314	[INFO]	222	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:00:47,299	[INFO]	223	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:00:50,537	[INFO]	224	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:00:50,539	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,27 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 06:00:50,540	[INFO]	225	SUCCESS	+6.0	
2020-12-11 06:00:50,540	[DEBUG]	
2020-12-11 06:00:50,542	[INFO]	226	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:00:50,543	[INFO]	227	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:00:51,459	[INFO]	228	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:00:54,666	[INFO]	229	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:00:54,667	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 06:00:54,668	[INFO]	230	SUCCESS	+6.0	
2020-12-11 06:00:54,668	[DEBUG]	
2020-12-11 06:00:57,869	[INFO]	231	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:00:57,870	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 06:00:58,781	[INFO]	232	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:00:58,782	[INFO]	233	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:00:58,783	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 06:00:59,725	[INFO]	234	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:01:00,599	[INFO]	235	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:01:00,600	[INFO]	236	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:01:00,600	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 06:01:01,522	[INFO]	237	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:01:02,396	[INFO]	238	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:01:03,323	[INFO]	239	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:01:03,324	[INFO]	240	SUCCESS	+6.0	
2020-12-11 06:01:03,324	[DEBUG]	
2020-12-11 06:01:04,277	[INFO]	241	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:01:05,270	[INFO]	242	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:01:08,515	[INFO]	243	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:01:08,516	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 06:01:09,449	[INFO]	244	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:01:09,450	[INFO]	245	SUCCESS	+6.0	
2020-12-11 06:01:09,450	[DEBUG]	
2020-12-11 06:01:10,376	[INFO]	246	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:01:11,278	[INFO]	247	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:01:14,535	[INFO]	248	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:01:14,536	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:01:15,477	[INFO]	249	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:01:15,480	[INFO]	250	SUCCESS	+6.0	
2020-12-11 06:01:15,481	[DEBUG]	
2020-12-11 06:01:16,478	[INFO]	251	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:01:17,406	[INFO]	252	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:01:17,408	[INFO]	253	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:01:18,376	[INFO]	254	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:01:19,356	[INFO]	255	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:01:20,374	[INFO]	256	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:01:20,377	[INFO]	257	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:01:20,378	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 06:01:20,380	[INFO]	258	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:01:20,381	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 06:01:20,383	[INFO]	259	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:01:20,384	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 06:01:21,341	[INFO]	260	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:01:24,585	[INFO]	261	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:01:24,586	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    
  	    i++;
          }
  

2020-12-11 06:01:25,484	[INFO]	262	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:01:25,485	[INFO]	263	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:01:25,485	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 06:01:25,486	[INFO]	264	SUCCESS	+6.0	
2020-12-11 06:01:25,486	[DEBUG]	
2020-12-11 06:01:28,717	[INFO]	265	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:01:28,718	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 06:01:28,719	[INFO]	266	SUCCESS	+6.0	
2020-12-11 06:01:28,719	[DEBUG]	
2020-12-11 06:01:31,951	[INFO]	267	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:01:31,952	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 06:01:31,953	[INFO]	268	SUCCESS	+6.0	
2020-12-11 06:01:31,953	[DEBUG]	
2020-12-11 06:01:32,888	[INFO]	269	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:01:33,814	[INFO]	270	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:01:34,746	[INFO]	271	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:01:35,666	[INFO]	272	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:01:35,667	[INFO]	273	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:01:36,606	[INFO]	274	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:01:39,861	[INFO]	275	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:01:39,862	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 06:01:40,820	[INFO]	276	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:01:41,736	[INFO]	277	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:01:42,702	[INFO]	278	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:01:45,930	[INFO]	279	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:01:45,931	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
***************
*** 23,28 ****
--- 24,33 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 06:01:45,932	[INFO]	280	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:01:45,932	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 06:01:45,933	[INFO]	281	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:01:45,933	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 06:01:45,934	[INFO]	282	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:01:45,935	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 06:01:46,895	[INFO]	283	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:01:50,087	[INFO]	284	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:01:50,088	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          return sorted_arr;
      }

2020-12-11 06:01:50,089	[INFO]	285	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:01:50,089	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 06:01:50,090	[INFO]	286	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:01:50,091	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 06:01:50,091	[INFO]	287	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:01:50,092	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 06:01:51,058	[INFO]	288	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:01:51,060	[INFO]	289	SUCCESS	+6.0	
2020-12-11 06:01:51,060	[DEBUG]	
2020-12-11 06:01:52,048	[INFO]	290	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:01:52,050	[INFO]	291	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:01:55,269	[INFO]	292	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:01:55,270	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 06:01:55,270	[INFO]	293	SUCCESS	+6.0	
2020-12-11 06:01:55,271	[DEBUG]	
2020-12-11 06:01:58,447	[INFO]	294	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:01:58,448	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 06:01:59,382	[INFO]	295	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:01:59,383	[INFO]	296	SUCCESS	+6.0	
2020-12-11 06:01:59,383	[DEBUG]	
2020-12-11 06:02:00,325	[INFO]	297	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:02:01,261	[INFO]	298	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:02:02,207	[INFO]	299	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:02:03,168	[INFO]	300	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:02:04,127	[INFO]	301	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:02:05,073	[INFO]	302	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:02:06,057	[INFO]	303	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:02:07,018	[INFO]	304	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:02:10,348	[INFO]	305	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:02:10,349	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 06:02:10,350	[INFO]	306	SUCCESS	+6.0	
2020-12-11 06:02:10,350	[DEBUG]	
2020-12-11 06:02:10,351	[INFO]	307	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:02:11,246	[INFO]	308	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:02:12,169	[INFO]	309	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:02:13,109	[INFO]	310	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:02:14,040	[INFO]	311	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:02:15,000	[INFO]	312	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:02:15,948	[INFO]	313	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:02:16,889	[INFO]	314	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:02:17,863	[INFO]	315	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:02:18,804	[INFO]	316	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:02:19,739	[INFO]	317	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:02:20,676	[INFO]	318	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:02:21,603	[INFO]	319	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:02:21,604	[INFO]	320	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:02:22,573	[INFO]	321	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:02:22,574	[INFO]	322	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:02:23,504	[INFO]	323	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:02:24,456	[INFO]	324	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:02:25,439	[INFO]	325	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:02:26,383	[INFO]	326	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:02:27,364	[INFO]	327	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:02:28,304	[INFO]	328	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:02:29,252	[INFO]	329	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:02:30,235	[INFO]	330	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:02:31,159	[INFO]	331	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:02:32,121	[INFO]	332	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:02:35,349	[INFO]	333	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:02:35,349	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 06:02:36,275	[INFO]	334	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:02:36,276	[INFO]	335	SUCCESS	+6.0	
2020-12-11 06:02:36,277	[DEBUG]	
2020-12-11 06:02:37,228	[INFO]	336	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:02:38,221	[INFO]	337	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:02:39,203	[INFO]	338	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:02:40,146	[INFO]	339	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:02:41,096	[INFO]	340	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:02:42,011	[INFO]	341	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:02:42,995	[INFO]	342	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:02:43,971	[INFO]	343	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:02:47,246	[INFO]	344	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:02:47,247	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 06:02:47,248	[INFO]	345	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:02:47,248	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 06:02:47,249	[INFO]	346	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:02:47,249	[DEBUG]	
2020-12-11 06:02:48,190	[INFO]	347	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:02:49,165	[INFO]	348	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:02:49,168	[INFO]	349	SUCCESS	+6.0	
2020-12-11 06:02:49,169	[DEBUG]	
2020-12-11 06:02:50,112	[INFO]	350	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:02:53,322	[INFO]	351	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:02:53,323	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 06:02:56,573	[INFO]	352	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:02:56,574	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 06:02:57,487	[INFO]	353	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:02:57,491	[INFO]	354	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:02:57,492	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 06:02:57,495	[INFO]	355	SUCCESS	+6.0	
2020-12-11 06:02:57,495	[DEBUG]	
2020-12-11 06:02:58,424	[INFO]	356	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:02:58,425	[INFO]	357	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:02:59,372	[INFO]	358	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:03:00,341	[INFO]	359	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:03:01,287	[INFO]	360	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:03:02,264	[INFO]	361	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:03:03,192	[INFO]	362	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:03:04,142	[INFO]	363	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:03:07,497	[INFO]	364	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:03:07,499	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
          }
  
          return sorted_arr;

2020-12-11 06:03:08,438	[INFO]	365	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:03:08,439	[INFO]	366	SUCCESS	+6.0	
2020-12-11 06:03:08,440	[DEBUG]	
2020-12-11 06:03:09,378	[INFO]	367	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:03:10,336	[INFO]	368	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:03:11,252	[INFO]	369	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:03:12,196	[INFO]	370	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:03:12,197	[INFO]	371	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:03:12,198	[INFO]	372	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:03:12,198	[DEBUG]	
2020-12-11 06:03:12,199	[INFO]	373	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:03:12,199	[INFO]	374	SUCCESS	+6.0	
2020-12-11 06:03:12,199	[DEBUG]	
2020-12-11 06:03:15,421	[INFO]	375	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:03:15,423	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 06:03:16,372	[INFO]	376	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:03:16,375	[INFO]	377	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:03:16,376	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 06:03:19,736	[INFO]	378	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:03:19,737	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,28 ****
--- 21,31 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+ 
+         i++;
  
          return sorted_arr;
      }

2020-12-11 06:03:20,873	[INFO]	379	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:03:21,875	[INFO]	380	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:03:21,880	[INFO]	381	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:03:21,881	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,28 ****
--- 21,31 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+ 
+         i++;
  
          return sorted_arr;
      }

2020-12-11 06:03:21,884	[INFO]	382	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:03:21,885	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 06:03:22,884	[INFO]	383	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:03:22,886	[INFO]	384	SUCCESS	+6.0	
2020-12-11 06:03:22,887	[DEBUG]	
2020-12-11 06:03:26,193	[INFO]	385	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:03:26,194	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,34 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 06:03:29,621	[INFO]	386	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:03:29,624	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
***************
*** 24,29 ****
--- 25,35 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 06:03:32,773	[INFO]	387	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:03:32,775	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 06:03:33,735	[INFO]	388	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:03:33,737	[INFO]	389	SUCCESS	+6.0	
2020-12-11 06:03:33,738	[DEBUG]	
2020-12-11 06:03:34,681	[INFO]	390	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:03:34,682	[INFO]	391	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:03:34,683	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 06:03:35,617	[INFO]	392	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:03:36,572	[INFO]	393	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:03:37,523	[INFO]	394	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:03:37,524	[INFO]	395	SUCCESS	+6.0	
2020-12-11 06:03:37,524	[DEBUG]	
2020-12-11 06:03:38,472	[INFO]	396	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:03:39,429	[INFO]	397	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:03:40,381	[INFO]	398	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:03:41,329	[INFO]	399	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:03:42,287	[INFO]	400	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:03:43,249	[INFO]	401	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:03:44,195	[INFO]	402	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:03:45,175	[INFO]	403	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:03:46,155	[INFO]	404	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:03:47,131	[INFO]	405	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:03:50,394	[INFO]	406	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:03:50,396	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:03:50,398	[INFO]	407	SUCCESS	+6.0	
2020-12-11 06:03:50,399	[DEBUG]	
2020-12-11 06:03:51,310	[INFO]	408	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:03:52,235	[INFO]	409	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:03:55,516	[INFO]	410	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:03:55,516	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 06:03:56,428	[INFO]	411	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:03:56,429	[INFO]	412	SUCCESS	+6.0	
2020-12-11 06:03:56,430	[DEBUG]	
2020-12-11 06:03:56,430	[INFO]	413	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:03:56,431	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 06:03:59,742	[INFO]	414	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:03:59,745	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,27 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 06:04:00,672	[INFO]	415	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:04:01,604	[INFO]	416	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:04:01,605	[INFO]	417	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:04:01,605	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 06:04:02,576	[INFO]	418	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:04:02,577	[INFO]	419	SUCCESS	+6.0	
2020-12-11 06:04:02,578	[DEBUG]	
2020-12-11 06:04:03,547	[INFO]	420	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:04:04,478	[INFO]	421	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:04:07,789	[INFO]	422	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:04:07,790	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 06:04:08,744	[INFO]	423	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:04:08,748	[INFO]	424	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:04:09,687	[INFO]	425	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:04:10,662	[INFO]	426	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:04:11,607	[INFO]	427	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:04:11,608	[INFO]	428	SUCCESS	+6.0	
2020-12-11 06:04:11,608	[DEBUG]	
2020-12-11 06:04:12,553	[INFO]	429	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:04:15,707	[INFO]	430	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:04:15,708	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 06:04:15,709	[INFO]	431	SUCCESS	+6.0	
2020-12-11 06:04:15,709	[DEBUG]	
2020-12-11 06:04:18,875	[INFO]	432	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:04:18,876	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:04:18,877	[INFO]	433	SUCCESS	+6.0	
2020-12-11 06:04:18,877	[DEBUG]	
2020-12-11 06:04:19,806	[INFO]	434	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:04:20,743	[INFO]	435	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:04:21,696	[INFO]	436	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:04:22,671	[INFO]	437	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:04:25,881	[INFO]	438	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:04:25,882	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 06:04:25,883	[INFO]	439	SUCCESS	+6.0	
2020-12-11 06:04:25,883	[DEBUG]	
2020-12-11 06:04:26,800	[INFO]	440	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:04:26,802	[INFO]	441	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:04:26,802	[DEBUG]	
2020-12-11 06:04:27,759	[INFO]	442	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:04:28,726	[INFO]	443	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:04:28,727	[INFO]	444	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:04:28,727	[DEBUG]	
2020-12-11 06:04:28,728	[INFO]	445	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:04:28,728	[DEBUG]	
2020-12-11 06:04:29,704	[INFO]	446	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:04:29,706	[INFO]	447	SUCCESS	+6.0	
2020-12-11 06:04:29,707	[DEBUG]	
2020-12-11 06:04:30,667	[INFO]	448	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:04:31,620	[INFO]	449	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:04:32,548	[INFO]	450	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:04:33,519	[INFO]	451	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:04:34,490	[INFO]	452	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:04:34,494	[INFO]	453	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:04:34,495	[INFO]	454	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:04:34,495	[DEBUG]	
2020-12-11 06:04:34,496	[INFO]	455	SUCCESS	+6.0	
2020-12-11 06:04:34,497	[DEBUG]	
2020-12-11 06:04:34,498	[INFO]	456	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:04:34,498	[DEBUG]	
2020-12-11 06:04:34,499	[INFO]	457	SUCCESS	+6.0	
2020-12-11 06:04:34,499	[DEBUG]	
2020-12-11 06:04:35,450	[INFO]	458	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:04:38,722	[INFO]	459	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:04:38,723	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 06:04:38,724	[INFO]	460	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:04:38,725	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 06:04:39,632	[INFO]	461	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:04:39,634	[INFO]	462	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:04:39,634	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 06:04:40,551	[INFO]	463	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:04:41,502	[INFO]	464	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:04:41,503	[INFO]	465	SUCCESS	+6.0	
2020-12-11 06:04:41,503	[DEBUG]	
2020-12-11 06:04:41,504	[INFO]	466	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:04:41,505	[INFO]	467	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:04:42,445	[INFO]	468	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:04:43,401	[INFO]	469	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:04:46,587	[INFO]	470	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:04:46,588	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:04:46,589	[INFO]	471	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:04:46,589	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:04:47,492	[INFO]	472	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:04:47,493	[INFO]	473	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:04:47,494	[DEBUG]	
2020-12-11 06:04:47,494	[INFO]	474	SUCCESS	+6.0	
2020-12-11 06:04:47,494	[DEBUG]	
2020-12-11 06:04:47,495	[INFO]	475	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:04:47,496	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 06:04:47,496	[INFO]	476	SUCCESS	+6.0	
2020-12-11 06:04:47,497	[DEBUG]	
2020-12-11 06:04:48,437	[INFO]	477	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:04:49,389	[INFO]	478	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:04:49,391	[INFO]	479	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:04:50,328	[INFO]	480	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:04:51,250	[INFO]	481	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:04:52,196	[INFO]	482	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:04:53,112	[INFO]	483	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:04:54,071	[INFO]	484	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:04:54,072	[INFO]	485	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:04:54,072	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:04:55,027	[INFO]	486	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:04:55,028	[INFO]	487	SUCCESS	+6.0	
2020-12-11 06:04:55,028	[DEBUG]	
2020-12-11 06:04:55,029	[INFO]	488	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:04:55,030	[DEBUG]	
2020-12-11 06:04:58,309	[INFO]	489	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:04:58,310	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 06:04:59,249	[INFO]	490	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:04:59,252	[INFO]	491	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:04:59,252	[DEBUG]	
2020-12-11 06:05:00,209	[INFO]	492	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:05:00,210	[INFO]	493	SUCCESS	+6.0	
2020-12-11 06:05:00,211	[DEBUG]	
2020-12-11 06:05:03,448	[INFO]	494	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:05:03,450	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 06:05:03,452	[INFO]	495	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:05:03,453	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 06:05:03,455	[INFO]	496	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:05:03,457	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 06:05:03,459	[INFO]	497	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:05:03,460	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 06:05:04,406	[INFO]	498	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:05:05,395	[INFO]	499	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:05:05,396	[INFO]	500	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:05:05,397	[DEBUG]	
2020-12-11 06:05:05,397	[INFO]	==== END ====
2020-12-11 06:05:05,397	[INFO]	Reason: step budget
2020-12-11 06:05:05,397	[INFO]	
2020-12-11 06:05:05,397	[INFO]	========== EPOCH 15 ==========
2020-12-11 06:05:05,398	[INFO]	==== WARMUP ====
2020-12-11 06:05:08,621	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 06:05:08,621	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 06:05:11,888	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 06:05:11,889	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 06:05:15,139	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 06:05:15,139	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 06:05:18,324	[INFO]	INITIAL	SUCCESS	 6.0	
2020-12-11 06:05:18,324	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 06:05:18,324	[INFO]	==== START ====
2020-12-11 06:05:19,262	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:05:20,213	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:05:20,214	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:05:20,215	[INFO]	4	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:05:20,215	[DEBUG]	
2020-12-11 06:05:21,190	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:05:22,151	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:05:23,130	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:05:26,370	[INFO]	8	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:05:26,371	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 06:05:27,291	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:05:28,249	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:05:29,190	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:05:29,191	[INFO]	12	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:05:29,191	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 06:05:30,170	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:05:31,116	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:05:31,119	[INFO]	15	SUCCESS	+6.0	
2020-12-11 06:05:31,120	[DEBUG]	
2020-12-11 06:05:32,083	[INFO]	16	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:05:35,359	[INFO]	17	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:05:35,360	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:05:36,301	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:05:37,248	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:05:38,181	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:05:39,105	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:05:40,011	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:05:40,966	[INFO]	23	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:05:41,886	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:05:42,771	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:05:42,772	[INFO]	26	SUCCESS	+6.0	
2020-12-11 06:05:42,772	[DEBUG]	
2020-12-11 06:05:43,730	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:05:44,669	[INFO]	28	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:05:44,670	[INFO]	29	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:05:44,671	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:05:45,616	[INFO]	30	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:05:45,617	[INFO]	31	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:05:45,618	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:05:46,564	[INFO]	32	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:05:46,566	[INFO]	33	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:05:46,566	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:05:46,567	[INFO]	34	SUCCESS	+6.0	
2020-12-11 06:05:46,567	[DEBUG]	
2020-12-11 06:05:47,492	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:05:48,463	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:05:49,447	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:05:52,653	[INFO]	38	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:05:52,654	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 06:05:52,655	[INFO]	39	SUCCESS	+6.0	
2020-12-11 06:05:52,655	[DEBUG]	
2020-12-11 06:05:53,596	[INFO]	40	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:05:54,581	[INFO]	41	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:05:55,529	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:05:56,457	[INFO]	43	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:05:56,459	[INFO]	44	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:05:56,459	[DEBUG]	
2020-12-11 06:05:57,385	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:05:58,324	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:05:58,325	[INFO]	47	SUCCESS	+6.0	
2020-12-11 06:05:58,326	[DEBUG]	
2020-12-11 06:05:59,302	[INFO]	48	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:05:59,305	[INFO]	49	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:05:59,306	[DEBUG]	
2020-12-11 06:06:00,239	[INFO]	50	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:06:00,240	[INFO]	51	SUCCESS	+6.0	
2020-12-11 06:06:00,240	[DEBUG]	
2020-12-11 06:06:01,197	[INFO]	52	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:06:04,416	[INFO]	53	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:06:04,417	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 06:06:07,625	[INFO]	54	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:06:07,626	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,29 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 06:06:08,531	[INFO]	55	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:06:11,747	[INFO]	56	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:06:11,748	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,26 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 14,30 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 06:06:11,749	[INFO]	57	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:06:11,750	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,29 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 06:06:14,990	[INFO]	58	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:06:14,991	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 06:06:14,991	[INFO]	59	SUCCESS	+6.0	
2020-12-11 06:06:14,992	[DEBUG]	
2020-12-11 06:06:14,992	[INFO]	60	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:06:14,993	[INFO]	61	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:06:14,993	[DEBUG]	
2020-12-11 06:06:14,994	[INFO]	62	SUCCESS	+6.0	
2020-12-11 06:06:14,994	[DEBUG]	
2020-12-11 06:06:15,937	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:06:16,902	[INFO]	64	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:06:17,866	[INFO]	65	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:06:18,824	[INFO]	66	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:06:22,079	[INFO]	67	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:06:22,080	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 06:06:22,081	[INFO]	68	SUCCESS	+6.0	
2020-12-11 06:06:22,081	[DEBUG]	
2020-12-11 06:06:22,082	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:06:22,975	[INFO]	70	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:06:26,191	[INFO]	71	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:06:26,192	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,34 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 06:06:26,192	[INFO]	72	SUCCESS	+6.0	
2020-12-11 06:06:26,193	[DEBUG]	
2020-12-11 06:06:27,111	[INFO]	73	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:06:30,396	[INFO]	74	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:06:30,397	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:06:31,330	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:06:31,331	[INFO]	76	SUCCESS	+6.0	
2020-12-11 06:06:31,331	[DEBUG]	
2020-12-11 06:06:31,332	[INFO]	77	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:06:31,332	[DEBUG]	
2020-12-11 06:06:31,332	[INFO]	78	SUCCESS	+6.0	
2020-12-11 06:06:31,333	[DEBUG]	
2020-12-11 06:06:31,334	[INFO]	79	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:06:31,334	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 06:06:31,335	[INFO]	80	SUCCESS	+6.0	
2020-12-11 06:06:31,335	[DEBUG]	
2020-12-11 06:06:34,593	[INFO]	81	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:06:34,595	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 06:06:34,597	[INFO]	82	SUCCESS	+6.0	
2020-12-11 06:06:34,598	[DEBUG]	
2020-12-11 06:06:34,600	[INFO]	83	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:06:35,541	[INFO]	84	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:06:35,544	[INFO]	85	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:06:35,544	[DEBUG]	
2020-12-11 06:06:35,547	[INFO]	86	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:06:35,549	[INFO]	87	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:06:35,550	[DEBUG]	
2020-12-11 06:06:35,551	[INFO]	88	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:06:35,552	[DEBUG]	
2020-12-11 06:06:35,553	[INFO]	89	SUCCESS	+6.0	
2020-12-11 06:06:35,553	[DEBUG]	
2020-12-11 06:06:36,483	[INFO]	90	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:06:37,415	[INFO]	91	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:06:38,389	[INFO]	92	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:06:39,332	[INFO]	93	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:06:40,281	[INFO]	94	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:06:41,221	[INFO]	95	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:06:42,164	[INFO]	96	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:06:43,110	[INFO]	97	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:06:44,057	[INFO]	98	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:06:45,047	[INFO]	99	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:06:45,049	[INFO]	100	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:06:45,050	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 06:06:46,001	[INFO]	101	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:06:46,002	[INFO]	102	SUCCESS	+6.0	
2020-12-11 06:06:46,003	[DEBUG]	
2020-12-11 06:06:49,249	[INFO]	103	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:06:49,250	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 06:06:50,181	[INFO]	104	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:06:50,182	[INFO]	105	SUCCESS	+6.0	
2020-12-11 06:06:50,182	[DEBUG]	
2020-12-11 06:06:51,107	[INFO]	106	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:06:52,089	[INFO]	107	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:06:53,036	[INFO]	108	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:06:56,260	[INFO]	109	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:06:56,261	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 06:06:56,263	[INFO]	110	SUCCESS	+6.0	
2020-12-11 06:06:56,264	[DEBUG]	
2020-12-11 06:06:59,432	[INFO]	111	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:06:59,433	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 06:07:00,372	[INFO]	112	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:07:00,375	[INFO]	113	SUCCESS	+6.0	
2020-12-11 06:07:00,375	[DEBUG]	
2020-12-11 06:07:01,306	[INFO]	114	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:07:02,239	[INFO]	115	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:07:03,160	[INFO]	116	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:07:04,117	[INFO]	117	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:07:05,089	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:07:06,045	[INFO]	119	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:07:06,048	[INFO]	120	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:07:07,009	[INFO]	121	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:07:07,980	[INFO]	122	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:07:08,914	[INFO]	123	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:07:09,857	[INFO]	124	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:07:09,858	[INFO]	125	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:07:09,858	[DEBUG]	
2020-12-11 06:07:10,822	[INFO]	126	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:07:10,823	[INFO]	127	SUCCESS	+6.0	
2020-12-11 06:07:10,823	[DEBUG]	
2020-12-11 06:07:11,767	[INFO]	128	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:07:12,728	[INFO]	129	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:07:13,663	[INFO]	130	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:07:16,962	[INFO]	131	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:07:16,963	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 06:07:20,089	[INFO]	132	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:07:20,090	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 06:07:20,091	[INFO]	133	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:07:20,091	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 06:07:21,030	[INFO]	134	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:07:21,031	[INFO]	135	SUCCESS	+6.0	
2020-12-11 06:07:21,031	[DEBUG]	
2020-12-11 06:07:21,967	[INFO]	136	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:07:22,933	[INFO]	137	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:07:23,906	[INFO]	138	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:07:24,893	[INFO]	139	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:07:25,821	[INFO]	140	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:07:26,751	[INFO]	141	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:07:30,028	[INFO]	142	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:07:30,029	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 06:07:30,029	[INFO]	143	SUCCESS	+6.0	
2020-12-11 06:07:30,030	[DEBUG]	
2020-12-11 06:07:30,924	[INFO]	144	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:07:30,925	[INFO]	145	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:07:34,241	[INFO]	146	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:07:34,242	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 06:07:37,417	[INFO]	147	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:07:37,418	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,30 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
! 	    
          }
  
          return sorted_arr;

2020-12-11 06:07:40,783	[INFO]	148	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:07:40,784	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,34 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 	    
+         }
+ 
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 06:07:40,786	[INFO]	149	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:07:40,787	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,30 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
! 	    
          }
  
          return sorted_arr;

2020-12-11 06:07:40,788	[INFO]	150	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:07:40,788	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 06:07:40,789	[INFO]	151	SUCCESS	+6.0	
2020-12-11 06:07:40,789	[DEBUG]	
2020-12-11 06:07:41,669	[INFO]	152	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:07:42,610	[INFO]	153	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:07:45,858	[INFO]	154	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:07:45,859	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 06:07:45,859	[INFO]	155	SUCCESS	+6.0	
2020-12-11 06:07:45,860	[DEBUG]	
2020-12-11 06:07:46,781	[INFO]	156	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:07:47,796	[INFO]	157	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:07:48,861	[INFO]	158	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:07:48,864	[INFO]	159	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:07:49,807	[INFO]	160	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:07:50,743	[INFO]	161	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:07:54,001	[INFO]	162	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:07:54,002	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 06:07:54,003	[INFO]	163	SUCCESS	+6.0	
2020-12-11 06:07:54,003	[DEBUG]	
2020-12-11 06:07:54,908	[INFO]	164	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:07:55,857	[INFO]	165	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:07:56,799	[INFO]	166	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:07:57,748	[INFO]	167	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:07:58,703	[INFO]	168	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:07:58,704	[INFO]	169	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:07:59,665	[INFO]	170	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:08:02,894	[INFO]	171	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:08:02,895	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 06:08:03,821	[INFO]	172	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:08:04,801	[INFO]	173	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:08:04,802	[INFO]	174	SUCCESS	+6.0	
2020-12-11 06:08:04,803	[DEBUG]	
2020-12-11 06:08:04,805	[INFO]	175	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:08:05,760	[INFO]	176	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:08:05,761	[INFO]	177	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:08:06,721	[INFO]	178	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:08:07,679	[INFO]	179	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:08:08,616	[INFO]	180	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:08:08,617	[INFO]	181	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:08:08,617	[DEBUG]	
2020-12-11 06:08:09,563	[INFO]	182	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:08:09,565	[INFO]	183	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:08:10,501	[INFO]	184	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:08:11,447	[INFO]	185	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:08:11,448	[INFO]	186	SUCCESS	+6.0	
2020-12-11 06:08:11,448	[DEBUG]	
2020-12-11 06:08:12,384	[INFO]	187	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:08:13,319	[INFO]	188	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:08:14,240	[INFO]	189	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:08:15,210	[INFO]	190	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:08:15,214	[INFO]	191	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:08:16,164	[INFO]	192	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:08:19,480	[INFO]	193	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:08:19,481	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 06:08:19,482	[INFO]	194	SUCCESS	+6.0	
2020-12-11 06:08:19,482	[DEBUG]	
2020-12-11 06:08:22,706	[INFO]	195	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:08:22,707	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 06:08:23,631	[INFO]	196	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:08:23,633	[INFO]	197	SUCCESS	+6.0	
2020-12-11 06:08:23,633	[DEBUG]	
2020-12-11 06:08:24,555	[INFO]	198	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:08:24,557	[INFO]	199	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:08:24,557	[DEBUG]	
2020-12-11 06:08:24,558	[INFO]	200	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:08:24,558	[INFO]	201	SUCCESS	+6.0	
2020-12-11 06:08:24,559	[DEBUG]	
2020-12-11 06:08:24,559	[INFO]	202	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:08:25,525	[INFO]	203	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:08:26,472	[INFO]	204	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:08:27,416	[INFO]	205	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:08:28,389	[INFO]	206	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:08:29,361	[INFO]	207	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:08:32,658	[INFO]	208	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:08:32,659	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,27 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 06:08:32,660	[INFO]	209	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:08:32,660	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,27 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 06:08:32,661	[INFO]	210	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:08:32,661	[DEBUG]	
2020-12-11 06:08:32,662	[INFO]	211	SUCCESS	+6.0	
2020-12-11 06:08:32,662	[DEBUG]	
2020-12-11 06:08:33,541	[INFO]	212	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:08:36,730	[INFO]	213	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:08:36,731	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 06:08:37,670	[INFO]	214	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:08:37,672	[INFO]	215	SUCCESS	+6.0	
2020-12-11 06:08:37,672	[DEBUG]	
2020-12-11 06:08:38,652	[INFO]	216	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:08:39,617	[INFO]	217	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:08:40,554	[INFO]	218	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:08:41,494	[INFO]	219	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:08:42,410	[INFO]	220	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:08:43,405	[INFO]	221	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:08:44,352	[INFO]	222	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:08:45,311	[INFO]	223	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:08:46,267	[INFO]	224	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:08:46,269	[INFO]	225	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:08:46,270	[INFO]	226	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:08:47,203	[INFO]	227	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:08:48,146	[INFO]	228	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:08:49,125	[INFO]	229	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:08:52,389	[INFO]	230	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:08:52,390	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 06:08:52,390	[INFO]	231	SUCCESS	+6.0	
2020-12-11 06:08:52,391	[DEBUG]	
2020-12-11 06:08:52,391	[INFO]	232	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:08:53,288	[INFO]	233	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:08:56,490	[INFO]	234	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:08:56,490	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
          }
  
          return sorted_arr;

2020-12-11 06:08:56,491	[INFO]	235	SUCCESS	+6.0	
2020-12-11 06:08:56,491	[DEBUG]	
2020-12-11 06:08:57,426	[INFO]	236	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:08:58,367	[INFO]	237	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:08:58,369	[INFO]	238	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:08:58,369	[DEBUG]	
2020-12-11 06:08:58,370	[INFO]	239	SUCCESS	+6.0	
2020-12-11 06:08:58,370	[DEBUG]	
2020-12-11 06:08:59,330	[INFO]	240	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:08:59,331	[INFO]	241	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:08:59,331	[DEBUG]	
2020-12-11 06:09:00,276	[INFO]	242	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:09:00,277	[INFO]	243	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:09:00,277	[DEBUG]	
2020-12-11 06:09:00,278	[INFO]	244	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:09:00,278	[DEBUG]	
2020-12-11 06:09:00,279	[INFO]	245	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:09:00,280	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 06:09:00,281	[INFO]	246	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:09:00,281	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 06:09:01,222	[INFO]	247	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:09:01,223	[INFO]	248	SUCCESS	+6.0	
2020-12-11 06:09:01,223	[DEBUG]	
2020-12-11 06:09:02,194	[INFO]	249	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:09:05,475	[INFO]	250	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:09:05,476	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 06:09:06,442	[INFO]	251	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:09:09,769	[INFO]	252	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:09:09,771	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 06:09:10,651	[INFO]	253	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:09:10,653	[INFO]	254	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:09:10,654	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 06:09:11,549	[INFO]	255	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:09:11,550	[INFO]	256	SUCCESS	+6.0	
2020-12-11 06:09:11,551	[DEBUG]	
2020-12-11 06:09:11,552	[INFO]	257	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:09:11,552	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 06:09:11,553	[INFO]	258	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:09:11,553	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 06:09:12,498	[INFO]	259	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:09:12,500	[INFO]	260	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:09:12,501	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 06:09:12,502	[INFO]	261	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:09:12,503	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 06:09:12,504	[INFO]	262	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:09:12,505	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 06:09:12,505	[INFO]	263	SUCCESS	+6.0	
2020-12-11 06:09:12,506	[DEBUG]	
2020-12-11 06:09:13,420	[INFO]	264	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:09:13,421	[INFO]	265	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:09:13,421	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 06:09:14,369	[INFO]	266	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:09:14,370	[INFO]	267	SUCCESS	+6.0	
2020-12-11 06:09:14,371	[DEBUG]	
2020-12-11 06:09:15,340	[INFO]	268	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:09:16,270	[INFO]	269	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:09:17,214	[INFO]	270	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:09:18,195	[INFO]	271	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:09:21,393	[INFO]	272	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:09:21,393	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 06:09:21,394	[INFO]	273	SUCCESS	+6.0	
2020-12-11 06:09:21,394	[DEBUG]	
2020-12-11 06:09:22,336	[INFO]	274	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:09:23,304	[INFO]	275	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:09:24,268	[INFO]	276	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:09:27,529	[INFO]	277	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:09:27,529	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 06:09:27,530	[INFO]	278	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:09:27,531	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 06:09:27,531	[INFO]	279	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:09:27,532	[DEBUG]	
2020-12-11 06:09:28,427	[INFO]	280	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:09:29,381	[INFO]	281	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:09:29,382	[INFO]	282	SUCCESS	+6.0	
2020-12-11 06:09:29,382	[DEBUG]	
2020-12-11 06:09:30,364	[INFO]	283	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:09:31,334	[INFO]	284	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:09:32,284	[INFO]	285	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:09:33,211	[INFO]	286	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:09:34,142	[INFO]	287	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:09:35,077	[INFO]	288	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:09:38,253	[INFO]	289	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:09:38,254	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 06:09:39,190	[INFO]	290	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:09:39,191	[INFO]	291	SUCCESS	+6.0	
2020-12-11 06:09:39,191	[DEBUG]	
2020-12-11 06:09:40,154	[INFO]	292	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:09:41,164	[INFO]	293	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:09:42,123	[INFO]	294	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:09:42,125	[INFO]	295	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:09:43,096	[INFO]	296	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:09:44,056	[INFO]	297	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:09:44,059	[INFO]	298	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:09:45,017	[INFO]	299	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:09:45,018	[INFO]	300	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:09:45,963	[INFO]	301	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:09:45,965	[INFO]	302	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:09:49,248	[INFO]	303	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:09:49,248	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 06:09:50,177	[INFO]	304	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:09:51,110	[INFO]	305	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:09:51,111	[INFO]	306	SUCCESS	+6.0	
2020-12-11 06:09:51,112	[DEBUG]	
2020-12-11 06:09:52,063	[INFO]	307	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:09:53,012	[INFO]	308	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:09:56,212	[INFO]	309	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:09:56,213	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,21 ****
--- 16,24 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 06:09:57,117	[INFO]	310	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:09:57,118	[INFO]	311	SUCCESS	+6.0	
2020-12-11 06:09:57,118	[DEBUG]	
2020-12-11 06:09:57,119	[INFO]	312	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:09:57,119	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 06:09:58,052	[INFO]	313	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:09:58,959	[INFO]	314	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:09:59,925	[INFO]	315	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:10:00,860	[INFO]	316	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:10:01,826	[INFO]	317	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:10:01,828	[INFO]	318	SUCCESS	+6.0	
2020-12-11 06:10:01,829	[DEBUG]	
2020-12-11 06:10:05,058	[INFO]	319	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:10:05,058	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 06:10:05,989	[INFO]	320	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:10:06,902	[INFO]	321	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:10:06,903	[INFO]	322	SUCCESS	+6.0	
2020-12-11 06:10:06,903	[DEBUG]	
2020-12-11 06:10:07,848	[INFO]	323	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:10:08,799	[INFO]	324	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:10:09,762	[INFO]	325	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:10:10,702	[INFO]	326	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:10:13,910	[INFO]	327	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:10:13,911	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,27 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 06:10:14,853	[INFO]	328	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:10:14,856	[INFO]	329	SUCCESS	+6.0	
2020-12-11 06:10:14,857	[DEBUG]	
2020-12-11 06:10:15,796	[INFO]	330	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:10:19,039	[INFO]	331	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:10:19,040	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 06:10:19,981	[INFO]	332	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:10:20,958	[INFO]	333	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:10:20,960	[INFO]	334	SUCCESS	+6.0	
2020-12-11 06:10:20,961	[DEBUG]	
2020-12-11 06:10:24,180	[INFO]	335	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:10:24,181	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 06:10:24,182	[INFO]	336	SUCCESS	+6.0	
2020-12-11 06:10:24,182	[DEBUG]	
2020-12-11 06:10:25,146	[INFO]	337	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:10:25,148	[INFO]	338	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:10:25,149	[DEBUG]	
2020-12-11 06:10:25,151	[INFO]	339	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:10:25,152	[INFO]	340	SUCCESS	+6.0	
2020-12-11 06:10:25,153	[DEBUG]	
2020-12-11 06:10:28,431	[INFO]	341	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:10:28,431	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 06:10:31,687	[INFO]	342	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:10:31,689	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,27 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 13,24 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 06:10:32,551	[INFO]	343	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:10:32,552	[INFO]	344	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:10:32,553	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,27 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 13,24 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 06:10:32,553	[INFO]	345	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:10:32,554	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 06:10:32,554	[INFO]	346	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:10:32,555	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 06:10:33,478	[INFO]	347	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:10:33,479	[INFO]	348	SUCCESS	+6.0	
2020-12-11 06:10:33,479	[DEBUG]	
2020-12-11 06:10:37,349	[INFO]	349	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:10:37,350	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:10:37,351	[INFO]	350	SUCCESS	+6.0	
2020-12-11 06:10:37,351	[DEBUG]	
2020-12-11 06:10:38,324	[INFO]	351	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:10:39,589	[INFO]	352	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:10:40,828	[INFO]	353	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:10:42,054	[INFO]	354	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:10:43,255	[INFO]	355	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:10:44,316	[INFO]	356	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:10:45,325	[INFO]	357	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:10:49,152	[INFO]	358	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:10:49,153	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 06:10:49,153	[INFO]	359	SUCCESS	+6.0	
2020-12-11 06:10:49,153	[DEBUG]	
2020-12-11 06:10:50,061	[INFO]	360	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:10:51,001	[INFO]	361	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:10:51,947	[INFO]	362	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:10:52,896	[INFO]	363	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:10:56,094	[INFO]	364	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:10:56,095	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 06:10:57,051	[INFO]	365	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:10:57,054	[INFO]	366	SUCCESS	+6.0	
2020-12-11 06:10:57,055	[DEBUG]	
2020-12-11 06:10:57,978	[INFO]	367	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:10:58,957	[INFO]	368	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:11:02,178	[INFO]	369	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:11:02,178	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 06:11:03,077	[INFO]	370	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:11:03,078	[INFO]	371	SUCCESS	+6.0	
2020-12-11 06:11:03,078	[DEBUG]	
2020-12-11 06:11:04,041	[INFO]	372	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:11:05,002	[INFO]	373	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:11:05,969	[INFO]	374	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:11:05,972	[INFO]	375	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:11:05,973	[DEBUG]	
2020-12-11 06:11:05,974	[INFO]	376	SUCCESS	+6.0	
2020-12-11 06:11:05,975	[DEBUG]	
2020-12-11 06:11:06,919	[INFO]	377	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:11:07,851	[INFO]	378	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:11:08,794	[INFO]	379	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:11:09,739	[INFO]	380	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:11:09,740	[INFO]	381	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:11:10,680	[INFO]	382	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:11:14,042	[INFO]	383	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:11:14,043	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 06:11:14,043	[INFO]	384	SUCCESS	+6.0	
2020-12-11 06:11:14,044	[DEBUG]	
2020-12-11 06:11:14,935	[INFO]	385	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:11:18,323	[INFO]	386	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:11:18,323	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:11:18,324	[INFO]	387	SUCCESS	+6.0	
2020-12-11 06:11:18,324	[DEBUG]	
2020-12-11 06:11:19,228	[INFO]	388	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:11:19,229	[INFO]	389	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:11:19,229	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 06:11:19,230	[INFO]	390	SUCCESS	+6.0	
2020-12-11 06:11:19,230	[DEBUG]	
2020-12-11 06:11:19,231	[INFO]	391	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:11:20,165	[INFO]	392	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:11:21,125	[INFO]	393	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:11:24,330	[INFO]	394	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:11:24,331	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 06:11:24,332	[INFO]	395	SUCCESS	+6.0	
2020-12-11 06:11:24,332	[DEBUG]	
2020-12-11 06:11:25,273	[INFO]	396	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:11:26,209	[INFO]	397	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:11:27,153	[INFO]	398	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:11:28,135	[INFO]	399	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:11:28,138	[INFO]	400	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:11:29,089	[INFO]	401	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:11:30,082	[INFO]	402	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:11:30,083	[INFO]	403	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:11:30,084	[DEBUG]	
2020-12-11 06:11:31,015	[INFO]	404	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:11:34,236	[INFO]	405	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:11:34,238	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 06:11:34,240	[INFO]	406	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:11:34,241	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 06:11:35,162	[INFO]	407	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:11:38,423	[INFO]	408	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:11:38,425	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,25 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
--- 14,26 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:11:41,665	[INFO]	409	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:11:41,666	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 06:11:41,666	[INFO]	410	SUCCESS	+6.0	
2020-12-11 06:11:41,667	[DEBUG]	
2020-12-11 06:11:42,595	[INFO]	411	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:11:43,542	[INFO]	412	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:11:44,522	[INFO]	413	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:11:45,453	[INFO]	414	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:11:46,424	[INFO]	415	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:11:46,425	[INFO]	416	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:11:47,369	[INFO]	417	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:11:48,361	[INFO]	418	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:11:49,314	[INFO]	419	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:11:50,277	[INFO]	420	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:11:51,243	[INFO]	421	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:11:52,209	[INFO]	422	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:11:53,140	[INFO]	423	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:11:54,101	[INFO]	424	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:11:55,014	[INFO]	425	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:11:55,015	[INFO]	426	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:11:55,015	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 06:11:55,016	[INFO]	427	SUCCESS	+6.0	
2020-12-11 06:11:55,016	[DEBUG]	
2020-12-11 06:11:55,985	[INFO]	428	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:11:56,948	[INFO]	429	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:11:57,938	[INFO]	430	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:11:57,941	[INFO]	431	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:12:01,219	[INFO]	432	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:12:01,220	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 06:12:02,136	[INFO]	433	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:12:02,137	[INFO]	434	SUCCESS	+6.0	
2020-12-11 06:12:02,137	[DEBUG]	
2020-12-11 06:12:03,078	[INFO]	435	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:12:03,082	[INFO]	436	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:12:03,083	[DEBUG]	
2020-12-11 06:12:03,085	[INFO]	437	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:12:03,086	[INFO]	438	SUCCESS	+6.0	
2020-12-11 06:12:03,087	[DEBUG]	
2020-12-11 06:12:06,330	[INFO]	439	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:12:06,332	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 06:12:09,435	[INFO]	440	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:12:09,436	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:12:09,437	[INFO]	441	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:12:09,437	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 06:12:10,371	[INFO]	442	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:12:10,372	[INFO]	443	SUCCESS	+6.0	
2020-12-11 06:12:10,373	[DEBUG]	
2020-12-11 06:12:11,327	[INFO]	444	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:12:12,257	[INFO]	445	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:12:13,166	[INFO]	446	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:12:16,375	[INFO]	447	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:12:16,376	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 06:12:17,308	[INFO]	448	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:12:17,309	[INFO]	449	SUCCESS	+6.0	
2020-12-11 06:12:17,309	[DEBUG]	
2020-12-11 06:12:18,227	[INFO]	450	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:12:19,180	[INFO]	451	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:12:19,182	[INFO]	452	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:12:20,137	[INFO]	453	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:12:21,310	[INFO]	454	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:12:22,273	[INFO]	455	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:12:22,275	[INFO]	456	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:12:22,275	[DEBUG]	
2020-12-11 06:12:22,275	[INFO]	457	SUCCESS	+6.0	
2020-12-11 06:12:22,276	[DEBUG]	
2020-12-11 06:12:23,204	[INFO]	458	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:12:24,156	[INFO]	459	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:12:25,126	[INFO]	460	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:12:26,037	[INFO]	461	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:12:26,992	[INFO]	462	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:12:27,995	[INFO]	463	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:12:31,308	[INFO]	464	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:12:31,309	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 06:12:31,310	[INFO]	465	SUCCESS	+6.0	
2020-12-11 06:12:31,310	[DEBUG]	
2020-12-11 06:12:32,221	[INFO]	466	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:12:33,166	[INFO]	467	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:12:34,143	[INFO]	468	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:12:35,081	[INFO]	469	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:12:36,008	[INFO]	470	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:12:36,951	[INFO]	471	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:12:37,934	[INFO]	472	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:12:38,934	[INFO]	473	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:12:39,884	[INFO]	474	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:12:40,814	[INFO]	475	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:12:41,751	[INFO]	476	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:12:42,716	[INFO]	477	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:12:43,686	[INFO]	478	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:12:43,688	[INFO]	479	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:12:43,689	[DEBUG]	
2020-12-11 06:12:43,690	[INFO]	480	SUCCESS	+6.0	
2020-12-11 06:12:43,691	[DEBUG]	
2020-12-11 06:12:44,651	[INFO]	481	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:12:45,588	[INFO]	482	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:12:46,543	[INFO]	483	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:12:47,489	[INFO]	484	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:12:48,462	[INFO]	485	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:12:49,395	[INFO]	486	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:12:50,344	[INFO]	487	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:12:51,291	[INFO]	488	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:12:52,258	[INFO]	489	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:12:53,190	[INFO]	490	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:12:54,144	[INFO]	491	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:12:55,106	[INFO]	492	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:12:58,394	[INFO]	493	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:12:58,396	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 06:12:59,331	[INFO]	494	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:13:00,297	[INFO]	495	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:13:01,230	[INFO]	496	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:13:01,231	[INFO]	497	SUCCESS	+6.0	
2020-12-11 06:13:01,231	[DEBUG]	
2020-12-11 06:13:02,158	[INFO]	498	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:13:03,110	[INFO]	499	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:13:04,093	[INFO]	500	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:13:04,093	[INFO]	==== END ====
2020-12-11 06:13:04,093	[INFO]	Reason: step budget
2020-12-11 06:13:04,094	[INFO]	
2020-12-11 06:13:04,095	[INFO]	========== EPOCH 16 ==========
2020-12-11 06:13:04,095	[INFO]	==== WARMUP ====
2020-12-11 06:13:07,394	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 06:13:07,395	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 06:13:10,739	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 06:13:10,739	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 06:13:13,947	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 06:13:13,947	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 06:13:17,108	[INFO]	INITIAL	SUCCESS	 6.0	
2020-12-11 06:13:17,109	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 06:13:17,109	[INFO]	==== START ====
2020-12-11 06:13:18,087	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:13:19,050	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:13:20,032	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:13:21,004	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:13:21,007	[INFO]	5	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:13:21,008	[DEBUG]	
2020-12-11 06:13:21,009	[INFO]	6	SUCCESS	+6.0	
2020-12-11 06:13:21,010	[DEBUG]	
2020-12-11 06:13:22,014	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:13:25,392	[INFO]	8	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:13:25,394	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 06:13:26,294	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:13:26,295	[INFO]	10	SUCCESS	+6.0	
2020-12-11 06:13:26,296	[DEBUG]	
2020-12-11 06:13:27,217	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:13:27,219	[INFO]	12	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:13:27,219	[DEBUG]	
2020-12-11 06:13:28,198	[INFO]	13	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:13:28,201	[INFO]	14	SUCCESS	+6.0	
2020-12-11 06:13:28,201	[DEBUG]	
2020-12-11 06:13:29,138	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:13:32,392	[INFO]	16	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:13:32,394	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,34 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 06:13:33,348	[INFO]	17	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:13:33,351	[INFO]	18	SUCCESS	+6.0	
2020-12-11 06:13:33,351	[DEBUG]	
2020-12-11 06:13:34,302	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:13:35,249	[INFO]	20	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:13:38,459	[INFO]	21	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:13:38,460	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,21 ****
--- 16,24 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 06:13:38,461	[INFO]	22	SUCCESS	+6.0	
2020-12-11 06:13:38,461	[DEBUG]	
2020-12-11 06:13:39,396	[INFO]	23	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:13:39,399	[INFO]	24	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:13:39,400	[DEBUG]	
2020-12-11 06:13:42,606	[INFO]	25	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:13:42,607	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 06:13:43,515	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:13:43,517	[INFO]	27	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:13:43,517	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 06:13:44,450	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:13:45,404	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:13:45,405	[INFO]	30	SUCCESS	+6.0	
2020-12-11 06:13:45,405	[DEBUG]	
2020-12-11 06:13:46,359	[INFO]	31	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:13:47,302	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:13:48,248	[INFO]	33	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:13:49,191	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:13:52,388	[INFO]	35	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:13:52,389	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 06:13:53,336	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:13:53,337	[INFO]	37	SUCCESS	+6.0	
2020-12-11 06:13:53,337	[DEBUG]	
2020-12-11 06:13:54,290	[INFO]	38	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:13:55,252	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:13:56,207	[INFO]	40	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:13:57,170	[INFO]	41	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:13:58,131	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:13:58,132	[INFO]	43	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:13:59,074	[INFO]	44	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:14:00,024	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:14:00,967	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:14:00,969	[INFO]	47	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:14:00,969	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 06:14:01,942	[INFO]	48	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:14:01,943	[INFO]	49	SUCCESS	+6.0	
2020-12-11 06:14:01,944	[DEBUG]	
2020-12-11 06:14:05,229	[INFO]	50	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:14:05,230	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 06:14:05,231	[INFO]	51	SUCCESS	+6.0	
2020-12-11 06:14:05,231	[DEBUG]	
2020-12-11 06:14:06,133	[INFO]	52	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:14:07,119	[INFO]	53	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:14:08,074	[INFO]	54	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:14:08,077	[INFO]	55	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:14:09,007	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:14:09,924	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:14:10,866	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:14:11,839	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:14:12,792	[INFO]	60	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:14:13,731	[INFO]	61	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:14:14,670	[INFO]	62	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:14:17,867	[INFO]	63	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:14:17,868	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 06:14:18,824	[INFO]	64	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:14:18,827	[INFO]	65	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:14:18,828	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 06:14:18,830	[INFO]	66	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:14:18,831	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 06:14:19,764	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:14:19,766	[INFO]	68	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:14:19,766	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 06:14:19,767	[INFO]	69	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:14:19,767	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 06:14:19,768	[INFO]	70	SUCCESS	+6.0	
2020-12-11 06:14:19,768	[DEBUG]	
2020-12-11 06:14:20,724	[INFO]	71	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:14:20,725	[INFO]	72	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:14:20,726	[INFO]	73	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:14:20,727	[DEBUG]	
2020-12-11 06:14:21,673	[INFO]	74	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:14:25,029	[INFO]	75	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:14:25,031	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 06:14:25,032	[INFO]	76	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:14:25,033	[DEBUG]	
2020-12-11 06:14:25,034	[INFO]	77	SUCCESS	+6.0	
2020-12-11 06:14:25,035	[DEBUG]	
2020-12-11 06:14:25,914	[INFO]	78	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:14:26,863	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:14:30,221	[INFO]	80	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:14:30,222	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 06:14:30,222	[INFO]	81	SUCCESS	+6.0	
2020-12-11 06:14:30,223	[DEBUG]	
2020-12-11 06:14:31,131	[INFO]	82	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:14:32,063	[INFO]	83	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:14:33,030	[INFO]	84	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:14:33,985	[INFO]	85	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:14:33,986	[INFO]	86	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:14:33,987	[DEBUG]	
2020-12-11 06:14:37,310	[INFO]	87	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:14:37,311	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 06:14:37,312	[INFO]	88	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:14:37,313	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 06:14:37,314	[INFO]	89	SUCCESS	+6.0	
2020-12-11 06:14:37,314	[DEBUG]	
2020-12-11 06:14:38,174	[INFO]	90	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:14:39,124	[INFO]	91	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:14:40,061	[INFO]	92	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:14:40,063	[INFO]	93	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:14:40,994	[INFO]	94	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:14:41,992	[INFO]	95	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:14:42,940	[INFO]	96	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:14:43,880	[INFO]	97	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:14:44,842	[INFO]	98	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:14:44,845	[INFO]	99	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:14:48,149	[INFO]	100	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:14:48,150	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 06:14:49,062	[INFO]	101	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:14:49,063	[INFO]	102	SUCCESS	+6.0	
2020-12-11 06:14:49,063	[DEBUG]	
2020-12-11 06:14:49,064	[INFO]	103	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:14:52,280	[INFO]	104	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:14:52,281	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 06:14:53,212	[INFO]	105	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:14:53,214	[INFO]	106	SUCCESS	+6.0	
2020-12-11 06:14:53,214	[DEBUG]	
2020-12-11 06:14:54,193	[INFO]	107	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:14:57,425	[INFO]	108	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:14:57,426	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 06:14:58,343	[INFO]	109	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:15:01,548	[INFO]	110	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:15:01,549	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,33 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 06:15:02,500	[INFO]	111	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:15:03,459	[INFO]	112	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:15:03,462	[INFO]	113	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:15:03,463	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 06:15:06,781	[INFO]	114	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:15:06,782	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,34 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
+         i++;
  
          return sorted_arr;
      }

2020-12-11 06:15:06,783	[INFO]	115	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:15:06,784	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 06:15:06,784	[INFO]	116	SUCCESS	+6.0	
2020-12-11 06:15:06,784	[DEBUG]	
2020-12-11 06:15:07,657	[INFO]	117	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:15:08,607	[INFO]	118	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:15:09,531	[INFO]	119	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:15:10,489	[INFO]	120	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:15:11,434	[INFO]	121	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:15:12,373	[INFO]	122	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:15:12,374	[INFO]	123	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:15:12,374	[DEBUG]	
2020-12-11 06:15:12,375	[INFO]	124	SUCCESS	+6.0	
2020-12-11 06:15:12,375	[DEBUG]	
2020-12-11 06:15:12,375	[INFO]	125	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:15:12,376	[DEBUG]	
2020-12-11 06:15:12,376	[INFO]	126	SUCCESS	+6.0	
2020-12-11 06:15:12,377	[DEBUG]	
2020-12-11 06:15:13,340	[INFO]	127	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:15:14,279	[INFO]	128	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:15:15,247	[INFO]	129	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:15:16,207	[INFO]	130	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:15:16,208	[INFO]	131	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:15:16,208	[DEBUG]	
2020-12-11 06:15:16,209	[INFO]	132	SUCCESS	+6.0	
2020-12-11 06:15:16,209	[DEBUG]	
2020-12-11 06:15:17,167	[INFO]	133	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:15:18,110	[INFO]	134	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:15:19,052	[INFO]	135	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:15:19,979	[INFO]	136	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:15:20,957	[INFO]	137	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:15:20,960	[INFO]	138	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:15:20,961	[DEBUG]	
2020-12-11 06:15:20,962	[INFO]	139	SUCCESS	+6.0	
2020-12-11 06:15:20,963	[DEBUG]	
2020-12-11 06:15:21,892	[INFO]	140	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:15:21,893	[INFO]	141	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:15:21,893	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 06:15:21,894	[INFO]	142	SUCCESS	+6.0	
2020-12-11 06:15:21,894	[DEBUG]	
2020-12-11 06:15:21,895	[INFO]	143	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:15:21,895	[DEBUG]	
2020-12-11 06:15:21,896	[INFO]	144	SUCCESS	+6.0	
2020-12-11 06:15:21,896	[DEBUG]	
2020-12-11 06:15:25,069	[INFO]	145	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:15:25,071	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:15:25,073	[INFO]	146	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:15:25,074	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:15:25,958	[INFO]	147	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:15:25,962	[INFO]	148	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:15:25,963	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:15:25,966	[INFO]	149	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:15:26,860	[INFO]	150	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:15:27,768	[INFO]	151	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:15:28,719	[INFO]	152	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:15:31,903	[INFO]	153	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:15:31,905	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 06:15:32,797	[INFO]	154	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:15:32,798	[INFO]	155	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:15:32,799	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 06:15:32,800	[INFO]	156	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:15:32,800	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:15:32,801	[INFO]	157	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:15:32,802	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:15:32,803	[INFO]	158	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:15:32,803	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:15:32,804	[INFO]	159	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:15:32,805	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:15:32,806	[INFO]	160	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:15:32,806	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:15:33,750	[INFO]	161	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:15:33,752	[INFO]	162	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:15:33,752	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:15:33,754	[INFO]	163	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:15:33,755	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:15:33,756	[INFO]	164	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:15:33,756	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:15:33,758	[INFO]	165	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:15:33,758	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:15:33,759	[INFO]	166	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:15:33,760	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:15:33,761	[INFO]	167	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:15:33,761	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:15:33,763	[INFO]	168	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:15:33,764	[INFO]	169	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:15:33,765	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:15:33,766	[INFO]	170	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:15:33,768	[INFO]	171	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:15:33,769	[DEBUG]	
2020-12-11 06:15:34,734	[INFO]	172	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:15:34,736	[INFO]	173	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:15:34,736	[DEBUG]	
2020-12-11 06:15:35,884	[INFO]	174	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:15:35,886	[INFO]	175	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:15:35,887	[DEBUG]	
2020-12-11 06:15:35,888	[INFO]	176	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:15:35,889	[DEBUG]	
2020-12-11 06:15:37,356	[INFO]	177	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:15:38,687	[INFO]	178	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:15:38,689	[INFO]	179	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:15:38,690	[DEBUG]	
2020-12-11 06:15:38,691	[INFO]	180	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:15:38,691	[DEBUG]	
2020-12-11 06:15:38,692	[INFO]	181	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:15:38,693	[DEBUG]	
2020-12-11 06:15:43,936	[INFO]	182	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:15:43,937	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:15:43,939	[INFO]	183	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:15:43,939	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:15:43,940	[INFO]	184	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:15:43,941	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:15:45,314	[INFO]	185	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:15:46,384	[INFO]	186	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:15:46,385	[INFO]	187	SUCCESS	+6.0	
2020-12-11 06:15:46,386	[DEBUG]	
2020-12-11 06:15:50,337	[INFO]	188	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:15:50,339	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 06:15:50,341	[INFO]	189	SUCCESS	+6.0	
2020-12-11 06:15:50,341	[DEBUG]	
2020-12-11 06:15:53,843	[INFO]	190	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:15:53,843	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 06:15:53,844	[INFO]	191	SUCCESS	+6.0	
2020-12-11 06:15:53,844	[DEBUG]	
2020-12-11 06:15:54,734	[INFO]	192	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:15:57,897	[INFO]	193	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:15:57,898	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 06:15:57,899	[INFO]	194	SUCCESS	+6.0	
2020-12-11 06:15:57,899	[DEBUG]	
2020-12-11 06:15:58,849	[INFO]	195	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:15:59,833	[INFO]	196	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:16:00,827	[INFO]	197	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:16:00,830	[INFO]	198	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:16:00,832	[INFO]	199	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:16:00,832	[DEBUG]	
2020-12-11 06:16:01,743	[INFO]	200	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:16:02,692	[INFO]	201	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:16:02,693	[INFO]	202	SUCCESS	+6.0	
2020-12-11 06:16:02,693	[DEBUG]	
2020-12-11 06:16:03,623	[INFO]	203	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:16:06,864	[INFO]	204	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:16:06,865	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 06:16:07,816	[INFO]	205	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:16:07,818	[INFO]	206	SUCCESS	+6.0	
2020-12-11 06:16:07,819	[DEBUG]	
2020-12-11 06:16:08,767	[INFO]	207	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:16:09,714	[INFO]	208	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:16:10,654	[INFO]	209	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:16:11,595	[INFO]	210	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:16:12,565	[INFO]	211	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:16:15,796	[INFO]	212	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:16:15,796	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 06:16:16,728	[INFO]	213	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:16:17,678	[INFO]	214	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:16:17,679	[INFO]	215	SUCCESS	+6.0	
2020-12-11 06:16:17,679	[DEBUG]	
2020-12-11 06:16:18,621	[INFO]	216	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:16:19,564	[INFO]	217	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:16:19,565	[INFO]	218	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:16:20,536	[INFO]	219	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:16:20,538	[INFO]	220	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:16:20,539	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:16:21,487	[INFO]	221	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:16:21,488	[INFO]	222	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:16:21,489	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 06:16:21,489	[INFO]	223	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:16:21,490	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 06:16:22,438	[INFO]	224	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:16:23,387	[INFO]	225	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:16:23,390	[INFO]	226	SUCCESS	+6.0	
2020-12-11 06:16:23,391	[DEBUG]	
2020-12-11 06:16:24,334	[INFO]	227	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:16:25,299	[INFO]	228	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:16:26,229	[INFO]	229	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:16:27,182	[INFO]	230	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:16:28,163	[INFO]	231	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:16:31,410	[INFO]	232	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:16:31,411	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 06:16:32,377	[INFO]	233	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:16:35,514	[INFO]	234	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:16:35,514	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,28 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 13,23 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 06:16:35,515	[INFO]	235	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:16:35,516	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 06:16:38,643	[INFO]	236	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:16:38,644	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,28 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 14,25 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 06:16:39,558	[INFO]	237	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:16:42,785	[INFO]	238	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:16:42,786	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 06:16:43,720	[INFO]	239	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:16:43,721	[INFO]	240	SUCCESS	+6.0	
2020-12-11 06:16:43,722	[DEBUG]	
2020-12-11 06:16:44,658	[INFO]	241	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:16:45,605	[INFO]	242	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:16:46,544	[INFO]	243	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:16:47,496	[INFO]	244	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:16:48,468	[INFO]	245	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:16:49,427	[INFO]	246	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:16:50,392	[INFO]	247	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:16:50,393	[INFO]	248	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:16:50,393	[DEBUG]	
2020-12-11 06:16:51,304	[INFO]	249	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:16:51,305	[INFO]	250	SUCCESS	+6.0	
2020-12-11 06:16:51,306	[DEBUG]	
2020-12-11 06:16:52,253	[INFO]	251	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:16:52,254	[INFO]	252	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:16:52,255	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:16:55,530	[INFO]	253	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:16:55,530	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,25 ****
--- 16,31 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:16:56,487	[INFO]	254	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:16:56,490	[INFO]	255	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:16:56,491	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:16:56,494	[INFO]	256	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:16:56,495	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:16:59,685	[INFO]	257	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:16:59,687	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
--- 20,30 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
  	    i++;
          }
  

2020-12-11 06:17:02,900	[INFO]	258	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:17:02,901	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:17:02,902	[INFO]	259	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:17:02,903	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 06:17:02,904	[INFO]	260	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:17:02,904	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 06:17:02,905	[INFO]	261	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:17:02,905	[DEBUG]	
2020-12-11 06:17:02,906	[INFO]	262	SUCCESS	+6.0	
2020-12-11 06:17:02,906	[DEBUG]	
2020-12-11 06:17:06,306	[INFO]	263	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:17:06,306	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
          }
  
          return sorted_arr;

2020-12-11 06:17:06,307	[INFO]	264	SUCCESS	+6.0	
2020-12-11 06:17:06,307	[DEBUG]	
2020-12-11 06:17:06,308	[INFO]	265	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:17:07,242	[INFO]	266	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:17:08,212	[INFO]	267	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:17:09,157	[INFO]	268	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:17:09,159	[INFO]	269	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:17:12,385	[INFO]	270	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:17:12,386	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 06:17:12,387	[INFO]	271	SUCCESS	+6.0	
2020-12-11 06:17:12,387	[DEBUG]	
2020-12-11 06:17:15,578	[INFO]	272	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:17:15,579	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 06:17:16,507	[INFO]	273	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:17:16,508	[INFO]	274	SUCCESS	+6.0	
2020-12-11 06:17:16,509	[DEBUG]	
2020-12-11 06:17:16,510	[INFO]	275	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:17:16,510	[INFO]	276	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:17:17,462	[INFO]	277	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:17:18,429	[INFO]	278	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:17:19,392	[INFO]	279	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:17:20,328	[INFO]	280	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:17:21,261	[INFO]	281	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:17:22,192	[INFO]	282	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:17:23,151	[INFO]	283	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:17:24,118	[INFO]	284	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:17:25,071	[INFO]	285	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:17:25,075	[INFO]	286	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:17:26,017	[INFO]	287	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:17:29,254	[INFO]	288	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:17:29,255	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 06:17:30,239	[INFO]	289	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:17:30,240	[INFO]	290	SUCCESS	+6.0	
2020-12-11 06:17:30,241	[DEBUG]	
2020-12-11 06:17:31,175	[INFO]	291	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:17:34,394	[INFO]	292	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:17:34,395	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 06:17:35,339	[INFO]	293	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:17:35,340	[INFO]	294	SUCCESS	+6.0	
2020-12-11 06:17:35,340	[DEBUG]	
2020-12-11 06:17:35,341	[INFO]	295	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:17:35,341	[DEBUG]	
2020-12-11 06:17:35,342	[INFO]	296	SUCCESS	+6.0	
2020-12-11 06:17:35,342	[DEBUG]	
2020-12-11 06:17:36,279	[INFO]	297	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:17:37,258	[INFO]	298	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:17:38,182	[INFO]	299	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:17:39,124	[INFO]	300	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:17:42,439	[INFO]	301	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:17:42,440	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 06:17:42,440	[INFO]	302	SUCCESS	+6.0	
2020-12-11 06:17:42,441	[DEBUG]	
2020-12-11 06:17:42,441	[INFO]	303	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:17:43,309	[INFO]	304	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:17:44,267	[INFO]	305	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:17:44,270	[INFO]	306	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:17:44,272	[INFO]	307	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:17:44,274	[INFO]	308	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:17:44,274	[DEBUG]	
2020-12-11 06:17:45,230	[INFO]	309	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:17:45,232	[INFO]	310	SUCCESS	+6.0	
2020-12-11 06:17:45,233	[DEBUG]	
2020-12-11 06:17:45,235	[INFO]	311	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:17:46,187	[INFO]	312	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:17:46,188	[INFO]	313	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:17:46,189	[DEBUG]	
2020-12-11 06:17:47,146	[INFO]	314	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:17:48,106	[INFO]	315	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:17:48,109	[INFO]	316	SUCCESS	+6.0	
2020-12-11 06:17:48,109	[DEBUG]	
2020-12-11 06:17:49,056	[INFO]	317	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:17:50,000	[INFO]	318	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:17:50,935	[INFO]	319	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:17:50,936	[INFO]	320	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:17:54,132	[INFO]	321	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:17:54,133	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,27 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 06:17:54,134	[INFO]	322	SUCCESS	+6.0	
2020-12-11 06:17:54,134	[DEBUG]	
2020-12-11 06:17:55,090	[INFO]	323	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:17:58,310	[INFO]	324	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:17:58,311	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:17:59,216	[INFO]	325	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:17:59,217	[INFO]	326	SUCCESS	+6.0	
2020-12-11 06:17:59,217	[DEBUG]	
2020-12-11 06:18:00,195	[INFO]	327	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:18:03,388	[INFO]	328	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:18:03,390	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:18:03,392	[INFO]	329	SUCCESS	+6.0	
2020-12-11 06:18:03,392	[DEBUG]	
2020-12-11 06:18:04,313	[INFO]	330	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:18:05,275	[INFO]	331	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:18:06,238	[INFO]	332	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:18:07,197	[INFO]	333	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:18:08,148	[INFO]	334	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:18:09,127	[INFO]	335	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:18:10,042	[INFO]	336	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:18:10,044	[INFO]	337	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:18:11,014	[INFO]	338	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:18:11,971	[INFO]	339	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:18:11,973	[INFO]	340	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:18:12,919	[INFO]	341	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:18:13,866	[INFO]	342	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:18:13,867	[INFO]	343	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:18:14,836	[INFO]	344	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:18:15,800	[INFO]	345	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:18:16,728	[INFO]	346	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:18:17,668	[INFO]	347	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:18:18,591	[INFO]	348	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:18:19,547	[INFO]	349	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:18:20,464	[INFO]	350	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:18:21,456	[INFO]	351	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:18:22,414	[INFO]	352	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:18:23,372	[INFO]	353	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:18:24,334	[INFO]	354	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:18:24,337	[INFO]	355	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:18:24,338	[DEBUG]	
2020-12-11 06:18:24,339	[INFO]	356	SUCCESS	+6.0	
2020-12-11 06:18:24,339	[DEBUG]	
2020-12-11 06:18:25,292	[INFO]	357	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:18:26,235	[INFO]	358	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:18:27,197	[INFO]	359	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:18:27,199	[INFO]	360	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:18:27,199	[DEBUG]	
2020-12-11 06:18:27,200	[INFO]	361	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:18:27,200	[INFO]	362	SUCCESS	+6.0	
2020-12-11 06:18:27,201	[DEBUG]	
2020-12-11 06:18:28,151	[INFO]	363	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:18:28,154	[INFO]	364	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:18:29,103	[INFO]	365	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:18:30,084	[INFO]	366	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:18:31,019	[INFO]	367	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:18:31,020	[INFO]	368	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:18:31,985	[INFO]	369	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:18:31,989	[INFO]	370	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:18:31,991	[INFO]	371	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:18:31,993	[INFO]	372	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:18:32,914	[INFO]	373	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:18:33,865	[INFO]	374	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:18:37,095	[INFO]	375	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:18:37,096	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 06:18:38,023	[INFO]	376	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:18:41,255	[INFO]	377	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:18:41,256	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 06:18:42,190	[INFO]	378	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:18:42,193	[INFO]	379	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:18:42,194	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 06:18:43,145	[INFO]	380	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:18:44,094	[INFO]	381	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:18:47,451	[INFO]	382	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:18:47,452	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,28 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
      }
--- 21,32 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
+         }
+ 
+         i++;
  
          return sorted_arr;
      }

2020-12-11 06:18:47,453	[INFO]	383	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:18:47,454	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 06:18:48,369	[INFO]	384	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:18:48,372	[INFO]	385	SUCCESS	+6.0	
2020-12-11 06:18:48,373	[DEBUG]	
2020-12-11 06:18:49,306	[INFO]	386	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:18:50,227	[INFO]	387	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:18:51,149	[INFO]	388	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:18:52,109	[INFO]	389	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:18:53,018	[INFO]	390	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:18:53,978	[INFO]	391	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:18:53,979	[INFO]	392	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:18:57,267	[INFO]	393	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:18:57,267	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 06:18:58,199	[INFO]	394	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:19:01,350	[INFO]	395	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:19:01,351	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 06:19:02,289	[INFO]	396	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:19:02,292	[INFO]	397	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:19:02,293	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 06:19:02,295	[INFO]	398	SUCCESS	+6.0	
2020-12-11 06:19:02,296	[DEBUG]	
2020-12-11 06:19:03,262	[INFO]	399	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:19:04,260	[INFO]	400	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:19:05,238	[INFO]	401	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:19:06,186	[INFO]	402	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:19:07,174	[INFO]	403	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:19:07,176	[INFO]	404	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:19:07,176	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 06:19:10,466	[INFO]	405	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:19:10,469	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,25 ****
--- 15,27 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:19:13,701	[INFO]	406	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:19:13,702	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,25 ****
--- 15,28 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:19:13,703	[INFO]	407	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:19:13,704	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,25 ****
--- 15,28 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:19:13,705	[INFO]	408	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:19:13,706	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,25 ****
--- 15,27 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:19:13,706	[INFO]	409	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:19:13,707	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,25 ****
--- 15,27 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:19:14,636	[INFO]	410	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:19:17,922	[INFO]	411	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:19:17,923	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,25 ****
--- 15,27 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:19:21,165	[INFO]	412	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:19:21,166	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 06:19:24,376	[INFO]	413	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:19:24,377	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 06:19:25,308	[INFO]	414	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:19:25,310	[INFO]	415	SUCCESS	+6.0	
2020-12-11 06:19:25,310	[DEBUG]	
2020-12-11 06:19:25,311	[INFO]	416	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:19:25,312	[INFO]	417	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:19:28,503	[INFO]	418	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:19:28,504	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 06:19:28,505	[INFO]	419	SUCCESS	+6.0	
2020-12-11 06:19:28,505	[DEBUG]	
2020-12-11 06:19:29,447	[INFO]	420	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:19:30,448	[INFO]	421	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:19:31,403	[INFO]	422	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:19:31,404	[INFO]	423	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:19:31,404	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 06:19:34,604	[INFO]	424	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:19:34,605	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,28 ****
--- 21,31 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+ 
+         i++;
  
          return sorted_arr;
      }

2020-12-11 06:19:34,606	[INFO]	425	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:19:34,607	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 06:19:35,530	[INFO]	426	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:19:36,513	[INFO]	427	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:19:36,516	[INFO]	428	SUCCESS	+6.0	
2020-12-11 06:19:36,516	[DEBUG]	
2020-12-11 06:19:39,697	[INFO]	429	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:19:39,698	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 06:19:42,902	[INFO]	430	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:19:42,903	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
--- 20,30 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
  	    i++;
          }
  

2020-12-11 06:19:42,904	[INFO]	431	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:19:42,905	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
--- 20,30 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
  	    i++;
          }
  

2020-12-11 06:19:46,134	[INFO]	432	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:19:46,135	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:19:46,136	[INFO]	433	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:19:46,136	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:19:46,137	[INFO]	434	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:19:46,138	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:19:46,139	[INFO]	435	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:19:46,139	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:19:49,324	[INFO]	436	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:19:49,325	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,25 ****
--- 18,31 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:19:49,326	[INFO]	437	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:19:49,326	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:19:49,327	[INFO]	438	SUCCESS	+6.0	
2020-12-11 06:19:49,327	[DEBUG]	
2020-12-11 06:19:50,233	[INFO]	439	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:19:51,159	[INFO]	440	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:19:51,161	[INFO]	441	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:19:51,161	[DEBUG]	
2020-12-11 06:19:51,162	[INFO]	442	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:19:51,163	[DEBUG]	
2020-12-11 06:19:51,164	[INFO]	443	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:19:52,127	[INFO]	444	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:19:52,128	[INFO]	445	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:19:52,128	[DEBUG]	
2020-12-11 06:19:53,100	[INFO]	446	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:19:53,104	[INFO]	447	SUCCESS	+6.0	
2020-12-11 06:19:53,104	[DEBUG]	
2020-12-11 06:19:54,057	[INFO]	448	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:19:55,019	[INFO]	449	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:19:58,317	[INFO]	450	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:19:58,318	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 06:19:58,318	[INFO]	451	SUCCESS	+6.0	
2020-12-11 06:19:58,319	[DEBUG]	
2020-12-11 06:20:01,474	[INFO]	452	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:20:01,475	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,27 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 06:20:02,429	[INFO]	453	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:20:02,432	[INFO]	454	SUCCESS	+6.0	
2020-12-11 06:20:02,433	[DEBUG]	
2020-12-11 06:20:03,393	[INFO]	455	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:20:06,704	[INFO]	456	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:20:06,705	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:20:06,705	[INFO]	457	SUCCESS	+6.0	
2020-12-11 06:20:06,706	[DEBUG]	
2020-12-11 06:20:06,706	[INFO]	458	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:20:06,707	[INFO]	459	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:20:07,657	[INFO]	460	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:20:08,608	[INFO]	461	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:20:09,563	[INFO]	462	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:20:09,564	[INFO]	463	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:20:09,565	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,27 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 06:20:09,565	[INFO]	464	SUCCESS	+6.0	
2020-12-11 06:20:09,566	[DEBUG]	
2020-12-11 06:20:12,811	[INFO]	465	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:20:12,813	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 06:20:12,814	[INFO]	466	SUCCESS	+6.0	
2020-12-11 06:20:12,815	[DEBUG]	
2020-12-11 06:20:16,042	[INFO]	467	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:20:16,043	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 06:20:16,045	[INFO]	468	SUCCESS	+6.0	
2020-12-11 06:20:16,045	[DEBUG]	
2020-12-11 06:20:16,956	[INFO]	469	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:20:20,422	[INFO]	470	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:20:20,423	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
          }
  
          return sorted_arr;

2020-12-11 06:20:20,423	[INFO]	471	SUCCESS	+6.0	
2020-12-11 06:20:20,424	[DEBUG]	
2020-12-11 06:20:21,346	[INFO]	472	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:20:21,348	[INFO]	473	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:20:21,348	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 06:20:21,349	[INFO]	474	SUCCESS	+6.0	
2020-12-11 06:20:21,349	[DEBUG]	
2020-12-11 06:20:21,350	[INFO]	475	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:20:22,268	[INFO]	476	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:20:22,269	[INFO]	477	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:20:23,209	[INFO]	478	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:20:24,131	[INFO]	479	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:20:25,080	[INFO]	480	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:20:26,028	[INFO]	481	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:20:26,979	[INFO]	482	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:20:27,970	[INFO]	483	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:20:27,974	[INFO]	484	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:20:28,934	[INFO]	485	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:20:29,917	[INFO]	486	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:20:30,892	[INFO]	487	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:20:31,832	[INFO]	488	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:20:32,792	[INFO]	489	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:20:36,250	[INFO]	490	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:20:36,251	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,21 ****
--- 16,24 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 06:20:36,251	[INFO]	491	SUCCESS	+6.0	
2020-12-11 06:20:36,252	[DEBUG]	
2020-12-11 06:20:37,143	[INFO]	492	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:20:40,289	[INFO]	493	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:20:40,290	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:20:40,291	[INFO]	494	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:20:40,291	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:20:43,539	[INFO]	495	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:20:43,540	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 06:20:43,541	[INFO]	496	SUCCESS	+6.0	
2020-12-11 06:20:43,542	[DEBUG]	
2020-12-11 06:20:44,476	[INFO]	497	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:20:45,413	[INFO]	498	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:20:46,379	[INFO]	499	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:20:46,381	[INFO]	500	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:20:46,381	[INFO]	==== END ====
2020-12-11 06:20:46,381	[INFO]	Reason: step budget
2020-12-11 06:20:46,381	[INFO]	
2020-12-11 06:20:46,381	[INFO]	========== EPOCH 17 ==========
2020-12-11 06:20:46,382	[INFO]	==== WARMUP ====
2020-12-11 06:20:49,596	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 06:20:49,596	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 06:20:52,826	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 06:20:52,826	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 06:20:56,018	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 06:20:56,018	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 06:20:59,251	[INFO]	INITIAL	SUCCESS	 6.0	
2020-12-11 06:20:59,252	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 06:20:59,252	[INFO]	==== START ====
2020-12-11 06:21:02,450	[INFO]	1	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:21:02,451	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 06:21:05,793	[INFO]	2	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:21:05,794	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
***************
*** 23,28 ****
--- 24,33 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 06:21:06,712	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:21:09,939	[INFO]	4	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:21:09,941	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 06:21:09,943	[INFO]	5	SUCCESS	+6.0	
2020-12-11 06:21:09,944	[DEBUG]	
2020-12-11 06:21:10,909	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:21:11,825	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:21:12,781	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:21:13,839	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:21:17,155	[INFO]	10	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:21:17,156	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:21:18,077	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:21:19,043	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:21:19,044	[INFO]	13	SUCCESS	+6.0	
2020-12-11 06:21:19,044	[DEBUG]	
2020-12-11 06:21:20,023	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:21:20,948	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:21:21,857	[INFO]	16	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:21:22,825	[INFO]	17	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:21:26,117	[INFO]	18	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:21:26,118	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 06:21:26,119	[INFO]	19	SUCCESS	+6.0	
2020-12-11 06:21:26,119	[DEBUG]	
2020-12-11 06:21:27,026	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:21:27,947	[INFO]	21	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:21:28,905	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:21:28,906	[INFO]	23	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:21:28,907	[DEBUG]	
2020-12-11 06:21:28,907	[INFO]	24	SUCCESS	+6.0	
2020-12-11 06:21:28,908	[DEBUG]	
2020-12-11 06:21:29,895	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:21:30,868	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:21:31,832	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:21:32,796	[INFO]	28	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:21:33,756	[INFO]	29	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:21:33,758	[INFO]	30	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:21:33,758	[DEBUG]	
2020-12-11 06:21:33,759	[INFO]	31	SUCCESS	+6.0	
2020-12-11 06:21:33,759	[DEBUG]	
2020-12-11 06:21:34,676	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:21:35,633	[INFO]	33	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:21:36,597	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:21:36,598	[INFO]	35	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:21:37,515	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:21:38,468	[INFO]	37	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:21:41,771	[INFO]	38	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:21:41,772	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 06:21:41,773	[INFO]	39	SUCCESS	+6.0	
2020-12-11 06:21:41,773	[DEBUG]	
2020-12-11 06:21:42,665	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:21:43,616	[INFO]	41	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:21:44,573	[INFO]	42	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:21:45,516	[INFO]	43	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:21:45,518	[INFO]	44	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:21:45,518	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:21:46,485	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:21:47,422	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:21:48,363	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:21:49,598	[INFO]	48	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:21:49,599	[INFO]	49	SUCCESS	+6.0	
2020-12-11 06:21:49,600	[DEBUG]	
2020-12-11 06:21:50,611	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:21:51,538	[INFO]	51	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:21:52,501	[INFO]	52	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:21:53,460	[INFO]	53	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:21:56,692	[INFO]	54	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:21:56,693	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 06:21:56,694	[INFO]	55	SUCCESS	+6.0	
2020-12-11 06:21:56,694	[DEBUG]	
2020-12-11 06:21:57,617	[INFO]	56	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:21:58,571	[INFO]	57	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:21:59,501	[INFO]	58	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:22:00,440	[INFO]	59	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:22:01,390	[INFO]	60	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:22:04,717	[INFO]	61	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:22:04,719	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 06:22:05,671	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:22:05,672	[INFO]	63	SUCCESS	+6.0	
2020-12-11 06:22:05,673	[DEBUG]	
2020-12-11 06:22:06,603	[INFO]	64	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:22:07,564	[INFO]	65	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:22:08,471	[INFO]	66	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:22:09,426	[INFO]	67	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:22:10,370	[INFO]	68	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:22:11,320	[INFO]	69	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:22:12,264	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:22:13,218	[INFO]	71	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:22:16,519	[INFO]	72	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:22:16,520	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 06:22:16,521	[INFO]	73	SUCCESS	+6.0	
2020-12-11 06:22:16,521	[DEBUG]	
2020-12-11 06:22:17,432	[INFO]	74	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:22:18,416	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:22:19,338	[INFO]	76	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:22:19,340	[INFO]	77	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:22:20,280	[INFO]	78	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:22:21,253	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:22:24,478	[INFO]	80	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:22:24,478	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 06:22:24,479	[INFO]	81	SUCCESS	+6.0	
2020-12-11 06:22:24,479	[DEBUG]	
2020-12-11 06:22:24,480	[INFO]	82	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:22:24,481	[INFO]	83	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:22:24,481	[DEBUG]	
2020-12-11 06:22:27,795	[INFO]	84	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:22:27,797	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 06:22:28,724	[INFO]	85	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:22:29,728	[INFO]	86	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:22:29,729	[INFO]	87	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:22:29,729	[DEBUG]	
2020-12-11 06:22:29,730	[INFO]	88	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:22:29,730	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 06:22:30,694	[INFO]	89	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:22:30,696	[INFO]	90	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:22:30,696	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 06:22:31,642	[INFO]	91	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:22:32,571	[INFO]	92	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:22:33,531	[INFO]	93	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:22:34,498	[INFO]	94	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:22:35,432	[INFO]	95	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:22:36,350	[INFO]	96	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:22:37,356	[INFO]	97	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:22:37,359	[INFO]	98	SUCCESS	+6.0	
2020-12-11 06:22:37,359	[DEBUG]	
2020-12-11 06:22:38,310	[INFO]	99	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:22:41,521	[INFO]	100	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:22:41,521	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 06:22:41,522	[INFO]	101	SUCCESS	+6.0	
2020-12-11 06:22:41,522	[DEBUG]	
2020-12-11 06:22:42,461	[INFO]	102	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:22:43,404	[INFO]	103	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:22:44,333	[INFO]	104	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:22:45,258	[INFO]	105	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:22:45,260	[INFO]	106	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:22:46,231	[INFO]	107	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:22:46,233	[INFO]	108	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:22:46,233	[DEBUG]	
2020-12-11 06:22:46,234	[INFO]	109	SUCCESS	+6.0	
2020-12-11 06:22:46,234	[DEBUG]	
2020-12-11 06:22:47,180	[INFO]	110	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:22:50,513	[INFO]	111	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:22:50,514	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 06:22:50,515	[INFO]	112	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:22:50,515	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 06:22:51,390	[INFO]	113	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:22:52,338	[INFO]	114	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:22:53,256	[INFO]	115	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:22:53,258	[INFO]	116	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:22:53,258	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 06:22:54,210	[INFO]	117	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:22:55,142	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:22:55,143	[INFO]	119	SUCCESS	+6.0	
2020-12-11 06:22:55,143	[DEBUG]	
2020-12-11 06:22:56,105	[INFO]	120	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:22:57,048	[INFO]	121	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:23:00,349	[INFO]	122	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:23:00,350	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 06:23:00,351	[INFO]	123	SUCCESS	+6.0	
2020-12-11 06:23:00,351	[DEBUG]	
2020-12-11 06:23:01,270	[INFO]	124	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:23:02,217	[INFO]	125	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:23:03,169	[INFO]	126	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:23:04,119	[INFO]	127	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:23:05,079	[INFO]	128	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:23:06,016	[INFO]	129	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:23:07,007	[INFO]	130	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:23:07,938	[INFO]	131	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:23:11,143	[INFO]	132	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:23:11,144	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 06:23:12,074	[INFO]	133	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:23:12,075	[INFO]	134	SUCCESS	+6.0	
2020-12-11 06:23:12,075	[DEBUG]	
2020-12-11 06:23:12,076	[INFO]	135	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:23:13,024	[INFO]	136	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:23:14,009	[INFO]	137	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:23:14,013	[INFO]	138	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:23:14,014	[DEBUG]	
2020-12-11 06:23:14,015	[INFO]	139	SUCCESS	+6.0	
2020-12-11 06:23:14,015	[DEBUG]	
2020-12-11 06:23:14,965	[INFO]	140	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:23:15,926	[INFO]	141	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:23:16,884	[INFO]	142	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:23:17,820	[INFO]	143	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:23:18,764	[INFO]	144	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:23:18,766	[INFO]	145	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:23:18,766	[DEBUG]	
2020-12-11 06:23:18,767	[INFO]	146	SUCCESS	+6.0	
2020-12-11 06:23:18,767	[DEBUG]	
2020-12-11 06:23:19,735	[INFO]	147	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:23:19,738	[INFO]	148	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:23:20,706	[INFO]	149	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:23:21,683	[INFO]	150	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:23:22,642	[INFO]	151	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:23:23,606	[INFO]	152	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:23:24,557	[INFO]	153	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:23:25,510	[INFO]	154	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:23:25,512	[INFO]	155	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:23:25,513	[INFO]	156	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:23:26,467	[INFO]	157	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:23:27,447	[INFO]	158	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:23:28,408	[INFO]	159	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:23:29,386	[INFO]	160	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:23:29,387	[INFO]	161	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:23:30,363	[INFO]	162	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:23:31,320	[INFO]	163	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:23:31,321	[INFO]	164	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:23:31,321	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 06:23:34,652	[INFO]	165	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:23:34,653	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 06:23:35,578	[INFO]	166	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:23:35,580	[INFO]	167	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:23:35,580	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 06:23:36,534	[INFO]	168	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:23:39,728	[INFO]	169	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:23:39,729	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,25 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
--- 13,24 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:23:40,676	[INFO]	170	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:23:41,633	[INFO]	171	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:23:44,825	[INFO]	172	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:23:44,827	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,27 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
          return sorted_arr;
--- 13,30 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+         }
+ 
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 06:23:48,008	[INFO]	173	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:23:48,009	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
***************
*** 24,29 ****
--- 22,31 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 06:23:51,211	[INFO]	174	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:23:51,211	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 06:23:51,212	[INFO]	175	SUCCESS	+6.0	
2020-12-11 06:23:51,212	[DEBUG]	
2020-12-11 06:23:54,427	[INFO]	176	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:23:54,428	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 06:23:55,367	[INFO]	177	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:23:55,368	[INFO]	178	SUCCESS	+6.0	
2020-12-11 06:23:55,368	[DEBUG]	
2020-12-11 06:23:55,369	[INFO]	179	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:23:55,370	[INFO]	180	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:23:55,370	[DEBUG]	
2020-12-11 06:23:56,335	[INFO]	181	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:23:57,320	[INFO]	182	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:23:57,322	[INFO]	183	SUCCESS	+6.0	
2020-12-11 06:23:57,323	[DEBUG]	
2020-12-11 06:24:00,573	[INFO]	184	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:24:00,574	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 06:24:00,575	[INFO]	185	SUCCESS	+6.0	
2020-12-11 06:24:00,575	[DEBUG]	
2020-12-11 06:24:01,517	[INFO]	186	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:24:02,463	[INFO]	187	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:24:03,420	[INFO]	188	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:24:04,375	[INFO]	189	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:24:05,347	[INFO]	190	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:24:06,305	[INFO]	191	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:24:07,313	[INFO]	192	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:24:08,295	[INFO]	193	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:24:09,243	[INFO]	194	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:24:12,544	[INFO]	195	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:24:12,545	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 06:24:13,482	[INFO]	196	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:24:14,455	[INFO]	197	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:24:15,429	[INFO]	198	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:24:18,767	[INFO]	199	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:24:18,768	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,26 ****
--- 19,30 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
  	    i++;
          }
  

2020-12-11 06:24:22,085	[INFO]	200	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:24:22,087	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,27 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 06:24:22,089	[INFO]	201	SUCCESS	+6.0	
2020-12-11 06:24:22,089	[DEBUG]	
2020-12-11 06:24:23,019	[INFO]	202	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:24:23,972	[INFO]	203	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:24:24,969	[INFO]	204	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:24:28,743	[INFO]	205	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:24:28,744	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 06:24:28,745	[INFO]	206	SUCCESS	+6.0	
2020-12-11 06:24:28,746	[DEBUG]	
2020-12-11 06:24:28,747	[INFO]	207	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:24:28,747	[DEBUG]	
2020-12-11 06:24:33,785	[INFO]	208	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:24:33,786	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 06:24:33,788	[INFO]	209	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:24:33,788	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 06:24:38,223	[INFO]	210	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:24:38,224	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,27 ****
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 15,28 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 06:24:39,397	[INFO]	211	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:24:41,030	[INFO]	212	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:24:44,849	[INFO]	213	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:24:44,850	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 06:24:44,852	[INFO]	214	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:24:44,852	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 06:24:46,158	[INFO]	215	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:24:46,159	[INFO]	216	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:24:46,159	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 06:24:46,160	[INFO]	217	SUCCESS	+6.0	
2020-12-11 06:24:46,160	[DEBUG]	
2020-12-11 06:24:47,406	[INFO]	218	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:24:47,407	[INFO]	219	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:24:47,408	[INFO]	220	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:24:47,409	[DEBUG]	
2020-12-11 06:24:47,410	[INFO]	221	SUCCESS	+6.0	
2020-12-11 06:24:47,410	[DEBUG]	
2020-12-11 06:24:47,411	[INFO]	222	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:24:47,412	[DEBUG]	
2020-12-11 06:24:47,413	[INFO]	223	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:24:47,413	[DEBUG]	
2020-12-11 06:24:47,414	[INFO]	224	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:24:47,415	[DEBUG]	
2020-12-11 06:24:47,415	[INFO]	225	SUCCESS	+6.0	
2020-12-11 06:24:47,416	[DEBUG]	
2020-12-11 06:24:48,684	[INFO]	226	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:24:49,879	[INFO]	227	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:24:55,583	[INFO]	228	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:24:55,584	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:24:55,587	[INFO]	229	SUCCESS	+6.0	
2020-12-11 06:24:55,587	[DEBUG]	
2020-12-11 06:24:56,950	[INFO]	230	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:24:58,284	[INFO]	231	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:24:59,753	[INFO]	232	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:25:01,064	[INFO]	233	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:25:02,431	[INFO]	234	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:25:03,711	[INFO]	235	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:25:04,980	[INFO]	236	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:25:06,384	[INFO]	237	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:25:09,822	[INFO]	238	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:25:09,823	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 06:25:09,823	[INFO]	239	SUCCESS	+6.0	
2020-12-11 06:25:09,823	[DEBUG]	
2020-12-11 06:25:13,008	[INFO]	240	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:25:13,009	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 06:25:13,010	[INFO]	241	SUCCESS	+6.0	
2020-12-11 06:25:13,010	[DEBUG]	
2020-12-11 06:25:13,948	[INFO]	242	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:25:14,871	[INFO]	243	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:25:14,872	[INFO]	244	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:25:14,873	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:25:14,873	[INFO]	245	SUCCESS	+6.0	
2020-12-11 06:25:14,873	[DEBUG]	
2020-12-11 06:25:18,377	[INFO]	246	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:25:18,378	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 06:25:18,378	[INFO]	247	SUCCESS	+6.0	
2020-12-11 06:25:18,379	[DEBUG]	
2020-12-11 06:25:19,279	[INFO]	248	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:25:19,280	[INFO]	249	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:25:20,202	[INFO]	250	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:25:20,204	[INFO]	251	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:25:20,205	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 06:25:20,206	[INFO]	252	SUCCESS	+6.0	
2020-12-11 06:25:20,206	[DEBUG]	
2020-12-11 06:25:21,181	[INFO]	253	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:25:21,184	[INFO]	254	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:25:21,185	[DEBUG]	
2020-12-11 06:25:21,187	[INFO]	255	SUCCESS	+6.0	
2020-12-11 06:25:21,188	[DEBUG]	
2020-12-11 06:25:22,118	[INFO]	256	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:25:22,120	[INFO]	257	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:25:23,057	[INFO]	258	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:25:26,287	[INFO]	259	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:25:26,289	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 06:25:26,291	[INFO]	260	SUCCESS	+6.0	
2020-12-11 06:25:26,291	[DEBUG]	
2020-12-11 06:25:27,163	[INFO]	261	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:25:28,112	[INFO]	262	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:25:29,054	[INFO]	263	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:25:30,057	[INFO]	264	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:25:31,021	[INFO]	265	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:25:34,890	[INFO]	266	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:25:34,891	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 06:25:36,595	[INFO]	267	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:25:38,119	[INFO]	268	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:25:38,120	[INFO]	269	SUCCESS	+6.0	
2020-12-11 06:25:38,120	[DEBUG]	
2020-12-11 06:25:39,747	[INFO]	270	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:25:41,287	[INFO]	271	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:25:42,527	[INFO]	272	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:25:43,799	[INFO]	273	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:25:43,800	[INFO]	274	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:25:43,802	[INFO]	275	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:25:43,802	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 06:25:47,595	[INFO]	276	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:25:47,597	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,28 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 06:25:47,598	[INFO]	277	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:25:47,599	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 06:25:50,781	[INFO]	278	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:25:50,782	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,25 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
--- 14,26 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:25:54,017	[INFO]	279	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:25:54,018	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 06:25:54,927	[INFO]	280	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:25:55,874	[INFO]	281	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:25:56,833	[INFO]	282	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:25:56,834	[INFO]	283	SUCCESS	+6.0	
2020-12-11 06:25:56,834	[DEBUG]	
2020-12-11 06:25:57,803	[INFO]	284	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:26:01,029	[INFO]	285	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:26:01,030	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,27 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 06:26:01,031	[INFO]	286	SUCCESS	+6.0	
2020-12-11 06:26:01,032	[DEBUG]	
2020-12-11 06:26:04,195	[INFO]	287	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:26:04,196	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 06:26:04,197	[INFO]	288	SUCCESS	+6.0	
2020-12-11 06:26:04,197	[DEBUG]	
2020-12-11 06:26:05,189	[INFO]	289	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:26:06,141	[INFO]	290	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:26:07,083	[INFO]	291	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:26:10,411	[INFO]	292	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:26:10,412	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
          }
  
          return sorted_arr;

2020-12-11 06:26:10,414	[INFO]	293	SUCCESS	+6.0	
2020-12-11 06:26:10,414	[DEBUG]	
2020-12-11 06:26:10,416	[INFO]	294	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:26:11,310	[INFO]	295	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:26:12,294	[INFO]	296	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:26:13,286	[INFO]	297	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:26:14,248	[INFO]	298	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:26:15,191	[INFO]	299	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:26:16,150	[INFO]	300	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:26:17,086	[INFO]	301	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:26:17,087	[INFO]	302	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:26:17,088	[DEBUG]	
2020-12-11 06:26:17,088	[INFO]	303	SUCCESS	+6.0	
2020-12-11 06:26:17,089	[DEBUG]	
2020-12-11 06:26:18,040	[INFO]	304	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:26:18,976	[INFO]	305	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:26:19,922	[INFO]	306	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:26:20,890	[INFO]	307	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:26:21,855	[INFO]	308	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:26:21,856	[INFO]	309	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:26:21,857	[INFO]	310	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:26:21,857	[DEBUG]	
2020-12-11 06:26:21,858	[INFO]	311	SUCCESS	+6.0	
2020-12-11 06:26:21,858	[DEBUG]	
2020-12-11 06:26:25,145	[INFO]	312	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:26:25,145	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:26:26,053	[INFO]	313	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:26:26,054	[INFO]	314	SUCCESS	+6.0	
2020-12-11 06:26:26,054	[DEBUG]	
2020-12-11 06:26:27,008	[INFO]	315	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:26:27,012	[INFO]	316	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:26:27,013	[DEBUG]	
2020-12-11 06:26:27,942	[INFO]	317	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:26:28,915	[INFO]	318	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:26:28,917	[INFO]	319	SUCCESS	+6.0	
2020-12-11 06:26:28,917	[DEBUG]	
2020-12-11 06:26:29,933	[INFO]	320	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:26:30,901	[INFO]	321	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:26:31,847	[INFO]	322	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:26:31,850	[INFO]	323	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:26:32,766	[INFO]	324	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:26:33,768	[INFO]	325	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:26:33,771	[INFO]	326	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:26:33,772	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 06:26:33,774	[INFO]	327	SUCCESS	+6.0	
2020-12-11 06:26:33,774	[DEBUG]	
2020-12-11 06:26:34,718	[INFO]	328	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:26:35,690	[INFO]	329	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:26:36,663	[INFO]	330	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:26:37,637	[INFO]	331	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:26:38,596	[INFO]	332	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:26:42,124	[INFO]	333	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:26:42,126	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 06:26:42,127	[INFO]	334	SUCCESS	+6.0	
2020-12-11 06:26:42,127	[DEBUG]	
2020-12-11 06:26:45,325	[INFO]	335	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:26:45,326	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 06:26:46,262	[INFO]	336	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:26:47,237	[INFO]	337	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:26:47,239	[INFO]	338	SUCCESS	+6.0	
2020-12-11 06:26:47,239	[DEBUG]	
2020-12-11 06:26:48,215	[INFO]	339	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:26:48,218	[INFO]	340	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:26:49,149	[INFO]	341	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:26:50,107	[INFO]	342	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:26:51,045	[INFO]	343	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:26:52,019	[INFO]	344	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:26:52,976	[INFO]	345	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:26:53,959	[INFO]	346	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:26:53,960	[INFO]	347	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:26:54,919	[INFO]	348	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:26:54,920	[INFO]	349	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:26:54,921	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 06:26:55,876	[INFO]	350	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:26:56,827	[INFO]	351	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:26:56,828	[INFO]	352	SUCCESS	+6.0	
2020-12-11 06:26:56,828	[DEBUG]	
2020-12-11 06:26:56,829	[INFO]	353	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:26:57,796	[INFO]	354	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:26:58,749	[INFO]	355	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:26:59,714	[INFO]	356	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:27:00,634	[INFO]	357	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:27:00,635	[INFO]	358	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:27:00,636	[DEBUG]	
2020-12-11 06:27:00,636	[INFO]	359	SUCCESS	+6.0	
2020-12-11 06:27:00,636	[DEBUG]	
2020-12-11 06:27:00,637	[INFO]	360	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:27:01,584	[INFO]	361	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:27:02,541	[INFO]	362	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:27:03,505	[INFO]	363	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:27:04,432	[INFO]	364	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:27:07,762	[INFO]	365	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:27:07,763	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 06:27:08,667	[INFO]	366	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:27:08,668	[INFO]	367	SUCCESS	+6.0	
2020-12-11 06:27:08,668	[DEBUG]	
2020-12-11 06:27:09,629	[INFO]	368	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:27:12,935	[INFO]	369	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:27:12,936	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 06:27:13,873	[INFO]	370	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:27:13,874	[INFO]	371	SUCCESS	+6.0	
2020-12-11 06:27:13,874	[DEBUG]	
2020-12-11 06:27:14,858	[INFO]	372	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:27:14,860	[INFO]	373	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:27:15,846	[INFO]	374	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:27:16,829	[INFO]	375	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:27:17,781	[INFO]	376	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:27:21,027	[INFO]	377	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:27:21,028	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 06:27:24,268	[INFO]	378	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:27:24,269	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,27 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 14,26 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 06:27:24,269	[INFO]	379	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:27:24,270	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 06:27:25,153	[INFO]	380	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:27:25,154	[INFO]	381	SUCCESS	+6.0	
2020-12-11 06:27:25,154	[DEBUG]	
2020-12-11 06:27:26,107	[INFO]	382	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:27:27,039	[INFO]	383	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:27:27,994	[INFO]	384	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:27:31,269	[INFO]	385	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:27:31,270	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 06:27:32,221	[INFO]	386	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:27:32,222	[INFO]	387	SUCCESS	+6.0	
2020-12-11 06:27:32,222	[DEBUG]	
2020-12-11 06:27:33,162	[INFO]	388	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:27:34,114	[INFO]	389	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:27:35,045	[INFO]	390	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:27:36,016	[INFO]	391	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:27:36,983	[INFO]	392	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:27:40,303	[INFO]	393	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:27:40,304	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,21 ****
--- 16,24 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 06:27:43,591	[INFO]	394	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:27:43,592	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,25 ****
--- 16,31 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:27:46,797	[INFO]	395	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:27:46,798	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,25 ****
--- 16,31 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             int i = 0;
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:27:50,073	[INFO]	396	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:27:50,074	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,25 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
--- 14,28 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             int i = 0;
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:27:53,381	[INFO]	397	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:27:53,382	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:27:53,383	[INFO]	398	SUCCESS	+6.0	
2020-12-11 06:27:53,384	[DEBUG]	
2020-12-11 06:27:54,287	[INFO]	399	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:27:55,253	[INFO]	400	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:27:58,509	[INFO]	401	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:27:58,510	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,27 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 06:27:59,449	[INFO]	402	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:28:02,740	[INFO]	403	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:28:02,741	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,24 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
--- 14,27 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 06:28:03,622	[INFO]	404	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:28:04,560	[INFO]	405	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:28:07,820	[INFO]	406	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:28:07,820	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 06:28:07,821	[INFO]	407	SUCCESS	+6.0	
2020-12-11 06:28:07,822	[DEBUG]	
2020-12-11 06:28:08,782	[INFO]	408	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:28:08,784	[INFO]	409	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:28:08,784	[DEBUG]	
2020-12-11 06:28:08,785	[INFO]	410	SUCCESS	+6.0	
2020-12-11 06:28:08,785	[DEBUG]	
2020-12-11 06:28:09,705	[INFO]	411	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:28:10,662	[INFO]	412	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:28:11,640	[INFO]	413	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:28:12,603	[INFO]	414	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:28:13,552	[INFO]	415	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:28:16,863	[INFO]	416	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:28:16,863	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 06:28:20,060	[INFO]	417	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:28:20,062	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,28 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 06:28:20,065	[INFO]	418	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:28:20,066	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,28 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 06:28:21,006	[INFO]	419	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:28:21,972	[INFO]	420	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:28:22,975	[INFO]	421	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:28:22,976	[INFO]	422	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:28:22,977	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 06:28:23,902	[INFO]	423	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:28:24,890	[INFO]	424	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:28:24,893	[INFO]	425	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:28:24,894	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 06:28:25,841	[INFO]	426	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:28:25,842	[INFO]	427	SUCCESS	+6.0	
2020-12-11 06:28:25,842	[DEBUG]	
2020-12-11 06:28:26,800	[INFO]	428	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:28:27,754	[INFO]	429	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:28:28,731	[INFO]	430	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:28:28,735	[INFO]	431	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:28:29,714	[INFO]	432	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:28:30,688	[INFO]	433	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:28:31,658	[INFO]	434	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:28:32,606	[INFO]	435	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:28:33,554	[INFO]	436	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:28:34,522	[INFO]	437	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:28:34,523	[INFO]	438	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:28:35,497	[INFO]	439	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:28:38,828	[INFO]	440	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:28:38,830	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:28:39,742	[INFO]	441	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:28:39,743	[INFO]	442	SUCCESS	+6.0	
2020-12-11 06:28:39,743	[DEBUG]	
2020-12-11 06:28:42,924	[INFO]	443	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:28:42,925	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 06:28:43,827	[INFO]	444	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:28:43,828	[INFO]	445	SUCCESS	+6.0	
2020-12-11 06:28:43,829	[DEBUG]	
2020-12-11 06:28:44,803	[INFO]	446	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:28:45,772	[INFO]	447	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:28:48,997	[INFO]	448	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:28:48,998	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 06:28:52,241	[INFO]	449	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:28:52,242	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    return sorted_arr;
+         }
  
          return sorted_arr;
      }

2020-12-11 06:28:52,243	[INFO]	450	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:28:52,243	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 06:28:55,462	[INFO]	451	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:28:55,463	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,33 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         i++;
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 06:28:55,464	[INFO]	452	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:28:55,465	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,33 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         i++;
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 06:28:56,366	[INFO]	453	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:28:56,369	[INFO]	454	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:28:56,370	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,33 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         i++;
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 06:28:57,370	[INFO]	455	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:28:57,374	[INFO]	456	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:29:00,668	[INFO]	457	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:29:00,669	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 06:29:00,670	[INFO]	458	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:29:00,671	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 06:29:00,672	[INFO]	459	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:29:00,672	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 06:29:00,673	[INFO]	460	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:29:00,674	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 06:29:00,674	[INFO]	461	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:29:00,675	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 06:29:00,676	[INFO]	462	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:29:00,676	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 06:29:01,574	[INFO]	463	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:29:01,576	[INFO]	464	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:29:01,577	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 06:29:01,578	[INFO]	465	SUCCESS	+6.0	
2020-12-11 06:29:01,578	[DEBUG]	
2020-12-11 06:29:04,826	[INFO]	466	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:29:04,826	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 06:29:08,052	[INFO]	467	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:29:08,053	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,27 ****
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
! 	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
! 	
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 06:29:08,985	[INFO]	468	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:29:12,258	[INFO]	469	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:29:12,259	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,28 ****
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
! 	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 18,25 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
! 	
!         int i = 0;
  
          return sorted_arr;
      }

2020-12-11 06:29:12,261	[INFO]	470	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:29:12,261	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,28 ****
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
! 	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 18,25 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
! 	
!         int i = 0;
  
          return sorted_arr;
      }

2020-12-11 06:29:15,555	[INFO]	471	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:29:15,558	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,28 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
! 	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 14,26 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
! 	
!         int i = 0;
  
          return sorted_arr;
      }

2020-12-11 06:29:15,560	[INFO]	472	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:29:15,561	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,28 ****
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
! 	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 18,25 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
! 	
!         int i = 0;
  
          return sorted_arr;
      }

2020-12-11 06:29:16,460	[INFO]	473	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:29:16,463	[INFO]	474	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:29:16,463	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,28 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
! 	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 14,26 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
! 	
!         int i = 0;
  
          return sorted_arr;
      }

2020-12-11 06:29:17,392	[INFO]	475	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:29:18,356	[INFO]	476	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:29:18,357	[INFO]	477	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:29:18,358	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,28 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
! 	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 14,26 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
! 	
!         int i = 0;
  
          return sorted_arr;
      }

2020-12-11 06:29:21,618	[INFO]	478	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:29:21,619	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,27 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
! 	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 14,27 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
! 	
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 06:29:24,803	[INFO]	479	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:29:24,804	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,27 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 14,27 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 06:29:24,806	[INFO]	480	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:29:24,806	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,27 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 14,27 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 06:29:25,716	[INFO]	481	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:29:25,718	[INFO]	482	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:29:25,719	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,27 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 14,27 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 06:29:26,624	[INFO]	483	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:29:27,583	[INFO]	484	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:29:27,585	[INFO]	485	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:29:27,585	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,27 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 14,27 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 06:29:27,587	[INFO]	486	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:29:27,587	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,27 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 14,27 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 06:29:27,588	[INFO]	487	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:29:27,590	[INFO]	488	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:29:27,590	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,27 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 14,27 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 06:29:27,591	[INFO]	489	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:29:27,592	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,27 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 14,27 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 06:29:28,531	[INFO]	490	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:29:31,844	[INFO]	491	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:29:31,847	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 22,28 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 06:29:31,849	[INFO]	492	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:29:31,850	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 22,28 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 06:29:31,852	[INFO]	493	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:29:31,853	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 22,28 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 06:29:35,108	[INFO]	494	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:29:35,109	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 06:29:35,110	[INFO]	495	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:29:35,111	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 06:29:35,111	[INFO]	496	SUCCESS	+6.0	
2020-12-11 06:29:35,111	[DEBUG]	
2020-12-11 06:29:36,064	[INFO]	497	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:29:37,007	[INFO]	498	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:29:37,967	[INFO]	499	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:29:38,930	[INFO]	500	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:29:38,931	[INFO]	==== END ====
2020-12-11 06:29:38,931	[INFO]	Reason: step budget
2020-12-11 06:29:38,931	[INFO]	
2020-12-11 06:29:38,931	[INFO]	========== EPOCH 18 ==========
2020-12-11 06:29:38,932	[INFO]	==== WARMUP ====
2020-12-11 06:29:42,176	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 06:29:42,177	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 06:29:45,401	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 06:29:45,401	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 06:29:48,656	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 06:29:48,656	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 06:29:52,125	[INFO]	INITIAL	SUCCESS	 6.0	
2020-12-11 06:29:52,126	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 06:29:52,126	[INFO]	==== START ====
2020-12-11 06:29:53,087	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:29:54,147	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:29:55,161	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:29:56,160	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:29:57,153	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:29:58,121	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:29:59,074	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:30:00,024	[INFO]	8	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:30:00,984	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:30:04,266	[INFO]	10	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:30:04,267	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:30:05,215	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:30:06,180	[INFO]	12	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:30:06,181	[INFO]	13	SUCCESS	+6.0	
2020-12-11 06:30:06,182	[DEBUG]	
2020-12-11 06:30:06,182	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:30:09,399	[INFO]	15	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:30:09,400	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 06:30:10,323	[INFO]	16	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:30:10,324	[INFO]	17	SUCCESS	+6.0	
2020-12-11 06:30:10,324	[DEBUG]	
2020-12-11 06:30:13,784	[INFO]	18	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:30:13,785	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 06:30:14,737	[INFO]	19	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:30:18,011	[INFO]	20	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:30:18,012	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,27 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 20,27 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 06:30:18,951	[INFO]	21	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:30:18,952	[INFO]	22	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:30:18,952	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 06:30:20,151	[INFO]	23	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:30:20,152	[INFO]	24	SUCCESS	+6.0	
2020-12-11 06:30:20,152	[DEBUG]	
2020-12-11 06:30:21,151	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:30:22,104	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:30:23,062	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:30:26,402	[INFO]	28	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:30:26,403	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,21 ****
--- 16,24 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 06:30:27,311	[INFO]	29	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:30:27,312	[INFO]	30	SUCCESS	+6.0	
2020-12-11 06:30:27,312	[DEBUG]	
2020-12-11 06:30:28,294	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:30:29,251	[INFO]	32	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:30:30,269	[INFO]	33	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:30:31,244	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:30:32,175	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:30:33,167	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:30:34,117	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:30:35,160	[INFO]	38	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:30:39,306	[INFO]	39	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:30:39,307	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 06:30:39,308	[INFO]	40	SUCCESS	+6.0	
2020-12-11 06:30:39,309	[DEBUG]	
2020-12-11 06:30:40,287	[INFO]	41	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:30:44,364	[INFO]	42	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:30:44,366	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 06:30:48,043	[INFO]	43	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:30:48,044	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,31 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
!         }
! 
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 06:30:48,983	[INFO]	44	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:30:49,947	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:30:50,895	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:30:51,834	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:30:52,772	[INFO]	48	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:30:53,714	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:30:57,008	[INFO]	50	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:30:57,009	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,36 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    
+         }
+ 
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          return sorted_arr;
      }

2020-12-11 06:31:00,299	[INFO]	51	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:31:00,301	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    
+         }
  
          return sorted_arr;
      }

2020-12-11 06:31:03,574	[INFO]	52	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:31:03,575	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 06:31:04,506	[INFO]	53	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:31:05,503	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:31:06,454	[INFO]	55	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:31:06,455	[INFO]	56	SUCCESS	+6.0	
2020-12-11 06:31:06,456	[DEBUG]	
2020-12-11 06:31:07,417	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:31:08,400	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:31:08,401	[INFO]	59	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:31:08,402	[DEBUG]	
2020-12-11 06:31:09,357	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:31:09,359	[INFO]	61	SUCCESS	+6.0	
2020-12-11 06:31:09,359	[DEBUG]	
2020-12-11 06:31:10,336	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:31:11,275	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:31:11,276	[INFO]	64	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:31:12,194	[INFO]	65	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:31:13,188	[INFO]	66	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:31:14,123	[INFO]	67	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:31:15,084	[INFO]	68	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:31:15,086	[INFO]	69	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:31:18,318	[INFO]	70	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:31:18,319	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 06:31:18,320	[INFO]	71	SUCCESS	+6.0	
2020-12-11 06:31:18,320	[DEBUG]	
2020-12-11 06:31:19,247	[INFO]	72	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:31:20,214	[INFO]	73	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:31:23,464	[INFO]	74	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:31:23,466	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 06:31:24,399	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:31:24,400	[INFO]	76	SUCCESS	+6.0	
2020-12-11 06:31:24,400	[DEBUG]	
2020-12-11 06:31:24,401	[INFO]	77	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:31:24,401	[DEBUG]	
2020-12-11 06:31:25,354	[INFO]	78	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:31:25,356	[INFO]	79	SUCCESS	+6.0	
2020-12-11 06:31:25,356	[DEBUG]	
2020-12-11 06:31:26,288	[INFO]	80	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:31:27,240	[INFO]	81	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:31:28,220	[INFO]	82	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:31:28,221	[INFO]	83	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:31:28,222	[DEBUG]	
2020-12-11 06:31:28,222	[INFO]	84	SUCCESS	+6.0	
2020-12-11 06:31:28,223	[DEBUG]	
2020-12-11 06:31:29,167	[INFO]	85	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:31:29,169	[INFO]	86	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:31:30,127	[INFO]	87	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:31:30,128	[INFO]	88	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:31:31,088	[INFO]	89	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:31:31,090	[INFO]	90	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:31:32,053	[INFO]	91	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:31:32,980	[INFO]	92	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:31:36,295	[INFO]	93	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:31:36,296	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 06:31:36,296	[INFO]	94	SUCCESS	+6.0	
2020-12-11 06:31:36,297	[DEBUG]	
2020-12-11 06:31:37,227	[INFO]	95	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:31:38,163	[INFO]	96	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:31:39,116	[INFO]	97	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:31:42,384	[INFO]	98	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:31:42,385	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 06:31:45,589	[INFO]	99	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:31:45,590	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,26 ****
--- 15,30 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 06:31:45,591	[INFO]	100	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:31:45,591	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 06:31:45,592	[INFO]	101	SUCCESS	+6.0	
2020-12-11 06:31:45,592	[DEBUG]	
2020-12-11 06:31:46,540	[INFO]	102	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:31:47,508	[INFO]	103	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:31:48,486	[INFO]	104	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:31:49,465	[INFO]	105	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:31:50,405	[INFO]	106	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:31:51,369	[INFO]	107	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:31:52,322	[INFO]	108	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:31:55,589	[INFO]	109	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:31:55,592	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 06:31:58,818	[INFO]	110	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:31:58,820	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,34 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 06:31:59,784	[INFO]	111	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:31:59,787	[INFO]	112	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:31:59,789	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 06:32:00,767	[INFO]	113	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:32:01,725	[INFO]	114	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:32:05,079	[INFO]	115	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:32:05,080	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 06:32:05,979	[INFO]	116	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:32:06,909	[INFO]	117	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:32:07,867	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:32:07,868	[INFO]	119	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:32:07,869	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 06:32:07,869	[INFO]	120	SUCCESS	+6.0	
2020-12-11 06:32:07,870	[DEBUG]	
2020-12-11 06:32:08,805	[INFO]	121	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:32:09,759	[INFO]	122	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:32:09,763	[INFO]	123	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:32:09,764	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 06:32:10,732	[INFO]	124	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:32:13,886	[INFO]	125	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:32:13,887	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,28 ****
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 15,26 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:32:14,846	[INFO]	126	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:32:14,849	[INFO]	127	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:32:14,850	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 06:32:14,852	[INFO]	128	SUCCESS	+6.0	
2020-12-11 06:32:14,852	[DEBUG]	
2020-12-11 06:32:15,799	[INFO]	129	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:32:16,717	[INFO]	130	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:32:16,718	[INFO]	131	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:32:19,976	[INFO]	132	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:32:19,977	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,27 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 06:32:19,977	[INFO]	133	SUCCESS	+6.0	
2020-12-11 06:32:19,978	[DEBUG]	
2020-12-11 06:32:20,930	[INFO]	134	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:32:24,199	[INFO]	135	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:32:24,200	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,21 ****
--- 16,24 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 06:32:25,112	[INFO]	136	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:32:26,058	[INFO]	137	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:32:26,059	[INFO]	138	SUCCESS	+6.0	
2020-12-11 06:32:26,059	[DEBUG]	
2020-12-11 06:32:26,061	[INFO]	139	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:32:26,061	[DEBUG]	
2020-12-11 06:32:26,996	[INFO]	140	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:32:26,997	[INFO]	141	SUCCESS	+6.0	
2020-12-11 06:32:26,998	[DEBUG]	
2020-12-11 06:32:27,950	[INFO]	142	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:32:28,906	[INFO]	143	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:32:29,936	[INFO]	144	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:32:30,890	[INFO]	145	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:32:34,021	[INFO]	146	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:32:34,022	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:32:34,958	[INFO]	147	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:32:34,960	[INFO]	148	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:32:34,960	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:32:34,961	[INFO]	149	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:32:34,961	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:32:35,906	[INFO]	150	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:32:35,907	[INFO]	151	SUCCESS	+6.0	
2020-12-11 06:32:35,907	[DEBUG]	
2020-12-11 06:32:36,856	[INFO]	152	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:32:40,085	[INFO]	153	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:32:40,085	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 06:32:40,086	[INFO]	154	SUCCESS	+6.0	
2020-12-11 06:32:40,086	[DEBUG]	
2020-12-11 06:32:43,318	[INFO]	155	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:32:43,319	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 06:32:44,238	[INFO]	156	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:32:44,240	[INFO]	157	SUCCESS	+6.0	
2020-12-11 06:32:44,240	[DEBUG]	
2020-12-11 06:32:45,345	[INFO]	158	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:32:46,314	[INFO]	159	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:32:47,276	[INFO]	160	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:32:48,229	[INFO]	161	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:32:49,150	[INFO]	162	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:32:52,455	[INFO]	163	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:32:52,456	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 06:32:52,456	[INFO]	164	SUCCESS	+6.0	
2020-12-11 06:32:52,457	[DEBUG]	
2020-12-11 06:32:52,457	[INFO]	165	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:32:55,657	[INFO]	166	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:32:55,657	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
          }
  
          return sorted_arr;

2020-12-11 06:32:55,658	[INFO]	167	SUCCESS	+6.0	
2020-12-11 06:32:55,658	[DEBUG]	
2020-12-11 06:32:58,841	[INFO]	168	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:32:58,842	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 06:33:02,011	[INFO]	169	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:33:02,013	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,31 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 06:33:02,015	[INFO]	170	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:33:02,016	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 06:33:02,017	[INFO]	171	SUCCESS	+6.0	
2020-12-11 06:33:02,018	[DEBUG]	
2020-12-11 06:33:02,960	[INFO]	172	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:33:03,880	[INFO]	173	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:33:04,818	[INFO]	174	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:33:05,791	[INFO]	175	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:33:06,791	[INFO]	176	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:33:07,732	[INFO]	177	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:33:07,733	[INFO]	178	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:33:08,712	[INFO]	179	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:33:09,671	[INFO]	180	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:33:10,577	[INFO]	181	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:33:11,556	[INFO]	182	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:33:12,496	[INFO]	183	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:33:13,454	[INFO]	184	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:33:14,392	[INFO]	185	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:33:15,358	[INFO]	186	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:33:16,298	[INFO]	187	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:33:16,299	[INFO]	188	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:33:19,515	[INFO]	189	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:33:19,516	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 06:33:19,517	[INFO]	190	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:33:19,517	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 06:33:19,518	[INFO]	191	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:33:19,519	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 06:33:22,673	[INFO]	192	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:33:22,674	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,26 ****
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 17,30 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 06:33:22,674	[INFO]	193	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:33:22,675	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 06:33:22,675	[INFO]	194	SUCCESS	+6.0	
2020-12-11 06:33:22,676	[DEBUG]	
2020-12-11 06:33:23,575	[INFO]	195	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:33:24,576	[INFO]	196	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:33:27,770	[INFO]	197	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:33:27,770	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 06:33:27,771	[INFO]	198	SUCCESS	+6.0	
2020-12-11 06:33:27,771	[DEBUG]	
2020-12-11 06:33:27,772	[INFO]	199	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:33:27,772	[DEBUG]	
2020-12-11 06:33:27,773	[INFO]	200	SUCCESS	+6.0	
2020-12-11 06:33:27,773	[DEBUG]	
2020-12-11 06:33:28,704	[INFO]	201	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:33:29,731	[INFO]	202	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:33:30,648	[INFO]	203	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:33:31,608	[INFO]	204	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:33:32,570	[INFO]	205	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:33:32,572	[INFO]	206	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:33:33,508	[INFO]	207	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:33:36,719	[INFO]	208	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:33:36,721	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 06:33:36,722	[INFO]	209	SUCCESS	+6.0	
2020-12-11 06:33:36,723	[DEBUG]	
2020-12-11 06:33:39,972	[INFO]	210	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:33:39,973	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,34 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 06:33:39,974	[INFO]	211	SUCCESS	+6.0	
2020-12-11 06:33:39,974	[DEBUG]	
2020-12-11 06:33:40,892	[INFO]	212	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:33:41,828	[INFO]	213	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:33:42,746	[INFO]	214	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:33:43,691	[INFO]	215	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:33:44,651	[INFO]	216	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:33:44,653	[INFO]	217	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:33:44,653	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:33:45,514	[INFO]	218	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:33:45,515	[INFO]	219	SUCCESS	+6.0	
2020-12-11 06:33:45,515	[DEBUG]	
2020-12-11 06:33:46,485	[INFO]	220	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:33:46,488	[INFO]	221	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:33:46,489	[DEBUG]	
2020-12-11 06:33:47,454	[INFO]	222	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:33:47,456	[INFO]	223	SUCCESS	+6.0	
2020-12-11 06:33:47,457	[DEBUG]	
2020-12-11 06:33:48,386	[INFO]	224	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:33:49,348	[INFO]	225	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:33:49,351	[INFO]	226	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:33:49,352	[DEBUG]	
2020-12-11 06:33:49,354	[INFO]	227	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:33:52,668	[INFO]	228	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:33:52,669	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 06:33:53,546	[INFO]	229	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:33:53,547	[INFO]	230	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:33:53,547	[DEBUG]	
2020-12-11 06:33:53,548	[INFO]	231	SUCCESS	+6.0	
2020-12-11 06:33:53,548	[DEBUG]	
2020-12-11 06:33:53,549	[INFO]	232	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:33:53,549	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 06:33:53,550	[INFO]	233	SUCCESS	+6.0	
2020-12-11 06:33:53,550	[DEBUG]	
2020-12-11 06:33:54,458	[INFO]	234	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:33:55,388	[INFO]	235	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:33:55,389	[INFO]	236	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:33:56,324	[INFO]	237	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:33:57,281	[INFO]	238	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:33:58,228	[INFO]	239	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:33:59,166	[INFO]	240	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:34:00,144	[INFO]	241	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:34:00,148	[INFO]	242	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:34:03,398	[INFO]	243	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:34:03,399	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 06:34:03,400	[INFO]	244	SUCCESS	+6.0	
2020-12-11 06:34:03,400	[DEBUG]	
2020-12-11 06:34:03,401	[INFO]	245	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:34:03,401	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 06:34:06,616	[INFO]	246	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:34:06,617	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
--- 20,32 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 06:34:06,618	[INFO]	247	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:34:06,618	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
--- 20,32 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 06:34:06,619	[INFO]	248	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:34:06,620	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 06:34:06,621	[INFO]	249	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:34:06,621	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 06:34:06,622	[INFO]	250	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:34:06,623	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 06:34:06,624	[INFO]	251	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:34:06,624	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 06:34:06,624	[INFO]	252	SUCCESS	+6.0	
2020-12-11 06:34:06,625	[DEBUG]	
2020-12-11 06:34:09,812	[INFO]	253	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:34:09,813	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 06:34:12,979	[INFO]	254	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:34:12,981	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 06:34:13,919	[INFO]	255	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:34:14,865	[INFO]	256	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:34:14,866	[INFO]	257	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:34:14,867	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 06:34:18,083	[INFO]	258	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:34:18,086	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,32 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 06:34:19,060	[INFO]	259	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:34:19,992	[INFO]	260	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:34:19,994	[INFO]	261	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:34:19,994	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 06:34:19,995	[INFO]	262	SUCCESS	+6.0	
2020-12-11 06:34:19,995	[DEBUG]	
2020-12-11 06:34:20,954	[INFO]	263	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:34:21,905	[INFO]	264	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:34:22,847	[INFO]	265	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:34:23,808	[INFO]	266	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:34:24,761	[INFO]	267	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:34:25,720	[INFO]	268	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:34:26,700	[INFO]	269	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:34:26,702	[INFO]	270	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:34:26,703	[DEBUG]	
2020-12-11 06:34:27,651	[INFO]	271	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:34:28,581	[INFO]	272	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:34:31,855	[INFO]	273	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:34:31,855	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 06:34:31,856	[INFO]	274	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:34:31,857	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 06:34:32,795	[INFO]	275	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:34:33,739	[INFO]	276	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:34:33,740	[INFO]	277	SUCCESS	+6.0	
2020-12-11 06:34:33,741	[DEBUG]	
2020-12-11 06:34:33,742	[INFO]	278	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:34:34,670	[INFO]	279	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:34:35,616	[INFO]	280	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:34:36,541	[INFO]	281	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:34:39,818	[INFO]	282	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:34:39,820	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 06:34:40,777	[INFO]	283	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:34:40,779	[INFO]	284	SUCCESS	+6.0	
2020-12-11 06:34:40,780	[DEBUG]	
2020-12-11 06:34:41,713	[INFO]	285	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:34:42,629	[INFO]	286	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:34:42,631	[INFO]	287	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:34:42,631	[DEBUG]	
2020-12-11 06:34:42,631	[INFO]	288	SUCCESS	+6.0	
2020-12-11 06:34:42,632	[DEBUG]	
2020-12-11 06:34:43,575	[INFO]	289	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:34:43,576	[INFO]	290	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:34:43,577	[INFO]	291	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:34:44,530	[INFO]	292	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:34:45,497	[INFO]	293	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:34:46,431	[INFO]	294	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:34:47,388	[INFO]	295	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:34:50,575	[INFO]	296	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:34:50,576	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 06:34:51,506	[INFO]	297	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:34:51,507	[INFO]	298	SUCCESS	+6.0	
2020-12-11 06:34:51,508	[DEBUG]	
2020-12-11 06:34:52,473	[INFO]	299	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:34:52,476	[INFO]	300	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:34:52,477	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 06:34:52,479	[INFO]	301	SUCCESS	+6.0	
2020-12-11 06:34:52,479	[DEBUG]	
2020-12-11 06:34:53,417	[INFO]	302	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:34:54,347	[INFO]	303	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:34:55,297	[INFO]	304	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:34:55,298	[INFO]	305	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:34:55,298	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 06:34:56,255	[INFO]	306	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:34:57,213	[INFO]	307	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:34:57,214	[INFO]	308	SUCCESS	+6.0	
2020-12-11 06:34:57,215	[DEBUG]	
2020-12-11 06:34:57,216	[INFO]	309	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:34:58,152	[INFO]	310	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:34:58,154	[INFO]	311	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:34:59,134	[INFO]	312	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:35:02,429	[INFO]	313	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:35:02,430	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 06:35:03,322	[INFO]	314	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:35:04,277	[INFO]	315	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:35:04,278	[INFO]	316	SUCCESS	+6.0	
2020-12-11 06:35:04,279	[DEBUG]	
2020-12-11 06:35:05,245	[INFO]	317	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:35:06,207	[INFO]	318	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:35:06,209	[INFO]	319	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:35:06,209	[DEBUG]	
2020-12-11 06:35:07,172	[INFO]	320	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:35:07,174	[INFO]	321	SUCCESS	+6.0	
2020-12-11 06:35:07,174	[DEBUG]	
2020-12-11 06:35:07,176	[INFO]	322	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:35:07,177	[DEBUG]	
2020-12-11 06:35:07,178	[INFO]	323	SUCCESS	+6.0	
2020-12-11 06:35:07,179	[DEBUG]	
2020-12-11 06:35:07,180	[INFO]	324	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:35:07,181	[DEBUG]	
2020-12-11 06:35:07,183	[INFO]	325	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:35:07,184	[INFO]	326	SUCCESS	+6.0	
2020-12-11 06:35:07,185	[DEBUG]	
2020-12-11 06:35:08,133	[INFO]	327	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:35:09,132	[INFO]	328	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:35:10,067	[INFO]	329	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:35:10,069	[INFO]	330	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:35:10,069	[INFO]	331	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:35:10,070	[DEBUG]	
2020-12-11 06:35:10,070	[INFO]	332	SUCCESS	+6.0	
2020-12-11 06:35:10,071	[DEBUG]	
2020-12-11 06:35:13,294	[INFO]	333	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:35:13,295	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 06:35:13,295	[INFO]	334	SUCCESS	+6.0	
2020-12-11 06:35:13,296	[DEBUG]	
2020-12-11 06:35:14,258	[INFO]	335	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:35:17,460	[INFO]	336	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:35:17,461	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 06:35:18,387	[INFO]	337	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:35:18,388	[INFO]	338	SUCCESS	+6.0	
2020-12-11 06:35:18,388	[DEBUG]	
2020-12-11 06:35:18,389	[INFO]	339	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:35:18,390	[INFO]	340	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:35:19,360	[INFO]	341	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:35:20,288	[INFO]	342	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:35:21,289	[INFO]	343	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:35:22,286	[INFO]	344	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:35:23,233	[INFO]	345	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:35:24,209	[INFO]	346	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:35:25,155	[INFO]	347	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:35:28,317	[INFO]	348	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:35:28,318	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 06:35:28,318	[INFO]	349	SUCCESS	+6.0	
2020-12-11 06:35:28,319	[DEBUG]	
2020-12-11 06:35:29,260	[INFO]	350	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:35:30,248	[INFO]	351	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:35:31,217	[INFO]	352	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:35:32,175	[INFO]	353	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:35:33,111	[INFO]	354	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:35:36,556	[INFO]	355	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:35:36,557	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 06:35:37,465	[INFO]	356	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:35:40,706	[INFO]	357	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:35:40,707	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,27 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 06:35:40,707	[INFO]	358	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:35:40,708	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 06:35:40,708	[INFO]	359	SUCCESS	+6.0	
2020-12-11 06:35:40,709	[DEBUG]	
2020-12-11 06:35:40,710	[INFO]	360	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:35:40,710	[INFO]	361	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:35:41,629	[INFO]	362	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:35:42,570	[INFO]	363	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:35:43,508	[INFO]	364	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:35:44,430	[INFO]	365	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:35:44,431	[INFO]	366	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:35:44,432	[DEBUG]	
2020-12-11 06:35:45,398	[INFO]	367	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:35:45,401	[INFO]	368	SUCCESS	+6.0	
2020-12-11 06:35:45,402	[DEBUG]	
2020-12-11 06:35:46,337	[INFO]	369	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:35:49,617	[INFO]	370	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:35:49,618	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 06:35:52,799	[INFO]	371	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:35:52,800	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,27 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
! 	    
  	    i++;
          }
  

2020-12-11 06:35:55,888	[INFO]	372	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:35:55,889	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,26 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 14,28 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
! 	    
  	    i++;
          }
  

2020-12-11 06:35:55,890	[INFO]	373	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:35:55,890	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,26 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 14,28 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
! 	    
  	    i++;
          }
  

2020-12-11 06:35:56,825	[INFO]	374	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:35:57,789	[INFO]	375	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:35:58,739	[INFO]	376	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:35:59,684	[INFO]	377	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:36:02,851	[INFO]	378	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:36:02,852	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,26 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 14,27 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 06:36:06,093	[INFO]	379	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:36:06,094	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,27 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
- 	    i++;
          }
  
          return sorted_arr;
--- 14,28 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    
  	    sorted_arr.addAll(Collections.nCopies(count, i));
          }
  
          return sorted_arr;

2020-12-11 06:36:06,095	[INFO]	380	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:36:06,095	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,27 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
- 	    i++;
          }
  
          return sorted_arr;
--- 14,28 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    
  	    sorted_arr.addAll(Collections.nCopies(count, i));
          }
  
          return sorted_arr;

2020-12-11 06:36:07,007	[INFO]	381	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:36:10,313	[INFO]	382	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:36:10,314	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 22,28 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
          }
  
          return sorted_arr;

2020-12-11 06:36:13,497	[INFO]	383	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:36:13,499	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
          }
  
          return sorted_arr;

2020-12-11 06:36:13,501	[INFO]	384	SUCCESS	+6.0	
2020-12-11 06:36:13,501	[DEBUG]	
2020-12-11 06:36:14,471	[INFO]	385	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:36:15,417	[INFO]	386	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:36:16,341	[INFO]	387	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:36:17,295	[INFO]	388	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:36:18,238	[INFO]	389	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:36:19,203	[INFO]	390	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:36:20,151	[INFO]	391	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:36:21,119	[INFO]	392	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:36:22,085	[INFO]	393	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:36:23,012	[INFO]	394	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:36:23,946	[INFO]	395	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:36:24,905	[INFO]	396	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:36:28,157	[INFO]	397	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:36:28,157	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 06:36:29,069	[INFO]	398	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:36:29,070	[INFO]	399	SUCCESS	+6.0	
2020-12-11 06:36:29,071	[DEBUG]	
2020-12-11 06:36:30,035	[INFO]	400	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:36:30,984	[INFO]	401	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:36:30,986	[INFO]	402	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:36:31,940	[INFO]	403	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:36:31,941	[INFO]	404	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:36:35,119	[INFO]	405	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:36:35,120	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 06:36:38,390	[INFO]	406	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:36:38,392	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,27 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 14,26 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 06:36:39,220	[INFO]	407	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:36:42,501	[INFO]	408	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:36:42,502	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 06:36:43,409	[INFO]	409	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:36:43,411	[INFO]	410	SUCCESS	+6.0	
2020-12-11 06:36:43,411	[DEBUG]	
2020-12-11 06:36:43,412	[INFO]	411	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:36:43,413	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 06:36:43,414	[INFO]	412	SUCCESS	+6.0	
2020-12-11 06:36:43,414	[DEBUG]	
2020-12-11 06:36:44,343	[INFO]	413	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:36:45,268	[INFO]	414	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:36:45,269	[INFO]	415	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:36:45,269	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 06:36:46,233	[INFO]	416	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:36:47,209	[INFO]	417	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:36:47,210	[INFO]	418	SUCCESS	+6.0	
2020-12-11 06:36:47,211	[DEBUG]	
2020-12-11 06:36:48,150	[INFO]	419	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:36:48,152	[INFO]	420	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:36:48,152	[DEBUG]	
2020-12-11 06:36:49,081	[INFO]	421	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:36:49,082	[INFO]	422	SUCCESS	+6.0	
2020-12-11 06:36:49,082	[DEBUG]	
2020-12-11 06:36:50,047	[INFO]	423	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:36:50,998	[INFO]	424	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:36:51,936	[INFO]	425	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:36:52,867	[INFO]	426	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:36:56,229	[INFO]	427	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:36:56,230	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 06:36:56,231	[INFO]	428	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:36:56,232	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 06:36:56,233	[INFO]	429	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:36:56,233	[DEBUG]	
2020-12-11 06:36:57,122	[INFO]	430	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:36:57,123	[INFO]	431	SUCCESS	+6.0	
2020-12-11 06:36:57,123	[DEBUG]	
2020-12-11 06:36:58,047	[INFO]	432	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:36:58,973	[INFO]	433	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:37:02,178	[INFO]	434	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:37:02,179	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 06:37:02,179	[INFO]	435	SUCCESS	+6.0	
2020-12-11 06:37:02,180	[DEBUG]	
2020-12-11 06:37:05,441	[INFO]	436	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:37:05,442	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 06:37:06,362	[INFO]	437	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:37:09,651	[INFO]	438	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:37:09,652	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,27 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 20,32 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 06:37:09,653	[INFO]	439	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:37:09,654	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 06:37:09,654	[INFO]	440	SUCCESS	+6.0	
2020-12-11 06:37:09,655	[DEBUG]	
2020-12-11 06:37:12,937	[INFO]	441	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:37:12,938	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 06:37:13,863	[INFO]	442	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:37:13,866	[INFO]	443	SUCCESS	+6.0	
2020-12-11 06:37:13,866	[DEBUG]	
2020-12-11 06:37:15,011	[INFO]	444	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:37:15,976	[INFO]	445	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:37:16,933	[INFO]	446	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:37:16,934	[INFO]	447	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:37:17,881	[INFO]	448	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:37:18,802	[INFO]	449	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:37:19,784	[INFO]	450	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:37:20,729	[INFO]	451	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:37:21,657	[INFO]	452	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:37:21,658	[INFO]	453	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:37:21,659	[INFO]	454	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:37:21,660	[INFO]	455	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:37:21,660	[DEBUG]	
2020-12-11 06:37:22,645	[INFO]	456	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:37:23,557	[INFO]	457	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:37:23,558	[INFO]	458	SUCCESS	+6.0	
2020-12-11 06:37:23,559	[DEBUG]	
2020-12-11 06:37:24,503	[INFO]	459	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:37:24,507	[INFO]	460	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:37:24,508	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 06:37:24,510	[INFO]	461	SUCCESS	+6.0	
2020-12-11 06:37:24,511	[DEBUG]	
2020-12-11 06:37:24,514	[INFO]	462	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:37:25,488	[INFO]	463	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:37:26,413	[INFO]	464	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:37:29,727	[INFO]	465	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:37:29,729	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 06:37:29,730	[INFO]	466	SUCCESS	+6.0	
2020-12-11 06:37:29,731	[DEBUG]	
2020-12-11 06:37:29,733	[INFO]	467	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:37:30,698	[INFO]	468	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:37:31,619	[INFO]	469	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:37:31,621	[INFO]	470	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:37:34,884	[INFO]	471	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:37:34,885	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
          }
  
          return sorted_arr;

2020-12-11 06:37:34,886	[INFO]	472	SUCCESS	+6.0	
2020-12-11 06:37:34,886	[DEBUG]	
2020-12-11 06:37:35,789	[INFO]	473	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:37:36,707	[INFO]	474	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:37:37,714	[INFO]	475	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:37:37,715	[INFO]	476	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:37:38,705	[INFO]	477	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:37:39,634	[INFO]	478	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:37:40,590	[INFO]	479	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:37:41,540	[INFO]	480	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:37:42,503	[INFO]	481	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:37:42,507	[INFO]	482	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:37:42,509	[INFO]	483	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:37:45,808	[INFO]	484	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:37:45,809	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,27 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 06:37:45,809	[INFO]	485	SUCCESS	+6.0	
2020-12-11 06:37:45,810	[DEBUG]	
2020-12-11 06:37:46,709	[INFO]	486	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:37:47,626	[INFO]	487	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:37:48,597	[INFO]	488	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:37:49,544	[INFO]	489	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:37:50,504	[INFO]	490	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:37:51,469	[INFO]	491	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:37:52,416	[INFO]	492	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:37:53,395	[INFO]	493	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:37:54,333	[INFO]	494	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:37:55,267	[INFO]	495	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:37:55,268	[INFO]	496	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:37:55,269	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,27 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 06:37:56,246	[INFO]	497	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:37:56,248	[INFO]	498	SUCCESS	+6.0	
2020-12-11 06:37:56,249	[DEBUG]	
2020-12-11 06:37:59,482	[INFO]	499	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:37:59,483	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 06:38:00,419	[INFO]	500	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:38:00,420	[INFO]	==== END ====
2020-12-11 06:38:00,421	[INFO]	Reason: step budget
2020-12-11 06:38:00,423	[INFO]	
2020-12-11 06:38:00,423	[INFO]	========== EPOCH 19 ==========
2020-12-11 06:38:00,424	[INFO]	==== WARMUP ====
2020-12-11 06:38:03,601	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 06:38:03,601	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 06:38:06,874	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 06:38:06,874	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 06:38:10,184	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 06:38:10,184	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 06:38:13,339	[INFO]	INITIAL	SUCCESS	 6.0	
2020-12-11 06:38:13,339	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 06:38:13,339	[INFO]	==== START ====
2020-12-11 06:38:14,249	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:38:15,177	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:38:16,105	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:38:17,045	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:38:17,046	[INFO]	5	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:38:17,046	[DEBUG]	
2020-12-11 06:38:20,261	[INFO]	6	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:38:20,262	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 06:38:21,196	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:38:21,197	[INFO]	8	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:38:21,198	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 06:38:21,198	[INFO]	9	SUCCESS	+6.0	
2020-12-11 06:38:21,198	[DEBUG]	
2020-12-11 06:38:22,120	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:38:23,059	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:38:24,018	[INFO]	12	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:38:24,019	[INFO]	13	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:38:24,019	[DEBUG]	
2020-12-11 06:38:27,334	[INFO]	14	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:38:27,335	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 06:38:27,336	[INFO]	15	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:38:27,336	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 06:38:27,337	[INFO]	16	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:38:27,338	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 06:38:28,286	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:38:28,289	[INFO]	18	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:38:28,290	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 06:38:29,263	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:38:30,264	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:38:31,332	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:38:32,577	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:38:32,580	[INFO]	23	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:38:32,581	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 06:38:33,975	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:38:35,303	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:38:35,305	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:38:35,306	[INFO]	27	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:38:35,307	[DEBUG]	
2020-12-11 06:38:35,307	[INFO]	28	SUCCESS	+6.0	
2020-12-11 06:38:35,308	[DEBUG]	
2020-12-11 06:38:36,504	[INFO]	29	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:38:37,775	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:38:38,820	[INFO]	31	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:38:42,091	[INFO]	32	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:38:42,092	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
          }
  
          return sorted_arr;

2020-12-11 06:38:42,093	[INFO]	33	SUCCESS	+6.0	
2020-12-11 06:38:42,093	[DEBUG]	
2020-12-11 06:38:43,004	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:38:43,956	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:38:47,293	[INFO]	36	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:38:47,294	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 06:38:47,294	[INFO]	37	SUCCESS	+6.0	
2020-12-11 06:38:47,295	[DEBUG]	
2020-12-11 06:38:48,222	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:38:49,198	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:38:50,136	[INFO]	40	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:38:51,068	[INFO]	41	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:38:52,037	[INFO]	42	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:38:52,038	[INFO]	43	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:38:52,038	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 06:38:52,972	[INFO]	44	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:38:52,973	[INFO]	45	SUCCESS	+6.0	
2020-12-11 06:38:52,973	[DEBUG]	
2020-12-11 06:38:53,905	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:38:57,175	[INFO]	47	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:38:57,176	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 06:38:57,176	[INFO]	48	SUCCESS	+6.0	
2020-12-11 06:38:57,177	[DEBUG]	
2020-12-11 06:39:00,342	[INFO]	49	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:39:00,343	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,27 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 06:39:01,331	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:39:01,332	[INFO]	51	SUCCESS	+6.0	
2020-12-11 06:39:01,332	[DEBUG]	
2020-12-11 06:39:02,306	[INFO]	52	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:39:02,310	[INFO]	53	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:39:02,313	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:39:02,315	[INFO]	55	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:39:05,642	[INFO]	56	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:39:05,644	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 06:39:05,647	[INFO]	57	SUCCESS	+6.0	
2020-12-11 06:39:05,648	[DEBUG]	
2020-12-11 06:39:06,564	[INFO]	58	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:39:06,565	[INFO]	59	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:39:06,566	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 06:39:06,567	[INFO]	60	SUCCESS	+6.0	
2020-12-11 06:39:06,567	[DEBUG]	
2020-12-11 06:39:07,568	[INFO]	61	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:39:08,496	[INFO]	62	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:39:09,438	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:39:12,687	[INFO]	64	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:39:12,688	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 06:39:13,597	[INFO]	65	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:39:13,598	[INFO]	66	SUCCESS	+6.0	
2020-12-11 06:39:13,599	[DEBUG]	
2020-12-11 06:39:14,525	[INFO]	67	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:39:15,491	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:39:16,430	[INFO]	69	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:39:17,368	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:39:18,320	[INFO]	71	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:39:19,247	[INFO]	72	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:39:19,248	[INFO]	73	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:39:19,249	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 06:39:20,197	[INFO]	74	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:39:20,198	[INFO]	75	SUCCESS	+6.0	
2020-12-11 06:39:20,198	[DEBUG]	
2020-12-11 06:39:20,199	[INFO]	76	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:39:20,199	[DEBUG]	
2020-12-11 06:39:23,428	[INFO]	77	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:39:23,429	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 06:39:24,342	[INFO]	78	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:39:24,343	[INFO]	79	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:39:24,343	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 06:39:25,283	[INFO]	80	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:39:25,284	[INFO]	81	SUCCESS	+6.0	
2020-12-11 06:39:25,285	[DEBUG]	
2020-12-11 06:39:28,632	[INFO]	82	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:39:28,634	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:39:28,635	[INFO]	83	SUCCESS	+6.0	
2020-12-11 06:39:28,636	[DEBUG]	
2020-12-11 06:39:29,584	[INFO]	84	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:39:30,518	[INFO]	85	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:39:31,466	[INFO]	86	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:39:32,431	[INFO]	87	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:39:33,379	[INFO]	88	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:39:34,331	[INFO]	89	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:39:35,301	[INFO]	90	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:39:36,230	[INFO]	91	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:39:36,232	[INFO]	92	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:39:39,520	[INFO]	93	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:39:39,521	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,34 ----
  	    i++;
          }
  
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 06:39:39,521	[INFO]	94	SUCCESS	+6.0	
2020-12-11 06:39:39,522	[DEBUG]	
2020-12-11 06:39:40,467	[INFO]	95	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:39:43,800	[INFO]	96	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:39:43,801	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,21 ****
--- 16,24 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 06:39:43,802	[INFO]	97	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:39:43,803	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,21 ****
--- 16,24 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 06:39:46,948	[INFO]	98	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:39:46,949	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,21 ****
--- 16,25 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 06:39:46,950	[INFO]	99	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:39:46,951	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,21 ****
--- 16,24 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 06:39:46,952	[INFO]	100	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:39:46,952	[DEBUG]	
2020-12-11 06:39:47,851	[INFO]	101	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:39:48,805	[INFO]	102	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:39:48,806	[INFO]	103	SUCCESS	+6.0	
2020-12-11 06:39:48,807	[DEBUG]	
2020-12-11 06:39:49,737	[INFO]	104	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:39:49,738	[INFO]	105	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:39:52,934	[INFO]	106	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:39:52,935	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 06:39:52,936	[INFO]	107	SUCCESS	+6.0	
2020-12-11 06:39:52,936	[DEBUG]	
2020-12-11 06:39:53,867	[INFO]	108	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:39:54,823	[INFO]	109	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:39:55,785	[INFO]	110	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:39:56,717	[INFO]	111	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:39:57,653	[INFO]	112	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:39:58,625	[INFO]	113	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:39:59,596	[INFO]	114	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:40:00,563	[INFO]	115	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:40:03,794	[INFO]	116	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:40:03,795	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 06:40:07,010	[INFO]	117	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:40:07,011	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 06:40:07,012	[INFO]	118	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:40:07,013	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 06:40:07,932	[INFO]	119	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:40:07,933	[INFO]	120	SUCCESS	+6.0	
2020-12-11 06:40:07,933	[DEBUG]	
2020-12-11 06:40:11,201	[INFO]	121	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:40:11,202	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 06:40:12,110	[INFO]	122	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:40:13,029	[INFO]	123	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:40:13,030	[INFO]	124	SUCCESS	+6.0	
2020-12-11 06:40:13,030	[DEBUG]	
2020-12-11 06:40:13,971	[INFO]	125	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:40:14,939	[INFO]	126	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:40:15,896	[INFO]	127	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:40:16,849	[INFO]	128	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:40:17,832	[INFO]	129	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:40:18,768	[INFO]	130	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:40:22,046	[INFO]	131	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:40:22,047	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 06:40:22,050	[INFO]	132	SUCCESS	+6.0	
2020-12-11 06:40:22,051	[DEBUG]	
2020-12-11 06:40:23,000	[INFO]	133	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:40:23,944	[INFO]	134	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:40:23,945	[INFO]	135	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:40:23,945	[DEBUG]	
2020-12-11 06:40:24,899	[INFO]	136	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:40:24,900	[INFO]	137	SUCCESS	+6.0	
2020-12-11 06:40:24,900	[DEBUG]	
2020-12-11 06:40:25,860	[INFO]	138	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:40:26,790	[INFO]	139	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:40:27,750	[INFO]	140	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:40:28,690	[INFO]	141	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:40:29,643	[INFO]	142	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:40:30,604	[INFO]	143	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:40:31,556	[INFO]	144	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:40:32,521	[INFO]	145	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:40:33,483	[INFO]	146	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:40:34,422	[INFO]	147	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:40:38,334	[INFO]	148	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:40:38,335	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 06:40:38,336	[INFO]	149	SUCCESS	+6.0	
2020-12-11 06:40:38,336	[DEBUG]	
2020-12-11 06:40:38,337	[INFO]	150	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:40:38,338	[INFO]	151	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:40:42,081	[INFO]	152	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:40:42,082	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 06:40:42,968	[INFO]	153	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:40:43,949	[INFO]	154	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:40:44,933	[INFO]	155	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:40:45,851	[INFO]	156	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:40:46,817	[INFO]	157	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:40:46,819	[INFO]	158	SUCCESS	+6.0	
2020-12-11 06:40:46,819	[DEBUG]	
2020-12-11 06:40:47,790	[INFO]	159	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:40:47,792	[INFO]	160	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:40:48,723	[INFO]	161	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:40:51,969	[INFO]	162	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:40:51,970	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 06:40:51,971	[INFO]	163	SUCCESS	+6.0	
2020-12-11 06:40:51,971	[DEBUG]	
2020-12-11 06:40:55,088	[INFO]	164	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:40:55,089	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 06:40:55,090	[INFO]	165	SUCCESS	+6.0	
2020-12-11 06:40:55,090	[DEBUG]	
2020-12-11 06:40:56,036	[INFO]	166	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:40:56,990	[INFO]	167	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:41:00,422	[INFO]	168	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:41:00,423	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 06:41:00,424	[INFO]	169	SUCCESS	+6.0	
2020-12-11 06:41:00,424	[DEBUG]	
2020-12-11 06:41:00,424	[INFO]	170	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:41:00,425	[DEBUG]	
2020-12-11 06:41:01,331	[INFO]	171	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:41:01,332	[INFO]	172	SUCCESS	+6.0	
2020-12-11 06:41:01,332	[DEBUG]	
2020-12-11 06:41:02,276	[INFO]	173	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:41:03,217	[INFO]	174	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:41:04,191	[INFO]	175	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:41:05,140	[INFO]	176	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:41:06,103	[INFO]	177	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:41:09,293	[INFO]	178	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:41:09,295	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 06:41:10,255	[INFO]	179	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:41:13,567	[INFO]	180	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:41:13,568	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,25 ****
--- 19,27 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:41:13,569	[INFO]	181	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:41:13,570	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,25 ****
--- 19,27 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:41:13,570	[INFO]	182	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:41:13,571	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,25 ****
--- 19,27 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:41:16,746	[INFO]	183	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:41:16,747	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 06:41:17,656	[INFO]	184	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:41:18,631	[INFO]	185	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:41:18,633	[INFO]	186	SUCCESS	+6.0	
2020-12-11 06:41:18,634	[DEBUG]	
2020-12-11 06:41:19,589	[INFO]	187	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:41:22,892	[INFO]	188	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:41:22,894	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
          }
  
          return sorted_arr;

2020-12-11 06:41:22,896	[INFO]	189	SUCCESS	+6.0	
2020-12-11 06:41:22,896	[DEBUG]	
2020-12-11 06:41:22,898	[INFO]	190	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:41:22,899	[DEBUG]	
2020-12-11 06:41:22,900	[INFO]	191	SUCCESS	+6.0	
2020-12-11 06:41:22,900	[DEBUG]	
2020-12-11 06:41:23,839	[INFO]	192	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:41:27,062	[INFO]	193	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:41:27,063	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:41:30,271	[INFO]	194	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:41:30,272	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,28 ****
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 16,28 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:41:30,273	[INFO]	195	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:41:30,273	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,28 ****
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 16,28 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:41:30,274	[INFO]	196	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:41:30,275	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:41:30,276	[INFO]	197	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:41:30,276	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:41:30,277	[INFO]	198	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:41:30,278	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:41:31,224	[INFO]	199	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:41:31,227	[INFO]	200	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:41:31,228	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:41:31,231	[INFO]	201	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:41:31,232	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:41:32,168	[INFO]	202	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:41:33,081	[INFO]	203	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:41:33,083	[INFO]	204	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:41:33,083	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:41:33,084	[INFO]	205	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:41:33,084	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:41:34,047	[INFO]	206	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:41:34,049	[INFO]	207	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:41:34,050	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:41:34,051	[INFO]	208	SUCCESS	+6.0	
2020-12-11 06:41:34,051	[DEBUG]	
2020-12-11 06:41:34,972	[INFO]	209	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:41:35,944	[INFO]	210	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:41:36,904	[INFO]	211	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:41:37,879	[INFO]	212	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:41:38,836	[INFO]	213	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:41:39,787	[INFO]	214	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:41:43,078	[INFO]	215	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:41:43,080	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 06:41:43,993	[INFO]	216	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:41:43,995	[INFO]	217	SUCCESS	+6.0	
2020-12-11 06:41:43,996	[DEBUG]	
2020-12-11 06:41:47,214	[INFO]	218	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:41:47,215	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 06:41:47,216	[INFO]	219	SUCCESS	+6.0	
2020-12-11 06:41:47,216	[DEBUG]	
2020-12-11 06:41:48,125	[INFO]	220	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:41:49,116	[INFO]	221	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:41:50,059	[INFO]	222	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:41:51,013	[INFO]	223	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:41:51,988	[INFO]	224	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:41:52,951	[INFO]	225	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:41:56,183	[INFO]	226	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:41:56,184	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 06:41:57,112	[INFO]	227	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:41:57,113	[INFO]	228	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:41:57,114	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 06:41:58,066	[INFO]	229	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:42:01,409	[INFO]	230	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:42:01,411	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,23 ****
--- 17,30 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 06:42:01,413	[INFO]	231	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:42:01,414	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 06:42:02,358	[INFO]	232	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:42:03,308	[INFO]	233	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:42:03,310	[INFO]	234	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:42:04,272	[INFO]	235	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:42:05,229	[INFO]	236	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:42:06,199	[INFO]	237	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:42:07,141	[INFO]	238	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:42:08,095	[INFO]	239	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:42:08,098	[INFO]	240	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:42:08,099	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 06:42:08,100	[INFO]	241	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:42:08,101	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 06:42:09,076	[INFO]	242	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:42:09,079	[INFO]	243	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:42:10,026	[INFO]	244	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:42:10,028	[INFO]	245	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:42:10,028	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 06:42:10,030	[INFO]	246	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:42:10,030	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 06:42:10,983	[INFO]	247	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:42:11,963	[INFO]	248	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:42:11,966	[INFO]	249	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:42:11,967	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 06:42:11,968	[INFO]	250	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:42:11,969	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 06:42:12,909	[INFO]	251	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:42:12,911	[INFO]	252	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:42:12,911	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 06:42:12,912	[INFO]	253	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:42:16,387	[INFO]	254	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:42:16,388	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,25 ****
--- 18,29 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:42:16,389	[INFO]	255	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:42:16,390	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,25 ****
--- 18,29 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:42:17,327	[INFO]	256	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:42:18,284	[INFO]	257	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:42:19,232	[INFO]	258	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:42:19,234	[INFO]	259	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:42:19,235	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,25 ****
--- 18,29 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:42:20,179	[INFO]	260	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:42:20,180	[INFO]	261	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:42:20,181	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,25 ****
--- 18,29 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:42:20,182	[INFO]	262	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:42:20,182	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,25 ****
--- 18,29 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:42:20,183	[INFO]	263	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:42:20,183	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 06:42:20,184	[INFO]	264	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:42:20,185	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 06:42:20,185	[INFO]	265	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:42:20,186	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 06:42:20,186	[INFO]	266	SUCCESS	+6.0	
2020-12-11 06:42:20,187	[DEBUG]	
2020-12-11 06:42:21,169	[INFO]	267	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:42:22,127	[INFO]	268	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:42:22,129	[INFO]	269	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:42:22,129	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 06:42:22,130	[INFO]	270	SUCCESS	+6.0	
2020-12-11 06:42:22,130	[DEBUG]	
2020-12-11 06:42:23,043	[INFO]	271	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:42:26,278	[INFO]	272	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:42:26,279	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 06:42:26,279	[INFO]	273	SUCCESS	+6.0	
2020-12-11 06:42:26,280	[DEBUG]	
2020-12-11 06:42:29,438	[INFO]	274	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:42:29,438	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 06:42:29,439	[INFO]	275	SUCCESS	+6.0	
2020-12-11 06:42:29,439	[DEBUG]	
2020-12-11 06:42:29,440	[INFO]	276	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:42:30,400	[INFO]	277	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:42:30,401	[INFO]	278	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:42:30,402	[INFO]	279	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:42:30,402	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:42:31,350	[INFO]	280	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:42:31,351	[INFO]	281	SUCCESS	+6.0	
2020-12-11 06:42:31,351	[DEBUG]	
2020-12-11 06:42:31,352	[INFO]	282	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:42:31,352	[DEBUG]	
2020-12-11 06:42:32,314	[INFO]	283	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:42:35,581	[INFO]	284	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:42:35,582	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 06:42:38,750	[INFO]	285	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:42:38,751	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,27 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
- 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
          return sorted_arr;
--- 20,27 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    i++;
+ 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 06:42:38,752	[INFO]	286	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:42:38,753	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,27 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
- 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
          return sorted_arr;
--- 20,27 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    i++;
+ 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 06:42:38,754	[INFO]	287	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:42:38,754	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 06:42:38,755	[INFO]	288	SUCCESS	+6.0	
2020-12-11 06:42:38,755	[DEBUG]	
2020-12-11 06:42:39,662	[INFO]	289	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:42:40,604	[INFO]	290	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:42:43,850	[INFO]	291	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:42:43,850	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 06:42:43,851	[INFO]	292	SUCCESS	+6.0	
2020-12-11 06:42:43,851	[DEBUG]	
2020-12-11 06:42:44,777	[INFO]	293	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:42:45,695	[INFO]	294	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:42:46,669	[INFO]	295	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:42:47,625	[INFO]	296	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:42:48,559	[INFO]	297	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:42:48,560	[INFO]	298	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:42:51,817	[INFO]	299	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:42:51,818	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 06:42:51,819	[INFO]	300	SUCCESS	+6.0	
2020-12-11 06:42:51,819	[DEBUG]	
2020-12-11 06:42:55,079	[INFO]	301	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:42:55,080	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 06:42:55,987	[INFO]	302	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:42:56,951	[INFO]	303	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:42:57,899	[INFO]	304	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:42:57,900	[INFO]	305	SUCCESS	+6.0	
2020-12-11 06:42:57,900	[DEBUG]	
2020-12-11 06:42:58,836	[INFO]	306	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:42:58,838	[INFO]	307	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:42:58,838	[DEBUG]	
2020-12-11 06:42:58,838	[INFO]	308	SUCCESS	+6.0	
2020-12-11 06:42:58,839	[DEBUG]	
2020-12-11 06:42:58,840	[INFO]	309	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:42:59,765	[INFO]	310	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:43:00,731	[INFO]	311	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:43:04,002	[INFO]	312	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:43:04,003	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,21 ****
--- 16,24 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 06:43:04,004	[INFO]	313	SUCCESS	+6.0	
2020-12-11 06:43:04,004	[DEBUG]	
2020-12-11 06:43:07,279	[INFO]	314	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:43:07,280	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 06:43:08,252	[INFO]	315	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:43:08,255	[INFO]	316	SUCCESS	+6.0	
2020-12-11 06:43:08,256	[DEBUG]	
2020-12-11 06:43:09,203	[INFO]	317	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:43:10,177	[INFO]	318	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:43:10,181	[INFO]	319	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:43:11,180	[INFO]	320	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:43:12,103	[INFO]	321	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:43:13,025	[INFO]	322	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:43:13,027	[INFO]	323	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:43:13,028	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 06:43:14,003	[INFO]	324	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:43:14,005	[INFO]	325	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:43:14,005	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 06:43:14,965	[INFO]	326	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:43:15,944	[INFO]	327	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:43:15,947	[INFO]	328	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:43:15,947	[DEBUG]	
2020-12-11 06:43:16,885	[INFO]	329	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:43:17,819	[INFO]	330	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:43:17,820	[INFO]	331	SUCCESS	+6.0	
2020-12-11 06:43:17,821	[DEBUG]	
2020-12-11 06:43:18,784	[INFO]	332	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:43:19,720	[INFO]	333	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:43:20,699	[INFO]	334	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:43:21,663	[INFO]	335	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:43:22,576	[INFO]	336	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:43:22,577	[INFO]	337	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:43:22,578	[INFO]	338	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:43:23,548	[INFO]	339	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:43:24,513	[INFO]	340	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:43:25,457	[INFO]	341	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:43:26,434	[INFO]	342	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:43:29,684	[INFO]	343	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:43:29,685	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 06:43:29,686	[INFO]	344	SUCCESS	+6.0	
2020-12-11 06:43:29,686	[DEBUG]	
2020-12-11 06:43:32,936	[INFO]	345	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:43:32,937	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 06:43:32,938	[INFO]	346	SUCCESS	+6.0	
2020-12-11 06:43:32,938	[DEBUG]	
2020-12-11 06:43:33,883	[INFO]	347	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:43:34,804	[INFO]	348	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:43:35,778	[INFO]	349	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:43:35,782	[INFO]	350	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:43:36,720	[INFO]	351	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:43:37,641	[INFO]	352	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:43:37,642	[INFO]	353	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:43:37,642	[DEBUG]	
2020-12-11 06:43:37,643	[INFO]	354	SUCCESS	+6.0	
2020-12-11 06:43:37,643	[DEBUG]	
2020-12-11 06:43:38,606	[INFO]	355	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:43:38,607	[INFO]	356	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:43:38,607	[DEBUG]	
2020-12-11 06:43:38,608	[INFO]	357	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:43:41,823	[INFO]	358	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:43:41,824	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 06:43:41,825	[INFO]	359	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:43:41,825	[DEBUG]	
2020-12-11 06:43:45,031	[INFO]	360	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:43:45,031	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 06:43:45,032	[INFO]	361	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:43:45,032	[DEBUG]	
2020-12-11 06:43:45,033	[INFO]	362	SUCCESS	+6.0	
2020-12-11 06:43:45,033	[DEBUG]	
2020-12-11 06:43:48,283	[INFO]	363	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:43:48,285	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 06:43:51,516	[INFO]	364	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:43:51,518	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,24 ****
--- 14,26 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         i++;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 06:43:54,725	[INFO]	365	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:43:54,726	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 06:43:54,727	[INFO]	366	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:43:54,727	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 06:43:55,664	[INFO]	367	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:43:56,601	[INFO]	368	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:43:56,602	[INFO]	369	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:43:56,603	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 06:43:57,555	[INFO]	370	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:43:57,556	[INFO]	371	SUCCESS	+6.0	
2020-12-11 06:43:57,557	[DEBUG]	
2020-12-11 06:43:58,506	[INFO]	372	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:43:59,494	[INFO]	373	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:44:03,037	[INFO]	374	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:44:03,038	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,21 ****
--- 16,24 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 06:44:03,947	[INFO]	375	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:44:03,948	[INFO]	376	SUCCESS	+6.0	
2020-12-11 06:44:03,948	[DEBUG]	
2020-12-11 06:44:03,949	[INFO]	377	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:44:03,949	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 22,27 ****
--- 22,28 ----
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
+ 	    i++;
          }
  
          return sorted_arr;

2020-12-11 06:44:04,869	[INFO]	378	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:44:05,866	[INFO]	379	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:44:06,824	[INFO]	380	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:44:06,825	[INFO]	381	SUCCESS	+6.0	
2020-12-11 06:44:06,826	[DEBUG]	
2020-12-11 06:44:07,802	[INFO]	382	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:44:07,803	[INFO]	383	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:44:07,804	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 06:44:11,053	[INFO]	384	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:44:11,053	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,26 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 14,26 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 06:44:14,255	[INFO]	385	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:44:14,256	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 06:44:15,158	[INFO]	386	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:44:16,138	[INFO]	387	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:44:17,121	[INFO]	388	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:44:17,123	[INFO]	389	SUCCESS	+6.0	
2020-12-11 06:44:17,124	[DEBUG]	
2020-12-11 06:44:17,125	[INFO]	390	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:44:17,126	[DEBUG]	
2020-12-11 06:44:17,128	[INFO]	391	SUCCESS	+6.0	
2020-12-11 06:44:17,128	[DEBUG]	
2020-12-11 06:44:18,047	[INFO]	392	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:44:18,050	[INFO]	393	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:44:18,975	[INFO]	394	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:44:18,978	[INFO]	395	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:44:19,943	[INFO]	396	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:44:20,880	[INFO]	397	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:44:21,832	[INFO]	398	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:44:22,781	[INFO]	399	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:44:23,750	[INFO]	400	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:44:24,654	[INFO]	401	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:44:25,583	[INFO]	402	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:44:28,833	[INFO]	403	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:44:28,834	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:44:29,715	[INFO]	404	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:44:29,716	[INFO]	405	SUCCESS	+6.0	
2020-12-11 06:44:29,716	[DEBUG]	
2020-12-11 06:44:32,944	[INFO]	406	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:44:32,945	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:44:32,946	[INFO]	407	SUCCESS	+6.0	
2020-12-11 06:44:32,946	[DEBUG]	
2020-12-11 06:44:32,947	[INFO]	408	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:44:32,947	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 06:44:32,948	[INFO]	409	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:44:32,948	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 06:44:33,861	[INFO]	410	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:44:33,862	[INFO]	411	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:44:33,863	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 06:44:33,863	[INFO]	412	SUCCESS	+6.0	
2020-12-11 06:44:33,864	[DEBUG]	
2020-12-11 06:44:37,144	[INFO]	413	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:44:37,146	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 06:44:37,148	[INFO]	414	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:44:37,149	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 06:44:37,151	[INFO]	415	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:44:37,152	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 06:44:37,154	[INFO]	416	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:44:37,155	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 06:44:37,157	[INFO]	417	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:44:37,158	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 06:44:38,090	[INFO]	418	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:44:38,091	[INFO]	419	SUCCESS	+6.0	
2020-12-11 06:44:38,092	[DEBUG]	
2020-12-11 06:44:38,093	[INFO]	420	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:44:38,093	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 06:44:39,067	[INFO]	421	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:44:39,068	[INFO]	422	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:44:39,069	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 06:44:39,069	[INFO]	423	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:44:39,070	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 06:44:39,070	[INFO]	424	SUCCESS	+6.0	
2020-12-11 06:44:39,071	[DEBUG]	
2020-12-11 06:44:39,071	[INFO]	425	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:44:39,071	[DEBUG]	
2020-12-11 06:44:40,012	[INFO]	426	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:44:43,426	[INFO]	427	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:44:43,428	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 06:44:43,430	[INFO]	428	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:44:43,431	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 06:44:44,371	[INFO]	429	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:44:44,374	[INFO]	430	SUCCESS	+6.0	
2020-12-11 06:44:44,374	[DEBUG]	
2020-12-11 06:44:47,603	[INFO]	431	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:44:47,604	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 06:44:48,519	[INFO]	432	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:44:48,521	[INFO]	433	SUCCESS	+6.0	
2020-12-11 06:44:48,522	[DEBUG]	
2020-12-11 06:44:49,480	[INFO]	434	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:44:50,433	[INFO]	435	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:44:51,371	[INFO]	436	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:44:52,336	[INFO]	437	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:44:52,339	[INFO]	438	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:44:52,340	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 06:44:53,321	[INFO]	439	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:44:54,305	[INFO]	440	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:44:54,308	[INFO]	441	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:44:54,310	[INFO]	442	SUCCESS	+6.0	
2020-12-11 06:44:54,310	[DEBUG]	
2020-12-11 06:44:55,242	[INFO]	443	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:44:56,179	[INFO]	444	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:44:57,102	[INFO]	445	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:44:58,064	[INFO]	446	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:45:01,315	[INFO]	447	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:45:01,316	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 06:45:01,316	[INFO]	448	SUCCESS	+6.0	
2020-12-11 06:45:01,317	[DEBUG]	
2020-12-11 06:45:04,521	[INFO]	449	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:45:04,523	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 06:45:05,512	[INFO]	450	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:45:05,515	[INFO]	451	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:45:05,516	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 06:45:06,456	[INFO]	452	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:45:07,379	[INFO]	453	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:45:08,336	[INFO]	454	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:45:08,337	[INFO]	455	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:45:08,338	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 06:45:09,283	[INFO]	456	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:45:10,252	[INFO]	457	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:45:10,254	[INFO]	458	SUCCESS	+6.0	
2020-12-11 06:45:10,255	[DEBUG]	
2020-12-11 06:45:11,232	[INFO]	459	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:45:12,170	[INFO]	460	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:45:13,117	[INFO]	461	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:45:14,065	[INFO]	462	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:45:17,323	[INFO]	463	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:45:17,324	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 06:45:17,324	[INFO]	464	SUCCESS	+6.0	
2020-12-11 06:45:17,325	[DEBUG]	
2020-12-11 06:45:20,527	[INFO]	465	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:45:20,527	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 06:45:23,763	[INFO]	466	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:45:23,764	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+         }
  
          return sorted_arr;
      }

2020-12-11 06:45:24,729	[INFO]	467	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:45:27,964	[INFO]	468	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:45:27,965	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
          }
  
          return sorted_arr;

2020-12-11 06:45:28,900	[INFO]	469	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:45:29,892	[INFO]	470	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:45:29,893	[INFO]	471	SUCCESS	+6.0	
2020-12-11 06:45:29,894	[DEBUG]	
2020-12-11 06:45:30,826	[INFO]	472	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:45:31,778	[INFO]	473	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:45:32,717	[INFO]	474	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:45:33,649	[INFO]	475	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:45:34,609	[INFO]	476	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:45:34,611	[INFO]	477	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:45:34,612	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 06:45:34,614	[INFO]	478	SUCCESS	+6.0	
2020-12-11 06:45:34,614	[DEBUG]	
2020-12-11 06:45:35,710	[INFO]	479	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:45:36,654	[INFO]	480	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:45:37,616	[INFO]	481	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:45:38,527	[INFO]	482	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:45:39,489	[INFO]	483	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:45:40,458	[INFO]	484	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:45:41,397	[INFO]	485	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:45:42,372	[INFO]	486	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:45:42,375	[INFO]	487	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:45:42,376	[DEBUG]	
2020-12-11 06:45:42,378	[INFO]	488	SUCCESS	+6.0	
2020-12-11 06:45:42,379	[DEBUG]	
2020-12-11 06:45:43,310	[INFO]	489	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:45:44,252	[INFO]	490	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:45:45,235	[INFO]	491	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:45:48,500	[INFO]	492	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:45:48,501	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 06:45:48,502	[INFO]	493	SUCCESS	+6.0	
2020-12-11 06:45:48,503	[DEBUG]	
2020-12-11 06:45:48,504	[INFO]	494	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:45:48,504	[DEBUG]	
2020-12-11 06:45:51,878	[INFO]	495	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:45:51,879	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 06:45:51,880	[INFO]	496	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:45:51,880	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 06:45:51,881	[INFO]	497	SUCCESS	+6.0	
2020-12-11 06:45:51,881	[DEBUG]	
2020-12-11 06:45:55,068	[INFO]	498	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:45:55,070	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 06:45:55,986	[INFO]	499	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:45:56,928	[INFO]	500	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:45:56,928	[INFO]	==== END ====
2020-12-11 06:45:56,928	[INFO]	Reason: step budget
2020-12-11 06:45:56,929	[INFO]	
2020-12-11 06:45:56,929	[INFO]	========== EPOCH 20 ==========
2020-12-11 06:45:56,930	[INFO]	==== WARMUP ====
2020-12-11 06:46:00,106	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 06:46:00,107	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 06:46:03,305	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 06:46:03,306	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 06:46:06,535	[INFO]	WARM	SUCCESS	 6.0	
2020-12-11 06:46:06,535	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 06:46:09,819	[INFO]	INITIAL	SUCCESS	 6.0	
2020-12-11 06:46:09,820	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-11 06:46:09,820	[INFO]	==== START ====
2020-12-11 06:46:09,820	[INFO]	1	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:46:09,821	[DEBUG]	
2020-12-11 06:46:09,822	[INFO]	2	SUCCESS	+6.0	
2020-12-11 06:46:09,822	[DEBUG]	
2020-12-11 06:46:10,709	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:46:11,647	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:46:12,614	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:46:15,867	[INFO]	6	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:46:15,868	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 06:46:15,869	[INFO]	7	SUCCESS	+6.0	
2020-12-11 06:46:15,869	[DEBUG]	
2020-12-11 06:46:16,803	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:46:20,059	[INFO]	9	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:46:20,060	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 06:46:21,017	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:46:21,998	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:46:21,999	[INFO]	12	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:46:22,000	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 06:46:22,936	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:46:23,881	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:46:23,883	[INFO]	15	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:46:23,883	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 06:46:23,884	[INFO]	16	SUCCESS	+6.0	
2020-12-11 06:46:23,884	[DEBUG]	
2020-12-11 06:46:24,808	[INFO]	17	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:46:25,767	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:46:25,770	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:46:26,739	[INFO]	20	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:46:27,698	[INFO]	21	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:46:27,702	[INFO]	22	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:46:27,703	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 06:46:27,705	[INFO]	23	SUCCESS	+6.0	
2020-12-11 06:46:27,705	[DEBUG]	
2020-12-11 06:46:28,642	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:46:29,592	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:46:30,545	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:46:30,547	[INFO]	27	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:46:30,547	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 06:46:30,548	[INFO]	28	SUCCESS	+6.0	
2020-12-11 06:46:30,548	[DEBUG]	
2020-12-11 06:46:31,506	[INFO]	29	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:46:32,467	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:46:33,436	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:46:36,612	[INFO]	32	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:46:36,613	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    
  	    i++;
          }
  

2020-12-11 06:46:36,613	[INFO]	33	SUCCESS	+6.0	
2020-12-11 06:46:36,614	[DEBUG]	
2020-12-11 06:46:37,549	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:46:37,551	[INFO]	35	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:46:37,551	[DEBUG]	
2020-12-11 06:46:37,552	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:46:37,552	[INFO]	37	SUCCESS	+6.0	
2020-12-11 06:46:37,553	[DEBUG]	
2020-12-11 06:46:40,765	[INFO]	38	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:46:40,766	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,23 ****
--- 18,26 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
+ 	for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));

2020-12-11 06:46:40,767	[INFO]	39	SUCCESS	+6.0	
2020-12-11 06:46:40,768	[DEBUG]	
2020-12-11 06:46:41,699	[INFO]	40	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:46:42,667	[INFO]	41	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:46:42,671	[INFO]	42	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:46:43,622	[INFO]	43	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:46:44,532	[INFO]	44	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:46:45,509	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:46:46,460	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:46:49,752	[INFO]	47	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:46:49,754	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 06:46:50,698	[INFO]	48	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:46:50,699	[INFO]	49	SUCCESS	+6.0	
2020-12-11 06:46:50,700	[DEBUG]	
2020-12-11 06:46:51,658	[INFO]	50	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:46:51,659	[INFO]	51	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:46:51,660	[INFO]	52	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:46:51,661	[INFO]	53	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:46:51,661	[DEBUG]	
2020-12-11 06:46:51,662	[INFO]	54	SUCCESS	+6.0	
2020-12-11 06:46:51,662	[DEBUG]	
2020-12-11 06:46:51,663	[INFO]	55	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:46:51,663	[INFO]	56	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:46:52,583	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:46:52,585	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:46:53,533	[INFO]	59	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:46:54,498	[INFO]	60	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:46:55,434	[INFO]	61	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:46:56,402	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:46:57,378	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:46:57,380	[INFO]	64	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:46:58,319	[INFO]	65	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:46:59,272	[INFO]	66	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:47:00,221	[INFO]	67	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:47:01,151	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:47:04,292	[INFO]	69	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:47:04,293	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 06:47:04,294	[INFO]	70	SUCCESS	+6.0	
2020-12-11 06:47:04,294	[DEBUG]	
2020-12-11 06:47:05,291	[INFO]	71	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:47:06,242	[INFO]	72	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:47:06,243	[INFO]	73	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:47:06,243	[DEBUG]	
2020-12-11 06:47:06,244	[INFO]	74	SUCCESS	+6.0	
2020-12-11 06:47:06,244	[DEBUG]	
2020-12-11 06:47:07,241	[INFO]	75	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:47:08,230	[INFO]	76	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:47:09,187	[INFO]	77	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:47:12,419	[INFO]	78	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:47:12,420	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 06:47:12,420	[INFO]	79	SUCCESS	+6.0	
2020-12-11 06:47:12,421	[DEBUG]	
2020-12-11 06:47:13,347	[INFO]	80	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:47:14,303	[INFO]	81	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:47:15,243	[INFO]	82	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:47:16,223	[INFO]	83	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:47:17,178	[INFO]	84	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:47:18,157	[INFO]	85	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:47:19,096	[INFO]	86	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:47:22,340	[INFO]	87	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:47:22,341	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,21 ****
--- 16,24 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 06:47:23,292	[INFO]	88	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:47:23,293	[INFO]	89	SUCCESS	+6.0	
2020-12-11 06:47:23,293	[DEBUG]	
2020-12-11 06:47:24,258	[INFO]	90	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:47:25,187	[INFO]	91	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:47:26,135	[INFO]	92	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:47:27,075	[INFO]	93	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:47:28,088	[INFO]	94	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:47:28,090	[INFO]	95	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:47:29,019	[INFO]	96	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:47:32,371	[INFO]	97	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:47:32,372	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 06:47:32,373	[INFO]	98	SUCCESS	+6.0	
2020-12-11 06:47:32,373	[DEBUG]	
2020-12-11 06:47:33,251	[INFO]	99	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:47:34,161	[INFO]	100	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:47:35,112	[INFO]	101	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:47:35,114	[INFO]	102	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:47:36,081	[INFO]	103	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:47:37,019	[INFO]	104	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:47:37,986	[INFO]	105	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:47:37,988	[INFO]	106	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:47:37,988	[INFO]	107	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:47:38,966	[INFO]	108	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:47:39,928	[INFO]	109	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:47:40,908	[INFO]	110	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:47:41,825	[INFO]	111	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:47:41,826	[INFO]	112	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:47:41,827	[DEBUG]	
2020-12-11 06:47:41,827	[INFO]	113	SUCCESS	+6.0	
2020-12-11 06:47:41,827	[DEBUG]	
2020-12-11 06:47:41,828	[INFO]	114	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:47:42,795	[INFO]	115	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:47:43,739	[INFO]	116	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:47:44,688	[INFO]	117	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:47:47,973	[INFO]	118	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:47:47,974	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,21 ****
--- 16,24 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 06:47:47,975	[INFO]	119	SUCCESS	+6.0	
2020-12-11 06:47:47,975	[DEBUG]	
2020-12-11 06:47:48,901	[INFO]	120	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:47:52,114	[INFO]	121	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:47:52,115	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 06:47:52,115	[INFO]	122	SUCCESS	+6.0	
2020-12-11 06:47:52,116	[DEBUG]	
2020-12-11 06:47:53,033	[INFO]	123	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:47:54,000	[INFO]	124	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:47:54,002	[INFO]	125	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:47:54,002	[DEBUG]	
2020-12-11 06:47:54,003	[INFO]	126	SUCCESS	+6.0	
2020-12-11 06:47:54,004	[DEBUG]	
2020-12-11 06:47:54,956	[INFO]	127	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:47:55,902	[INFO]	128	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:47:56,829	[INFO]	129	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:47:57,773	[INFO]	130	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:47:58,698	[INFO]	131	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:47:59,636	[INFO]	132	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:48:00,602	[INFO]	133	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:48:03,840	[INFO]	134	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:48:03,843	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 06:48:03,845	[INFO]	135	SUCCESS	+6.0	
2020-12-11 06:48:03,846	[DEBUG]	
2020-12-11 06:48:04,762	[INFO]	136	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:48:08,070	[INFO]	137	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:48:08,072	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 06:48:08,074	[INFO]	138	SUCCESS	+6.0	
2020-12-11 06:48:08,075	[DEBUG]	
2020-12-11 06:48:09,029	[INFO]	139	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:48:09,033	[INFO]	140	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:48:09,958	[INFO]	141	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:48:13,160	[INFO]	142	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:48:13,162	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 06:48:14,089	[INFO]	143	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:48:14,090	[INFO]	144	SUCCESS	+6.0	
2020-12-11 06:48:14,090	[DEBUG]	
2020-12-11 06:48:14,091	[INFO]	145	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:48:14,092	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 06:48:14,093	[INFO]	146	SUCCESS	+6.0	
2020-12-11 06:48:14,093	[DEBUG]	
2020-12-11 06:48:15,026	[INFO]	147	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:48:15,027	[INFO]	148	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:48:15,982	[INFO]	149	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:48:16,906	[INFO]	150	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:48:20,269	[INFO]	151	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:48:20,269	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 06:48:21,139	[INFO]	152	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:48:21,140	[INFO]	153	SUCCESS	+6.0	
2020-12-11 06:48:21,141	[DEBUG]	
2020-12-11 06:48:22,067	[INFO]	154	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:48:22,068	[INFO]	155	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:48:22,068	[DEBUG]	
2020-12-11 06:48:22,069	[INFO]	156	SUCCESS	+6.0	
2020-12-11 06:48:22,069	[DEBUG]	
2020-12-11 06:48:23,018	[INFO]	157	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:48:23,979	[INFO]	158	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:48:23,980	[INFO]	159	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:48:23,981	[DEBUG]	
2020-12-11 06:48:23,981	[INFO]	160	SUCCESS	+6.0	
2020-12-11 06:48:23,981	[DEBUG]	
2020-12-11 06:48:27,179	[INFO]	161	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:48:27,180	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:48:30,361	[INFO]	162	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:48:30,363	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,28 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 13,23 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:48:30,365	[INFO]	163	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:48:30,366	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:48:30,368	[INFO]	164	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:48:30,369	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:48:30,370	[INFO]	165	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:48:30,371	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:48:31,293	[INFO]	166	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:48:32,245	[INFO]	167	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:48:32,247	[INFO]	168	SUCCESS	+6.0	
2020-12-11 06:48:32,248	[DEBUG]	
2020-12-11 06:48:35,527	[INFO]	169	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:48:35,528	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 06:48:35,528	[INFO]	170	SUCCESS	+6.0	
2020-12-11 06:48:35,529	[DEBUG]	
2020-12-11 06:48:36,415	[INFO]	171	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:48:37,337	[INFO]	172	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:48:37,338	[INFO]	173	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:48:37,338	[DEBUG]	
2020-12-11 06:48:37,339	[INFO]	174	SUCCESS	+6.0	
2020-12-11 06:48:37,339	[DEBUG]	
2020-12-11 06:48:38,284	[INFO]	175	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:48:41,489	[INFO]	176	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:48:41,490	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 06:48:41,491	[INFO]	177	SUCCESS	+6.0	
2020-12-11 06:48:41,491	[DEBUG]	
2020-12-11 06:48:42,433	[INFO]	178	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:48:43,381	[INFO]	179	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:48:44,316	[INFO]	180	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:48:45,270	[INFO]	181	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:48:46,249	[INFO]	182	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:48:47,192	[INFO]	183	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:48:48,107	[INFO]	184	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:48:48,109	[INFO]	185	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:48:49,040	[INFO]	186	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:48:50,007	[INFO]	187	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:48:50,929	[INFO]	188	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:48:51,900	[INFO]	189	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:48:52,835	[INFO]	190	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:48:52,836	[INFO]	191	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:48:52,838	[INFO]	192	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:48:53,792	[INFO]	193	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:48:54,770	[INFO]	194	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:48:54,773	[INFO]	195	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:48:54,775	[INFO]	196	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:48:55,735	[INFO]	197	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:48:56,673	[INFO]	198	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:48:56,674	[INFO]	199	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:48:57,635	[INFO]	200	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:48:58,591	[INFO]	201	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:48:59,553	[INFO]	202	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:49:00,506	[INFO]	203	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:49:01,448	[INFO]	204	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:49:02,395	[INFO]	205	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:49:02,396	[INFO]	206	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:49:02,397	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 06:49:02,397	[INFO]	207	SUCCESS	+6.0	
2020-12-11 06:49:02,398	[DEBUG]	
2020-12-11 06:49:05,688	[INFO]	208	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:49:05,690	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 06:49:05,692	[INFO]	209	SUCCESS	+6.0	
2020-12-11 06:49:05,692	[DEBUG]	
2020-12-11 06:49:08,886	[INFO]	210	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:49:08,887	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 06:49:09,851	[INFO]	211	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:49:10,815	[INFO]	212	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:49:10,816	[INFO]	213	SUCCESS	+6.0	
2020-12-11 06:49:10,817	[DEBUG]	
2020-12-11 06:49:11,757	[INFO]	214	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:49:15,022	[INFO]	215	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:49:15,023	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    return sorted_arr;
          }
  
          return sorted_arr;

2020-12-11 06:49:15,916	[INFO]	216	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:49:16,858	[INFO]	217	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:49:17,812	[INFO]	218	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:49:18,752	[INFO]	219	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:49:18,755	[INFO]	220	SUCCESS	+6.0	
2020-12-11 06:49:18,755	[DEBUG]	
2020-12-11 06:49:19,711	[INFO]	221	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:49:20,637	[INFO]	222	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:49:20,639	[INFO]	223	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:49:20,639	[DEBUG]	
2020-12-11 06:49:20,640	[INFO]	224	SUCCESS	+6.0	
2020-12-11 06:49:20,640	[DEBUG]	
2020-12-11 06:49:21,561	[INFO]	225	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:49:22,523	[INFO]	226	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:49:25,803	[INFO]	227	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:49:25,804	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
          }
  
          return sorted_arr;

2020-12-11 06:49:29,074	[INFO]	228	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:49:29,075	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,27 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
- 	    i++;
          }
  
          return sorted_arr;
--- 20,27 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
          }
  
          return sorted_arr;

2020-12-11 06:49:32,326	[INFO]	229	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:49:32,327	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 06:49:35,499	[INFO]	230	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:49:35,500	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 06:49:35,501	[INFO]	231	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:49:35,501	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    i++;
  	    i++;
          }
  

2020-12-11 06:49:35,502	[INFO]	232	SUCCESS	+6.0	
2020-12-11 06:49:35,502	[DEBUG]	
2020-12-11 06:49:36,457	[INFO]	233	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:49:37,415	[INFO]	234	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:49:38,343	[INFO]	235	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:49:39,316	[INFO]	236	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:49:39,319	[INFO]	237	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:49:39,322	[INFO]	238	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:49:39,323	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 06:49:39,325	[INFO]	239	SUCCESS	+6.0	
2020-12-11 06:49:39,325	[DEBUG]	
2020-12-11 06:49:40,237	[INFO]	240	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:49:40,238	[INFO]	241	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:49:41,193	[INFO]	242	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:49:42,156	[INFO]	243	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:49:43,313	[INFO]	244	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:49:44,237	[INFO]	245	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:49:47,489	[INFO]	246	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:49:47,490	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 06:49:47,492	[INFO]	247	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:49:47,492	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 06:49:48,419	[INFO]	248	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:49:48,420	[INFO]	249	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:49:48,421	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 06:49:48,421	[INFO]	250	SUCCESS	+6.0	
2020-12-11 06:49:48,422	[DEBUG]	
2020-12-11 06:49:49,366	[INFO]	251	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:49:49,368	[INFO]	252	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:49:50,315	[INFO]	253	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:49:51,266	[INFO]	254	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:49:51,267	[INFO]	255	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:49:52,217	[INFO]	256	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:49:52,218	[INFO]	257	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:49:55,461	[INFO]	258	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:49:55,463	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  

2020-12-11 06:49:56,394	[INFO]	259	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:49:56,395	[INFO]	260	SUCCESS	+6.0	
2020-12-11 06:49:56,395	[DEBUG]	
2020-12-11 06:49:57,377	[INFO]	261	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:49:57,379	[INFO]	262	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:49:57,380	[DEBUG]	
2020-12-11 06:49:57,381	[INFO]	263	SUCCESS	+6.0	
2020-12-11 06:49:57,382	[DEBUG]	
2020-12-11 06:49:58,340	[INFO]	264	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:49:59,308	[INFO]	265	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:50:02,628	[INFO]	266	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:50:02,629	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,20 ****
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
!             
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 06:50:03,505	[INFO]	267	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:50:04,416	[INFO]	268	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:50:04,417	[INFO]	269	SUCCESS	+6.0	
2020-12-11 06:50:04,417	[DEBUG]	
2020-12-11 06:50:07,711	[INFO]	270	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:50:07,713	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:50:07,714	[INFO]	271	SUCCESS	+6.0	
2020-12-11 06:50:07,714	[DEBUG]	
2020-12-11 06:50:08,632	[INFO]	272	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:50:09,554	[INFO]	273	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:50:12,709	[INFO]	274	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:50:12,711	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,26 ****
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
  
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  	    i++;
          }
  

2020-12-11 06:50:13,635	[INFO]	275	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:50:13,636	[INFO]	276	SUCCESS	+6.0	
2020-12-11 06:50:13,636	[DEBUG]	
2020-12-11 06:50:14,566	[INFO]	277	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:50:17,830	[INFO]	278	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:50:17,830	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,27 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 06:50:17,831	[INFO]	279	SUCCESS	+6.0	
2020-12-11 06:50:17,831	[DEBUG]	
2020-12-11 06:50:18,761	[INFO]	280	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:50:19,755	[INFO]	281	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:50:22,995	[INFO]	282	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:50:22,996	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 06:50:23,933	[INFO]	283	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:50:23,935	[INFO]	284	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:50:23,935	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 06:50:23,936	[INFO]	285	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:50:23,936	[DEBUG]	
2020-12-11 06:50:23,936	[INFO]	286	SUCCESS	+6.0	
2020-12-11 06:50:23,937	[DEBUG]	
2020-12-11 06:50:27,279	[INFO]	287	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:50:27,279	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 06:50:30,435	[INFO]	288	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:50:30,436	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,28 ****
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
! 	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
      }
--- 18,27 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
! 	for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
+         
  
          return sorted_arr;
      }

2020-12-11 06:50:31,390	[INFO]	289	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:50:32,322	[INFO]	290	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:50:32,324	[INFO]	291	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:50:32,324	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,28 ****
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
! 	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
      }
--- 18,27 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
! 	for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
+         
  
          return sorted_arr;
      }

2020-12-11 06:50:32,325	[INFO]	292	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:50:32,325	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 18,28 ****
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
! 	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
      }
--- 18,27 ----
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
! 	for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
+         
  
          return sorted_arr;
      }

2020-12-11 06:50:33,263	[INFO]	293	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:50:36,961	[INFO]	294	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:50:36,963	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,28 ****
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
! 	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
      }
--- 16,30 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
! 	for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
+         
  
          return sorted_arr;
      }

2020-12-11 06:50:40,964	[INFO]	295	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:50:40,965	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,28 ****
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 16,28 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         
  
          return sorted_arr;
      }

2020-12-11 06:50:44,807	[INFO]	296	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:50:44,808	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,21 ****
--- 16,24 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 06:50:44,809	[INFO]	297	SUCCESS	+6.0	
2020-12-11 06:50:44,809	[DEBUG]	
2020-12-11 06:50:45,800	[INFO]	298	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:50:45,801	[INFO]	299	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:50:45,802	[DEBUG]	
2020-12-11 06:50:45,803	[INFO]	300	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:50:49,588	[INFO]	301	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:50:49,590	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,32 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         for (Integer count : arr) { // arr is counts in fixed version
+ 	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    i++;
+         }
  
          return sorted_arr;
      }

2020-12-11 06:50:52,762	[INFO]	302	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:50:52,763	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         i++;
  
          return sorted_arr;
      }

2020-12-11 06:50:52,764	[INFO]	303	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:50:52,764	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }
+         i++;
  
          return sorted_arr;
      }

2020-12-11 06:50:56,016	[INFO]	304	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:50:56,017	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:50:56,018	[INFO]	305	SUCCESS	+6.0	
2020-12-11 06:50:56,018	[DEBUG]	
2020-12-11 06:50:56,999	[INFO]	306	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:50:58,019	[INFO]	307	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:50:58,985	[INFO]	308	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:50:59,941	[INFO]	309	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:50:59,942	[INFO]	310	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:50:59,943	[DEBUG]	
2020-12-11 06:50:59,943	[INFO]	311	SUCCESS	+6.0	
2020-12-11 06:50:59,944	[DEBUG]	
2020-12-11 06:51:00,893	[INFO]	312	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:51:01,824	[INFO]	313	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:51:02,777	[INFO]	314	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:51:03,727	[INFO]	315	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:51:04,672	[INFO]	316	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:51:05,650	[INFO]	317	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:51:08,879	[INFO]	318	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:51:08,879	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
          }
  
          return sorted_arr;

2020-12-11 06:51:09,788	[INFO]	319	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:51:10,739	[INFO]	320	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:51:11,703	[INFO]	321	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:51:12,814	[INFO]	322	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:51:13,759	[INFO]	323	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:51:13,760	[INFO]	324	SUCCESS	+6.0	
2020-12-11 06:51:13,760	[DEBUG]	
2020-12-11 06:51:13,761	[INFO]	325	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:51:14,836	[INFO]	326	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:51:18,920	[INFO]	327	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:51:18,921	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 06:51:20,158	[INFO]	328	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:51:21,382	[INFO]	329	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:51:22,634	[INFO]	330	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:51:22,636	[INFO]	331	SUCCESS	+6.0	
2020-12-11 06:51:22,636	[DEBUG]	
2020-12-11 06:51:23,836	[INFO]	332	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:51:25,011	[INFO]	333	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:51:26,210	[INFO]	334	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:51:27,450	[INFO]	335	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:51:28,640	[INFO]	336	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:51:32,750	[INFO]	337	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:51:32,751	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 06:51:32,752	[INFO]	338	SUCCESS	+6.0	
2020-12-11 06:51:32,752	[DEBUG]	
2020-12-11 06:51:33,899	[INFO]	339	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:51:33,901	[INFO]	340	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:51:37,575	[INFO]	341	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:51:37,576	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    i++;
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:51:38,811	[INFO]	342	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:51:40,246	[INFO]	343	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:51:40,248	[INFO]	344	SUCCESS	+6.0	
2020-12-11 06:51:40,248	[DEBUG]	
2020-12-11 06:51:41,511	[INFO]	345	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:51:42,778	[INFO]	346	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:51:44,031	[INFO]	347	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:51:48,309	[INFO]	348	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:51:48,310	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);

2020-12-11 06:51:49,497	[INFO]	349	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:51:49,498	[INFO]	350	SUCCESS	+6.0	
2020-12-11 06:51:49,498	[DEBUG]	
2020-12-11 06:51:50,898	[INFO]	351	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:51:51,815	[INFO]	352	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:51:52,652	[INFO]	353	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:51:53,607	[INFO]	354	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:51:56,857	[INFO]	355	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:51:56,858	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,24 ****
--- 19,27 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;

2020-12-11 06:51:56,859	[INFO]	356	SUCCESS	+6.0	
2020-12-11 06:51:56,859	[DEBUG]	
2020-12-11 06:51:57,795	[INFO]	357	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:51:58,773	[INFO]	358	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:51:59,724	[INFO]	359	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:52:02,940	[INFO]	360	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:52:02,941	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 20,25 ****
--- 20,28 ----
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    sorted_arr.addAll(Collections.nCopies(count, i));
  	    i++;
          }

2020-12-11 06:52:02,942	[INFO]	361	SUCCESS	+6.0	
2020-12-11 06:52:02,942	[DEBUG]	
2020-12-11 06:52:03,857	[INFO]	362	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:52:04,841	[INFO]	363	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:52:04,843	[INFO]	364	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:52:04,844	[DEBUG]	
2020-12-11 06:52:05,822	[INFO]	365	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:52:09,058	[INFO]	366	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:52:09,060	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:52:09,062	[INFO]	367	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:52:09,063	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:52:09,064	[INFO]	368	SUCCESS	+6.0	
2020-12-11 06:52:09,065	[DEBUG]	
2020-12-11 06:52:10,002	[INFO]	369	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:52:13,594	[INFO]	370	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:52:13,595	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 13,21 ****
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
!         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
--- 13,19 ----
  public class BUCKETSORT {
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
!         
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 06:52:13,595	[INFO]	371	SUCCESS	+6.0	
2020-12-11 06:52:13,596	[DEBUG]	
2020-12-11 06:52:14,439	[INFO]	372	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:52:15,355	[INFO]	373	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:52:16,289	[INFO]	374	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:52:16,291	[INFO]	375	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:52:19,566	[INFO]	376	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:52:19,567	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 06:52:20,479	[INFO]	377	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:52:20,481	[INFO]	378	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:52:20,481	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 06:52:20,482	[INFO]	379	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:52:20,483	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 17,22 ****
--- 17,26 ----
              counts.set(x,counts.get(x)+1);
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version

2020-12-11 06:52:20,483	[INFO]	380	SUCCESS	+6.0	
2020-12-11 06:52:20,483	[DEBUG]	
2020-12-11 06:52:21,433	[INFO]	381	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:52:24,641	[INFO]	382	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:52:24,641	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,26 ****
--- 21,29 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
+ 	    for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  	    i++;
          }
  

2020-12-11 06:52:25,577	[INFO]	383	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:52:26,532	[INFO]	384	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:52:27,476	[INFO]	385	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:52:27,477	[INFO]	386	SUCCESS	+6.0	
2020-12-11 06:52:27,477	[DEBUG]	
2020-12-11 06:52:27,479	[INFO]	387	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:52:28,422	[INFO]	388	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:52:29,350	[INFO]	389	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:52:30,350	[INFO]	390	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:52:30,351	[INFO]	391	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:52:31,292	[INFO]	392	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:52:32,378	[INFO]	393	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:52:32,380	[INFO]	394	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:52:33,611	[INFO]	395	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:52:34,853	[INFO]	396	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:52:36,083	[INFO]	397	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:52:37,365	[INFO]	398	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:52:38,691	[INFO]	399	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:52:38,692	[INFO]	400	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:52:39,961	[INFO]	401	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:52:41,192	[INFO]	402	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:52:41,194	[INFO]	403	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:52:41,195	[DEBUG]	
2020-12-11 06:52:41,195	[INFO]	404	SUCCESS	+6.0	
2020-12-11 06:52:41,196	[DEBUG]	
2020-12-11 06:52:42,204	[INFO]	405	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:52:43,191	[INFO]	406	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:52:44,123	[INFO]	407	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:52:45,048	[INFO]	408	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:52:46,004	[INFO]	409	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:52:46,957	[INFO]	410	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:52:47,946	[INFO]	411	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:52:48,888	[INFO]	412	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:52:48,889	[INFO]	413	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:52:48,890	[DEBUG]	
2020-12-11 06:52:49,868	[INFO]	414	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:52:49,871	[INFO]	415	SUCCESS	+6.0	
2020-12-11 06:52:49,871	[DEBUG]	
2020-12-11 06:52:50,843	[INFO]	416	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:52:54,106	[INFO]	417	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:52:54,107	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 06:52:54,988	[INFO]	418	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:52:54,990	[INFO]	419	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8), 'direction': 'before'})
2020-12-11 06:52:54,990	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 06:52:54,991	[INFO]	420	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:52:54,991	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,26 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 06:52:54,992	[INFO]	421	SUCCESS	+6.0	
2020-12-11 06:52:54,992	[DEBUG]	
2020-12-11 06:52:55,936	[INFO]	422	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:52:59,150	[INFO]	423	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:52:59,151	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 06:52:59,152	[INFO]	424	SUCCESS	+6.0	
2020-12-11 06:52:59,152	[DEBUG]	
2020-12-11 06:53:00,101	[INFO]	425	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:53:01,068	[INFO]	426	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:53:02,021	[INFO]	427	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:53:02,962	[INFO]	428	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:53:02,964	[INFO]	429	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:53:02,964	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:53:02,965	[INFO]	430	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:53:02,965	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:53:02,966	[INFO]	431	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:53:02,967	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,28 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
!         }
  
          return sorted_arr;
      }
--- 19,25 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
  
          return sorted_arr;
      }

2020-12-11 06:53:02,967	[INFO]	432	SUCCESS	+6.0	
2020-12-11 06:53:02,968	[DEBUG]	
2020-12-11 06:53:02,968	[INFO]	433	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:53:03,930	[INFO]	434	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:53:04,855	[INFO]	435	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:53:05,841	[INFO]	436	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3)})
2020-12-11 06:53:06,844	[INFO]	437	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:53:07,847	[INFO]	438	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:53:07,850	[INFO]	439	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:53:11,147	[INFO]	440	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:53:11,148	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 06:53:12,088	[INFO]	441	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:53:15,335	[INFO]	442	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:53:15,336	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             int i = 0;
              counts.set(x,counts.get(x)+1);
          }
  
***************
*** 24,29 ****
--- 25,32 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 06:53:18,605	[INFO]	443	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:53:18,606	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,31 ----
  	    i++;
          }
  
+         i++;
+ 
          return sorted_arr;
      }
  }

2020-12-11 06:53:18,607	[INFO]	444	SUCCESS	+6.0	
2020-12-11 06:53:18,607	[DEBUG]	
2020-12-11 06:53:19,488	[INFO]	445	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:53:20,437	[INFO]	446	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:53:23,744	[INFO]	447	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:53:23,745	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 16,21 ****
--- 16,24 ----
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;

2020-12-11 06:53:23,746	[INFO]	448	SUCCESS	+6.0	
2020-12-11 06:53:23,746	[DEBUG]	
2020-12-11 06:53:24,695	[INFO]	449	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:53:25,592	[INFO]	450	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:53:25,593	[INFO]	451	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:53:26,573	[INFO]	452	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:53:27,524	[INFO]	453	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:53:27,525	[INFO]	454	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:53:27,526	[DEBUG]	
2020-12-11 06:53:27,526	[INFO]	455	SUCCESS	+6.0	
2020-12-11 06:53:27,526	[DEBUG]	
2020-12-11 06:53:28,545	[INFO]	456	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:53:31,798	[INFO]	457	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:53:31,799	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 14,19 ****
--- 14,20 ----
      public static ArrayList<Integer> bucketsort(ArrayList<Integer> arr, int k) {
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
+             ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
              counts.set(x,counts.get(x)+1);
          }
  

2020-12-11 06:53:31,800	[INFO]	458	SUCCESS	+6.0	
2020-12-11 06:53:31,800	[DEBUG]	
2020-12-11 06:53:32,763	[INFO]	459	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:53:33,686	[INFO]	460	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 6), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:53:36,919	[INFO]	461	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:53:36,920	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
          }
  
          return sorted_arr;

2020-12-11 06:53:36,922	[INFO]	462	SUCCESS	+6.0	
2020-12-11 06:53:36,923	[DEBUG]	
2020-12-11 06:53:37,842	[INFO]	463	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:53:38,778	[INFO]	464	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:53:39,722	[INFO]	465	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:53:40,672	[INFO]	466	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:53:41,592	[INFO]	467	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:53:41,594	[INFO]	468	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7), 'direction': 'before'})
2020-12-11 06:53:44,881	[INFO]	469	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:53:44,882	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 06:53:48,130	[INFO]	470	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:53:48,131	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 15,27 ****
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 15,28 ----
          ArrayList<Integer> counts = new ArrayList<Integer>(Collections.nCopies(k,0));
          for (Integer x : arr) {
              counts.set(x,counts.get(x)+1);
+             counts.set(x,counts.get(x)+1);
          }
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 06:53:48,132	[INFO]	471	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:53:48,132	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 21,27 ****
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 21,27 ----
  	int i = 0;
          for (Integer count : arr) { // arr is counts in fixed version
  	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    
          }
  
          return sorted_arr;

2020-12-11 06:53:49,027	[INFO]	472	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:53:49,028	[INFO]	473	SUCCESS	+6.0	
2020-12-11 06:53:49,029	[DEBUG]	
2020-12-11 06:53:49,029	[INFO]	474	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:53:49,030	[INFO]	475	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2)})
2020-12-11 06:53:49,030	[DEBUG]	
2020-12-11 06:53:49,031	[INFO]	476	SUCCESS	+6.0	
2020-12-11 06:53:49,031	[DEBUG]	
2020-12-11 06:53:49,982	[INFO]	477	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:53:50,938	[INFO]	478	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1)})
2020-12-11 06:53:51,845	[INFO]	479	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 8)})
2020-12-11 06:53:52,803	[INFO]	480	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:53:53,752	[INFO]	481	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:53:54,671	[INFO]	482	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:53:55,650	[INFO]	483	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 4), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:53:55,655	[INFO]	484	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6), 'direction': 'before'})
2020-12-11 06:53:56,608	[INFO]	485	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:53:56,609	[INFO]	486	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 2), 'direction': 'before'})
2020-12-11 06:53:57,564	[INFO]	487	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4)})
2020-12-11 06:53:58,534	[INFO]	488	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 7), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5)})
2020-12-11 06:53:59,455	[INFO]	489	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:54:00,441	[INFO]	490	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 0), 'direction': 'before'})
2020-12-11 06:54:01,394	[INFO]	491	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 6)})
2020-12-11 06:54:02,339	[INFO]	492	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 3), 'direction': 'before'})
2020-12-11 06:54:03,334	[INFO]	493	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 2), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:54:04,262	[INFO]	494	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 3), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:54:05,269	[INFO]	495	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 1), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 4), 'direction': 'before'})
2020-12-11 06:54:06,243	[INFO]	496	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 0), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 5), 'direction': 'before'})
2020-12-11 06:54:09,523	[INFO]	497	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:54:09,524	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 06:54:10,462	[INFO]	498	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/BUCKETSORT.java.xml', 0)})
2020-12-11 06:54:13,595	[INFO]	499	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/BUCKETSORT.java.xml', 5), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 7)})
2020-12-11 06:54:13,596	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 19,27 ****
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         for (Integer count : arr) { // arr is counts in fixed version
! 	    sorted_arr.addAll(Collections.nCopies(count, i));
! 	    i++;
          }
  
          return sorted_arr;
--- 19,28 ----
  
          ArrayList<Integer> sorted_arr = new ArrayList<Integer>(100);
  	int i = 0;
!         i++;
! 
!         for (Integer x : arr) {
!             counts.set(x,counts.get(x)+1);
          }
  
          return sorted_arr;

2020-12-11 06:54:13,597	[INFO]	500	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/BUCKETSORT.java.xml', 8), 'ingredient': ('java_programs/BUCKETSORT.java.xml', 1), 'direction': 'before'})
2020-12-11 06:54:13,598	[DEBUG]	*** before: java_programs/BUCKETSORT.java.xml
--- after: java_programs/BUCKETSORT.java.xml
***************
*** 24,29 ****
--- 24,33 ----
  	    i++;
          }
  
+         for (Integer x : arr) {
+             counts.set(x,counts.get(x)+1);
+         }
+ 
          return sorted_arr;
      }
  }

2020-12-11 06:54:13,598	[INFO]	==== END ====
2020-12-11 06:54:13,598	[INFO]	Reason: step budget
2020-12-11 06:54:13,599	[INFO]	
2020-12-11 06:54:13,599	[INFO]	========== REPORT ==========
2020-12-11 06:54:13,599	[INFO]	==== Epoch 1 ====
2020-12-11 06:54:13,599	[INFO]	Termination: step budget
2020-12-11 06:54:13,599	[INFO]	Number of interations: 500
2020-12-11 06:54:13,599	[INFO]	==== Epoch 2 ====
2020-12-11 06:54:13,599	[INFO]	Termination: step budget
2020-12-11 06:54:13,599	[INFO]	Number of interations: 500
2020-12-11 06:54:13,599	[INFO]	==== Epoch 3 ====
2020-12-11 06:54:13,600	[INFO]	Termination: step budget
2020-12-11 06:54:13,600	[INFO]	Number of interations: 500
2020-12-11 06:54:13,600	[INFO]	==== Epoch 4 ====
2020-12-11 06:54:13,600	[INFO]	Termination: step budget
2020-12-11 06:54:13,600	[INFO]	Number of interations: 500
2020-12-11 06:54:13,600	[INFO]	==== Epoch 5 ====
2020-12-11 06:54:13,600	[INFO]	Termination: step budget
2020-12-11 06:54:13,600	[INFO]	Number of interations: 500
2020-12-11 06:54:13,600	[INFO]	==== Epoch 6 ====
2020-12-11 06:54:13,600	[INFO]	Termination: step budget
2020-12-11 06:54:13,600	[INFO]	Number of interations: 500
2020-12-11 06:54:13,600	[INFO]	==== Epoch 7 ====
2020-12-11 06:54:13,600	[INFO]	Termination: step budget
2020-12-11 06:54:13,601	[INFO]	Number of interations: 500
2020-12-11 06:54:13,601	[INFO]	==== Epoch 8 ====
2020-12-11 06:54:13,601	[INFO]	Termination: step budget
2020-12-11 06:54:13,601	[INFO]	Number of interations: 500
2020-12-11 06:54:13,601	[INFO]	==== Epoch 9 ====
2020-12-11 06:54:13,601	[INFO]	Termination: step budget
2020-12-11 06:54:13,601	[INFO]	Number of interations: 500
2020-12-11 06:54:13,601	[INFO]	==== Epoch 10 ====
2020-12-11 06:54:13,601	[INFO]	Termination: step budget
2020-12-11 06:54:13,601	[INFO]	Number of interations: 500
2020-12-11 06:54:13,601	[INFO]	==== Epoch 11 ====
2020-12-11 06:54:13,602	[INFO]	Termination: step budget
2020-12-11 06:54:13,602	[INFO]	Number of interations: 500
2020-12-11 06:54:13,602	[INFO]	==== Epoch 12 ====
2020-12-11 06:54:13,602	[INFO]	Termination: step budget
2020-12-11 06:54:13,602	[INFO]	Number of interations: 500
2020-12-11 06:54:13,602	[INFO]	==== Epoch 13 ====
2020-12-11 06:54:13,602	[INFO]	Termination: step budget
2020-12-11 06:54:13,602	[INFO]	Number of interations: 500
2020-12-11 06:54:13,602	[INFO]	==== Epoch 14 ====
2020-12-11 06:54:13,602	[INFO]	Termination: step budget
2020-12-11 06:54:13,602	[INFO]	Number of interations: 500
2020-12-11 06:54:13,603	[INFO]	==== Epoch 15 ====
2020-12-11 06:54:13,603	[INFO]	Termination: step budget
2020-12-11 06:54:13,603	[INFO]	Number of interations: 500
2020-12-11 06:54:13,603	[INFO]	==== Epoch 16 ====
2020-12-11 06:54:13,603	[INFO]	Termination: step budget
2020-12-11 06:54:13,603	[INFO]	Number of interations: 500
2020-12-11 06:54:13,603	[INFO]	==== Epoch 17 ====
2020-12-11 06:54:13,603	[INFO]	Termination: step budget
2020-12-11 06:54:13,603	[INFO]	Number of interations: 500
2020-12-11 06:54:13,603	[INFO]	==== Epoch 18 ====
2020-12-11 06:54:13,603	[INFO]	Termination: step budget
2020-12-11 06:54:13,604	[INFO]	Number of interations: 500
2020-12-11 06:54:13,604	[INFO]	==== Epoch 19 ====
2020-12-11 06:54:13,604	[INFO]	Termination: step budget
2020-12-11 06:54:13,604	[INFO]	Number of interations: 500
2020-12-11 06:54:13,604	[INFO]	==== Epoch 20 ====
2020-12-11 06:54:13,604	[INFO]	Termination: step budget
2020-12-11 06:54:13,604	[INFO]	Number of interations: 500
2020-12-11 06:54:13,608	[INFO]	Experiment duration: 9979.426097393036
